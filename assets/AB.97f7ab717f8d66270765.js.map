{"version":3,"file":"AB.97f7ab717f8d66270765.js","mappings":"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kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,c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","sources":["webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobilePageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDateCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDatetimeCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFileCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormImageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewOrgChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplicationMobile.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManagerMobile.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobilePage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileView.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDate.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDatetime.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormEmail.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFile.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFormula.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormImage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewList.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewOrgChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewOrgChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioBuilder.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/lazyComponent.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/tinyMce.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["var map = {\n\t\"./af\": 19183,\n\t\"./af.js\": 19183,\n\t\"./ar\": 31035,\n\t\"./ar-dz\": 47214,\n\t\"./ar-dz.js\": 47214,\n\t\"./ar-kw\": 40830,\n\t\"./ar-kw.js\": 40830,\n\t\"./ar-ly\": 68899,\n\t\"./ar-ly.js\": 68899,\n\t\"./ar-ma\": 77258,\n\t\"./ar-ma.js\": 77258,\n\t\"./ar-ps\": 19121,\n\t\"./ar-ps.js\": 19121,\n\t\"./ar-sa\": 64096,\n\t\"./ar-sa.js\": 64096,\n\t\"./ar-tn\": 97826,\n\t\"./ar-tn.js\": 97826,\n\t\"./ar.js\": 31035,\n\t\"./az\": 20051,\n\t\"./az.js\": 20051,\n\t\"./be\": 23813,\n\t\"./be.js\": 23813,\n\t\"./bg\": 64323,\n\t\"./bg.js\": 64323,\n\t\"./bm\": 57837,\n\t\"./bm.js\": 57837,\n\t\"./bn\": 75780,\n\t\"./bn-bd\": 25959,\n\t\"./bn-bd.js\": 25959,\n\t\"./bn.js\": 75780,\n\t\"./bo\": 81451,\n\t\"./bo.js\": 81451,\n\t\"./br\": 76480,\n\t\"./br.js\": 76480,\n\t\"./bs\": 91607,\n\t\"./bs.js\": 91607,\n\t\"./ca\": 23232,\n\t\"./ca.js\": 23232,\n\t\"./cs\": 91034,\n\t\"./cs.js\": 91034,\n\t\"./cv\": 54213,\n\t\"./cv.js\": 54213,\n\t\"./cy\": 95800,\n\t\"./cy.js\": 95800,\n\t\"./da\": 40739,\n\t\"./da.js\": 40739,\n\t\"./de\": 66951,\n\t\"./de-at\": 82181,\n\t\"./de-at.js\": 82181,\n\t\"./de-ch\": 61339,\n\t\"./de-ch.js\": 61339,\n\t\"./de.js\": 66951,\n\t\"./dv\": 16938,\n\t\"./dv.js\": 16938,\n\t\"./el\": 59573,\n\t\"./el.js\": 59573,\n\t\"./en-au\": 62458,\n\t\"./en-au.js\": 62458,\n\t\"./en-ca\": 51816,\n\t\"./en-ca.js\": 51816,\n\t\"./en-gb\": 8069,\n\t\"./en-gb.js\": 8069,\n\t\"./en-ie\": 15586,\n\t\"./en-ie.js\": 15586,\n\t\"./en-il\": 60009,\n\t\"./en-il.js\": 60009,\n\t\"./en-in\": 51207,\n\t\"./en-in.js\": 51207,\n\t\"./en-nz\": 83724,\n\t\"./en-nz.js\": 83724,\n\t\"./en-sg\": 1953,\n\t\"./en-sg.js\": 1953,\n\t\"./eo\": 1292,\n\t\"./eo.js\": 1292,\n\t\"./es\": 66328,\n\t\"./es-do\": 61452,\n\t\"./es-do.js\": 61452,\n\t\"./es-mx\": 94444,\n\t\"./es-mx.js\": 94444,\n\t\"./es-us\": 81285,\n\t\"./es-us.js\": 81285,\n\t\"./es.js\": 66328,\n\t\"./et\": 7181,\n\t\"./et.js\": 7181,\n\t\"./eu\": 62830,\n\t\"./eu.js\": 62830,\n\t\"./fa\": 19565,\n\t\"./fa.js\": 19565,\n\t\"./fi\": 85541,\n\t\"./fi.js\": 85541,\n\t\"./fil\": 65661,\n\t\"./fil.js\": 65661,\n\t\"./fo\": 26087,\n\t\"./fo.js\": 26087,\n\t\"./fr\": 25396,\n\t\"./fr-ca\": 96581,\n\t\"./fr-ca.js\": 96581,\n\t\"./fr-ch\": 81294,\n\t\"./fr-ch.js\": 81294,\n\t\"./fr.js\": 25396,\n\t\"./fy\": 12533,\n\t\"./fy.js\": 12533,\n\t\"./ga\": 55796,\n\t\"./ga.js\": 55796,\n\t\"./gd\": 50847,\n\t\"./gd.js\": 50847,\n\t\"./gl\": 60439,\n\t\"./gl.js\": 60439,\n\t\"./gom-deva\": 46514,\n\t\"./gom-deva.js\": 46514,\n\t\"./gom-latn\": 66525,\n\t\"./gom-latn.js\": 66525,\n\t\"./gu\": 34232,\n\t\"./gu.js\": 34232,\n\t\"./he\": 50915,\n\t\"./he.js\": 50915,\n\t\"./hi\": 22095,\n\t\"./hi.js\": 22095,\n\t\"./hr\": 10762,\n\t\"./hr.js\": 10762,\n\t\"./hu\": 88275,\n\t\"./hu.js\": 88275,\n\t\"./hy-am\": 73094,\n\t\"./hy-am.js\": 73094,\n\t\"./id\": 27769,\n\t\"./id.js\": 27769,\n\t\"./is\": 99676,\n\t\"./is.js\": 99676,\n\t\"./it\": 74313,\n\t\"./it-ch\": 25141,\n\t\"./it-ch.js\": 25141,\n\t\"./it.js\": 74313,\n\t\"./ja\": 11985,\n\t\"./ja.js\": 11985,\n\t\"./jv\": 53908,\n\t\"./jv.js\": 53908,\n\t\"./ka\": 32808,\n\t\"./ka.js\": 32808,\n\t\"./kk\": 33930,\n\t\"./kk.js\": 33930,\n\t\"./km\": 71532,\n\t\"./km.js\": 71532,\n\t\"./kn\": 69461,\n\t\"./kn.js\": 69461,\n\t\"./ko\": 60502,\n\t\"./ko.js\": 60502,\n\t\"./ku\": 18660,\n\t\"./ku-kmr\": 58035,\n\t\"./ku-kmr.js\": 58035,\n\t\"./ku.js\": 18660,\n\t\"./ky\": 83088,\n\t\"./ky.js\": 83088,\n\t\"./lb\": 65742,\n\t\"./lb.js\": 65742,\n\t\"./lo\": 25417,\n\t\"./lo.js\": 25417,\n\t\"./lt\": 64968,\n\t\"./lt.js\": 64968,\n\t\"./lv\": 41202,\n\t\"./lv.js\": 41202,\n\t\"./me\": 34438,\n\t\"./me.js\": 34438,\n\t\"./mi\": 18498,\n\t\"./mi.js\": 18498,\n\t\"./mk\": 6744,\n\t\"./mk.js\": 6744,\n\t\"./ml\": 63949,\n\t\"./ml.js\": 63949,\n\t\"./mn\": 4459,\n\t\"./mn.js\": 4459,\n\t\"./mr\": 46679,\n\t\"./mr.js\": 46679,\n\t\"./ms\": 56960,\n\t\"./ms-my\": 47483,\n\t\"./ms-my.js\": 47483,\n\t\"./ms.js\": 56960,\n\t\"./mt\": 99989,\n\t\"./mt.js\": 99989,\n\t\"./my\": 64978,\n\t\"./my.js\": 64978,\n\t\"./nb\": 88460,\n\t\"./nb.js\": 88460,\n\t\"./ne\": 23993,\n\t\"./ne.js\": 23993,\n\t\"./nl\": 95378,\n\t\"./nl-be\": 62678,\n\t\"./nl-be.js\": 62678,\n\t\"./nl.js\": 95378,\n\t\"./nn\": 67560,\n\t\"./nn.js\": 67560,\n\t\"./oc-lnc\": 87060,\n\t\"./oc-lnc.js\": 87060,\n\t\"./pa-in\": 62187,\n\t\"./pa-in.js\": 62187,\n\t\"./pl\": 93532,\n\t\"./pl.js\": 93532,\n\t\"./pt\": 49396,\n\t\"./pt-br\": 92485,\n\t\"./pt-br.js\": 92485,\n\t\"./pt.js\": 49396,\n\t\"./ro\": 33179,\n\t\"./ro.js\": 33179,\n\t\"./ru\": 93797,\n\t\"./ru.js\": 93797,\n\t\"./sd\": 40675,\n\t\"./sd.js\": 40675,\n\t\"./se\": 59036,\n\t\"./se.js\": 59036,\n\t\"./si\": 59160,\n\t\"./si.js\": 59160,\n\t\"./sk\": 31266,\n\t\"./sk.js\": 31266,\n\t\"./sl\": 74699,\n\t\"./sl.js\": 74699,\n\t\"./sq\": 69728,\n\t\"./sq.js\": 69728,\n\t\"./sr\": 87129,\n\t\"./sr-cyrl\": 55000,\n\t\"./sr-cyrl.js\": 55000,\n\t\"./sr.js\": 87129,\n\t\"./ss\": 74346,\n\t\"./ss.js\": 74346,\n\t\"./sv\": 9877,\n\t\"./sv.js\": 9877,\n\t\"./sw\": 918,\n\t\"./sw.js\": 918,\n\t\"./ta\": 24787,\n\t\"./ta.js\": 24787,\n\t\"./te\": 6199,\n\t\"./te.js\": 6199,\n\t\"./tet\": 91851,\n\t\"./tet.js\": 91851,\n\t\"./tg\": 33881,\n\t\"./tg.js\": 33881,\n\t\"./th\": 87828,\n\t\"./th.js\": 87828,\n\t\"./tk\": 99677,\n\t\"./tk.js\": 99677,\n\t\"./tl-ph\": 29253,\n\t\"./tl-ph.js\": 29253,\n\t\"./tlh\": 95586,\n\t\"./tlh.js\": 95586,\n\t\"./tr\": 17254,\n\t\"./tr.js\": 17254,\n\t\"./tzl\": 61192,\n\t\"./tzl.js\": 61192,\n\t\"./tzm\": 69631,\n\t\"./tzm-latn\": 72841,\n\t\"./tzm-latn.js\": 72841,\n\t\"./tzm.js\": 69631,\n\t\"./ug-cn\": 71720,\n\t\"./ug-cn.js\": 71720,\n\t\"./uk\": 28048,\n\t\"./uk.js\": 28048,\n\t\"./ur\": 86751,\n\t\"./ur.js\": 86751,\n\t\"./uz\": 96343,\n\t\"./uz-latn\": 60513,\n\t\"./uz-latn.js\": 60513,\n\t\"./uz.js\": 96343,\n\t\"./vi\": 44821,\n\t\"./vi.js\": 44821,\n\t\"./x-pseudo\": 23973,\n\t\"./x-pseudo.js\": 23973,\n\t\"./yo\": 15000,\n\t\"./yo.js\": 15000,\n\t\"./zh-cn\": 43762,\n\t\"./zh-cn.js\": 43762,\n\t\"./zh-hk\": 9246,\n\t\"./zh-hk.js\": 9246,\n\t\"./zh-mo\": 41107,\n\t\"./zh-mo.js\": 41107,\n\t\"./zh-tw\": 79014,\n\t\"./zh-tw.js\": 79014\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35358;","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message:\n                                 \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {\n                        /* ignore */\n                     }\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(new Error(packet.message), {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                        status: packet.status,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                        err,\n                        response: err.responseText,\n                        text: err.statusText || err.message,\n                        url: error.url,\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nfunction socketDataSave(key, length) {\n   if (!HashSocketJobs[key]) {\n      HashSocketJobs[key] = {\n         packets: 0,\n         length: 0,\n      };\n   }\n\n   HashSocketJobs[key].packets++;\n   HashSocketJobs[key].length += length;\n}\nfunction socketDataLog(AB, key, data) {\n   let length = \"??\";\n   try {\n      length = JSON.stringify(data).length;\n      data.__length = length;\n   } catch (e) {\n      console.log(e);\n      //\n   }\n\n   if (data.objectId) {\n      let obj = AB.objectByID(data.objectId);\n      console.warn(`socket: ${key} ${obj.label ?? obj.name}(${length})`, data);\n   } else {\n      console.warn(`socket: ${key} (${length})`, data);\n   }\n\n   if (data.jobID) {\n      socketDataSave(data.jobID, length);\n      socketDataSave(`${data.jobID}-${key}`, length);\n   }\n}\n\nlet HashSocketJobs = {\n   /* jobID : { #packets, length } */\n};\n\nlet keyBlacklist = {\n   /* key : true */\n};\n// a list of incoming message keys, that indicate wether or not we have\n// processed this message.  If a message has been processed, we skip it.\n\n/**\n * @function blacklistKey()\n * create a unique key for this network event.\n * @param {event} ev\n *        the incoming network event key (ab.datacollection.create)\n * @param {obj} data\n *        the related network packet of the incoming event.\n * @return {string}\n */\nfunction blacklistKey(AB, ev, data) {\n   let parts = [ev];\n\n   if (data.jobID) {\n      parts.push(data.jobID);\n   }\n\n   if (data.data) {\n      let PK = \"uuid\";\n      let obj = AB.objectByID(data.objectId);\n      if (obj) {\n         PK = obj.PK();\n      }\n      parts.push(data.data[PK] || data.data.id);\n   }\n\n   if (data.__length) {\n      parts.push(data.__length);\n   } else {\n      let length = \"??\";\n      try {\n         length = JSON.stringify(data).length;\n      } catch (e) {\n         // ignore\n      }\n      parts.push(length);\n   }\n\n   return parts.join(\"-\");\n}\n\n/**\n * @function isBlacklisted()\n * return True/False if a given key is already blacklisted.\n * @param {string} key\n *        the () we are checking\n * @return {bool}\n */\nfunction isBlacklisted(key) {\n   return keyBlacklist[key] ?? false;\n}\n\n/**\n * @function blacklist()\n * mark a given key as blacklisted. This prevents additional calls with\n * the same key from being processed.\n * A Key is only blacklisted for a given amount of time (1s by default).\n * @param {string} key\n *        the blacklistKey() we are checking\n * @param {int} time\n *        The duration in ms of how long to keep the key blacklisted.\n */\nfunction blacklist(key, time = 1000) {\n   keyBlacklist[key] = true;\n   setTimeout(() => {\n      delete keyBlacklist[key];\n   }, time);\n}\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            socketDataLog(this.AB, ev, data);\n\n            // ensure we only process a network update 1x\n            let blKey = blacklistKey(this.AB, ev, data);\n            if (isBlacklisted(blKey)) return;\n            blacklist(blKey, 5000); // now prevent additional ones\n\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        performance.mark(`${ev}:normalization`, {\n                           op: \"function\",\n                           data: { jobID },\n                        });\n                        model.normalizeData(data.data);\n                        performance.measure(`${ev}:normalization`);\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   socketLog() {\n      console.warn(JSON.stringify(HashSocketJobs, null, 4));\n   }\n\n   socketLogClear() {\n      HashSocketJobs = {};\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      let route, query;\n      try {\n         // Extract paramitized route (ex: `/app_builder/model/:ID`) for performance tracking\n         [, route, query] = params.url.match(\n            /https?:\\/\\/[^/]+(\\/[^?]+)\\??(.*)/\n         );\n         route = route.replace(/\\b[a-fA-F\\d-]{36}\\b/g, \":ID\");\n         performance.mark(route, {\n            op: \"websocket.client\",\n            data: {\n               http: {\n                  query: query || undefined,\n                  method: params.method,\n               },\n               url: params.url,\n            },\n         });\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: `salSend() create performance.mark`,\n         });\n      }\n\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  performance.mark(\"JSON.parse\", { op: \"serialize\" });\n                  data = JSON.parse(data);\n                  performance.measure(\"JSON.parse\");\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data?.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  performance.measure(route);\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\n/* global Connection */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n\n      this.cachJobResponse = {};\n      // { jobID : { jobResponse } }\n      // hash of the queued jobResponses for network requests that are in\n      // our queue.\n      // We need to keep our own cache that isn't serialized so that once\n      // we complete the request, we can resume the resolve() promise chains\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * Check whether the network is slow\n    * @returns {Boolean}\n    */\n   isNetworkSlow() {\n      return !!this._networkSlow;\n   }\n\n   /**\n    * Register the network speed test worker\n    * @param {Worker} worker\n    * @param {boolean} slow is the current state slow?\n    */\n   registerNetworkTestWorker(worker, slow) {\n      this._networkTestWorker = worker;\n      this._networkSlow = slow;\n      this._networkTestWorker.onmessage = ({ data }) => {\n         if (this._networkSlow !== data) {\n            this._networkSlow = data;\n            this.emit(\"networkslow\", this._networkSlow);\n            // Tell sentry our network speed changed\n            performance.setContext(\"breadcrumb\", {\n               category: \"network\",\n               message: this._networkSlow\n                  ? \"Slow network detected\"\n                  : \"Network speed restored\",\n               level: \"info\",\n            });\n         }\n      };\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               let jID = this.AB.jobID();\n               this.cachJobResponse[jID] = jobResponse;\n               queue.push({ data, jobResponse: jID });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               let hasResponded = false;\n               let resCount = 0;\n               let resNumber = queue.length;\n\n               let done = (res, rej, err) => {\n                  if (!hasResponded) {\n                     if (err) {\n                        rej(err);\n                        hasResponded = true;\n                        return;\n                     }\n                     resCount++;\n                     if (resCount >= resNumber) {\n                        hasResponded = true;\n                        res();\n                     }\n                  }\n               };\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     let job = this.cachJobResponse[entry.jobResponse];\n                     // var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           delete this.cachJobResponse[entry.jobResponse];\n                           // processRequest(cb);\n                           cb();\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           // processRequest(cb);\n                        });\n                     processRequest(cb);\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     done(res, rej, err);\n                     // if (err) {\n                     //    rej(err);\n                     // } else {\n                     //    res();\n                     // }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this.cachJobResponse = {};\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport performance from \"../utils/performance\";\nimport FilterComplex from \"./platform/FilterComplex\";\nimport SortPopup from \"./platform/views/ABViewGridPopupSortFields\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n      this.Class.SortPopup = SortPopup;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain which group of people we are sending a notification to.\n    * @param {Error} error An error object generated at the point of issue.\n    * @param {json} info Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      performance.notify(domain, error, info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      this.Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   isNil(value) {\n      return _.isNil(value);\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.appType = attributes.appType || \"web\";\n      // {string} .appType\n      // the kind of Application this is. [\"web\", \"mobile\"]\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManager;\n   }\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   get isWebApp() {\n      return this.appType == \"web\";\n   }\n\n   get isMobile() {\n      return this.appType == \"mobile\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         appType: this.appType || \"web\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   ///\n   /// Datacollections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // function searchDeep(curr) {\n         //    let resultsCurr = curr._pages.filter(filter);\n\n         //    for (let p of curr._pages) {\n         //       let resultsP = searchDeep(p);\n         //       if (resultsP.length) {\n         //          resultsCurr = resultsCurr.concat(resultsP);\n         //       }\n         //    }\n         //    // if we get here, end\n         //    return resultsCurr;\n         // }\n\n         // result = searchDeep(this);\n         result = this._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method _searchDeep()\n    * search each node of a tree and return all matches that pass the provided\n    * filter.\n    * @param {AB*} curr\n    *        An object that contains a tree structure.\n    * @param {string} key\n    *        The curr[key] reference of the array of items to search\n    * @param {function} filter\n    *        The curr[key].filter(filter) that returns true/false if a node is\n    *        to be included in the result.\n    * @return {array}\n    */\n   _searchDeep(curr, key, filter) {\n      let items = curr[key] ?? [];\n      let resultsCurr = items.filter?.(filter) ?? [];\n\n      for (let p of items) {\n         let resultsP = this._searchDeep(p, key, filter);\n         if (resultsP.length) {\n            resultsCurr = resultsCurr.concat(resultsP);\n         }\n      }\n\n      return resultsCurr;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return this.ViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   /**\n    * @method version()\n    * return the current version of this Application.\n    * Version information is in format \"{Major}.{Minor}.{patch}\"\n    * @return {string}\n    */\n   get version() {\n      return this.json?.versionData?.versionNumber ?? \"0.0.0\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return this.ViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @param {bool} deep\n    *        should this search deep (through all our children's children)\n    * @return {ABViewPage}\n    */\n   pageByID(id, deep = true) {\n      return this.pages((f) => f.id == id, deep)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.ViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/**\n * ABApplicationMobileCore\n *\n * This is the core ABApplicationMobile class that manages the common operations\n * of a Mobile PWA ABApplication.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManagerMobile = require(\"../platform/ABViewManagerMobile\");\nvar ABApplication = require(\"../platform/ABApplication\");\n\nmodule.exports = class ABApplicationMobileCore extends ABApplication {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.appType = \"mobile\"; // Just making sure.\n      this.networkType = attributes.networkType;\n\n      this.pageDefault = attributes.pageDefault;\n      // {uuid}\n      // the {ABMobilePage}.uuid of the page that is our default Page.\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManagerMobile;\n   }\n\n   pageNew(def) {\n      console.error(\"TODO: pageNew for ApplicationMobile\");\n      return null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var json = super.toObj();\n      json.appType = \"mobile\";\n      json.networkType = this.networkType;\n\n      json.pageDefault = this.pageDefault;\n\n      return json;\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n\n      this.__model = null;\n      // {ABModel}\n      // An instance of the ABModel used for this DataCollection to\n      // access data on the server.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDatacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // this.fieldLink is intended to be the way to connect to the column in\n      // the datacollectionLink that we are following.  However this field\n      // is the field in this.datasource that connects to the field in\n      // datacollectionLink that has the value we are linked to.\n      // So, If this DC(ObjB), and our datacollectionLink (ObjA)\n      // then this.fieldLink = ObjB->FieldB\n      // To find the corresponding field in ObjA, we do:\n      // this.fieldLink.fieldLink  (ObjA->FieldA)\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll,\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery,\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType,\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`,\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`,\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      if (!this.__model) {\n         let object = this.datasource; // already notified\n\n         this.__model = object ? object.model() : null;\n      }\n      return this.__model;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // Store the old cursor id\n         this.__previousCursorId = dc.getCursor();\n\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId,\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    *\n    *    In cases where a DC has set .loadAll, our job is to filter existing data\n    *    that is already loaded in the internal __dataCollection.\n    *\n    *    Otherwise this is not the place to trigger a data refresh.  We depend\n    *    on other mechanisms (.reloadData(), datacollection .select()) to trigger\n    *    an update.\n    */\n   refreshLinkCursor(force = false) {\n      // our filter conditions need to know there was an updated cursor.\n      // some of our filters are based upon our linked data.\n      this.refreshFilterConditions();\n\n      // NOTE: If DC does not set load all data, then it does not need to filter by the parent DC.\n      // because it fetch data when the cursor of the parent DC changes.\n      if (!this.settings.loadAll && !force) return;\n\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // This row is not loaded yet. It will be loaded when scrolling.\n         if (rowData == null) return true;\n\n         // if link dc cursor is null:\n         // ... if there's no parent show all data\n         // ... if we have a parent hide all data - address cases where user see\n         //     unexpected data (ns_app#318) - should this be a DC setting?\n         if (!linkCursor) return dvLink ? false : true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               if (this.__dataCollection.data.count() == 0) {\n                  this.emit(\"collectionEmpty\", {});\n               }\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n\n         // If no data but the parent DC set cursor, then this should be reload data.\n         const dcFollow = this.datacollectionFollow;\n         if (!rowId && dcFollow?.getCursor()) {\n            this.loadData();\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // NOTE: UPDATing this process to add another check.\n         // .isCursorFollow only invalidates the 1st half of the routine.\n         // .isCursorFollow STILL needs to follow the 2nd half of the routine\n         // // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         // if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         // Don't do First Step if .isCursorFollow\n         if (!this.isCursorFollow) {\n            // First Step\n            // Does this new entry need to be part of the data we are currently\n            // tracking?  If so, add it.\n            Promise.resolve()\n               .then(() => {\n                  return new Promise((next, bad) => {\n                     // Query\n                     if (obj instanceof this.AB.Class.ABObjectQuery) {\n                        let objList =\n                           obj.objects((o) => o.id == data.objectId) || [];\n\n                        needAdd = objList.length > 0;\n\n                        if (!needAdd) return next();\n\n                        let where = {\n                           glue: \"or\",\n                           rules: [],\n                        };\n\n                        objList.forEach((o) => {\n                           let newDataId = data.data[`${o.PK()}`];\n                           if (!newDataId) return;\n\n                           where.rules.push({\n                              key: `${\n                                 o.alias || obj.objectAlias(o.id)\n                              }.${o.PK()}`,\n                              rule: \"equals\",\n                              value: newDataId,\n                           });\n                        });\n\n                        obj.model()\n                           .findAll({\n                              where: where,\n                           })\n                           .then((newQueryData) => {\n                              updatedVals = newQueryData.data || [];\n                              updatedVals.forEach((v) => {\n                                 delete v.id;\n                              });\n\n                              next();\n                           })\n                           .catch(bad);\n                     }\n                     // Object\n                     else {\n                        needAdd = obj.id == data.objectId;\n                        updatedVals = [data.data];\n                        next();\n                     }\n                  });\n               })\n               .then(() => {\n                  if (needAdd) {\n                     (updatedVals || []).forEach((updatedV) => {\n                        // If this DC uses a query, it pulls refreshed data from the server in the previous step,\n                        // so there is no need to recheck the query's filter.\n                        const skipDatasourceFilter =\n                           obj instanceof this.AB.Class.ABObjectQuery;\n\n                        // filter condition before add\n                        if (!this.isValidData(updatedV, skipDatasourceFilter))\n                           return;\n\n                        // filter the cursor of parent DC\n                        const dcLink = this.datacollectionLink;\n                        if (dcLink && !this.isParentFilterValid(updatedV))\n                           return;\n\n                        // check to see if item already exisits in data collection\n                        // and check to see that we are not loading the data serverside from cursor\n                        if (\n                           !this.__dataCollection.exists(\n                              updatedV[`${obj.PK()}`],\n                           ) &&\n                           !this.__reloadWheres\n                        ) {\n                           this.__dataCollection.add(updatedV, 0);\n                           this.emit(\"create\", updatedV);\n                           // this.__dataCollection.setCursor(rowData.id);\n                        } else if (\n                           !this.__dataCollection.exists(\n                              updatedV[`${obj.PK()}`],\n                           ) &&\n                           this.__reloadWheres\n                        ) {\n                           // debugger;\n                           if (this.isParentFilterValid(updatedV)) {\n                              // we track bound components and flexlayout components\n                              var attachedComponents =\n                                 this.__bindComponentIds.concat(\n                                    this.__flexComponentIds,\n                                 );\n                              attachedComponents.forEach((bcids) => {\n                                 // if the reload button already exisits move on\n                                 if ($$(bcids + \"_reloadView\")) {\n                                    return false;\n                                 }\n\n                                 // find the position of the data view\n                                 var pos = 0;\n                                 var parent = $$(bcids).getParentView();\n                                 if ($$(bcids).getParentView().index) {\n                                    pos = $$(bcids)\n                                       .getParentView()\n                                       .index($$(bcids));\n                                 } else if (\n                                    $$(bcids).getParentView().getParentView()\n                                       .index\n                                 ) {\n                                    // this is a data view and it is inside a\n                                    // scroll view that is inside an accodion\n                                    // so we need to go deeper to add the button\n                                    parent = $$(bcids)\n                                       .getParentView()\n                                       .getParentView();\n                                    pos = $$(bcids)\n                                       .getParentView()\n                                       .getParentView()\n                                       .index($$(bcids).getParentView());\n                                 }\n\n                                 // store the datacollection so we can pass it to the button later\n                                 var DC = this;\n                                 // add a button that reloads the view when clicked\n                                 if (parent.addView) {\n                                    var L = this.AB.Label();\n                                    parent.addView(\n                                       {\n                                          id: bcids + \"_reloadView\",\n                                          view: \"button\",\n                                          value: L(\n                                             \"New data available. Click to reload.\",\n                                          ),\n                                          css: \"webix_primary webix_warn\",\n                                          click: function (id, event) {\n                                             DC.reloadData();\n                                             $$(id)\n                                                .getParentView()\n                                                .removeView(id);\n                                          },\n                                       },\n                                       pos,\n                                    );\n                                 }\n                              });\n                              // this.emit(\"create\", updatedV);\n                           }\n                        }\n                     });\n\n                     if (\n                        this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                     ) {\n                        this.parseTreeCollection({\n                           data: updatedVals,\n                        });\n                     }\n                  }\n\n                  // ABObject only\n                  if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                     // if it is a linked object\n                     let connectedFields = this.datasource.connectFields(\n                        (f) =>\n                           f.datasourceLink &&\n                           f.datasourceLink.id == data.objectId,\n                     );\n\n                     // It should always be only one item for ABObject\n                     updatedVals = updatedVals[0];\n\n                     // update relation data\n                     if (\n                        updatedVals &&\n                        connectedFields &&\n                        connectedFields.length > 0\n                     ) {\n                        // various PK name\n                        let PK = connectedFields[0].object.PK();\n                        if (!updatedVals.id && PK != \"id\")\n                           updatedVals.id = updatedVals[PK];\n\n                        this.__dataCollection.find({}).forEach((d) => {\n                           let updateItemData = {};\n\n                           connectedFields.forEach((f) => {\n                              var updateRelateVal = {};\n                              if (f && f.fieldLink) {\n                                 updateRelateVal =\n                                    updatedVals[f.fieldLink.relationName()] ||\n                                    {};\n                              }\n\n                              let rowRelateVal = d[f.relationName()] || {};\n\n                              let valIsRelated = isRelated(\n                                 updateRelateVal,\n                                 d.id,\n                                 PK,\n                              );\n\n                              // Relate data\n                              if (\n                                 Array.isArray(rowRelateVal) &&\n                                 rowRelateVal.filter(\n                                    (v) =>\n                                       v == updatedVals.id ||\n                                       v.id == updatedVals.id ||\n                                       v[PK] == updatedVals.id,\n                                 ).length < 1 &&\n                                 valIsRelated\n                              ) {\n                                 rowRelateVal.push(updatedVals);\n\n                                 updateItemData[f.relationName()] =\n                                    rowRelateVal;\n                                 updateItemData[f.columnName] = updateItemData[\n                                    f.relationName()\n                                 ].map((v) => v.id || v[PK] || v);\n                              } else if (\n                                 !Array.isArray(rowRelateVal) &&\n                                 (rowRelateVal != updatedVals.id ||\n                                    rowRelateVal.id != updatedVals.id ||\n                                    rowRelateVal[PK] != updatedVals.id) &&\n                                 valIsRelated\n                              ) {\n                                 updateItemData[f.relationName()] = updatedVals;\n                                 updateItemData[f.columnName] =\n                                    updatedVals.id || updatedVals;\n                              }\n                           });\n\n                           // If this item needs to update\n                           if (Object.keys(updateItemData).length > 0) {\n                              this.__dataCollection.updateItem(\n                                 d.id,\n                                 updateItemData,\n                              );\n\n                              if (this.__treeCollection)\n                                 this.__treeCollection.updateItem(\n                                    d.id,\n                                    updateItemData,\n                                 );\n\n                              this.emit(\n                                 \"update\",\n                                 this.__dataCollection.getItem(d.id),\n                              );\n                           }\n                        });\n                     }\n                  }\n\n                  this.updateRelationalDataFromLinkDC(data.objectId, data.data);\n                  // filter link data collection's cursor\n                  this.refreshLinkCursor();\n                  this.setStaticCursor();\n               });\n         }\n\n         // SECOND Step:\n         // Try to detect if this newly created entry connects to one of the\n         // values this DC is currently managing.  If so, than add this value\n         // to the connection.\n\n         let incomingObj = this.AB.objectByID(data.objectId);\n         if (!incomingObj) return;\n\n         // find any of incomingObj connections that are tied to my object:\n         let connectedFields = incomingObj\n            .connectFields((f) => f.datasourceLink?.id == obj.id)\n            .filter((f) => f); // <-- safety check, no undefined or nulls\n         if (connectedFields.length == 0) return;\n\n         let iPK = incomingObj.PK();\n         let PK = obj.PK();\n         let newData = this.AB.cloneDeep(data.data);\n\n         let currCursor = this.getCursor();\n         let needsRefresh = false;\n\n         connectedFields.forEach((f) => {\n            // pull the values in this connected fields\n            let values = data.data[f.columnName]; // just need the PK\n\n            if (!Array.isArray(values))\n               values = [values].filter((v) => !this.AB.isNil(v));\n\n            values.forEach((v) => {\n               v = v[PK] || v; // just in case this was an {} and not the {uuid}\n\n               // if this is one of the items we are managing\n               if (this.__dataCollection.exists(v)) {\n                  let localField = f.fieldLink;\n                  if (localField) {\n                     let row = this.__dataCollection.getItem(v);\n                     let colName = localField.columnName;\n                     let relName = localField.relationName();\n\n                     if (localField.linkType() == \"many\") {\n                        if (!Array.isArray(row[colName])) {\n                           row[colName] = [row[colName]].filter(\n                              (r) => !this.AB.isNil(r),\n                           );\n                        }\n                        // if it isn't already in the array, add it\n                        let rval = localField.getRelationValue(newData);\n                        if (row[colName].indexOf(rval) == -1) {\n                           row[colName].push(rval);\n                        }\n\n                        if (!Array.isArray(row[relName])) {\n                           row[relName] = [row[relName]].filter(\n                              (r) => !this.AB.isNil(r),\n                           );\n                        }\n                        if (\n                           row[relName].filter((r) => r[iPK] == newData[iPK])\n                              .length == 0\n                        ) {\n                           row[relName].push(newData);\n                        }\n                     } else {\n                        row[colName] = localField.getRelationValue(newData);\n                        row[relName] = newData;\n                     }\n\n                     // pass updated data back into DC:\n                     this.__dataCollection.updateItem(v, row);\n\n                     if (this.__treeCollection)\n                        this.__treeCollection.updateItem(v, row);\n\n                     this.emit(\"update\", this.__dataCollection.getItem(v));\n\n                     // if we just updated our Current Cursor, we need to\n                     // let our connected DC's know to refresh.\n                     if (currCursor?.id == v) {\n                        needsRefresh = true;\n                     }\n                  }\n               }\n            });\n         });\n\n         if (needsRefresh) {\n            this.emit(\"cursorStale\", null);\n         }\n      });\n\n      this.on(\"ab.datacollection.connection-added\", (data) => {\n         // This event notifies us of a specific relation being created between\n         // two records. In this case the source object that was originally\n         // operated on, is sent along in data.data.\n         //\n         // eg: if this was a `create` operation, the newly created value is\n         //     included in data.data.\n         // eg: if this was an `update` operation, the row that was modified\n         //     is included.\n         //\n         // {json} data\n         // incoming socket payload:\n         // data.objectID {string}\n         //      the ABObject this connection is being added to\n         // data.fieldID  {string}\n         //      which connect Field in this ABObject the value is added to\n         // data.rowID    {string}\n         //      which specific row/entry this is being added to\n         // data.data     {json}\n         //      The value being added.\n         //\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data.rowID) return;\n\n         // ABObject only\n         if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n            // if this is the object we are managing\n            if (obj.id === data.objectID) {\n               let field = obj.fieldByID(data.fieldID);\n               if (field) {\n                  // figure out if we actually have the value that was changed:\n                  let isExists = this.__dataCollection.exists(data.rowID);\n                  if (isExists) {\n                     let newData = this.AB.cloneDeep(data.data);\n                     let row = this.__dataCollection.getItem(data.rowID);\n\n                     let colName = field.columnName;\n                     let relName = field.relationName();\n\n                     if (field.linkType() == \"many\") {\n                        if (!Array.isArray(row[colName])) {\n                           // in case row[col]:{obj} this will make sure it\n                           // is included as an [ {obj} ], but will also prevent\n                           // [ undefined ] if row[col] isn't set:\n                           row[colName] = [row[colName]].filter(\n                              (r) => !this.AB.isNil(r),\n                           );\n                        }\n                        row[colName].push(f.getRelationValue(newData));\n\n                        if (!Array.isArray(row[relName])) {\n                           row[relName] = [row[relName]].filter(\n                              (r) => !this.AB.isNil(r),\n                           );\n                        }\n                        row[relName].push(newData);\n                     } else {\n                        row[colName] = f.getRelationValue(newData);\n                        row[relName] = newData;\n                     }\n\n                     // pass updated data back into DC:\n                     this.__dataCollection.updateItem(data.rowID, row);\n\n                     if (this.__treeCollection)\n                        this.__treeCollection.updateItem(data.rowID, row);\n\n                     this.emit(\n                        \"update\",\n                        this.__dataCollection.getItem(data.rowID),\n                     );\n                  }\n               }\n            }\n         } else if (obj instanceof this.AB.Class.ABObjectQuery) {\n            // ABQuery\n\n            // NOTE: that in this case, if this change is about one of the\n            // objects we track, we will most likely have to reload the data\n            // to make sure we are displaying proper data.\n\n            // This will follow the same logic as in \"ab.datacollection.create\"\n            // so instead of repeating that here, let's call our \"create\"\n            // handler instead:\n\n            ///// LEFT OFF HERE:\n            // need to pull out the data in data.data that represents the\n            // connection to data.objectId\n\n            //// WAIT!!!!!!\n            //// Instead, of this \"connection-added\", lets add the logic in\n            //// a \"created\" handler to detect if we should add the new entry\n            //// into A value we currently track.\n            //// ===> This way we only have to send out \"Created\" messages\n            ////\n\n            let newPacket = {\n               objectId: data.objectId,\n               data: this.AB.cloneDeep(data.data),\n            };\n            this.emit(\"ab.datacollection.create\", newPacket);\n         }\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // #Johnny: removing this check.  A DC that is following another cursor\n         // still has a value that might need updating.\n         // DC who is following cursor should update only current cursor.\n         // if (\n         //    this.isCursorFollow &&\n         //    this.getCursor()?.id != (values[obj.PK()] ?? values.id)\n         // ) {\n         //    return;\n         // }\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         //\n         // Case 1: This DC contains the value that was updated\n         // In this case, we want to replace our current entry with\n         // the new one passed in.\n         // EX: This is a DC of Users, and the incoming Entry is a User\n         // that we are already displaying.\n         //\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id,\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || [],\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id,\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || [],\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // only spread around cloned copies because some objects (I'm\n                  // looking at you ABFieldUser) will modify some data for local\n                  // usage.\n                  updatedVals = this.AB.cloneDeep(updatedVals);\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData?.id == updatedVals.id) {\n                     this.emit(\"cursorStale\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  let currData = this.getCursor();\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n\n                     if (currData?.id == id) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         //\n         // Case 2: This DC has entries that CONNECT to the updated value.\n         // We need to make sure our connections, properly reflect the\n         // current state of the incoming data.\n         //\n         // EG: This DC is a list of Roles that connect to User, and an updated\n         // User is passed in.\n\n         let currCursor = this.getCursor();\n         let updateCursor = null;\n\n         // if it is a linked object\n         // look for connected fields that link to the incoming objectId\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId,\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields?.length > 0\n         ) {\n            // various PK name\n            // webix datacollections require an .id value, so make sure\n            // this incoming value has an .id set\n            let PK = obj.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     // check to see if we are supposed to be related to this\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // If NO, then make sure we Unrelate data\n                     // if this is an array -> filter out the entry\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id,\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           // NOTE: Special case: the incoming value.id will be .uuid\n                           // however in case of User Fields, v.id == username and not .uuid\n                           // so we put our default check to be v[PK] here to play nice\n                           (v) => (v[PK] || v.id || v) != values.id,\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        // this is not an array so set link to null\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // However, if we are supposed to be related => make sure we are\n                     // If this is an array, then add to list\n                     // AND YES: make sure it is cloned\n                     if (valIsRelated) {\n                        values = this.AB.cloneDeep(values);\n                     }\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id,\n                           ).length > 0\n                        ) {\n                           // just update the one entry in my array with the new\n                           // value\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map(\n                           (v) => f.getRelationValue(v) /*v.id || v[PK] || v*/,\n                        );\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        // make ConnectedField use .getRelationValue() here!\n                        updateItemData[f.columnName] =\n                           f.getRelationValue(values);\n                     }\n                  });\n\n                  // If this item needs to update\n                  // meaning there is > 1 key in the object (we always have .id)\n                  if (Object.keys(updateItemData).length > 1) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData,\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData,\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id),\n                        );\n                        if (currCursor?.id == dcItem.id) {\n                           updateCursor = dcItem;\n                        }\n                     }\n                  }\n               });\n            }\n         }\n\n         //\n         // Case 3: Our DC is linked to a DC that was effected by this update.\n         //\n         // We will approach it from another direction, if the current DC made\n         // an update to it's current Cursor, then we will emit a \"cursorStale\"\n         // event, so our linked DCs will update themselves with the new value:\n         if (updateCursor) {\n            this.emit(\"cursorStale\", null);\n         }\n         // this.updateRelationalDataFromLinkDC(data.objectId, values);\n         this.refreshLinkCursor();\n\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0],\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData?.[PK] == values[PK]) {\n                        this.emit(\"cursorStale\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData?.[obj.PK()] == delId)\n                  this.emit(\"cursorStale\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId,\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId,\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      const linkDC = this.datacollectionLink;\n      // if (linkDC && this.settings.loadAll) {\n      if (linkDC) {\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"changeCursor\",\n            listener: (currentCursor) => {\n               // NOTE: we can clear data here to update UI display, then data will be fetched when webix.dataFeed event\n               if (\n                  !this.settings?.loadAll &&\n                  currentCursor?.id != linkDC.previousCursorId\n               )\n                  this.clearAll();\n\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"cursorStale\",\n            listener: (currentCursor) => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               // if don't have .loadAll set,  we'll need to update our data:\n               if (!this.settings?.loadAll) {\n                  // What I do here depends on what my linked DC has set for\n                  // it's .loadConnections (shouldPopulate) value\n                  let dvLink = this.datacollectionLink;\n                  let isMyDataThere = dvLink.shouldPopulate;\n                  if (Array.isArray(isMyDataThere)) {\n                     // if this was an array: it should be an array of columnNames\n                     // of the dvLink that are being populated.\n\n                     // the column I'm interested in:\n                     let colName = this.fieldLink.fieldLink.columnName;\n\n                     // is it there?\n                     isMyDataThere = isMyDataThere.indexOf(colName) > -1;\n                  }\n                  if (!isMyDataThere) {\n                     // If it didn't populate it's data, then I can't be\n                     // efficient about how to update my data.\n                     // we'll just have to reload:\n\n                     // find out how many entries we have already loaded and try to\n                     // load at least that many again.:\n                     let count = 20;\n                     if (this.__dataCollection.count() > count)\n                        count = this.__dataCollection.count();\n                     if (this.__treeCollection?.count() > count)\n                        count = this.__treeCollection.count();\n\n                     let currCursor = this.__dataCollection.getCursor();\n                     this.clearAll();\n                     this.reloadData(0, count).then(() => {\n                        this.__dataCollection.setCursor(currCursor);\n                        this.emit(\"cursorSelect\", currCursor);\n                     });\n                  } else {\n                     // if the linked DC does have my data populated:\n\n                     // the values I currently contain can fall into 1 of 3 categories:\n                     // 1) A value I currently have that I need to Keep\n                     // 2) A value I currently have that I need to remove\n                     // 3) A value I don't have, but need to Add\n\n                     // the current value of the cursor should have the ID references\n                     // to what SHOULD be in my display\n\n                     // get the current cursor of our linked DC\n                     let linkCursor;\n\n                     if (dvLink) {\n                        linkCursor = dvLink.getCursor();\n                     }\n                     if (!linkCursor) {\n                        // if linkCursor is no longer set, then we should clear()\n                        this.clearAll();\n                        return;\n                     }\n\n                     let PK = this.datasource.PK();\n\n                     // lets start by assuming all the current values in cursor are #3\n                     // -> all the values into valuesToAdd:\n\n                     let colName = this.fieldLink.fieldLink.relationName();\n                     let valuesToAdd = {};\n                     let valuesIn = linkCursor[colName] || [];\n                     if (!Array.isArray(valuesIn)) valuesIn = [valuesIn];\n                     valuesIn = valuesIn.filter((v) => v);\n                     valuesIn.forEach((v) => {\n                        valuesToAdd[v[PK]] = v;\n                     });\n\n                     let valuesToRemove = [];\n                     // step through all the values I currently have\n                     let currValues = this.__dataCollection.find(() => true);\n                     currValues.forEach((value) => {\n                        // if value is in valuesToAdd\n                        if (valuesToAdd[value[PK]]) {\n                           // we already have it so turns out we don't need to add\n                           // it after all\n                           delete valuesToAdd[value[PK]];\n                        } else {\n                           // the current state of the Link Cursor value doesn't have\n                           // this value, so we need to remove it:\n                           valuesToRemove.push(value[PK]);\n                        }\n                     });\n\n                     // now remove the items we don't want:\n                     this.__dataCollection.remove(valuesToRemove);\n\n                     // then we have to ask for the values we need to add:\n                     valuesToAdd = Object.keys(valuesToAdd); // convert to []\n                     if (valuesToAdd.length > 0) {\n                        let cond = { where: {} };\n                        cond.where[PK] = valuesToAdd;\n                        // NOTE: we are using the abbreviated condition syntax here.\n\n                        // NOTE: staleRefresh() has some buffering capabilities\n                        // that combine multiple calls into 1 more efficient call:\n                        this.model.staleRefresh(cond).then((res) => {\n                           // check to make sure there is data to work with\n                           if (Array.isArray(res.data) && res.data.length) {\n                              res.data.forEach((d) => {\n                                 if (!this.__dataCollection.exists(d[PK])) {\n                                    this.__dataCollection.add(d);\n                                 }\n                              });\n                           }\n                        });\n                     }\n                  }\n\n                  return;\n               }\n\n               // Otherwise, we need to refilter our data:\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               const followCursor = followDC.getCursor();\n               const currentCursor = this.getCursor();\n\n               // If the cursor is not the new, then it should not reload.\n               if (\n                  followCursor?.[followDC.datasource.PK()] ==\n                  currentCursor?.[this.datasource.PK()]\n               )\n                  return;\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"cursorStale\",\n            listener: () => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   async waitForDataCollectionToInitialize(DC, msg) {\n      DC.init();\n\n      return new Promise((resolve, reject) => {\n         /* eslint-disable no-fallthrough */\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventRemove(\"initializedData\");\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n         /* eslint-enable no-fallthrough */\n      });\n   }\n\n   // /**\n   //  * @method whereCleanUp()\n   //  * Parse through the current where condition and remove any null or\n   //  * empty logical blocks.\n   //  * @param {obj} curr\n   //  *        1) The current where condition in ABQuery Format:\n   //  *        {\n   //  *           glue: [AND, OR],\n   //  *           rules: [ {rule} ]\n   //  *        }\n   //  *        or 2) The current {rule} to validate\n   //  *        {\n   //  *          key:{string},\n   //  *          rule:{string},\n   //  *          vlaue:{mixed}\n   //  *        }\n   //  * @return {ABQuery.where} / { Rule }\n   //  */\n   // whereCleanUp(curr) {\n   //    if (curr) {\n   //       if (curr.glue && curr.rules) {\n   //          // this is a logical Block (AND, OR)\n   //          // we need to filter the children\n   //          let newValue = { glue: curr.glue, rules: [] };\n   //          curr.rules.forEach((r) => {\n   //             let cleanRule = this.whereCleanUp(r);\n   //             // don't add values that didn't pass\n   //             if (cleanRule) {\n   //                newValue.rules.push(cleanRule);\n   //             }\n   //          });\n\n   //          // if we have a non empty block, then return it:\n   //          if (newValue.rules.length > 0) {\n   //             return newValue;\n   //          }\n\n   //          // this isn't really a valid conditional, so null\n   //          return null;\n   //       }\n\n   //       // This is a specific rule, that isn't null so:\n   //       return curr;\n   //    }\n   //    return null;\n   // }\n\n   async loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? {}\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n      wheres.glue = wheres.glue || \"and\";\n      wheres.rules = wheres.rules || [];\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      // add the filterCond if there are rules to add\n      if (this.__filterCond?.rules?.length > 0) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      let linkRule = this.ruleLinkedData();\n      if (!this.settings.loadAll && linkRule) {\n         __additionalWheres.rules.push(linkRule);\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         if (wheres.rules.length) {\n            __additionalWheres.rules.unshift(wheres);\n         }\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n      wheres = obj.whereCleanUp(wheres);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate: this.shouldPopulate,\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      //\n      // Step 1: make sure any DataCollections we are linked to are\n      // initialized first.  Then proceed with our initialization.\n      //\n      const parentDc = this.datacollectionLink ?? this.datacollectionFollow;\n      // If we are linked to another datacollection then wait for it\n      if (parentDc) {\n         await this.waitForDataCollectionToInitialize(parentDc);\n      }\n\n      //\n      // Step 2: if we have any filter rules that depend on other DataCollections,\n      // then wait for them to be initialized first.\n      // eg: \"(not_)in_data_collection\" rule filters\n      if (wheres?.rules?.length) {\n         const dcFilters = [];\n\n         wheres.rules.forEach((rule) => {\n            // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n            if (\n               rule.rule == \"in_data_collection\" ||\n               rule.rule == \"not_in_data_collection\"\n            ) {\n               const dv = this.AB.datacollectionByID(rule.value);\n               if (dv) {\n                  dcFilters.push(this.waitForDataCollectionToInitialize(dv));\n               }\n            }\n         });\n\n         await Promise.all(dcFilters);\n      }\n\n      //\n      // Step 3: pull data to data collection\n      // we will keep track of the resolve, reject for this\n      // operation.\n      // the actual resolve() should happen in the\n      // .processIncomingData() after the  data is processed.\n      return new Promise((resolve, reject) => {\n         this._pendingLoadDataResolve = {\n            resolve: resolve,\n            reject: reject,\n         };\n\n         this.platformFind(model, cond).catch((err) => {\n            reject(err);\n         });\n      });\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method shouldPopulate()\n    * Return our populate status. We now want to query this info outside this\n    * object.\n    * @return {bool|Array}\n    *         true/false,  or an array of columnNames that are being populated.\n    */\n   get shouldPopulate() {\n      return (\n         this.settings.populate ??\n         (this.settings.preventPopulate ? false : true)\n      );\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         // let pos = this.__dataCollection.count();\n         let pos = this.__dataCollection.find({}).length;\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n            cb?.();\n            resolve();\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               setTimeout(() => {\n                  this.refreshLinkCursor();\n               }, 250);\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor),\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method ruleLinkedData()\n    * return a QueryFilter rule that also checks that incoming data is linked\n    * to our .datacollectionLink (if it exists).\n    * @return {obj} {QueryFilterRule}\n    */\n   ruleLinkedData() {\n      let rule = null;\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            rule = {\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId),\n               ),\n            };\n         }\n      }\n      return rule;\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`,\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`,\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n      );\n\n      // if we pass in wheres, then Save that value to our internal .filterConditions\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      let filter = this.AB.cloneDeep(\n         this.settings.objectWorkspace?.filterConditions ?? {\n            glue: \"and\",\n            rules: [],\n         },\n      );\n      // sanity checks:\n      // I've learned not to trust: this.settings.objectWorkspace\n      filter.glue = filter.glue || \"and\";\n      filter.rules = filter.rules || [];\n\n      // if there is a linkRule, add it to filter\n      let linkRule = this.ruleLinkedData(); // returns a rule if we are linked\n      if (linkRule) {\n         // NOTE: linkRule was originally designed to produce a rule for the\n         // loadData() routine.  In SQL, our linkRule might have an \"equals\"\n         // rule, to match.  But in this context if our linktype is \"many\"\n         // we need to change the rule to \"contains\":\n         if (this.fieldLink?.linkType() == \"many\") {\n            linkRule.rule = \"contains\";\n         }\n\n         // if linkRule not already IN filter:\n         let isAlreadyThere = false;\n         let keys = Object.keys(linkRule);\n         (filter.rules || []).forEach((r) => {\n            if (isAlreadyThere) return;\n            let allMatch = true;\n            keys.forEach((k) => {\n               if (r[k] != linkRule[k]) {\n                  allMatch = false;\n               }\n            });\n            isAlreadyThere = allMatch;\n         });\n         if (!isAlreadyThere) {\n            // link Rule needs to be ANDed to our current Rules:\n            if (filter.glue == \"and\") {\n               filter.rules.push(linkRule);\n            } else {\n               filter = { glue: \"and\", rules: [filter, linkRule] };\n            }\n         }\n      }\n\n      if ((filter.rules || []).length > 0 && !this.isCursorFollow) {\n         this.__filterDatacollection.setValue(filter);\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`,\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1,\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length,\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0,\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\",\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\",\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\",\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData, skipDatasourceFilter = false) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource && !skipDatasourceFilter)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   updateRelationalDataFromLinkDC(objectId, rowData) {\n      const dcLink = this.datacollectionLink;\n      const cursorLink = dcLink?.getCursor();\n\n      // Add the new data that just relate to the Link DC\n      if (\n         dcLink?.datasource.id == objectId &&\n         cursorLink &&\n         cursorLink.id == rowData?.id\n      ) {\n         const obj = this.datasource;\n         const linkedField = this.fieldLink;\n         let relatedData = rowData[linkedField.fieldLink.relationName()];\n         if (relatedData && !Array.isArray(relatedData))\n            relatedData = [relatedData];\n\n         (relatedData ?? []).forEach((item) => {\n            if (item == null) return;\n\n            if (!this.__dataCollection.exists(item[obj.PK()])) {\n               // QUESTION: Should we .find to get fully info here ?\n               const newItem = this.AB.cloneDeep(item);\n               newItem[linkedField.relationName()] = [rowData];\n               this.__dataCollection.add(newItem);\n            }\n         });\n\n         // trigger to components to know there are updated data.\n         this.emit(\"warnRefresh\");\n      }\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions,\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row),\n                  ),\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row),\n                  ),\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules,\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method eventRemove()\n    * unsubscribe a event.\n    *\n    */\n   eventRemove(eventName) {\n      if (this.__events?.length > 0 && eventName) {\n         this.__events.forEach((e) => {\n            if (eventName == e.eventName)\n               e.emitter.removeListener(e.eventName, e.listener);\n         });\n\n         this.__events = this.__events.filter((e) => e.eventName != eventName);\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID,\n      );\n   }\n\n   get previousCursorId() {\n      return this.__previousCursorId;\n   }\n\n   waitReady() {\n      // if (this.dataStatus == this.dataStatusFlag.initialized) {\n      //    return Promise.resolve();\n      // }\n      // console.log(`DC[${this.label}] waiting for initializedData.`);\n      // return new Promise((resolve /*, reject */) => {\n      //    this.once(\"initializedData\", ()=>{\n      //       resolve();\n      //    })\n\n      // })\n\n      return this.waitForDataCollectionToInitialize(this);\n   }\n};","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABApplicationMobile = require(\"../platform/ABApplicationMobile\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\nconst ABMobileViewFormItem = require(\"../platform/mobile/ABMobileViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectApi,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n         ABMobileViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      // just in case we got here by mistake:\n      if (values.appType == \"mobile\") {\n         return this.applicationMobileNew(values);\n      }\n\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method applicationMobileNew()\n    * Return a new instance of an ABApplicationMobile object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplicationMobile object we are\n    *        creating.\n    * @return {ABApplicationMobile}\n    */\n   applicationMobileNew(values) {\n      return new ABApplicationMobile(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else if (values.isAPI == true) newObj = new ABObjectApi(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessDefinition() {\n      return this.objectByID(\"af91fc75-fb73-4d71-af14-e22832eb5915\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   objectKey() {\n      return this.objectByID(\"d734fe8c-b615-446c-8a5f-793ddece19f9\");\n   }\n\n   objectSecret() {\n      return this.objectByID(\"db5b3b26-5300-4c92-bc73-8ce4f4696992\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      // return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n\n      let active = attributes?.settings?.active ?? \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            // resolve(numberOfRows);\n            return numberOfRows;\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {}, populate: true };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            let entry = responseHash[key];\n            let resolve;\n            if (Array.isArray(entry)) {\n               resolve = entry[0].resolve;\n            } else {\n               resolve = entry.resolve;\n            }\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n\n            // if we didn't get the linked object, just return.\n            if (!objectLink) return;\n\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","const ABObject = require(\"../platform/ABObject\");\nconst ABModelApi = require(\"../platform/ABModelApi\");\n\nmodule.exports = class ABObjectApiCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isAPI = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.readonly = parseInt(attributes.readonly) || 0;\n      this.apiType = attributes.apiType || \"Read\";\n      this.request = attributes.request ?? {};\n      this.request.headers = attributes.request?.headers ?? [];\n      this.response = attributes.response ?? {};\n      this.response.fields = attributes.response?.fields ?? [];\n      this.isFetched = attributes.isFetched ?? false;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isAPI = this.isAPI;\n      result.readonly = this.readonly;\n      result.apiType = this.apiType;\n      result.request = this.request ?? {};\n      result.request.headers = this.request?.headers ?? [];\n      result.response = this.response ?? {};\n      result.response.fields = this.response?.fields ?? [];\n      result.isFetched = this.isFetched;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApi(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/${this.id}/count`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal || this.readonly;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n      // Default defining label\n      else {\n         const defaultFld = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultFld) fields.push(defaultFld.columnName);\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   /**\n    * @method whereCleanUp()\n    * Parse through the current where condition and remove any null or\n    * empty logical blocks.\n    * @param {obj} curr\n    *        1) The current where condition in ABQuery Format:\n    *        {\n    *           glue: [AND, OR],\n    *           rules: [ {rule} ]\n    *        }\n    *        or 2) The current {rule} to validate\n    *        {\n    *          key:{string},\n    *          rule:{string},\n    *          vlaue:{mixed}\n    *        }\n    * @return {ABQuery.where} / { Rule }\n    */\n   whereCleanUp(curr) {\n      if (curr) {\n         if (curr.glue && curr.rules) {\n            // SENTRY Error AB-APPBUILDER-4H\n            // \"curr.rules.forEach is not a function\"\n            // curr.rules is supposed to be an array. If we are not\n            // getting that, then let's send an alert to figure out what\n            // is happening here:\n            if (!Array.isArray(curr.rules)) {\n               // what is this entry?\n               let err = new Error(\n                  `ABObjectCore.whereCleanUP(): Sentry Error: AB-APPBUILDER-4H: current rule is not properly formed: ${JSON.stringify(\n                     curr\n                  )}`\n               );\n               this.AB.notify.developer(err, { curr });\n            }\n\n            // this is a logical Block (AND, OR)\n            // we need to filter the children\n            let newValue = { glue: curr.glue, rules: [] };\n            curr.rules.forEach((r) => {\n               let cleanRule = this.whereCleanUp(r);\n               // don't add values that didn't pass\n               if (cleanRule) {\n                  newValue.rules.push(cleanRule);\n               }\n            });\n\n            // if we have a non empty block, then return it:\n            if (newValue.rules.length > 0) {\n               return newValue;\n            }\n\n            // this isn't really a valid conditional, so null\n            return null;\n         }\n\n         // This is a specific rule, that isn't null so:\n         // if it isn't {}, then return it\n         if (Object.keys(curr).length > 0) return curr;\n\n         // otherwise we skip this as well\n         return null;\n      }\n      return null;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      this.__linkProblems = this.__linkProblems ?? [];\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewOrgChart\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","/*\n * ABViewManagerMobile\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\n[\n   require(\"../platform/mobile/ABMobilePage\"),\n   require(\"../platform/mobile/ABMobileView\"),\n   require(\"../platform/mobile/ABMobileViewForm\"),\n   require(\"../platform/mobile/ABMobileViewFormButton\"),\n   require(\"../platform/mobile/ABMobileViewFormCheckbox\"),\n   require(\"../platform/mobile/ABMobileViewFormConnect\"),\n   require(\"../platform/mobile/ABMobileViewFormDate\"),\n   require(\"../platform/mobile/ABMobileViewFormDatetime\"),\n   require(\"../platform/mobile/ABMobileViewFormEmail\"),\n   require(\"../platform/mobile/ABMobileViewFormFile\"),\n   require(\"../platform/mobile/ABMobileViewFormFormula\"),\n   require(\"../platform/mobile/ABMobileViewFormImage\"),\n   require(\"../platform/mobile/ABMobileViewFormNumber\"),\n   require(\"../platform/mobile/ABMobileViewFormReadonly\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectMultiple\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectSingle\"),\n   require(\"../platform/mobile/ABMobileViewFormTextbox\"),\n   require(\"../platform/mobile/ABMobileViewLabel\"),\n   require(\"../platform/mobile/ABMobileViewList\"),\n].forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"mobile-view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   // pull relation data\n   if (value == null && field.relationName) {\n      const relationName = field.relationName();\n      const pureRelationName = relationName.split(\".\")[1]; // support [BASE_OBJECT.columnName] field name of ABQuery\n      value = rowData[relationName] || rowData[pureRelationName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   const extractVal = (itemData) => {\n      let val;\n      const relationName = field.relationName();\n      if (itemData[relationName]) {\n         val =\n            (field.indexField\n               ? itemData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? itemData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            itemData[relationName].id ??\n            itemData[relationName];\n      } else {\n         let fieldVal = getFieldVal(itemData, field);\n         if (fieldVal != null) {\n            val = fieldVal;\n         }\n      }\n      return val;\n   };\n\n   if (Array.isArray(rowData)) {\n      connectedVal = rowData.map((data) => extractVal(data));\n   } else if (rowData) {\n      connectedVal = extractVal(rowData);\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         case \"is_current_date\":\n            result =\n               value.setHours(0, 0, 0, 0) == compareValue.setHours(0, 0, 0, 0);\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"checked\":\n            result = value == true || value > 0 || value == \"true\";\n            break;\n         case \"unchecked\":\n            result =\n               value == false ||\n               value <= 0 ||\n               value == \"false\" ||\n               value == null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value || !value?.length) return false;\n      let result = false;\n\n      if (!Array.isArray(value)) value = [value];\n\n      /* eslint-disable no-fallthrough */\n      switch (rule) {\n         case \"is_current_user\":\n            result =\n               value.filter((v) => (v?.username || v) == this.Account.username)\n                  .length > 0;\n            break;\n         case \"is_not_current_user\":\n            result =\n               value.filter((v) => (v?.username || v) != this.Account.username)\n                  .length > 0;\n            break;\n         case \"contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"equals\"\n\n         case \"equals\":\n            result =\n               value.filter((v) => (v?.username || v) == compareValue).length >\n               0;\n            break;\n         case \"not_contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"not_equals\"\n\n         case \"not_equal\":\n            result =\n               value.filter((v) => (v?.username || v) == compareValue).length <\n               1;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      /* eslint-enable no-fallthrough */\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            connectedVal[field.indexField.columnName] ??\n            connectedVal[field.indexField2.columnName] ??\n            connectedVal[field.columnName] ??\n            connectedVal;\n      }\n\n      // Compare value isn't always a string?\n      // https://appdev-designs.sentry.io/issues/5056850389/\n      let compareValueLowercase =\n         typeof compareValue === \"string\"\n            ? compareValue.toLowerCase?.()\n            : compareValue;\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         is_current_date: this.labels.component.isCurrentDateCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         if (condKey == \"is_current_date\") {\n            result.push({\n               id: condKey,\n               value: dateConditions[condKey],\n               batch: \"none\",\n               handler: (a, b) => this.dateValid(a, condKey, b),\n            });\n         } else {\n            result.push({\n               id: condKey,\n               value: dateConditions[condKey],\n               batch: \"datepicker\",\n               handler: (a, b) => this.dateValid(a, condKey, b),\n            });\n         }\n      }\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         checked: this.labels.component.checkedCondition,\n         unchecked: this.labels.component.notCheckedCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"none\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n         \"is_empty\",\n         \"is_not_empty\",\n         \"checked\",\n         \"unchecked\",\n         \"is_current_date\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\" || f.key == \"datetime\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value\n         ? this.AB.rules.toDateFormat(value, {\n              format: \"YYYY-MM-DD\",\n           })\n         : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      let val = myParameter?.[this.columnName];\n      if (val == \"{}\" || val == \"\") {\n         delete myParameter[this.columnName];\n      }\n      if (\"string\" === typeof val) {\n         try {\n            myParameter[this.columnName] = JSON.parse(val);\n         } catch (e) {\n            /* ignore */\n         }\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n         rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      // Integer\n      let result = `${negativeSign}${integerValue}`;\n\n      // Decimal\n      if (decimalStr && options.decimalDelimiter && options.decimalSize) {\n         const decimalVal = data.toFixed(options.decimalSize).split(\".\")[1];\n         result += `${options.decimalDelimiter}${decimalVal}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data?.[this.columnName]?.length > MAX_CHAR_LENGTH) {\n         const L = this.AB.Label();\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/*\n * ABMobilePageCore\n *\n * An view that represents a \"Page\" on the Mobile Device.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABMobilePageDefaults = {\n   key: \"mobile-page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-'  )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\",\n   // {string}\n   // What type of \"Page\" this is: ['page', 'popup', 'reportPage']\n\n   defaultPage: 0,\n   // {bool} 1|0\n   // is this the default page for the Mobile App? If so, this is the initial\n   // Page that is displayed when the App is loaded.\n   // NOTE: there can be only 1 page defined in the app as .defaultPage\n\n   hideTitle: 0,\n   // {bool} 1|0\n   // By default we will display this.label as our Title. Set this to 1 to not\n   // show the tile on the page.\n\n   hideTabs: 0,\n   // {bool} 1|0\n   // By default, pages will show any Tab options on their display.  Set this\n   // to 1 to not show the tab options for this Page. (good for pages that\n   // are linkedPages with forms )\n};\n\nmodule.exports = class ABMobilePageCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMobilePageDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABMobilePage, but has\n      // different implications ... so we default an ABMobilePage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABMobilePageDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABMobilePage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n      obj.route = this.route;\n\n      obj.myAppID = this.myAppID;\n\n      obj.menuType = this.menuType;\n\n      obj.defaultPage = this.defaultPage;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const DV = ABPropertyComponentDefaults;\n\n      this.route =\n         values.route || (this.name || this.label).replaceAll(\" \", \"_\");\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      this.menuType = values.menuType || \"menu\";\n      // {string}  [\"menu\", \"tab\"]\n      // indicates if this Page was added as a Mobile App's \"menu\" or \"Tab\"\n\n      this.defaultPage = values.defaultPage || 0;\n      // {bool}  1|0\n      // indicates if this is the default page that is loaded when the mobile app\n      // is started.\n      // NOTE: only 1 Page in a Mobile App can have this setting = 1.\n\n      this.settings.hideTitle = parseInt(\n         values.settings.hideTitle ?? DV.hideTitle\n      );\n      // {bool} 1|0\n      // By default an ABMobilePage will display it's this.label for a title\n      // on the page.  Setting this to TRUE (1) will hide the title.\n\n      this.settings.hideTabs = parseInt(\n         values.settings.hideTabs ?? DV.hideTabs\n      );\n      // {bool} 1|0\n      // By default, pages will show any Tab options on their display.  Set this\n      // to 1 to not show the tab options for this Page. (good for pages that\n      // are linkedPages with forms )\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`,\n               {\n                  appID: this.application.id,\n                  pageID: this.id,\n                  missingPageID: id,\n               }\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      // this.settings.columns = this.settings.columns || 1;\n      // this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABMobilePage\n            // be sure to remove any of it's ABMobilePage as well\n            // This cleans out any dangling ABDefinitions\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABMobilePage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            // make sure .defaultPage is properly set\n            if (this.defaultPage) {\n               return this.application.setPageDefault(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABMobilePage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABMobilePages for this ABMobilePage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABMobilePages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABMobilePages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // if (this._pages && this._pages.length > 0) {\n         //    result = this._pages.filter(filter);\n\n         //    if (result.length < 1) {\n         //       this._pages.forEach((p) => {\n         //          var subPages = p.pages(filter, deep);\n         //          if (subPages && subPages.length > 0) {\n         //             result = subPages;\n         //          }\n         //       });\n         //    }\n         // }\n         result = this.application._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABMobilePage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABMobilePage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABMobilePage that is tied to this\n    * ABMobilePage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABMobilePage}\n    */\n   pageNew(values) {\n      // make sure this is an ABMobilePage description\n      values.key = ABMobilePageDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABMobilePage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABMobilePage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages((p) => p.id != page.id);\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABMobilePageDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABMobilePage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABMobilePage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABMobileViewDefaults = {\n   key: \"mobile-view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABMobileViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABMobileViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABMobileViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || this.viewKey(),\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         // accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || this.viewKey();\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      // this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label =\n               this.parent.label +\n               \".\" +\n               (this.field?.()?.columnName ?? this.defaults.key);\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   // isAccessibleForRoles(roles) {\n   //    var foundRole = false;\n\n   //    var accessibleRoles = Object.keys(this.accessLevels) || [];\n   //    (roles || []).forEach((r) => {\n   //       if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n   //          foundRole = true;\n   //       }\n   //    });\n\n   //    return foundRole;\n   // }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   // getUserAccess() {\n   //    // by default everyone has no access\n   //    var accessLevel = 0;\n\n   //    if (this.application.isAccessManaged) {\n   //       // check to see if the current users is the access manager\n   //       var isAccessManager = false;\n   //       // first check if manager is defined by their role\n   //       if (parseInt(this.application.accessManagers.useRole) == 1) {\n   //          // if so check if any of the user's role match the managers\n   //          this.AB.Account.roles().forEach((role) => {\n   //             if (\n   //                this.application.accessManagers.role.indexOf(\n   //                   role.id || role.uuid\n   //                ) > -1\n   //             ) {\n   //                // if so set the access level to full access\n   //                isAccessManager = true;\n   //                accessLevel = 2;\n   //             }\n   //          });\n   //       }\n   //       // if the user isn't already set as the manager and the manager is defined by their account\n   //       if (\n   //          !isAccessManager &&\n   //          parseInt(this.application.accessManagers.useAccount) == 1\n   //       ) {\n   //          // check if the user's account matches the managers\n   //          if (\n   //             this.application.accessManagers.account.indexOf(\n   //                this.AB.Account.uuid() + \"\"\n   //             ) > -1\n   //          ) {\n   //             // if so set the access level to full access\n   //             isAccessManager = true;\n   //             accessLevel = 2;\n   //          }\n   //       }\n\n   //       // if the user is not the manager check if the page has access levels defined for roles\n   //       if (\n   //          this.accessLevels &&\n   //          Object.keys(this.accessLevels).length > 0 &&\n   //          !isAccessManager\n   //       ) {\n   //          // check to see if the user's roles matches one of the roles defined\n   //          this.AB.Account.roles().forEach((role) => {\n   //             var currentRole = this.accessLevels[role.id || role.uuid];\n   //             if (currentRole && parseInt(currentRole) > accessLevel)\n   //                // if the access level is higher than a previous role set to the new level\n   //                accessLevel = parseInt(currentRole);\n   //          });\n   //       }\n   //    } else {\n   //       accessLevel = 2;\n   //    }\n\n   //    return accessLevel;\n   // }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"mobile-page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\n               \"mobile-form\",\n               \"grid\",\n               \"line\",\n               \"area\",\n               \"bar\",\n               \"gantt\",\n               \"kanban\",\n            ].indexOf(this.key) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"mobile-form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\n                  \"button\",\n                  \"label\",\n                  \"mobile-page\",\n                  \"tab\",\n                  \"viewcontainer\",\n               ].indexOf(this.key) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `MobileView[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   // updateAccessLevels(roleId, accessLevel) {\n   //    if (parseInt(accessLevel) == 0) {\n   //       if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n   //    } else {\n   //       this.accessLevels[roleId] = accessLevel;\n   //    }\n\n   //    return this.save(false, false);\n   // }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         // result = result.concat(this._views.filter(filter));\n\n         // this._views.forEach((v) => {\n         //    var subViews = v.views(filter, deep);\n         //    if (subViews && subViews.length > 0) {\n         //       result = result.concat(subViews);\n         //    }\n         // });\n         result = this.application._searchDeep(this, \"_views\", filter);\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewByID()\n    *\n    * return the specific View referenced by the given ID.\n    *\n    * @param {uuid} ID\n    *        the {ABMobileView}.id of the child view we are requesting\n    *\n    * @return {ABMobileView || undefined}\n    */\n   viewByID(ID) {\n      return this.views((v) => v.id == ID, true)[0];\n   }\n\n   /**\n    * @method viewNew()\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   // viewDestroy(view) {\n   //    console.error(\"DEPRECIATED: where is this called?\");\n   //    return this.viewRemove(view);\n   // }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // the default widget doesn't.\n      // only those that actually do, should override this.\n      return false;\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"mobile-page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"mobile-button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormButtonCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      Object.keys(ABViewFormButtonPropertyComponentDefaults).forEach((k) => {\n         let val =\n            this.settings[k] ?? ABViewFormButtonPropertyComponentDefaults[k];\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // just ignore the error and save val\n         }\n         this.settings[k] = val;\n      });\n\n      // this.settings.includeSave = JSON.parse(\n      //    this.settings.includeSave ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeSave\n      // );\n      // this.settings.includeCancel = JSON.parse(\n      //    this.settings.includeCancel ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeCancel\n      // );\n      // this.settings.includeReset = JSON.parse(\n      //    this.settings.includeReset ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeReset\n      // );\n\n      // this.settings.isDefault = JSON.parse(\n      //    this.settings.isDefault ||\n      //       ABViewFormButtonPropertyComponentDefaults.isDefault\n      // );\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABMobileViewFormCheckboxDefaults = {\n   key: \"mobile-checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCheckboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormCheckboxPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABMobileViewFormConnectDefaults = {\n   key: \"mobile-connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormConnectCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABMobileViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"mobile-form\", // unique key identifier for this ABMobileViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABMobileViewFormCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"mobile-label\", \"mobile-button\", \"mobile-text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    * return an array of all the ABViewFormField children\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewFormField that this fn\n    *\t       returns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) =>\n               comp instanceof this.AB.Class.ABMobileViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * @method addFieldToForm()\n    * Create a New Form Item on this Form from a given ABFieldXXX object.\n    * @param {ABFieldXXX} field\n    * @param {int} yPosition\n    * @return {ABMobileViewFormXXX}\n    */\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      // TODO: figure out how to decode the Data Field and return a form\n      // element.\n\n      var fieldComponent = field.formComponentMobile();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"mobile-fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCustomCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatepickerDefaults = {\n   key: \"mobile-date\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatepickerCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatetimePropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatetimeDefaults = {\n   key: \"mobile-datetime\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"Date and Time\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatetimeCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatetimeDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatetimeDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatetimePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormEmailPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormEmailDefaults = {\n   key: \"mobile-email\", // {string} unique key for this view\n   icon: \"envelope\", // {string} fa-[icon] reference for this view\n   labelKey: \"Email\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormEmailCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormEmailDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormEmailDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormEmailPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFilePropertyComponentDefaults = {};\n\nconst ABViewFormFileDefaults = {\n   key: \"mobile-file\",\n   // {string} unique key for this view\n   icon: \"file\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"file\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFileCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFilePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFormulaPropertyComponentDefaults = {};\n\nconst ABViewFormFormulaDefaults = {\n   key: \"mobile-formula\",\n   // {string} unique key for this view\n   icon: \"circle-o-notch\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Formula\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFormulaCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFormulaDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFormulaPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormFile = require(\"../../platform/mobile/ABMobileViewFormFile\");\n\nconst ABViewFormImagePropertyComponentDefaults = {};\n\nconst ABViewImageFileDefaults = {\n   key: \"mobile-image\",\n   // {string} unique key for this view\n   icon: \"file-image-o\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Image\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormImageCore extends ABMobileViewFormFile {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewImageFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewImageFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormImagePropertyComponentDefaults;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABMobileViewFormItemCore extends ABMobileView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABMobileViewFormNumberDefaults = {\n   key: \"mobile-numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormNumberCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABMobileViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n};\n","const ABMobileViewFormCustom = require(\"../../platform/mobile/ABMobileViewFormCustom\");\n\nconst ABMobileViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABMobileViewFormReadonlyDefaults = {\n   key: \"mobile-fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormReadonly extends ABMobileViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormReadonlyPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormSelectSingle = require(\"../../platform/mobile/ABMobileViewFormSelectSingle\");\n\nconst ABMobileViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectMultipleDefaults = {\n   key: \"mobile-selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectMultipleCore extends (\n   ABMobileViewFormSelectSingle\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectMultiplePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectSingleDefaults = {\n   key: \"mobile-selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectSingleCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectSinglePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n   placeholder: \"\", // default placeholder text\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"mobile-textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormTextboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   toObj() {\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n\n      return super.toObj();\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewLabelCore extends ABMobileView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.linkPageAdd != \"\";\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.eventDefinitionType] =\n            ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.type] =\n            ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         let error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         let error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               let error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || !data.length)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || !data.length)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      // NOTE: We are pretending our response is a type of ABFieldList. But our\n      // ABField objects no longer allow \".\" in our columnNames:\n      //    ( https://github.com/digi-serve/appbuilder_class_core/blob/212cf5fa1c1d5c959aa246c730582ed50809ee0f/dataFields/ABFieldCore.js#L262 )\n      // But our Process tasks really will be expecting it there so lets put\n      // it back:\n      listField.columnName = `${myID}.userFormResponse`;\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               ///\n               /// Questioning the validity of this section of code.\n               /// In order to get here, we tried to find field, and it\n               /// didn't exist.\n               /// then we turn around and REPEAT the same attempt\n               /// and check for field again.\n               /*\n               // parts[1] should be a field.id\n               object = this.AB.objectByID(this.objectID);\n               field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n               */\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(/* attributes */) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            // This function exists on platform_web but not platform_service\n            this.warningMessage?.(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return null;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      // support uploading template when more than one data source is selected\n      const object = this.datacollections[0].datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   includeDelete: false,\n   deleteLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         (this.settings?.includeSave ?? true) &&\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n      this.settings.includeDelete = JSON.parse(\n         this.settings.includeDelete ||\n            ABViewFormButtonPropertyComponentDefaults.includeDelete\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (this.settings[f] == null)\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewOrgChartPropertyComponentDefaults = {\n   datacollectionID: \"\",\n   fields: \"\",\n   direction: \"t2b\",\n   depth: 99,\n   color: \"#00BCD4\",\n   // visibleLevel: 2,\n   pan: 1,\n   zoom: 1,\n   height: 0,\n   export: 0,\n   exportFilename: \"\",\n};\n\nconst ABViewOrgChartDefaults = {\n   key: \"orgchart\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"OrgChart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewOrgChartCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewOrgChartDefaults\n      );\n   }\n\n   static common() {\n      return ABViewOrgChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewOrgChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.datacollectionID =\n         this.settings.datacollectionID ??\n         ABViewOrgChartPropertyComponentDefaults.datacollectionID;\n\n      this.settings.fields =\n         this.settings.fields ?? ABViewOrgChartPropertyComponentDefaults.fields;\n\n      this.settings.direction =\n         this.settings.direction ??\n         ABViewOrgChartPropertyComponentDefaults.direction;\n\n      this.settings.depth = parseInt(\n         this.settings.depth ?? ABViewOrgChartPropertyComponentDefaults.depth\n      );\n\n      this.settings.color =\n         this.settings.color ?? ABViewOrgChartPropertyComponentDefaults.color;\n\n      this.settings.pan = JSON.parse(\n         this.settings.pan ?? ABViewOrgChartPropertyComponentDefaults.pan\n      );\n\n      this.settings.zoom = JSON.parse(\n         this.settings.zoom ?? ABViewOrgChartPropertyComponentDefaults.zoom\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewOrgChartPropertyComponentDefaults.height\n      );\n\n      this.settings.export = JSON.parse(\n         this.settings.export ?? ABViewOrgChartPropertyComponentDefaults.export\n      );\n\n      this.settings.exportFilename =\n         this.settings.exportFilename ??\n         ABViewOrgChartPropertyComponentDefaults.exportFilename;\n   }\n\n   get datacollection() {\n      const datacollectionID = (this.settings || {}).datacollectionID;\n\n      return this.AB.datacollectionByID(datacollectionID);\n   }\n\n   getValueFields(object) {\n      // OrgChart supports only one parent node.\n      return (\n         object?.connectFields(\n            (f) => f.linkType() == \"many\" && f.linkViaType() == \"one\"\n         ) ?? []\n      );\n   }\n\n   /**\n    * @function valueFields()\n    * Return IDs of connect field for each layer of OrgChart, starting from the top to the bottom.\n    * \n    * @return {Array}\n    * \n    */\n   valueFields() {\n      let fieldValues = (this.settings?.fields ?? \"\").split(\",\");\n      if (!Array.isArray(fieldValues)) fieldValues = [fieldValues];\n\n      const result = [];\n\n      let obj = this.datacollection?.datasource;\n      fieldValues.forEach((fId) => {\n         if (!fId) return;\n\n         const field = obj?.fieldByID?.(fId);\n         if (!field) return;\n\n         result.push(field);\n         obj = field.datasourceLink;\n      });\n\n      return result;\n   }\n\n   // descriptionField() {\n   //    return this.valueField()?.datasourceLink?.fieldByID?.(\n   //       this.settings.columnDescription\n   //    );\n   // }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABViewPage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABViewPage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      // this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === definition.id) {\n               newPages.push(pg.refreshInstance(this));\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         // var currPage = this._pages.find((p) => p.id === definition.id);\n         // if (currPage) {\n         //    this._pages = this._pages.filter((p) => p.id != currPage.id);\n         //    this._pages.push(currPage.refreshInstance());\n         // }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         // \"views\", // <-- these are gathered in \"pages\"\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationMobileCore = require(\"../core/ABApplicationMobileCore.js\");\n\nconst ABViewPageMobile = require(\"./mobile/ABMobilePage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplicationMobile extends (\n   ABApplicationMobileCore\n) {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPageMobile\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPageMobile}\n    */\n   pageNew(values) {\n      const newPage = new ABViewPageMobile(values, this);\n      newPage.parent = this;\n      return newPage;\n   }\n\n   async setPageDefault(page) {\n      if (this.pageDefault != page.id) {\n         let oldPage = this.pageByID(this.pageDefault, true);\n         if (oldPage) {\n            oldPage.defaultPage = 0;\n            await oldPage.save();\n         }\n\n         this.pageDefault = page.id;\n         await this.save();\n      }\n   }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App ?what is this?\n    * @param {string} idBase Identifier for this component\n    * @param {import(\"../ABFactory\").default} AB ABFactory instance\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      this.AB = AB;\n      // Transition Code:\n      // make sure we have an this.AB\n      if (!AB && App?.AB) {\n         this.AB = App.AB;\n      }\n\n      if (!App) {\n         if (this.AB._App) {\n            App = this.AB._App;\n         } else {\n            App = {\n               uuid: this.AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: this.AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: this.AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: this.AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            this.AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!this.AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = this.AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      [\n         \"ab.datacollection.create\",\n         \"ab.datacollection.update\",\n         \"ab.datacollection.stale\",\n         \"ab.datacollection.delete\",\n      ].forEach((key) => {\n         this.AB.on(key, (data) => {\n            this.emit(key, data);\n         });\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (dc.__prevLinkDcCursor != value) {\n               cursorUpdated = true;\n            }\n\n            dc.__prevLinkDcCursor = this?.datacollectionLink?.getCursor()?.id;\n\n            // NOTE: If no cursor of the parent DC, then show empty list\n            if (\n               this.datacollectionLink &&\n               value == null &&\n               dc.__prevLinkDcCursor == null\n            ) {\n               this.clearAll();\n            }\n            // this is the same item that was already bound...don't reload data\n            else if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\">\n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            try {\n               webix.ui(ui).start();\n            } catch (err) {\n               this.AB.notify.developer(err, {\n                  context:\n                     \"ABHint.createUIHint() error calling webix.ui(ui).start()\",\n                  ui,\n               });\n            }\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.delete\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         // let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         // if (key) {\n         //    no_socket_trigger(this, key, data);\n         // }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            .then((newVal) => {})\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         no_socket_trigger(this, \"ab.datacollection.create\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               id,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      }).then((res) => {\n         // properly issue the delete\n         no_socket_trigger(this, \"ab.datacollection.delete\", id);\n         return res;\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         // properly issue the update\n         no_socket_trigger(this, \"ab.datacollection.update\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelAPI\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPI extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond = {}) {\n      cond.isAPI = true;\n      cond.url = this.object?.request?.url;\n\n      return super.findAll(cond);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchCreate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   async create(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.create() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.delete() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.update() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchUpdate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (Object.prototype.hasOwnProperty.call(data, f.columnName))\n            f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd && !skipMigrate) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews?.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         if (!f) return;\n         allWarnings = allWarnings.concat(f?.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         if (!i) return;\n         allWarnings = allWarnings.concat(i?.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f?.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i?.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanValues()\n    * perform a final review of the data a form will try to submit for\n    * this object.  The lets individual fields have a chance to update or\n    * remove values before they are sent.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanValues(rowData) {\n      this.fields().forEach((f) => {\n         f.formCleanData(rowData);\n      });\n   }\n};\n","const atomicjs = require(\"atomicjs\");\nconst ABObjectApiCore = require(\"../core/ABObjectApiCore\");\n\nmodule.exports = class ABObjectApi extends ABObjectApiCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async fetchData(insertDataMax = 20) {\n      if (this.isFetched) return;\n\n      const headers = this.headers;\n\n      const response = await atomicjs(this.request.url, {\n         method: this.request.verb,\n         headers,\n         data: {},\n         timeout: null,\n         withCredentials: false,\n      });\n\n      let parsedResponse = this.dataFromKey(response);\n\n      const model = this.model();\n\n      if (parsedResponse.length == null || parsedResponse.length === 0) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[f.columnName];\n         });\n\n         await model.create(data);\n\n         return;\n      }\n\n      let pendingModelCreate = [];\n\n      for (let i = 0; i < parsedResponse.length; i++) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[i][f.columnName];\n         });\n\n         pendingModelCreate.push(model.create(data));\n\n         if (pendingModelCreate.length % insertDataMax === 0)\n            await Promise.all(pendingModelCreate);\n      }\n\n      if (pendingModelCreate.length > 0) await Promise.all(pendingModelCreate);\n\n      this.isFetched = true;\n\n      await this.save();\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      return await super.save(true);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","const ABViewManagerMobileCore = require(\"../core/ABViewManagerMobileCore\");\n\nmodule.exports = class ABViewManagerMobile extends ABViewManagerMobileCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = cond.value?.split?.(/,|:/) ?? [];\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      if (cond.rule === \"is_current_date\") {\n         let now = new Date();\n         let year = now.getFullYear();\n         let month = now.getMonth();\n         let date = now.getDate();\n\n         let startOfDay = new Date(year, month, date, 0, 0, 0);\n         let endOfDay = new Date(year, month, date, 23, 59, 59);\n\n         // Convert to UTC by subtracting the timezone offset\n         let startOfDayUTC = new Date(\n            startOfDay.getTime() + startOfDay.getTimezoneOffset() * 60000\n         );\n         let endOfDayUTC = new Date(\n            endOfDay.getTime() + endOfDay.getTimezoneOffset() * 60000\n         );\n         let formatDate = (date) => {\n            let isoString = date.toISOString();\n            return `${isoString.slice(0, 10)} ${isoString.slice(11, 19)}`;\n         };\n         cond.value = formatDate(startOfDayUTC).concat(\n            \"|\",\n            formatDate(endOfDayUTC)\n         );\n      } else if (\n         cond.rule === \"in_query_field\" ||\n         cond.rule === \"not_in_query_field\"\n      ) {\n         cond.value =\n            cond.includes?.length == 2 ? cond.includes.join(\":\") : null;\n      } else {\n         cond.value = values\n            .map((v) => {\n               // Convert date format\n               if (field && (field.key === \"date\" || field.key === \"datetime\"))\n                  return field.exportValue(new Date(v));\n               return v;\n            })\n            .join(\",\");\n      }\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nfunction _uiQueryOptionId(fieldId) {\n   return `byQueryField-query-option-${fieldId}`;\n}\n\nfunction _uiFieldOptionId(fieldId) {\n   return `byQueryField-field-option-${fieldId}`;\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n            isCurrentDateCondition: L(\"is current date\"),\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is unchecked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond?.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n               case \"checked\":\n               case \"unchecked\":\n               case \"is_current_date\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      const _this = this;\n      const $filterView = $el.$app.require(\"jet-views\", \"filter\");\n\n      if (!this._fnBaseGetValue)\n         this._fnBaseGetValue = $filterView.prototype.GetValue;\n      $filterView.prototype.GetValue = function () {\n         const rule = _this._fnBaseGetValue.call(this);\n\n         if (\n            rule.condition.type == \"in_query_field\" ||\n            rule.condition.type == \"not_in_query_field\"\n         ) {\n            const queryOptId = _uiQueryOptionId(rule.field);\n            const fieldOptId = _uiFieldOptionId(rule.field);\n            const selectedQueryId = $$(queryOptId)?.getValue();\n            const selectedFieldId = $$(fieldOptId)?.getValue();\n\n            if (selectedQueryId && selectedFieldId) {\n               rule.includes = [selectedQueryId, selectedFieldId];\n            }\n         }\n\n         return rule;\n      };\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $filterView.prototype.CreateFilter = async function (\n         fieldId,\n         type,\n         format,\n         conditions,\n         place\n      ) {\n         let inputs = _this.uiValue(fieldId);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: fieldId,\n            mode: type,\n            template: function (o) {\n               let str = o[fieldId];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // NOTE: Need this to have filter.config.value?.includes value\n         // let data = [];\n         if ($el) {\n            await $el.$app.getService(\"backend\").data(fieldId);\n            // data = await $query.getService(\"backend\").data(fieldId);\n         }\n         // filter.parse(data);\n\n         // Populate options of \"in_query_field\" and \"not_in_query_field\"\n         if (\n            conditions.filter(\n               (cond) =>\n                  cond.id == \"in_query_field\" || cond.id == \"not_in_query_field\"\n            ).length &&\n            filter.config.value?.includes?.length == 2\n         ) {\n            // inputs = _this.uiValue(fieldId, filter.config.value.includes);\n            // filter.define(\"inputs\", inputs);\n            const queryOptId = _uiQueryOptionId(fieldId);\n            const fieldOptId = _uiFieldOptionId(fieldId);\n            const $queryOpt = $$(queryOptId);\n            const $fieldOpt = $$(fieldOptId);\n            const vals = filter.config.value?.includes ?? [];\n            if (vals?.length > 1 && $queryOpt && $fieldOpt) {\n               $queryOpt.setValue(vals[0]);\n               $fieldOpt.setValue(vals[1]);\n               $queryOpt.refresh();\n               $fieldOpt.refresh();\n            }\n         }\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName, defaultValue = null) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiNoneValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"]\n               .concat(this.uiNoneValue())\n               .concat(this.uiContextValue(field));\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field, defaultValue))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field, defaultValue) {\n      // ABQuery Options\n      const qOpts = this.queries(\n         (q) => this._Object == null || q.id != this._Object.id\n      ).map((q) => {\n         return {\n            id: q.id,\n            value: q.label,\n         };\n      });\n\n      const pullFieldOption = (queryId) => {\n         const options = [];\n\n         // Get fields of the query\n         const Query = this.AB.queryByID(queryId);\n         if (Query) {\n            Query.fields((f) => !f.isConnection).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: `${q.object.label}.${q.label}`,\n               });\n            });\n         }\n\n         return options;\n      };\n\n      const refreshFieldOption = ($queryOpt, queryId) => {\n         const options = pullFieldOption(queryId);\n\n         // Update UI\n         if ($queryOpt) {\n            const $queryContainer = $queryOpt.getParentView();\n            const $fieldOption = $queryContainer.getChildViews()[1];\n            $fieldOption?.define(\"options\", options);\n            $fieldOption?.refresh();\n         }\n      };\n\n      let queryId;\n      let fieldId;\n      let fieldOptions = [];\n      if (defaultValue?.length == 2) {\n         queryId = defaultValue[0];\n         fieldId = defaultValue[1];\n\n         fieldOptions = pullFieldOption(queryId);\n      }\n\n      return [\n         {\n            batch: \"queryField\",\n            view: \"form\",\n            borderless: true,\n            padding: 0,\n            elements: [\n               {\n                  id: _uiQueryOptionId(field?.id),\n                  name: \"query\",\n                  view: \"combo\",\n                  placeholder:\n                     this.labels.component.inQueryFieldQueryPlaceholder,\n                  options: qOpts,\n                  value: queryId,\n                  on: {\n                     onChange: function (qVal) {\n                        refreshFieldOption(this, qVal);\n                     },\n                  },\n               },\n               {\n                  id: _uiFieldOptionId(field?.id),\n                  name: \"field\",\n                  view: \"combo\",\n                  placeholder: L(\"Choose a Field\"),\n                  options: fieldOptions,\n                  value: fieldId,\n               },\n            ],\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                           {\n                              value: L(\"is current date\"),\n                              id: \"is_current_date\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n            case \"is_current_date\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection && !skipMigrate) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      try {\n         item.setValue(val);\n      } catch (err) {\n         // this error is fine because we handled it already\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      let FC = {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = FC.common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n      return FC;\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      // default is to just leave data as is.\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   formComponentMobile() {\n      if (this.settings.linkType == \"many\") {\n         return super.formComponent(\"mobile-selectmultiple\");\n      }\n      return super.formComponent(\"mobile-selectsingle\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n\n      if (theEditor) {\n         // PREVENT: repeatly refresh data too often\n         if (theEditor._getOptionsThrottle) {\n            clearTimeout(theEditor._getOptionsThrottle);\n            // NOTE: remove variables that reference the Promise and Resolve to let GC cleans up.\n            // https://dev.to/xnimorz/js-promises-3-garbage-collection-and-memory-leaks-2oi7?fbclid=IwAR1wqgNz2KqchaM7eRkclR6YWHT01eva4y5IWpnaY0in6BrxmTAtpNCnEXM\n            delete theEditor._timeToPullData;\n            delete theEditor._getOptionsResolve;\n         }\n         theEditor._timeToPullData = await new Promise((resolve) => {\n            theEditor._getOptionsResolve = resolve;\n            theEditor._getOptionsThrottle = setTimeout(() => {\n               resolve(true);\n            }, 100);\n         });\n         if (!theEditor._timeToPullData) return;\n      }\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               // if (this?.settings?.linkViaType != \"one\") {\n               //    // We store the .findAll() results locally and return that for a\n               //    // quick response:\n               //    return await this.AB.Storage.get(storageID);\n               // }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      if (!editor) return Promise.resolve([]);\n\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        const filterField = field.object.fieldByID(\n                           value.filterValue.config.dataFieldId\n                        );\n                        let valItem;\n\n                        // When options does not load yet, then pull select value from DC\n                        if (!filterField._options?.length) {\n                           const linkedField =\n                              (form.datacollection.datasource?.fields(\n                                 (f) =>\n                                    f.id == value.value ||\n                                    f.columnName == value.value\n                              ) ?? [])[0];\n\n                           if (linkedField) {\n                              // Get values from DC\n                              const formVals = form.datacollection?.getCursor();\n\n                              valItem =\n                                 formVals[linkedField.relationName()] ??\n                                 formVals[value.value];\n                           }\n                        } else {\n                           valItem = filterField.getItemFromVal(parentValue);\n                        }\n\n                        if (valItem) {\n                           newVal = valItem[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      if (!this.handlerOptionData) {\n         this.handlerOptionData = (data) => {\n            if (theEditor.$destructed) {\n               this.removeListener(\"option.data\", this.handlerOptionData);\n               return;\n            }\n            this.populateOptions(theEditor, data, field, form, true);\n         };\n      }\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", this.handlerOptionData).once(\n         \"option.data\",\n         this.handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let currVal = theEditor.getValue();\n         // in a multiselect environment, the current val can be an encoded string:\n         // \"id1,id2\".  Break this into an array:\n         if (field.linkType() == \"many\" && typeof currVal == \"string\") {\n            currVal = currVal.split(\",\");\n         }\n         if (!Array.isArray(currVal)) {\n            currVal = [currVal];\n         }\n\n         let selectedVals = [];\n         currVal.forEach((cVal) => {\n            // Check exists item\n            const isExists = data.some((d) => d.id == cVal);\n\n            if (isExists) {\n               selectedVals.push(cVal);\n            }\n\n            // if we couldn't find it by it's .id, then check to see\n            // if there is a custom index (.indexField  .indexField2)\n            // that does match.\n            // Select option item from custom index value\n            if (\n               !isExists &&\n               field.isConnection &&\n               (field.indexField || field.indexField2)\n            ) {\n               const selectedItem = data.filter(\n                  (d) =>\n                     d[field.indexField?.columnName ?? \"\"] == cVal ||\n                     d[field.indexField2?.columnName ?? \"\"] == cVal\n               )[0];\n\n               if (selectedItem) selectedVals.push(selectedItem.id);\n            }\n         });\n\n         theEditor.setValue(selectedVals);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      let val = item.getValue();\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (!Array.isArray(val)) {\n            if (val) {\n               val = val.split(\",\");\n               val.forEach((record) => {\n                  // make sure we are returning the .uuid values and\n                  // not full {Record} values.\n                  vals.push(\n                     this.getRelationValue(item.getList().getItem(record), {\n                        forUpdate: true,\n                     })\n                  );\n               });\n            }\n         } else {\n            vals = val;\n         }\n\n         return vals;\n      } else {\n         if (val) {\n            // return just the .uuid and not the full {Record}\n            return this.getRelationValue(item.getList().getItem(val));\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      // try to prevent form flicker:\n      // Only reset the value if the value changes:\n      let currVal = item.getValue();\n      let newVal = Array.isArray(val)\n         ? val\n              .map(\n                 (e) =>\n                    this.getRelationValue(e, { forUpdate: true }) ??\n                    e.id ??\n                    e.uuid ??\n                    e\n              )\n              .join(\",\")\n         : this.getRelationValue(val, { forUpdate: true }) ??\n           val.id ??\n           val.uuid ??\n           val;\n      if (currVal != newVal) {\n         item.setValue(newVal);\n      }\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = this.AB.Account?.language() == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-date\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-date\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-datetime\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-datetime\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-email\",\n            settings: {},\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message:\n                        \"ABFieldFile:onFileUploadError(): Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"ABFieldFile:customEdit(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-file\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            status: (f) => {\n               if (f.percent) {\n                  webixContainer.hideProgress();\n                  webixContainer.showProgress({\n                     type: \"top\",\n                     position: f.percent / 100,\n                  });\n               }\n            },\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: (item) => {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n                  this.uploadInProgress = true;\n                  // Display the image from local file\n                  var reader = new FileReader();\n                  reader.onload = (e) => {\n                     this.showImage(null, node, e.target.result);\n                     webixContainer.showProgress({\n                        type: \"top\",\n                        delay: 2000,\n                     });\n                  };\n                  reader.readAsDataURL(item.file);\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n                  this.uploadInProgress = false;\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this.toObj(),\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this.toObj(),\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this.toObj(),\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-image\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node, url) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${url ?? this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      if (this.uploadInProgress)\n         validator.addError(this.columnName, L(\"Image still uploading\"));\n   }\n\n   rotateLeft(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=left`,\n      });\n   }\n\n   rotateRight(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=right`,\n      });\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      if (item) {\n         item.config.value = rowData[this.columnName];\n      }\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // \"\" isn't a valid json value, so just remove the data and\n         // let the DB handle the default value.\n         delete rowData[this.columnName];\n      }\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message:\n                        \"ABFieldList:customDisplay(): Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple\n               ? \"mobile-selectmultiple\"\n               : \"mobile-selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   // formComponentMobile() {\n   //    // NOTE: what is being returned here needs to mimic an ABView CLASS.\n   //    // primarily the .common() and .newInstance() methods.\n   //    const formComponentSetting = super.formComponent();\n\n   //    // .common() is used to create the display in the list\n   //    formComponentSetting.common = () => {\n   //       return {\n   //          key: \"mobile-textbox\",\n   //          settings: {\n   //             type: \"single\",\n   //          },\n   //       };\n   //    };\n\n   //    return formComponentSetting;\n   // }\n\n   /**\n    * @method formComponentMobile\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message:\n                                    \"ABFieldTree:onItemClick(): Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v?.username ?? v?.uuid ?? v?.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // this means this value isn't set.\n         // can we remove this from the data?\n         delete rowData[this.columnName];\n         super.setValue(item, rowData);\n         return;\n      }\n\n      if (this.linkType() == \"many\") {\n         // val should be an array.\n         if (!Array.isArray(val)) {\n            val = [val];\n         }\n         // if any of those contain \"ab-current-user\" replace it:\n         val = val.map((v) =>\n            v == \"ab-current-user\" ? this.AB.Account.username() : v\n         );\n      } else {\n         // val is a single entry string\n         // Select \"[Current user]\" to update\n         if (val == \"ab-current-user\") val = this.AB.Account.username();\n      }\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n\n   getOptions(...params) {\n      return super.getOptions(...params).then((options) => {\n         // in a ABFieldUser, our options.id elements need to have\n         // the username, not the .uuid:\n         (options || []).forEach((o) => {\n            if (o.username) {\n               o.id = o.username;\n            }\n         });\n\n         return options;\n      });\n   }\n\n   pullRelationValues(row) {\n      let values = super.pullRelationValues(row);\n\n      // remember, our .id == .username\n      if (Array.isArray(values)) {\n         // prevent any null or undefined:\n         values = values.filter((v) => v);\n         values = values.map((v) => {\n            v.id = v.username || v.id;\n            return v;\n         });\n      } else {\n         if (values) {\n            values.id = values.username || values.id;\n         }\n      }\n\n      return values;\n   }\n\n   pullRecordRelationValues(record) {\n      let data = super.pullRecordRelationValues(record);\n      if (Array.isArray(data)) {\n         data = data.map((d) => {\n            d.id = d.username ?? d.id;\n            return d;\n         });\n      } else {\n         data.id = data.username || data.id;\n      }\n\n      return data;\n   }\n};\n","const ABMobilePageCore = require(\"../../core/mobile/ABMobilePageCore\");\n\nmodule.exports = class ABMobilePage extends ABMobilePageCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // check to see if I've been updated, if so, alert my parent:\n      this.__Handler_ABDEF_UPDATED = (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n            this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         }\n      };\n      this.AB.on(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n\n      // check to see if any of my child pages have been updated and\n      // update my defintion of them:\n      this.__Handler_DEF_UPDATED = (page) => {\n         // create a new Field with the updated def\n         var def = this.AB.definitionByID(page.id);\n         if (!def) return;\n\n         var newPage = this.pageNew(def);\n\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === page.id) {\n               newPages.push(newPage);\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         page.off(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      };\n      this.pages().forEach((p) => {\n         p.on(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance(parent) {\n      // create a new Field with the updated def\n      var def = this.AB.definitionByID(this.id);\n      if (!def) return;\n\n      var newPage = (parent ?? this.parent)?.pageNew(def);\n\n      try {\n         // detatch ourself from other emitters:\n         this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         this.pages().forEach((pg) => {\n            pg.removeAllListeners(\"definition.updated\");\n         });\n      } catch (e) {\n         // debugger;\n         console.error(e);\n      }\n\n      return newPage;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let allViews = this.views();\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no widgets\");\n      }\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABMobileViewCore = require(\"../../core/mobile/ABMobileViewCore.js\");\n\nmodule.exports = class ABMobileView extends ABMobileViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"mobile-view\",\n         \"mobile-page\",\n         // \"formpanel\",\n         // \"viewcontainer\",\n         // // not allowed Detail's widgets\n         // \"detailcheckbox\",\n         // \"detailcustom\",\n         // \"detailconnect\",\n         // \"detailimage\",\n         // \"detailselectivity\",\n         // \"detailtext\",\n         // \"detailtree\",\n         // // not allowed Form's widgets\n         // \"button\",\n         // \"checkbox\",\n         // \"connect\",\n         // \"datepicker\",\n         // \"fieldcustom\",\n         // \"textbox\",\n         // \"numberbox\",\n         // \"selectsingle\",\n         // \"selectmultiple\",\n         // \"formtree\",\n         // \"fieldreadonly\",\n         // // not allowed Chart's Widgets\n         // \"pie\",\n         // \"bar\",\n         // \"line\",\n         // \"area\",\n         // // not allowed Report page\n         // \"report\",\n         // \"reportPage\",\n         // \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our sub views\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABMobileViewFormCore = require(\"../../core/mobile/ABMobileViewFormCore\");\n\nconst ABMobileViewFormButton = require(\"./ABMobileViewFormButton\");\n\nmodule.exports = class ABMobileViewForm extends ABMobileViewFormCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method refreshDefaultButton()\n    * On the ABDesigner once a Form Field is added/removed from a form, we want\n    * to make sure the default Form Button is pushed down to the bottom of the\n    * list of form Items.\n    * @param {obj} ids\n    *        The id hash of the webix widgets that show the fields.\n    * @return {ABMobileViewFormButton}\n    */\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABMobileViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABMobileViewFormButton.newInstance(\n            this.application,\n            this\n         );\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.dataviewID) {\n         this.warningsMessage(`does not have a DataCollection assigned.`);\n      } else {\n         let DC = this.datacollection;\n         if (!DC) {\n            this.warningsMessage(\n               `references an unknown DataCollection [${this.settings.dataviewID}].`\n            );\n         }\n      }\n   }\n};\n","const ABMobileViewFormButtonCore = require(\"../../core/mobile/ABMobileViewFormButtonCore\");\n\nmodule.exports = class ABMobileViewFormButton extends (\n   ABMobileViewFormButtonCore\n) {};\n","const ABMobileViewFormCheckboxCore = require(\"../../core/mobile/ABMobileViewFormCheckboxCore\");\n\nmodule.exports = class ABMobileViewFormCheckbox extends (\n   ABMobileViewFormCheckboxCore\n) {};\n","const ABMobileViewFormConnectCore = require(\"../../core/mobile/ABMobileViewFormConnectCore\");\n\n// const ABViewPropertyAddPage =\n//    require(\"./viewProperties/ABViewPropertyAddPage\").default;\n// const ABViewPropertyEditPage =\n//    require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\n// const ABViewFormConnectPropertyComponentDefaults =\n//    ABMobileViewFormConnectCore.defaultValues();\n\n// const ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\n// let FilterComponent = null;\n// let SortComponent = null;\n\nmodule.exports = class ABMobileViewFormConnect extends (\n   ABMobileViewFormConnectCore\n) {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions\n         /* ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n         */\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Does this do anything here?\n      // this.addPageTool.fromSettings(this.settings);\n      // this.editPageTool.fromSettings(this.settings);\n   }\n\n   // static get addPageProperty() {\n   //    return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   // static get editPageProperty() {\n   //    return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n   //    return new ABViewFormConnectComponent(this);\n   // }\n\n   // get addPageTool() {\n   //    if (this.__addPageTool == null)\n   //       this.__addPageTool = new ABViewPropertyAddPage();\n\n   //    return this.__addPageTool;\n   // }\n\n   // get editPageTool() {\n   //    if (this.__editPageTool == null)\n   //       this.__editPageTool = new ABViewPropertyEditPage();\n\n   //    return this.__editPageTool;\n   // }\n};\n","const ABMobileViewFormCustomCore = require(\"../../core/mobile/ABMobileViewFormCustomCore\");\n\nmodule.exports = class ABMobileViewFormCustom extends (\n   ABMobileViewFormCustomCore\n) {};\n","const ABMobileViewFormDateCore = require(\"../../core/mobile/ABMobileViewFormDateCore\");\n\nmodule.exports = class ABMobileViewFormDate extends ABMobileViewFormDateCore {};\n","const ABMobileViewFormDatetimeCore = require(\"../../core/mobile/ABMobileViewFormDatetimeCore\");\n\nmodule.exports = class ABMobileViewFormDatetime extends (\n   ABMobileViewFormDatetimeCore\n) {};\n","const ABMobileViewFormEmailCore = require(\"../../core/mobile/ABMobileViewFormEmailCore\");\n\nmodule.exports = class ABMobileViewFormEmail extends (\n   ABMobileViewFormEmailCore\n) {};\n","const ABMobileViewFormFileCore = require(\"../../core/mobile/ABMobileViewFormFileCore\");\n\nmodule.exports = class ABMobileViewFormFile extends ABMobileViewFormFileCore {};\n","const ABMobileViewFormFormulaCore = require(\"../../core/mobile/ABMobileViewFormFormulaCore\");\n\nmodule.exports = class ABMobileViewFormFormula extends (\n   ABMobileViewFormFormulaCore\n) {};\n","const ABMobileViewFormImageCore = require(\"../../core/mobile/ABMobileViewFormImageCore\");\n\nmodule.exports = class ABMobileViewFormImage extends (\n   ABMobileViewFormImageCore\n) {};\n","const ABMobileViewFormItemCore = require(\"../../core/mobile/ABMobileViewFormItemCore\");\n\nmodule.exports = class ABMobileViewFormItem extends ABMobileViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`FormItem Test Warning.`);\n   // }\n};\n","const ABMobileViewFormNumberCore = require(\"../../core/mobile/ABMobileViewFormNumberCore\");\n\nmodule.exports = class ABMobileViewFormNumber extends (\n   ABMobileViewFormNumberCore\n) {};\n","const ABMobileViewFormReadonlyCore = require(\"../../core/mobile/ABMobileViewFormReadonlyCore\");\n\nmodule.exports = class ABMobileViewFormReadonly extends (\n   ABMobileViewFormReadonlyCore\n) {};\n","const ABMobileViewFormSelectMultipleCore = require(\"../../core/mobile/ABMobileViewFormSelectMultipleCore\");\n\nmodule.exports = class ABMobileViewFormSelectMultiple extends (\n   ABMobileViewFormSelectMultipleCore\n) {};\n","const ABMobileViewFormSelectSingleCore = require(\"../../core/mobile/ABMobileViewFormSelectSingleCore\");\n\nmodule.exports = class ABMobileViewFormSelectSingle extends (\n   ABMobileViewFormSelectSingleCore\n) {};\n","const ABMobileViewFormTextboxCore = require(\"../../core/mobile/ABMobileViewFormTextboxCore\");\n\nmodule.exports = class ABMobileViewFormTextbox extends (\n   ABMobileViewFormTextboxCore\n) {\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`${k} references an unknown Page.`);\n   // }\n};\n","const ABMobileViewLabelCore = require(\"../../core/mobile/ABMobileViewLabelCore\");\n// const ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABMobileViewLabel extends ABMobileViewLabelCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n\n   //    // return new ABViewLabelComponent(this);\n   // }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABMobileViewListCore = require(\"../../core/mobile/ABMobileViewListCore\");\n\nmodule.exports = class ABMobileViewList extends ABMobileViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      [\"linkPageAdd\", \"linkPageDetail\"].forEach((k) => {\n         if (this.settings[k]) {\n            let page = this.application.pageByID(this.settings[k], true);\n            if (!page) {\n               this.warningsMessage(`${k} references an unknown Page.`);\n            }\n         }\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            } else {\n               Filter.setValue(null);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n            dv.on(key, this._handler_doOnShow);\n         });\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n         });\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return `<div class=\"ab-carousel-image-container\">\n            <link rel=\"preload\" href=\"${\n               row.src\n            }\" as=\"image\" fetchpriotity=\"low\"/>\n            <img id=\"${this.ids.component}-${row.id}\" src=\"${\n            row.src\n         }\" class=\"content\" ondragstart=\"return false\" loading=\"lazy\" />\n            ${\n               settings.showLabel\n                  ? `<div class=\"ab-carousel-image-title\">${\n                       row.label || \"\"\n                    }</div>`\n                  : \"\"\n            }\n            <div class=\"ab-carousel-image-icon\">\n            ${\n               settings.detailsPage || settings.detailsTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n                  : \"\"\n            }\n            ${\n               settings.editPage || settings.editTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n                  : \"\"\n            }\n            <span class=\"webix_icon ab-carousel-zoom-in fa fa-search-plus\"></span>\n            <span class=\"webix_icon ab-carousel-zoom-out fa fa-search-minus\"></span>\n                  <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-left fa fa-rotate-left\"></span>\n               <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-right fa fa-rotate-right\"></span>\n               <span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>\n               <span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>\n            </div>\n         </div>`;\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n               imgFile,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = async (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-left\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"left\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-right\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"right\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-in\") > -1\n               ) {\n                  this.zoom(\"in\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-out\") > -1\n               ) {\n                  this.zoom(\"out\");\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n\n   async rotateImage(rowId, imgFile, field, direction = \"right\") {\n      this.busy();\n\n      // call api to rotate\n      if (direction == \"left\") await field.rotateLeft(imgFile);\n      else await field.rotateRight(imgFile);\n\n      // refresh image\n      const imgElm = document.getElementById(`${this.ids.component}-${rowId}`);\n      if (imgElm) {\n         await fetch(imgElm.src, { cache: \"reload\", mode: \"no-cors\" });\n         imgElm.src = `${imgElm.src}#${new Date().getTime()}`;\n      }\n\n      this.ready();\n   }\n\n   zoom(inOrOut = \"in\") {\n      const imgContainer = document.getElementsByClassName(\n         \"ab-carousel-image-container\"\n      )[0];\n      if (!imgContainer) return;\n\n      const imgElem = imgContainer.getElementsByTagName(\"img\")[0];\n      if (!imgElem) return;\n\n      const step = 15;\n      const height = parseInt(\n         (imgElem.style.height || 100).toString().replace(\"%\", \"\")\n      );\n      const newHeight = inOrOut == \"in\" ? height + step : height - step;\n      imgElem.style.height = `${newHeight}%`;\n\n      imgContainer.style.overflow = newHeight > 100 ? \"auto\" : \"\";\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => {\n                                    this.applyConnectFilter(\n                                       $$(this.ids.filter).getList().getItem(id)\n                                    );\n                                 },\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (\n         !this.settings?.dataviewID ||\n         (this.settings?.viewType !== \"advanced\" && !this.settings?.field)\n      )\n         return { height: 1, id: this.ids.component };\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(rowData) {\n      let connectedVal = rowData?.id ?? null;\n\n      if (\n         connectedVal &&\n         this.field.settings?.isCustomFK &&\n         this.field.settings?.isSource\n      ) {\n         connectedVal =\n            (this.field.indexField\n               ? rowData[this.field.indexField.columnName]\n               : null) ?? // custom index\n            (this.field.indexField2\n               ? rowData[this.field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData.id ??\n            rowData;\n      }\n\n      let filterRule = [];\n      if (connectedVal) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectedVal,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      // give the Object a final chance to review the data being handled.\n      obj.formCleanValues(formVals);\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      const validator = object.isValidData(formVals);\n      let isValid = validator.pass();\n\n      // $$($formView).validate();\n      $formView.validate();\n      /**\n       * helper function to fix the webix ui after adding an validation error\n       * message.\n       * @param {string} col - field.columnName\n       */\n      const fixInvalidMessageUI = (col) => {\n         const $forminput = $formView.elements[col];\n         if (!$forminput) return;\n         // Y position\n         const height = $forminput.$height;\n         if (height < 56) {\n            $forminput.define(\"height\", 60);\n            $forminput.resize();\n         }\n\n         // X position\n         const domInvalidMessage = $forminput.$view.getElementsByClassName(\n            \"webix_inp_bottom_label\"\n         )[0];\n         if (!domInvalidMessage?.style[\"margin-left\"]) {\n            domInvalidMessage.style.marginLeft = `${\n               this.settings.labelWidth ??\n               ABViewFormPropertyComponentDefaults.labelWidth\n            }px`;\n         }\n      };\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            fixInvalidMessageUI(f.columnName);\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n               fixInvalidMessageUI(err.name);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // Load data of DCs that use in record rules\n      await this.loadDcDataOfRecordRules();\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         $formView.hideProgress?.();\n         return;\n      }\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(errs, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      await Promise.all(tasks);\n\n      return true;\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n\n   /**\n    * @method deleteData\n    * delete data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async deleteData($formView) {\n      // get ABDatacollection\n      const dc = this.datacollection;\n      if (dc == null) return;\n\n      // get ABObject\n      const obj = dc.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dc.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = $formView.getValues();\n\n      if (formVals?.id) {\n         const result = await model.delete(formVals.id);\n\n         // clear form\n         if (result) {\n            dc.setCursor(null);\n            $formView.clear();\n         }\n\n         return result;\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow =\n         _grid.data.find({ appbuilder_select_item: 1 }).length < 1;\n      const filterRow = (row) =>\n         noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow,\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Update webix.datatable\n                        (updatedRowIds ?? []).forEach((rowId) => {\n                           $datatable.updateItem(rowId, vals);\n                        });\n\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n         this.datacollection?.removeListener(key, this.handler_select);\n      });\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            // onBeforeEditStart: function (/*id*/) {\n            //    // Not sure what this is suposed to check, but this condition\n            //    // will always be false.\n            //    if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            // },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // Check if data loading is complete\n               const oldValue = state.old;\n               let newValue = state.value;\n               if (!Array.isArray(newValue)) newValue = [newValue];\n               if (\n                  oldValue != null &&\n                  oldValue != \"\" &&\n                  // If options does not load completely, then Webix returns state.value as ['', '', '']\n                  newValue.filter((val) => val != null && val != \"\").length <\n                     1 &&\n                  // Check if no data load to the option\n                  editor.getPopup?.().getList?.().data?.find({}).length < 1\n               ) {\n                  return false;\n               }\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1) {\n            // If the confirm popup is showing, then skip to show a new one\n            if (!this._deleteConfirmPopup) {\n               this._deleteConfirmPopup = abWebix.confirm({\n                  title: self.label(\"Delete data\"),\n                  text: self.label(\"Do you want to delete this row?\"),\n                  callback: (result) => {\n                     delete this._deleteConfirmPopup;\n                     if (result) {\n                        const deleteRow = async () => {\n                           try {\n                              const response =\n                                 await CurrentObject.model().delete(id.row);\n\n                              if (response.numRows > 0) {\n                                 $DataTable.remove(id);\n                                 $DataTable.clearSelection();\n                              } else\n                                 abWebix.alert({\n                                    text: self.label(\n                                       \"No rows were effected.  This does not seem right.\"\n                                    ),\n                                 });\n                           } catch (err) {\n                              self.AB.notify.developer(err, {\n                                 context: \"ABViewGridComponent.onItemClick\",\n                                 message: \"Error deleting item\",\n                                 obj: CurrentObject.toObj(),\n                                 id: id.row,\n                              });\n\n                              //// TODO: what do we do here?\n                           }\n                        };\n\n                        deleteRow();\n                     }\n\n                     $DataTable.clearSelection();\n\n                     return true;\n                  },\n               });\n            }\n         } else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n      else super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable?.getItem(editor.row);\n         const CurrentObject = this.datacollection.datasource;\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         //maxlength field\n         const f = CurrentObject.fieldByID(editor.config.fieldID);\n         if (\n            f.settings.maxLength &&\n            state.value.length > f.settings.maxLength\n         ) {\n            this.AB.alert({\n               title: this.label(\"Limit max length\"),\n               text: this.label(\n                  \"You can enter a maximum of \" +\n                     f.settings.maxLength +\n                     \" characters\"\n               ),\n            });\n            $DataTable.addCellCss(item.id, editor.column, \"webix_invalid_cell\");\n            $DataTable.refresh(editor.row);\n            $DataTable.clearSelection();\n            return false;\n         }\n\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: this.handler_select.bind(this),\n            });\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: f.filter.getValue(),\n               values: $DataTable.getSelectedItem[f.columnName],\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) {\n                     newData[\"this_object\"] = data.uuid;\n                     data[\"this_object\"] = data.uuid;\n                  }\n\n                  // use helper funtion to check if valid\n                  // const ruleValid = filter.filters(newData);\n                  const filterComplex = ab.filterComplexNew(\n                     `rule-validate-${key}`\n                  );\n                  filterComplex.fieldsLoad(\n                     CurrentObject.fields(),\n                     CurrentObject\n                  );\n                  const ruleValid = filterComplex.isValid(data, filter.filters);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--) {\n         const col = columnHeaders[i];\n         if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n            lastCol = col;\n            break;\n         }\n      }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      let id = rowData?.id ?? rowData;\n      if (this.__timeout_selectRow) {\n         console.log(\"Duplicate selectRow():\", id);\n         clearTimeout(this.__timeout_selectRow);\n      }\n      this.__timeout_selectRow = setTimeout(() => {\n         const $DataTable = this.getDataTable();\n         if (!$DataTable) return;\n\n         if (!id) $DataTable.unselect();\n         else if ($DataTable.exists(id)) {\n            $DataTable.select(id, false);\n            $DataTable.showItem(id);\n         } else $DataTable.select(null, false);\n\n         this.__timeout_selectRow = null;\n      }, 15);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return (this.AB ?? AB).Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      (this.AB.Webix ?? webix).ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: `sort_${viewIndex + 1}`,\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               this._valueElement(),\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var dirElem = sort_form.getChildViews()[viewIndex].getChildViews()[1];\n         dirElem.setValue?.(dir);\n\n         // [ABFieldList] Sorting following order\n         dirElem.sort?.((a, b) => {\n            return (dir ?? \"\").indexOf(a.id ?? a) >\n               (dir ?? \"\").indexOf(b.id ?? b)\n               ? 1\n               : -1;\n         });\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (!allFields || !allFields.length) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            const dirElem = cView.getChildViews()[1];\n            var dir =\n               dirElem?.getValue?.() ??\n               dirElem?.data?.getRange?.()?.map((opt) => opt.id) ?? // Select list field type\n               \"\";\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      if (chosenField.key == \"list\") {\n         AB.Webix.ui(this._valueListElement(chosenField), sortDir);\n      } else {\n         const valElem = this._valueElement();\n         valElem.options = options;\n         AB.Webix.ui(valElem, sortDir);\n      }\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n\n      const $popup = $$(this.ids.component);\n      $popup?.blockEvent();\n      $popup?.show(view, options);\n      $popup?.unblockEvent();\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            let fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.filter((f) => {\n                  return f.id == fieldId;\n               });\n\n            if (fieldObj.length > 0) {\n               // Add selected field to list\n               selectedFields.push(fieldObj[0]);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach((cView /*, index */) => {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index) return false;\n\n            let fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter((f) => {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter((x) => {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter((x) => {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dirElem = cView.getChildViews()[1];\n            const dir =\n               dirElem?.getValue?.() ??\n               dirElem?.data?.getRange?.()?.map((opt) => opt.id) ?? // Select list field type\n               \"\";\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (field.key == \"list\") {\n               aValue = dir.indexOf(aValue);\n               bValue = dir.indexOf(bValue);\n            }\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\" || field.key == \"list\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n\n   _valueElement() {\n      return {\n         view: \"segmented\",\n         width: 200,\n         options: [\n            {\n               id: \"\",\n               value: L(\"Please select field\"),\n            },\n         ],\n         on: {\n            onChange: (/* newv, oldv */) => {\n               // 'asc' or 'desc' values\n               this.triggerOnChange();\n            },\n         },\n      };\n   }\n\n   _valueListElement(field) {\n      return {\n         view: \"list\",\n         template: \"<div class='webix_drag_handle'></div> #text#\",\n         type: {\n            height: 35,\n         },\n         height: 150,\n         select: true,\n         drag: \"order\",\n         data: field.options(),\n         on: {\n            onChange: () => {\n               this.triggerOnChange();\n            },\n            onAfterDrop: () => {\n               this.triggerOnChange();\n            },\n         },\n      };\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewOrgChartCore = require(\"../../core/views/ABViewOrgChartCore\");\nconst ABViewOrgChartComponent = require(\"./viewComponent/ABViewOrgChartComponent\");\n\nmodule.exports = class ABViewOrgChart extends ABViewOrgChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewOrgChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      // this.refreshData();\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      const whereWidget = this.view.settings?.where;\n      if ((whereWidget?.rules ?? []).length) {\n         where.rules.push(whereWidget);\n      }\n\n      const whereClient = this.clientFilter.getValue();\n      if ((whereClient?.rules ?? []).length) {\n         where.rules.push(whereClient);\n      }\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                     newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"cursorStale\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            // QUESTION: is this a problem if the check !(key in (...)) finds\n            // an event that some OTHER widget has added and not this one?\n            if (\n               dc.datacollectionLink &&\n               !(key in (dc.datacollectionLink._events ?? []))\n            )\n               baseView.eventAdd({\n                  emitter: dc.datacollectionLink,\n                  eventName: key,\n                  listener: () => {\n                     baseView.refreshData();\n                  },\n               });\n         });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (Array.isArray(dc)) {\n         dc.forEach((item) => {\n            if (item.dataStatus === item.dataStatusFlag.notInitial)\n               // load data when a widget is showing\n               item.loadData();\n         });\n      } else {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            dc.loadData();\n      }\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: key,\n               listener: (...p) => this.displayView(...p),\n            });\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.dataview,\n            view: \"dataview\",\n            scroll: \"y\",\n            sizeToContent: true,\n            css: \"borderless transparent\",\n            xCount: this.settings.xCount != 1 ? this.settings.xCount : 0,\n            height: this.settings.height,\n            template: (item) => this.itemTemplate(item),\n            on: {\n               onAfterRender: () => {\n                  this.applyClickEvent();\n                  this.addCyAttribute();\n               },\n            },\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n\n      window.addEventListener(\"resize\", () => {\n         clearTimeout(this._resizeEvent);\n         this._resizeEvent = setTimeout(() => {\n            this.resize($dataView.getParentView());\n            delete this._resizeEvent;\n         }, 20);\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.resize();\n   }\n\n   resize(base_element) {\n      const $dataview = $$(this.ids.dataview);\n      $dataview.resize();\n\n      const item_width = this.getItemWidth(base_element);\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth(base_element) {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = base_element ?? $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      if (parentWidth > window.innerWidth) parentWidth = window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 19 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         id: this.ids.component,\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         [\"changeCursor\", \"cursorStale\", \"collectionEmpty\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: (...p) => this.displayData(...p),\n            });\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node\n         .getElementsByClassName(\"webix_template\")[1]\n         ?.removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SAFE_HTML_TAGS = [\n   \"abbr\",\n   \"acronym\",\n   \"b\",\n   \"blockquote\",\n   \"br\",\n   \"code\",\n   \"div\",\n   \"em\",\n   \"i\",\n   \"li\",\n   \"ol\",\n   \"p\",\n   \"span\",\n   \"strong\",\n   \"table\",\n   \"td\",\n   \"tr\",\n   \"ul\",\n   \"h1\",\n   \"h2\",\n   \"h3\",\n   \"h4\",\n   \"h5\",\n];\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      switch (field?.key) {\n         case \"string\":\n         case \"LongText\": {\n            const strVal = val\n               // Sanitize all of HTML tags\n               .replace(/[<]/gm, \"&lt;\")\n               // Allow safe HTML tags\n               .replace(\n                  new RegExp(`(&lt;(/)?(${SAFE_HTML_TAGS.join(\"|\")}))`, \"gm\"),\n                  \"<$2$3\"\n               );\n\n            $detailItem.setValues({ display: strVal });\n            break;\n         }\n         default:\n            $detailItem.setValues({ display: val });\n            break;\n      }\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\nconst sizeOf = require(\"image-size\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = await this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages(reportValues);\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   async getReportData() {\n      const result = {};\n      const tasks = [];\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            tasks.push(\n               new Promise((resolve, reject) => {\n                  const obj = dc.datasource;\n                  const objModel = obj.model();\n                  const dcCursor = dc.getCursor();\n                  const dcValues = [];\n\n                  // pull the defined sort values\n                  let sorts = dc.settings.objectWorkspace.sortFields || [];\n\n                  // pull filter conditions\n                  let wheres = this.AB.cloneDeep(\n                     dc.settings.objectWorkspace.filterConditions ?? {}\n                  );\n                  // if there is a selected cursor set the filter here\n                  if (dcCursor) {\n                     // if there is a selected cursor set the filter here\n                     wheres = {\n                        glue: \"and\",\n                        rules: [\n                           {\n                              key: obj.PK(),\n                              rule: \"equals\",\n                              value: dcCursor[obj.PK()],\n                           },\n                        ],\n                     };\n                  } else if (dc.__reloadWheres) {\n                     // if we pass new wheres with a reload use them instead\n                     wheres = dc.__reloadWheres;\n                  }\n                  wheres.glue = wheres.glue || \"and\";\n                  wheres.rules = wheres.rules || [];\n\n                  const __additionalWheres = {\n                     glue: \"and\",\n                     rules: [],\n                  };\n\n                  // add the filterCond from user filters if there are rules to add\n                  if (dc?.__filterCond?.rules?.length > 0) {\n                     __additionalWheres.rules.push(dc?.__filterCond);\n                  }\n\n                  // Filter by a selected cursor of a link DC\n                  let linkRule = dc.ruleLinkedData();\n                  if (!dc.settings.loadAll && linkRule) {\n                     __additionalWheres.rules.push(linkRule);\n                  }\n                  // pull data rows following the follow data collection\n                  else if (dc.datacollectionFollow) {\n                     const followCursor = dc.datacollectionFollow.getCursor();\n                     // store the PK as a variable\n                     let PK = dc.datasource.PK();\n                     // if the datacollection we are following is a query\n                     // add \"BASE_OBJECT.\" to the PK so we can select the\n                     // right value to report the cursor change to\n                     if (dc.datacollectionFollow.settings.isQuery) {\n                        PK = \"BASE_OBJECT.\" + PK;\n                     }\n                     if (followCursor) {\n                        wheres = {\n                           glue: \"and\",\n                           rules: [\n                              {\n                                 key: dc.datasource.PK(),\n                                 rule: \"equals\",\n                                 value: followCursor[PK],\n                              },\n                           ],\n                        };\n                     }\n                     // Set no return rows\n                     else {\n                        wheres = {\n                           glue: \"and\",\n                           rules: [\n                              {\n                                 key: this.datasource.PK(),\n                                 rule: \"equals\",\n                                 value: \"NO RESULT ROW\",\n                              },\n                           ],\n                        };\n                     }\n                  }\n\n                  // Combine setting & program filters\n                  if (__additionalWheres.rules.length) {\n                     if (wheres.rules.length) {\n                        __additionalWheres.rules.unshift(wheres);\n                     }\n                     wheres = __additionalWheres;\n                  }\n\n                  // remove any null in the .rules\n                  // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n                  wheres = obj.whereCleanUp(wheres);\n\n                  // Pull data that have full relation values.\n                  // NOTE: When get data from DataCollection, those data is pruned.\n                  objModel\n                     .findAll({\n                        where: wheres || {},\n                        skip: 0,\n                        sort: sorts,\n                        populate: true,\n                     })\n                     .then((dataList) => {\n                        // update property names to column labels to match format names in docx file\n                        const mlFields = obj.multilingualFields();\n\n                        dataList?.data.forEach((data) => {\n                           let resultData;\n\n                           // For support label of columns every languages\n                           obj.fields().forEach((f) => {\n                              const fieldLabels = [];\n\n                              // Query Objects\n                              if (obj instanceof ABObjectQuery) {\n                                 if (typeof f.object.translations === \"string\")\n                                    f.object.translations = JSON.parse(\n                                       f.object.translations\n                                    );\n\n                                 if (typeof f.translations === \"string\")\n                                    f.translations = JSON.parse(f.translations);\n\n                                 (f.object.translations || []).forEach(\n                                    (objTran) => {\n                                       const fieldTran = (\n                                          f.translations || []\n                                       ).filter(\n                                          (fieldTran) =>\n                                             fieldTran.language_code ===\n                                             objTran.language_code\n                                       )[0];\n\n                                       if (!fieldTran) return;\n\n                                       const objectLabel = objTran.label;\n                                       const fieldLabel = fieldTran.label;\n\n                                       // Replace alias with label of object\n                                       fieldLabels.push(\n                                          `${objectLabel}.${fieldLabel}`\n                                       );\n                                    }\n                                 );\n                              }\n                              // Normal Objects\n                              else if (typeof f.translations === \"string\")\n                                 f.translations = JSON.parse(f.translations);\n\n                              f.translations.forEach((tran) => {\n                                 fieldLabels.push(tran.label);\n                              });\n\n                              resultData = Object.assign(\n                                 resultData ?? {},\n                                 this.setReportValues(\n                                    data,\n                                    f,\n                                    fieldLabels,\n                                    mlFields\n                                 ) ?? {}\n                              );\n\n                              // Keep ABObject into .scope of DOCX templater\n                              resultData._object = obj;\n                           });\n\n                           dcValues.push(resultData);\n                        });\n\n                        // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n                        const datacollectionData =\n                           dcValues.length > 1 ? dcValues : dcValues[0];\n\n                        if (\n                           isDcLabelAdded ||\n                           (Array.isArray(datacollectionData) &&\n                              datacollectionData.length > 1)\n                        )\n                           (dc.translations || []).forEach((tran) => {\n                              result[tran.label] = datacollectionData;\n                           });\n                        else Object.assign(result, datacollectionData);\n\n                        resolve();\n                     });\n               })\n            );\n         });\n\n      await Promise.all(tasks);\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[this.AB.rules.toFieldRelationFormat(field.columnName)];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // Sentry Fix: sometimes v is just the uuid\n               // Q: what should we do in this case?\n               if (typeof v == \"string\") return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages(reportValues) {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         if (Array.isArray(data) == false) {\n            data = [data];\n         }\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            // let currCursor = dc.getCursor();\n\n            // if (currCursor) {\n            //    // Current cursor\n            //    const treeCursor = dc.getCursor(true);\n\n            //    currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            // } // List of data\n            // else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, reportValues[dc.label] || [reportValues]);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n               }\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n            }\n            // Find aspect ratio image dimensions\n            try {\n               var img = new Uint8Array(imgBuffer);\n               var image = sizeOf(img);\n               var ratio = Math.min(\n                  defaultVal[0] / image.width,\n                  defaultVal[1] / image.height\n               );\n\n               return [image.width * ratio, image.height * ratio];\n            } catch (err) {\n               // if invalid image, then should return 0, 0 sizes\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // delete button\n      if (settings.includeDelete) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.deleteLabel || this.label(\"Delete\"),\n               css: \"webix_danger\",\n               click: function () {\n                  self.onDelete(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button delete ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC if not set to follow another\n      if (!dc?.isCursorFollow) {\n         dc?.setCursor(null);\n      }\n      // dc?.setStaticCursor(); // unless it should be static\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.view.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            // Catch uncaught error reported in Sentry and add context\n            // APPBUILDER-WEB-1A3(https://appdev-designs.sentry.io/issues/4631880265/)\n            try {\n               saveButton.enable?.();\n            } catch (e) {\n               this.AB.notify.developer(e, {\n                  context:\n                     \"formButton.onSave > catch err > saveButton.enable()\",\n                  buttonID: this?.view?.id,\n                  formID: this?.view?.parent?.id,\n               });\n            }\n         });\n   }\n\n   onDelete(deleteButton) {\n      this.AB.Webix.confirm({\n         title: this.label(\"Delete data\"),\n         text: this.label(\"Do you want to delete this data?\"),\n         callback: async (confirm) => {\n            if (!confirm) return;\n\n            deleteButton.disable?.();\n\n            try {\n               // get form component\n               const form = this.view.parentFormComponent();\n               const $formView = deleteButton.getFormView();\n\n               // delete a record row\n               await form.deleteData($formView);\n            } catch (err) {\n               console.error(err);\n            } finally {\n               deleteButton.enable?.();\n            }\n         },\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n         this.eventAdd({\n            emitter: dc,\n            eventName: key,\n            listener: (rowData) => {\n               const baseView = this.view;\n               const linkViaOneConnection = baseView.fieldComponents(\n                  (comp) => comp instanceof ABViewFormConnect\n               );\n               // clear previous xxx->one selections and add new from\n               // cursor change\n               linkViaOneConnection.forEach((f) => {\n                  const field = f.field();\n                  if (\n                     field?.settings?.linkViaType == \"one\" &&\n                     field?.linkViaOneValues\n                  ) {\n                     delete field.linkViaOneValues;\n                     const relationVals =\n                        rowData?.[field.relationName()] ??\n                        rowData?.[field.columnName];\n                     if (relationVals) {\n                        if (Array.isArray(relationVals)) {\n                           const valArray = [];\n                           relationVals.forEach((v) => {\n                              valArray.push(\n                                 field.getRelationValue(v, { forUpdate: true })\n                              );\n                           });\n                           field.linkViaOneValues = valArray.join(\",\");\n                        } else {\n                           field.linkViaOneValues = field.getRelationValue(\n                              relationVals,\n                              { forUpdate: true }\n                           );\n                        }\n                     }\n                  }\n               });\n\n               this.displayData(rowData);\n            },\n         });\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      // I think this case is currently handled by the DC.[changeCursor, cursorStale]\n      // events:\n      // this.eventAdd({\n      //    emitter: dc,\n      //    eventName: \"ab.datacollection.update\",\n      //    listener: (msg, data) => {\n      //       if (!data?.objectId) return;\n\n      //       const object = dc.datasource;\n\n      //       if (!object) return;\n\n      //       if (\n      //          object.id === data.objectId ||\n      //          object.fields((f) => f.settings.linkObject === data.objectId)\n      //             .length > 0\n      //       ) {\n      //          const currData = dc.getCursor();\n\n      //          if (currData) this.displayData(currData);\n      //       }\n      //    },\n      // });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            this.eventAdd({\n               emitter: linkDv,\n               eventName: key,\n               listener: (rowData) => {\n                  this.displayParentData(rowData);\n               },\n            });\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         // await dc.waitReady();\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      // Load data of DCs that are use in record rules here\n      // no need to wait until they are done. (Let the save button enable)\n      // It will be re-check again when saving.\n      baseView.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      const normalFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormItem &&\n            !(comp instanceof ABViewFormCustom)\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else {\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            field.setValue($$(comp.ids.formItem), rowData);\n         });\n      }\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   get multiselect() {\n      return this.field?.settings.linkType == \"many\";\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = this.multiselect; // field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         if (_ui.labelPosition == \"top\") {\n            _ui.labelPosition = \"left\";\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     view: \"label\",\n                     label: field.label,\n                     // height: 22,\n                     align: \"left\",\n                  },\n                  {\n                     cols: [apcUI, _ui],\n                  },\n               ],\n            };\n         } else {\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: field.label,\n                           width: formSettings.labelWidth,\n                           align: \"left\",\n                        },\n                        apcUI,\n                        _ui,\n                     ],\n                  },\n               ],\n            };\n         }\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      if (this.multiselect) {\n         if (typeof data == \"string\") {\n            data = data.split(\",\");\n         }\n      }\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // Q: if we don't have a $formItem, is any of the rest valid?\n      if ($formItem) {\n         // for xxx->one connections we need to populate again before setting\n         // values because we need to use the selected values to add options\n         // to the UI\n         if (this?.field?.settings?.linkViaType == \"one\") {\n            this.busy();\n            await field.getAndPopulateOptions(\n               $formItem,\n               baseView.options,\n               field,\n               baseView.parentFormComponent()\n            );\n            this.ready();\n         }\n\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      this.busy();\n      try {\n         await field.getAndPopulateOptions(\n            // $node,\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewFormConnectComponent > onShow() error calling field.getAndPopulateOptions\",\n         });\n      }\n      this.ready();\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (typeof field == \"undefined\") {\n         console.warn(\n            `BaseView[${baseView.id}] returned an undefined field()`,\n            baseView.toObj()\n         );\n      }\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field?.label ?? \"\")\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               type: field.settings?.dateFormat === 1 ? \"time\" : \"\",\n               timepicker:\n                  field.key === \"datetime\" && field.settings?.timeFormat !== 1\n                     ? true\n                     : false,\n               editable: true,\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (!window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      // Sentry Fix: caught an error where this.AB was not set, but this.view was...\n      // attempt to catch this situation and post more data:\n      if (!this.AB) {\n         if (this.view.AB) {\n            this.AB = this.view.AB;\n         } else {\n            let errNoAB = new Error(\n               \"ABViewFormDatePicerComponent:getValue(): AB was not set.\"\n            );\n            // sentry logs the console before the error, so dump the offending view here:\n            console.log(\"view:\", JSON.stringify(this.view.toObj()));\n            throw errNoAB;\n         }\n      }\n      const date = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n\n      if (\n         this.AB.Account?._config?.languageCode == \"th\" &&\n         field.settings?.dateFormat !== 1\n      )\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n      this.type =\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (this.type) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   async onShow() {\n      if (this.type !== \"rich\") return;\n      await this.initTinyMCE();\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(this.ids.formItem);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if ($formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n\n   /**\n    * Ensure TinyMCE has been loaded and initialized.\n    */\n   async initTinyMCE() {\n      await this.AB.custom[\"tinymce-editor\"].init();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      let $item;\n      try {\n         $item = $menu.getMenuItem(itemId);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewMenuComponent > onClick error gettint menu / menu item\",\n            itemId,\n            menu: {\n               id: this.view.id,\n               settings: this.view.settings,\n            },\n         });\n         return;\n      }\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewOrgChartComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewOrgChart_${baseView.id}`,\n         Object.assign(\n            {\n               chartView: \"\",\n               chartDom: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"template\",\n            template: `<div id=\"${ids.chartDom}\"></div>`,\n            css: {\n               position: \"relative\",\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $chartView = $$(this.ids.chartView);\n      if ($chartView)\n         this.AB.Webix.extend($chartView, this.AB.Webix.ProgressBar);\n   }\n\n   async loadOrgChartJs() {\n      this.busy();\n\n      const [orgChartLoader] = await Promise.all([\n         import(\n            /* webpackPrefetch: true */\n            \"../../../../js/orgchart-webcomponents.js\"\n         ),\n         import(\n            /* webpackPrefetch: true */\n            \"../../../../styles/orgchart-webcomponents.css\"\n         ),\n      ]);\n\n      this.OrgChart = orgChartLoader.default;\n\n      this.ready();\n   }\n\n   async onShow() {\n      super.onShow();\n\n      this.busy();\n      await this.loadOrgChartJs();\n      await this.pullData();\n      this.displayOrgChart();\n      this.ready();\n   }\n\n   async displayOrgChart() {\n      const baseView = this.view;\n      const chartData = this.AB.cloneDeep(this.chartData);\n\n      const orgchart = new this.OrgChart({\n         data: chartData,\n         direction: baseView.settings.direction,\n         // depth: baseView.settings.depth,\n         pan: baseView.settings.pan,\n         zoom: baseView.settings.zoom,\n         // visibleLevel: baseView.settings.visibleLevel,\n\n         exportButton: baseView.settings.export,\n         exportFilename: baseView.settings.exportFilename,\n\n         // ajaxURLs: {\n         //    children: function (nodeData) {\n         //       console.info(\"nodeData: \", nodeData);\n         //       return null;\n         //    },\n         // },\n         nodeContent: \"description\",\n      });\n\n      const chartDom = document.querySelector(`#${this.ids.chartDom}`);\n      if (chartDom) {\n         chartDom.textContent = \"\";\n         chartDom.innerHTML = \"\";\n         chartDom.appendChild(orgchart);\n      }\n\n      setTimeout(() => {\n         this._setColor();\n      }, 1);\n   }\n\n   async pullData() {\n      const view = this.view;\n      const dc = view.datacollection;\n      const cursor = dc?.getCursor();\n      if (!cursor) return null;\n\n      const valueFields = view.valueFields();\n      // const descriptionField = view.descriptionField?.();\n\n      const chartData = this.chartData;\n      chartData.name = dc?.datasource?.displayData(cursor) ?? \"\";\n      chartData.description = \"\";\n      // description:\n      //    descriptionField?.format?.(f) ??\n      //    f[descriptionField?.columnName] ??\n      //    \"\",\n      chartData._rawData = cursor;\n\n      let parentChartData = [chartData];\n      let currChildren;\n\n      valueFields.forEach((field) => {\n         let _tempParentChartData = [];\n\n         parentChartData.forEach(async (chartItem) => {\n            if (!chartItem) return;\n\n            const rawData = chartItem?._rawData;\n            currChildren = rawData?.[field?.relationName()];\n\n            // Pull data from the server\n            if (!currChildren) {\n               const objLink = field.object;\n               const where = {\n                  glue: \"and\",\n                  rules: [],\n               };\n               where.rules.push({\n                  key: objLink.PK(),\n                  rule: \"equals\",\n                  value: rawData[objLink.PK()],\n               });\n               const returnData = await objLink\n                  .model()\n                  .findAll({ where, populate: true });\n               chartItem._rawData = returnData?.data[0];\n               currChildren = chartItem._rawData?.[field?.relationName()];\n\n               this.displayOrgChart();\n            }\n\n            chartItem.children = [];\n            if (currChildren?.length) {\n               currChildren.forEach((childData) => {\n                  chartItem.children.push({\n                     name: field.datasourceLink.displayData(childData),\n                     description: \"\",\n                     _rawData: childData,\n                  });\n               });\n            }\n\n            _tempParentChartData = _tempParentChartData.concat(\n               chartItem.children\n            );\n         });\n\n         parentChartData = _tempParentChartData;\n      });\n   }\n\n   get chartData() {\n      if (this._chartData == null) {\n         this._chartData = {};\n      }\n      return this._chartData;\n   }\n\n   _setColor() {\n      const view = this.view;\n      let doms = document.querySelectorAll(`org-chart`);\n      doms.forEach((dom) => {\n         dom.style.backgroundImage = \"none\";\n      });\n\n      doms = document.querySelectorAll(`\n         org-chart .verticalNodes>td::before,\n         org-chart .verticalNodes ul>li::before,\n         org-chart .verticalNodes ul>li::after,\n         org-chart .node .content,\n         org-chart tr.lines .topLine,\n         org-chart tr.lines .rightLine,\n         org-chart tr.lines .leftLine`);\n      doms.forEach((dom) => {\n         dom.style.borderColor = view.settings.color;\n      });\n\n      doms = document.querySelectorAll(`\n         org-chart tr.lines .downLine,\n         org-chart .node .title`);\n      doms.forEach((dom) => {\n         dom.style.backgroundColor = view.settings.color;\n      });\n   }\n\n   busy() {\n      const $chartView = $$(this.ids.chartView);\n      $chartView?.disable?.();\n      $chartView?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $chartView = $$(this.ids.chartView);\n      $chartView?.enable?.();\n      $chartView?.hideProgress?.();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   onShow() {\n      this.initPdfjs();\n      super.onShow();\n   }\n\n   /**\n    * Loads the pdfjs dependecies. We defer loading since it is a large library\n    * that is not needed in the initial page load.\n    */\n   async initPdfjs() {\n      if (this.pdfjs && window.pdfjsWorker) return;\n      this.busy();\n      this.pdfjs = (\n         await import(\n            /* webpackPrefetch: true */\n            \"../../../../init/pdfjs\"\n         )\n      ).default;\n      this.ready();\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = $carousel.config.width - 20;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n               onUploadComplete: () => $uploader.destructor(),\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await this.pdfjs.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      // Select all of images by default\n      this.selectAll();\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n/* global pivot */\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n            [\n               pivot.views.table,\n               class CustomTable extends pivot.views.table {\n                  CellFormat(value) {\n                     const decimalPlaces = settings.decimalPlaces ?? 2;\n                     if (!value) value = value === 0 ? \"0\" : \"\";\n                     return value\n                        ? parseFloat(value).toFixed(decimalPlaces)\n                        : value;\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar?.$view?.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    )?.$view?.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId)?.show(false, false);\n            $sidebar?.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\") {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dataview,\n               eventName: key,\n               listener: (...p) => this.displayText(...p),\n            });\n         });\n      }\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) {\n         this.datacollection.once(\"changeCursor\", () => {\n            this.view?.changePage(pageId);\n         });\n         this.datacollection.setCursor(rowId);\n      } else {\n         this.view?.changePage(pageId);\n      }\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.tableName}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.modifyCondition: error:\",\n                  data: options.data,\n               });\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond?.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField =\n                              this.queryObject.application.urlResolve(\n                                 emailFieldUrl\n                              );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery =\n                              this.currentForm.AB.datacollectionByID(dcId);\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         let value = op?.value?.id ?? op?.value;\n\n         switch (value) {\n            case \"ab-current-user\":\n               value = this.currentForm.AB.Account.username();\n               break;\n            case \"ab-current-date\":\n               value = new Date();\n               break;\n         }\n\n         // in the case of a connected Field, we use op.value to get the\n         // datacollection, and find it's currently selected value:\n         if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default: // dataView.getItem(dataView.getCursor());\n                  value = clonedDataCollection.getCursor();\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\": {\n                           let fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                        }\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectID) {\n         this.updateObject = this.currentForm.AB.objectByID(\n            settings.updateObjectID\n         );\n      } else {\n         // DEPRECIATED method of resolving objects .urlResolve()\n         if (settings.updateObjectURL) {\n            var updateObject = this.currentForm.application.urlResolve(\n               settings.updateObjectURL\n            );\n            this.updateObject = updateObject;\n         }\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./formioBuilder\").default,\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./tinyMce\").default,\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function () {\n            return false;\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: Moved from ABDesigner to prevent loading formIO library globally or\n * duplicating it. Revisit when formIOv5 releases as it should then be possible\n * to package the form renderer without the builder.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomFormBuilderBuilder extends ABLazyCustomComponent {\n   get key() {\n      return \"formiobuilder\";\n   }\n\n   constructor(App) {\n      super(App);\n      this.label = this.AB.Label();\n      this.view = this.key;\n   }\n\n   /**\n    * Load the FormIO dependency and add the component to webix\n    * @returns {Promise<null>}\n    */\n   async init() {\n      if (this.initialized) return;\n      const { FormBuilder } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      this.FormBuilder = FormBuilder;\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(this.ui(), this.AB.Webix.ui.popup);\n      this.initialized = true;\n   }\n\n   /**\n    * Generate the custom webix ui\n    * @method ui\n    * @returns {Object} custom webix ui\n    */\n   ui() {\n      return {\n         name: this.key,\n         defaults: {\n            css: \"scrolly forceOpen\",\n            hidden: false,\n            autofit: true,\n         },\n         $init: async function (config) {\n            const comp = this.parseDataFields(config.dataFields);\n            const formComponents = config.formComponents\n               ? config.formComponents\n               : { components: [comp.approveButton.schema] };\n            try {\n               this.builder = new this.FormBuilder(this.$view, formComponents, {\n                  noDefaultSubmitButton: true,\n                  noNewEdit: true,\n                  builder: {\n                     basic: false,\n                     advanced: false,\n                     customBasic: false,\n                     premium: false,\n                     custom: {\n                        title: this.label(\"Fields\"),\n                        weight: 0,\n                        default: true,\n                        components: comp,\n                     },\n                     layout: {\n                        components: {\n                           table: true,\n                        },\n                     },\n                  },\n               });\n               await this.builder.ready;\n            } catch (err) {\n               this.notify(\"Error initializing formio builder\", err);\n            }\n         },\n         // set up a function that can be called to request the form schema\n         getFormData: function () {\n            return this.builder.schema;\n         },\n         // Pass functions into the Webix component to be use in $init\n         label: this.label,\n         parseDataFields: this.parseDataFields,\n         notify: this.AB.notify.developer,\n         FormBuilder: this.FormBuilder,\n      };\n   }\n\n   /**\n    * Generate the formio custom components based on the fields.\n    * Used internally in the webix component.\n    * @method parseDataFields\n    * @param {object[]} fields {field: ABField, key, label, object: ABObject}\n    * @returns {object} each key is a formio component\n    */\n   parseDataFields(fields) {\n      const components = {};\n      fields.forEach(({ field, key, label }) => {\n         if (!field) return;\n\n         const schema = {\n            abFieldID: field.id,\n            label: field.label,\n            disabled: true,\n            key,\n            _key: key,\n            type: \"textfield\",\n            input: true,\n         };\n\n         switch (field.key) {\n            case \"boolean\":\n               schema.type = \"checkbox\";\n               break;\n            case \"calculate\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = ${field.settings.formula\n                  .replace(/{/g, \"data['\")\n                  .replace(/}/g, \"']\")}`;\n               break;\n            case \"connectObject\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = data['${key}.format']`;\n               break;\n            case \"date\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy\";\n               break;\n            case \"datetime\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy h:mm a\";\n               break;\n            case \"email\":\n               schema.type = \"email\";\n               break;\n            case \"file\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"a\";\n               schema.className = \"btn btn-primary btn-block\";\n               schema.content = `<i class='fa fa-paperclip'></i> {{data['${key}']?.filename ?? \"No File\"}}`;\n               schema.attrs = [\n                  {\n                     attr: \"href\",\n                     value: field.urlFile(`{{data['${key}'].uuid}}`),\n                  },\n                  {\n                     attr: \"target\",\n                     value: \"_blank\",\n                  },\n               ];\n               schema.refreshOnChange = true;\n               schema.input = false;\n               break;\n            case \"image\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"img\";\n               schema.className = \"img-thumbnail max100\";\n               schema.content = \"\";\n               (schema.attrs = [\n                  {\n                     attr: \"src\",\n                     value: field.urlImage(`{{data['${key}']}}`),\n                  },\n               ]),\n                  (schema.refreshOnChange = true);\n               schema.input = false;\n               break;\n            case \"list\":\n               var values = [];\n               field.settings.options.forEach((opt) => {\n                  values.push({\n                     label: opt.text,\n                     value: opt.id,\n                  });\n               });\n               schema.type = \"select\";\n               schema.data = { values };\n               schema.multiple = field.settings.isMultiple;\n               break;\n            case \"LongText\":\n               schema.type = \"textarea\";\n               break;\n            case \"number\":\n               schema.type = \"number\";\n               break;\n            case \"TextFormula\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = '${field.settings.textFormula}'`;\n               break;\n            default:\n               break;\n         }\n         components[key] = {\n            title: label,\n            key,\n            icon: field.icon,\n            schema,\n         };\n      });\n\n      components[\"approveButton\"] = {\n         title: this.label(\"Approve Button\"),\n         key: \"approve\",\n         icon: \"check-square\",\n         schema: {\n            label: this.label(\"Approve\"),\n            type: \"button\",\n            key: \"approve\",\n            event: \"approve\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-up\",\n            action: \"event\",\n            theme: \"success\",\n         },\n      };\n      components[\"denyButton\"] = {\n         title: this.label(\"Deny Button\"),\n         key: \"deny\",\n         icon: \"ban\",\n         schema: {\n            label: this.label(\"Deny\"),\n            type: \"button\",\n            key: \"deny\",\n            event: \"deny\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-down\",\n            action: \"event\",\n            theme: \"danger\",\n         },\n      };\n      components[\"customButton\"] = {\n         title: this.label(\"Custom Action Button\"),\n         key: \"custom\",\n         icon: \"cog\",\n         schema: {\n            label: this.label(\"Custom Name\"),\n            type: \"button\",\n            key: \"custom\",\n            event: \"yourEvent\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-cog\",\n            action: \"event\",\n            theme: \"primary\",\n         },\n      };\n      return components;\n   }\n}\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n *\n */\nconst ABLazyCustomComponent = require(\"./lazyComponent.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABLazyCustomComponent {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n      const { Form } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: async function (config) {\n            this.$ready.push(() => this.initForm(config));\n         },\n\n         initForm: async (config) => {\n            var formComponents = config.formComponents ?? {};\n            var formData = config.formData ?? {};\n            const component = $$(config.id);\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  formData[data] = formData[data].map((item) => item.id);\n               }\n            }\n\n            const form = new Form(component.$view, formComponents);\n            // readOnly: true\n            // sanitizeConfig: {\n            //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n            //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n            // }\n            // }).then(function (form) {\n            await form.build();\n            // now that it is set up we can push it into the global var\n            // formBuilder = builder;\n            // Provide a default submission.\n            form.instance.submission = {\n               data: formData,\n            };\n            (formComponents.components || []).forEach((comp) => {\n               if (\n                  comp.type == \"button\" &&\n                  comp.action == \"event\" &&\n                  comp.event\n               ) {\n                  form.instance.once(comp.event, function (/* click */) {\n                     config?.onButton(comp.event);\n                     // _this.emit(\"button\", comp.event);\n                  });\n               }\n            });\n            // });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      this._logic = {};\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(_ui, this.AB.Webix.ui.view);\n      this.initialized = true;\n   }\n};\n","/**\n * Base class for any custom webix component that we want to initalize lazily,\n * usually to reduce the dependency size required on load.\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABLazyCustomComponent extends ABEmitter {\n   constructor({ AB }) {\n      super();\n      this.initialized = false;\n      this.AB = AB;\n      this.setDefaultUI();\n   }\n\n   /**\n    * Sets a default UI used before the actual webix component is ready. Meant as\n    * a helper to future developers.\n    */\n   setDefaultUI() {\n      this.AB.Webix.protoUI(\n         {\n            name: this.key,\n            defaults: {\n               template:\n                  \"This custom webix component has not been initialized. <br>Call AB.custom.#key#.init() before using this component.\",\n               data: { key: this.key },\n            },\n            $init: () =>\n               console.warn(\n                  `${this.key} custom webix component used before being initalized`\n               ),\n         },\n         this.AB.Webix.ui.template\n      );\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\",\n         },\n\n         // override this function to return number value type\n         $getValue: function () {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\",\n         },\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * tinyMce\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomTinyMCE extends ABLazyCustomComponent {\n   get key() {\n      return \"tinymce-editor\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n\n      await import(\n         /* webpackPrefetch: true */\n         \"../js/webix/extras/tinymce.js\"\n      );\n      this.initialized = true;\n   }\n}\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function (obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function () {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function (id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  },\n               },\n            },\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","EventEmitter","constructor","super","this","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","init","AB","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","on","context","err","data","console","error","emit","Promise","canSwitcheroo","r","uuid","length","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","key","fn","filter","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","webix","alert","title","Multilingual","label","text","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","result","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","values","postMissing","arguments","Array","isArray","replace","newKey","slice","postMissingLabel","forEach","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","warn","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","k","l","shift","push","then","catch","toString","indexOf","setTimeout","destroy","save","toObj","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","options","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","type","useThese","search","val","encodeURIComponent","join","_request","put","isNetworkConnected","salSend","packet","_retry","notify","developer","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","socketDataSave","HashSocketJobs","packets","keyBlacklist","ev","io","socket","__length","objectId","obj","objectByID","name","jobID","socketDataLog","blKey","parts","PK","blacklistKey","time","blacklist","model","performance","mark","op","normalizeData","measure","socketLog","socketLogClear","isConnected","route","query","match","http","undefined","toLowerCase","request","jwres","statusCode","errStr","body","Stringify","setMaxListeners","queueLock","_queueCount","cachJobResponse","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","delete","_connectionCheck","isNetworkSlow","_networkSlow","registerNetworkTestWorker","worker","slow","_networkTestWorker","onmessage","setContext","category","level","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","jID","set","release","logError","hasResponded","resCount","resNumber","processRequest","cb","entry","job","res","rej","done","reset","getTokens","tenantStorage","Webix","storage","prefix","local","value","clear","remove","clearAll","_storage","config","encrypted","textClickToEnter","tenantConfig","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthLarge","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","fail","toValidationObject","invalidAttributes","attr","updateForm","form","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","SortPopup","UISettings","validator","errorSailsCleanup","raw","hasFocused","attrs","wasForm","elements","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","refresh","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","isValid","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","allInits","all","_localSettings","json","definitionSync","def","definitionDestroy","definitionUpdate","domain","info","plugins","pluginLoad","p","cloneDeep","rest","emitData","Label","localSettings","isNil","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","appType","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","icon","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","fromValues","ViewManager","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","isWebApp","isMobile","datacollectionsExcluded","datacollections","datacollectionsIncluded","sort","sortFn","a","b","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","f","settings","linkObject","linkedObjects","currObjID","linkedObjectID","linkedFields","columnName","deep","_searchDeep","curr","items","resultsCurr","resultsP","concat","processes","hasProcess","process","views","_views","subViews","lookDeep","view","pageViews","subPages","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","application","ABViewManagerMobile","ABApplication","pageDefault","DefaultValues","object","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","sortFields","loadAll","populate","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","__model","contextKey","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","fieldByID","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","__previousCursorId","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","item","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","force","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","fields","found","currRowId","rowId","count","isCursorFollow","dcFollow","datacollectionFollow","loadData","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","skipDatasourceFilter","isValidData","__reloadWheres","bcids","$$","pos","getParentView","index","DC","addView","L","css","click","event","reloadData","removeView","parseTreeCollection","datasourceLink","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","updateRelationalDataFromLinkDC","incomingObj","iPK","newData","currCursor","needsRefresh","localField","colName","relName","linkType","rval","getRelationValue","newPacket","objectID","field","fieldID","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","updateCursor","ABObject","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDC","eventAdd","emitter","eventName","listener","currentCursor","previousCursorId","isMyDataThere","shouldPopulate","valuesToAdd","valuesIn","valuesToRemove","followDC","followCursor","waitForDataCollectionToInitialize","eventRemove","start","limit","sorts","wheres","__additionalWheres","linkRule","ruleLinkedData","unshift","whereCleanUp","skip","parentDc","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","queuedParse","incomingData","total_count","nextData","remain","splice","parsedData","async","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkDv","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","dataCollectionLink","linkCursorId","__filterDatasource","filterComplexNew","fieldsLoad","setValue","__filterDatacollection","isAlreadyThere","allMatch","__filterScope","scopeList","userScopes","s","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","dcLink","cursorLink","linkedField","relatedData","newItem","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","waitReady","builder","ABApplicationMobile","ABDefinition","ABComponent","ABFieldManager","ABIndex","ABObjectExternal","ABObjectImport","ABObjectApi","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","ABMobileViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","applicationByID","ID","applicationNew","applicationMobileNew","datacollectionNew","fieldNew","newField","indexNew","objectNew","isExternal","isImported","isAPI","objectFile","objectLanguage","objectProcessDefinition","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","objectKey","objectSecret","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","defaults","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","App","idBase","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","Fields","FIELD","allFields","fieldByKey","active","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","unique","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","c","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModelApi","readonly","apiType","isFetched","getPagingValues","pagingSettings","paging","dataFromKey","itemResult","dataKey","header","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","defaultFld","fieldUseAsLabel","displayData","labelData","defaultField","trim","noLabelText","newValue","cleanRule","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","list","param","responses","processedIDs","apply","el","AllViews","Views","default","common","V","viewClass","getFieldVal","pureRelationName","isNaN","_settings","condition","_QueryFields","_Fields","_logic","callbacks","onChange","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","extractVal","itemData","indexField","indexField2","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","setHours","Number","queryId","fieldId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","linkViaType","isSource","fieldsAddFiltersString","opt","isCustomFK","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","component","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","is_current_date","isCurrentDateCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","checked","checkedCondition","unchecked","notCheckedCondition","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","getValue","isComplete","noValueRules","isCompleteRules","returnSingular","columnId","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","menuName","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","getDelimiterSign","delimiterItem","delimiterList","sign","setValueToIndex","displayNumber","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","Math","round","floor","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","convertToJs","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","linkColumn","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldKey","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldIsSortable","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","showIcon","required","width","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","formatList","iL","position","places","n","errMessage","formatSign","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","decimalVal","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","random","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABMobileView","ABMobilePageDefaults","ABPropertyComponentDefaults","defaultPage","hideTitle","hideTabs","myAppID","menuType","DV","missingPageID","allPageDeletes","allPages","pageRemove","pageInsert","setPageDefault","refreshInstance","page","updateIcon","lookUpIds","mapNewIdFn","copy","ABMobileViewDefaults","labelKey","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","newInstance","viewIcon","tabIcon","viewIDs","isRoot","height","x","y","dx","dy","allParents","parents","curView","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","dataviewID","_currentObject","errNoDCID","errNoDC","viewByID","viewRemove","viewInsert","viewReorder","viewId","toPosition","findIndex","allViewDeletes","wantsAdd","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","newName","allSaves","p2","vi","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABMobileViewFormCheckboxPropertyComponentDefaults","ABMobileViewFormCheckboxDefaults","ABMobileViewFormConnectPropertyComponentDefaults","formView","popupWidth","popupHeight","ABMobileViewFormConnectDefaults","ABRecordRule","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","showLabel","labelPosition","labelWidth","clearOnLoad","clearOnSave","displayRules","editForm","recordRules","submitRules","objectLoad","componentList","viewsToAllow","fieldComponents","flattenComponents","components","comp","addFieldToForm","yPosition","fieldComponent","formComponentMobile","RecordRule","_recordRule","formLoad","fromSettings","recordRulesReady","rulesReady","doRecordRulesPre","processPre","doRecordRules","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABMobileViewFormDatepickerPropertyComponentDefaults","timepicker","ABMobileViewFormDatepickerDefaults","ABMobileViewFormDatetimePropertyComponentDefaults","ABMobileViewFormDatetimeDefaults","ABMobileViewFormEmailPropertyComponentDefaults","ABMobileViewFormEmailDefaults","ABViewFormFilePropertyComponentDefaults","ABViewFormFileDefaults","ABViewFormFormulaPropertyComponentDefaults","ABViewFormFormulaDefaults","ABMobileViewFormFile","ABViewFormImagePropertyComponentDefaults","ABViewImageFileDefaults","ABViewFormFieldPropertyComponentDefaults","disable","ABMobileViewFormNumberPropertyComponentDefaults","isStepper","ABMobileViewFormNumberDefaults","ABMobileViewFormCustom","ABMobileViewFormReadonlyPropertyComponentDefaults","ABMobileViewFormReadonlyDefaults","ABMobileViewFormSelectSingle","ABMobileViewFormSelectMultiplePropertyComponentDefaults","ABMobileViewFormSelectMultipleDefaults","ABMobileViewFormSelectSinglePropertyComponentDefaults","ABMobileViewFormSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","placeholder","ABViewFormTextboxDefaults","ABViewLabelPropertyComponentDefaults","ABViewDefaults","formatNormal","formatTitle","formatDescription","ABViewListPropertyComponentDefaults","linkPageAdd","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","elem","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","abFieldID","vals","path","pluck","action","myID","listField","ABProcessTaskUserDefaults","ui","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","ABViewCSVExporterPropertyComponentDefaults","buttonLabel","hasHeader","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","rowDatas","ABViewCarouselPropertyComponentDefaults","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","parseIntOrDefault","_this","parseOrDefault","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","multipleSeries","ABViewChartDefaults","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","columns","gravity","movable","viewsSortByPosition","accessLevels","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","urlView","updateAccessLevels","roleId","viewDestroy","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","ABViewDetailDefaults","addFieldToDetail","detailComponent","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","includeDelete","deleteLabel","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","ABViewFormConnectDefaults","formComponent","ABViewFormDatepickerPropertyComponentDefaults","ABViewFormDatepickerDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","padding","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","columnConfig","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getSubMenu","getMenuItem","submenu","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewOrgChartPropertyComponentDefaults","direction","depth","color","pan","zoom","export","exportFilename","ABViewOrgChartDefaults","getValueFields","valueFields","fieldValues","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","getPageActionKey","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","year","agenda","timelineSectionList","unitList","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","pg","applicationForID","errDepreciated","definitionForID","areaKey","newObj","_listInsert","entity","_listRemove","begLen","datacollectionInsert","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","ids","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","ABApplicationMobileCore","ABViewPageMobile","newPage","oldPage","CustomComponentManager","uid","actions","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","define","cursorUpdated","__prevLinkDcCursor","hideProgressOfComponents","attachFlexlayout","showProgress","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","hideProgress","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","extend","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","display","cookie","hide","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","onPrevious","delay","ABIndexCore","migrateCreate","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","no_socket_trigger","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","batchCreate","once","newVal","loadInto","DT","logs","update","batchUpdate","rowIds","_handler_object_migrate","fromObj","hasOwnProperty","disableRelatedQueries","fieldDrops","skipMigrate","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","node","getItemNode","column","customDisplay","allWarnings","w","isUuid","getDbInfo","formCleanValues","formCleanData","atomicjs","ABObjectApiCore","fetchData","insertDataMax","verb","withCredentials","parsedResponse","pendingModelCreate","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","ABViewManagerMobileCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","now","startOfDay","endOfDay","startOfDayUTC","getTimezoneOffset","endOfDayUTC","formatDate","isoString","_uiQueryOptionId","_uiFieldOptionId","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","rows","borderless","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","enable","$el","$filterView","$app","require","_fnBaseGetValue","GetValue","queryOptId","fieldOptId","selectedQueryId","selectedFieldId","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","getService","$queryOpt","$fieldOpt","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiNoneValue","uiUserValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","uiBooleanValue","onAfterRender","queryView","$view","style","zIndex","isQueryField","u","linkObjectId","qOpts","pullFieldOption","Query","fieldOptions","qVal","$fieldOption","getChildViews","refreshFieldOption","processFieldKey","pField","popUp","show","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFieldList","getFilterUI","isolate","cols","oldVal","selectCombineCondition","suggest","onBeforeShow","resize","$viewCond","selectField","cells","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","autowidth","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","blockOnChange","unblockOnChange","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","ProgressBar","toggleForm","excludeSelected","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","childViews","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","editorValues","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","FC","getSettings","ABFieldAutoIndexCore","editor","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsThrottle","_timeToPullData","_getOptionsResolve","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","clearStorage","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","filterField","dataFieldId","valItem","formVals","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","currVal","selectedVals","cVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","percent","uploadInProgress","showImage","readAsDataURL","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","rotateLeft","imgFile","rotateRight","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onShow","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","linkCol","newLinkDef","setDisplayOptions","ABMobilePageCore","__Handler_ABDEF_UPDATED","__Handler_DEF_UPDATED","removeAllListeners","ABMobileViewCore","viewsToIgnore","ABMobileViewFormCore","ABMobileViewFormButton","refreshDefaultButton","defaultButton","yList","posY","ABMobileViewFormButtonCore","ABMobileViewFormCheckboxCore","ABMobileViewFormConnectCore","__filterComponent","ABMobileViewFormCustomCore","ABMobileViewFormDateCore","ABMobileViewFormDatetimeCore","ABMobileViewFormEmailCore","ABMobileViewFormFileCore","ABMobileViewFormFormulaCore","ABMobileViewFormImageCore","ABMobileViewFormItemCore","ABMobileViewFormNumberCore","ABMobileViewFormReadonlyCore","ABMobileViewFormSelectMultipleCore","ABMobileViewFormSelectSingleCore","ABMobileViewFormTextboxCore","ABMobileViewLabelCore","ABMobileViewListCore","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","onItemClick","modal","fillspace","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","A","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgData","ab","align","abWebix","onclick","getNode","fullscreen","exit","head","rotateImage","showFilterPopup","showPopup","imgElm","getElementById","fetch","cache","inOrOut","imgContainer","imgElem","newHeight","overflow","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","setSettings","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","getFormValues","visibleFields","allVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","fixInvalidMessageUI","$forminput","$height","domInvalidMessage","marginLeft","saveButton","saveData","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","loadDcDataOfRecordRules","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","deleteData","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","addTask","taskAdd","updateTask","taskUpdate","taskRemove","$menu","showItem","CurrentObject","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","old","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","_deleteConfirmPopup","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","by","byValue","gColName","group","localSettingsSave","removeCellCss","maxLength","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getSelectedItem","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","__timeout_selectRow","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","_blockOnChange","uiForm","clickAddNewSort","triggerOnChange","dir","sort_form","viewIndex","listFields","onChangeCombo","_valueElement","refreshFieldList","dirElem","cView","selectedValue","getRange","chosenField","sortDir","_valueListElement","valElem","$popup","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","enableFields","aValue","bValue","drag","onAfterDrop","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewOrgChartCore","ABViewOrgChartComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","whereWidget","whereClient","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","getFilterHelper","rowValue","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectField","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","commentField","CurrentDatacollectionID","uiComponents","eventsClear","waitInitializingDCEvery","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","initDetailComponent","scroll","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","_resizeEvent","base_element","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","SAFE_HTML_TAGS","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","strVal","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","sizeOf","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","Uint8Array","ratio","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onDelete","onCancel","onClear","onSave","cancelButton","noPopupFilter","pageCurr","resetButton","buttonID","formID","deleteButton","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","relationVals","valArray","displayParentData","applicationLoad","formField","nval","oval","fieldValidating","ms","customFields","normalFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","selectedItems","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","errNoAB","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","newv","oldv","setHTML","tagMode","tagTemplate","selectedOptions","menubar","initTinyMCE","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","chartView","chartDom","$chartView","loadOrgChartJs","orgChartLoader","OrgChart","pullData","displayOrgChart","chartData","orgchart","exportButton","nodeContent","_setColor","_rawData","currChildren","parentChartData","_tempParentChartData","chartItem","rawData","objLink","childData","_chartData","doms","borderColor","backgroundColor","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","initPdfjs","pdfjs","pdfjsWorker","_readFileBuffer","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","_toBlob","toBlob","File","_uploadImage","canvasId","showPage","fileBlob","$uploader","onUploadComplete","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","CellFormat","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","getModules","updated","addModule","updateModule","deleteModule","getModels","reportModels","dcID","reportFields","getReportFields","refs","getQueries","moduleID","moduleId","addQuery","moduleData","queryID","updateQuery","queryIndex","deleteQuery","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","matchedVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","getFieldData","MyLocal","Local","_currentModuleID","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","linkDc","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","addCalendar","addEvent","start_date","end_date","all_day","recurring","section","origin_id","calendars","events","sections","removeCalendar","removeEvent","updateCalendar","updateEvent","uiNav","uiNavPopup","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","buttonCancel","buttonSave","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectID","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","types","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","htmlns","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint16Array","Uint32Array","deflateRaw","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","B","F","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","max_length","has_stree","dyn_tree","max_code","stat_desc","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","ABCustomFormBuilderBuilder","FormBuilder","autofit","$init","parseDataFields","dataFields","formComponents","approveButton","schema","noDefaultSubmitButton","noNewEdit","basic","advanced","customBasic","premium","weight","getFormData","_key","inputType","calculateValue","refreshOnChange","block","leftIcon","theme","ABLazyCustomComponent","Form","$ready","initForm","submission","onButton","setDefaultUI","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","ABCustomTinyMCE","eachRow","$count","master"],"sourceRoot":""}