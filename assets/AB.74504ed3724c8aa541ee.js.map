{"version":3,"file":"AB.74504ed3724c8aa541ee.js","mappings":"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BC,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,IACjBC,iBAAkB,IAClBC,kBAAmB,IACnBC,mBAAoB,IACpBC,mBAAoB,EAGpBC,YAAY,GC9Cf,GAEGhC,iBAAkB,GAGlBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,GAGvBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBE,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,EACbC,aAAc,GACdC,YAAa,GACbC,aAAc,GACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,GACxBC,yBAA0B,EAC1BC,yBAA0B,EAC1BC,wBAAyB,EAGzBC,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,IACjBC,iBAAkB,IAClBC,kBAAmB,IACnBE,mBAAoB,EAGpBC,YAAY,GCzCf,GACGpC,OAAQ,WAEL,OAAI3C,OAAOgF,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,QACA,KACA,YACA,OACA,MACA,QACA,UACA,eACA,mBC3uBN,MAAMC,EACHvS,YAAYS,GACTP,KAAKO,GAAKA,EACVP,KAAKsS,OAAS,EACjB,CAEAC,SAASC,EAAM9O,GACZ1D,KAAKsS,OAAOpL,KAAK,CAAEsL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","sources":["webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobilePageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDateCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDatetimeCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFileCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormImageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplicationMobile.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManagerMobile.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobilePage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileView.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDate.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDatetime.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormEmail.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFile.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFormula.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormImage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewList.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioBuilder.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/lazyComponent.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/tinyMce.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-ps\": 68634,\n\t\"./ar-ps.js\": 68634,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 69038,\n\t\"./bs.js\": 69038,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 68131,\n\t\"./es-mx.js\": 68131,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku-kmr\": 36063,\n\t\"./ku-kmr.js\": 36063,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message:\n                                 \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {\n                        /* ignore */\n                     }\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(new Error(packet.message), {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                        status: packet.status,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                        err,\n                        response: err.responseText,\n                        text: err.statusText || err.message,\n                        url: error.url,\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nfunction socketDataSave(key, length) {\n   if (!HashSocketJobs[key]) {\n      HashSocketJobs[key] = {\n         packets: 0,\n         length: 0,\n      };\n   }\n\n   HashSocketJobs[key].packets++;\n   HashSocketJobs[key].length += length;\n}\nfunction socketDataLog(key, data) {\n   let length = \"??\";\n   try {\n      length = JSON.stringify(data).length;\n   } catch (e) {\n      console.log(e);\n      //\n   }\n\n   console.warn(`socket: ${key} (${length})`, data);\n   if (data.jobID) {\n      socketDataSave(data.jobID, length);\n      socketDataSave(`${data.jobID}-${key}`, length);\n   }\n}\n\nlet HashSocketJobs = {\n   /* jobID : { #packets, length } */\n};\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            socketDataLog(ev, data);\n\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        performance.mark(`${ev}:normalization`, {\n                           op: \"function\",\n                           data: { jobID },\n                        });\n                        model.normalizeData(data.data);\n                        performance.measure(`${ev}:normalization`);\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   socketLog() {\n      console.warn(JSON.stringify(HashSocketJobs, null, 4));\n   }\n\n   socketLogClear() {\n      HashSocketJobs = {};\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      let route, query;\n      try {\n         // Extract paramitized route (ex: `/app_builder/model/:ID`) for performance tracking\n         [, route, query] = params.url.match(\n            /https?:\\/\\/[^/]+(\\/[^?]+)\\??(.*)/\n         );\n         route = route.replace(/\\b[a-fA-F\\d-]{36}\\b/g, \":ID\");\n         performance.mark(route, {\n            op: \"websocket.client\",\n            data: {\n               http: {\n                  query: query || undefined,\n                  method: params.method,\n               },\n               url: params.url,\n            },\n         });\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: `salSend() create performance.mark`,\n         });\n      }\n\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  performance.mark(\"JSON.parse\", { op: \"serialize\" });\n                  data = JSON.parse(data);\n                  performance.measure(\"JSON.parse\");\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data?.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  performance.measure(route);\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\n/* global Connection */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * Check whether the network is slow\n    * @returns {Boolean}\n    */\n   isNetworkSlow() {\n      return !!this._networkSlow;\n   }\n\n   /**\n    * Register the network speed test worker\n    * @param {Worker} worker\n    * @param {boolean} slow is the current state slow?\n    */\n   registerNetworkTestWorker(worker, slow) {\n      this._networkTestWorker = worker;\n      this._networkSlow = slow;\n      this._networkTestWorker.onmessage = ({ data }) => {\n         if (this._networkSlow !== data) {\n            this._networkSlow = data;\n            this.emit(\"networkslow\", this._networkSlow);\n            // Tell sentry our network speed changed\n            performance.setContext(\"breadcrumb\", {\n               category: \"network\",\n               message: this._networkSlow\n                  ? \"Slow network detected\"\n                  : \"Network speed restored\",\n               level: \"info\",\n            });\n         }\n      };\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport performance from \"../utils/performance\";\nimport FilterComplex from \"./platform/FilterComplex\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain which group of people we are sending a notification to.\n    * @param {Error} error An error object generated at the point of issue.\n    * @param {json} info Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      performance.notify(domain, error, info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      this.Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest && rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.appType = attributes.appType || \"web\";\n      // {string} .appType\n      // the kind of Application this is. [\"web\", \"mobile\"]\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManager;\n   }\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   get isWebApp() {\n      return this.appType == \"web\";\n   }\n\n   get isMobile() {\n      return this.appType == \"mobile\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         appType: this.appType || \"web\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   ///\n   /// Datacollections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // function searchDeep(curr) {\n         //    let resultsCurr = curr._pages.filter(filter);\n\n         //    for (let p of curr._pages) {\n         //       let resultsP = searchDeep(p);\n         //       if (resultsP.length) {\n         //          resultsCurr = resultsCurr.concat(resultsP);\n         //       }\n         //    }\n         //    // if we get here, end\n         //    return resultsCurr;\n         // }\n\n         // result = searchDeep(this);\n         result = this._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method _searchDeep()\n    * search each node of a tree and return all matches that pass the provided\n    * filter.\n    * @param {AB*} curr\n    *        An object that contains a tree structure.\n    * @param {string} key\n    *        The curr[key] reference of the array of items to search\n    * @param {function} filter\n    *        The curr[key].filter(filter) that returns true/false if a node is\n    *        to be included in the result.\n    * @return {array}\n    */\n   _searchDeep(curr, key, filter) {\n      let items = curr[key] ?? [];\n      let resultsCurr = items.filter?.(filter) ?? [];\n\n      for (let p of items) {\n         let resultsP = this._searchDeep(p, key, filter);\n         if (resultsP.length) {\n            resultsCurr = resultsCurr.concat(resultsP);\n         }\n      }\n\n      return resultsCurr;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return this.ViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   /**\n    * @method version()\n    * return the current version of this Application.\n    * Version information is in format \"{Major}.{Minor}.{patch}\"\n    * @return {string}\n    */\n   get version() {\n      return this.json?.versionData?.versionNumber ?? \"0.0.0\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return this.ViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @param {bool} deep\n    *        should this search deep (through all our children's children)\n    * @return {ABViewPage}\n    */\n   pageByID(id, deep = true) {\n      return this.pages((f) => f.id == id, deep)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.ViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/**\n * ABApplicationMobileCore\n *\n * This is the core ABApplicationMobile class that manages the common operations\n * of a Mobile PWA ABApplication.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManagerMobile = require(\"../platform/ABViewManagerMobile\");\nvar ABApplication = require(\"../platform/ABApplication\");\n\nmodule.exports = class ABApplicationMobileCore extends ABApplication {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.appType = \"mobile\"; // Just making sure.\n      this.networkType = attributes.networkType;\n\n      this.pageDefault = attributes.pageDefault;\n      // {uuid}\n      // the {ABMobilePage}.uuid of the page that is our default Page.\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManagerMobile;\n   }\n\n   pageNew(def) {\n      console.error(\"TODO: pageNew for ApplicationMobile\");\n      return null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var json = super.toObj();\n      json.appType = \"mobile\";\n      json.networkType = this.networkType;\n\n      json.pageDefault = this.pageDefault;\n\n      return json;\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDatacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // this.fieldLink is intended to be the way to connect to the column in\n      // the datacollectionLink that we are following.  However this field\n      // is the field in this.datasource that connects to the field in\n      // datacollectionLink that has the value we are linked to.\n      // So, If this DC(ObjB), and our datacollectionLink (ObjA)\n      // then this.fieldLink = ObjB->FieldB\n      // To find the corresponding field in ObjA, we do:\n      // this.fieldLink.fieldLink  (ObjA->FieldA)\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      let object = this.datasource; // already notified\n\n      return object ? object.model() : null;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // Store the old cursor id\n         this.__previousCursorId = dc.getCursor();\n\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    *\n    *    In cases where a DC has set .loadAll, our job is to filter existing data\n    *    that is already loaded in the internal __dataCollection.\n    *\n    *    Otherwise this is not the place to trigger a data refresh.  We depend\n    *    on other mechanisms (.reloadData(), datacollection .select()) to trigger\n    *    an update.\n    */\n   refreshLinkCursor(force = false) {\n      // our filter conditions need to know there was an updated cursor.\n      // some of our filters are based upon our linked data.\n      this.refreshFilterConditions();\n\n      // NOTE: If DC does not set load all data, then it does not need to filter by the parent DC.\n      // because it fetch data when the cursor of the parent DC changes.\n      if (!this.settings.loadAll && !force) return;\n\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // This row is not loaded yet. It will be loaded when scrolling.\n         if (rowData == null) return true;\n\n         // if link dc cursor is null:\n         // ... if there's no parent show all data\n         // ... if we have a parent hide all data - address cases where user see\n         //     unexpected data (ns_app#318) - should this be a DC setting?\n         if (!linkCursor) return dvLink ? false : true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n\n         // If no data but the parent DC set cursor, then this should be reload data.\n         const dcFollow = this.datacollectionFollow;\n         if (!rowId && dcFollow.getCursor()) {\n            this.loadData();\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         Promise.resolve()\n            .then(() => {\n               return new Promise((next, bad) => {\n                  // Query\n                  if (obj instanceof this.AB.Class.ABObjectQuery) {\n                     let objList =\n                        obj.objects((o) => o.id == data.objectId) || [];\n\n                     needAdd = objList.length > 0;\n\n                     if (!needAdd) return next();\n\n                     let where = {\n                        glue: \"or\",\n                        rules: [],\n                     };\n\n                     objList.forEach((o) => {\n                        let newDataId = data.data[`${o.PK()}`];\n                        if (!newDataId) return;\n\n                        where.rules.push({\n                           key: `${o.alias || obj.objectAlias(o.id)}.${o.PK()}`,\n                           rule: \"equals\",\n                           value: newDataId,\n                        });\n                     });\n\n                     obj.model()\n                        .findAll({\n                           where: where,\n                        })\n                        .then((newQueryData) => {\n                           updatedVals = newQueryData.data || [];\n                           updatedVals.forEach((v) => {\n                              delete v.id;\n                           });\n\n                           next();\n                        })\n                        .catch(bad);\n                  }\n                  // Object\n                  else {\n                     needAdd = obj.id == data.objectId;\n                     updatedVals = [data.data];\n                     next();\n                  }\n               });\n            })\n            .then(() => {\n               if (needAdd) {\n                  // normalize data before add to data collection\n                  // var model = obj.model();\n\n                  // UPDATE: this should already have happened in NetworkRestSocket\n                  // when the initial data is received.\n                  //model.normalizeData(updatedVals);\n\n                  (updatedVals || []).forEach((updatedV) => {\n                     // filter condition before add\n                     if (!this.isValidData(updatedV)) return;\n\n                     // filter the cursor of parent DC\n                     const dcLink = this.datacollectionLink;\n                     if (dcLink && !this.isParentFilterValid(updatedV)) return;\n\n                     // check to see if item already exisits in data collection\n                     // and check to see that we are not loading the data serverside from cursor\n                     if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        !this.__reloadWheres\n                     ) {\n                        this.__dataCollection.add(updatedV, 0);\n                        this.emit(\"create\", updatedV);\n                        // this.__dataCollection.setCursor(rowData.id);\n                     } else if (\n                        !this.__dataCollection.exists(\n                           updatedV[`${obj.PK()}`]\n                        ) &&\n                        this.__reloadWheres\n                     ) {\n                        // debugger;\n                        if (this.isParentFilterValid(updatedV)) {\n                           // we track bound components and flexlayout components\n                           var attachedComponents =\n                              this.__bindComponentIds.concat(\n                                 this.__flexComponentIds\n                              );\n                           attachedComponents.forEach((bcids) => {\n                              // if the reload button already exisits move on\n                              if ($$(bcids + \"_reloadView\")) {\n                                 return false;\n                              }\n\n                              // find the position of the data view\n                              var pos = 0;\n                              var parent = $$(bcids).getParentView();\n                              if ($$(bcids).getParentView().index) {\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .index($$(bcids));\n                              } else if (\n                                 $$(bcids).getParentView().getParentView().index\n                              ) {\n                                 // this is a data view and it is inside a\n                                 // scroll view that is inside an accodion\n                                 // so we need to go deeper to add the button\n                                 parent = $$(bcids)\n                                    .getParentView()\n                                    .getParentView();\n                                 pos = $$(bcids)\n                                    .getParentView()\n                                    .getParentView()\n                                    .index($$(bcids).getParentView());\n                              }\n\n                              // store the datacollection so we can pass it to the button later\n                              var DC = this;\n                              // add a button that reloads the view when clicked\n                              if (parent.addView) {\n                                 var L = this.AB.Label();\n                                 parent.addView(\n                                    {\n                                       id: bcids + \"_reloadView\",\n                                       view: \"button\",\n                                       value: L(\n                                          \"New data available. Click to reload.\"\n                                       ),\n                                       css: \"webix_primary webix_warn\",\n                                       click: function (id, event) {\n                                          DC.reloadData();\n                                          $$(id).getParentView().removeView(id);\n                                       },\n                                    },\n                                    pos\n                                 );\n                              }\n                           });\n                           // this.emit(\"create\", updatedV);\n                        }\n                     }\n                  });\n\n                  if (\n                     this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                  ) {\n                     this.parseTreeCollection({\n                        data: updatedVals,\n                     });\n                  }\n               }\n\n               // ABObject only\n               if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                  // if it is a linked object\n                  let connectedFields = this.datasource.connectFields(\n                     (f) =>\n                        f.datasourceLink && f.datasourceLink.id == data.objectId\n                  );\n\n                  // It should always be only one item for ABObject\n                  updatedVals = updatedVals[0];\n\n                  // update relation data\n                  if (\n                     updatedVals &&\n                     connectedFields &&\n                     connectedFields.length > 0\n                  ) {\n                     // various PK name\n                     let PK = connectedFields[0].object.PK();\n                     if (!updatedVals.id && PK != \"id\")\n                        updatedVals.id = updatedVals[PK];\n\n                     this.__dataCollection.find({}).forEach((d) => {\n                        let updateItemData = {};\n\n                        connectedFields.forEach((f) => {\n                           var updateRelateVal = {};\n                           if (f && f.fieldLink) {\n                              updateRelateVal =\n                                 updatedVals[f.fieldLink.relationName()] || {};\n                           }\n\n                           let rowRelateVal = d[f.relationName()] || {};\n\n                           let valIsRelated = isRelated(\n                              updateRelateVal,\n                              d.id,\n                              PK\n                           );\n\n                           // Relate data\n                           if (\n                              Array.isArray(rowRelateVal) &&\n                              rowRelateVal.filter(\n                                 (v) =>\n                                    v == updatedVals.id ||\n                                    v.id == updatedVals.id ||\n                                    v[PK] == updatedVals.id\n                              ).length < 1 &&\n                              valIsRelated\n                           ) {\n                              rowRelateVal.push(updatedVals);\n\n                              updateItemData[f.relationName()] = rowRelateVal;\n                              updateItemData[f.columnName] = updateItemData[\n                                 f.relationName()\n                              ].map((v) => v.id || v[PK] || v);\n                           } else if (\n                              !Array.isArray(rowRelateVal) &&\n                              (rowRelateVal != updatedVals.id ||\n                                 rowRelateVal.id != updatedVals.id ||\n                                 rowRelateVal[PK] != updatedVals.id) &&\n                              valIsRelated\n                           ) {\n                              updateItemData[f.relationName()] = updatedVals;\n                              updateItemData[f.columnName] =\n                                 updatedVals.id || updatedVals;\n                           }\n                        });\n\n                        // If this item needs to update\n                        if (Object.keys(updateItemData).length > 0) {\n                           // normalize data before add to data collection\n                           var model = obj.model();\n\n                           // UPDATE: this should already have happened in NetworkRestSocket\n                           // when the initial data is received.\n                           // model.normalizeData(updateItemData);\n\n                           this.__dataCollection.updateItem(\n                              d.id,\n                              updateItemData\n                           );\n\n                           if (this.__treeCollection)\n                              this.__treeCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                           this.emit(\n                              \"update\",\n                              this.__dataCollection.getItem(d.id)\n                           );\n                        }\n                     });\n                  }\n               }\n\n               this.updateRelationalDataFromLinkDC(data.objectId, data.data);\n               // filter link data collection's cursor\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            });\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // #Johnny: removing this check.  A DC that is following another cursor\n         // still has a value that might need updating.\n         // DC who is following cursor should update only current cursor.\n         // if (\n         //    this.isCursorFollow &&\n         //    this.getCursor()?.id != (values[obj.PK()] ?? values.id)\n         // ) {\n         //    return;\n         // }\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         //\n         // Case 1: This DC contains the value that was updated\n         // In this case, we want to replace our current entry with\n         // the new one passed in.\n         // EX: This is a DC of Users, and the incoming Entry is a User\n         // that we are already displaying.\n         //\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // only spread around cloned copies because some objects (I'm\n                  // looking at you ABFieldUser) will modify some data for local\n                  // usage.\n                  updatedVals = this.AB.cloneDeep(updatedVals);\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData?.id == updatedVals.id) {\n                     this.emit(\"cursorStale\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  let currData = this.getCursor();\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n\n                     if (currData?.id == id) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         //\n         // Case 2: This DC has entries that CONNECT to the updated value.\n         // We need to make sure our connections, properly reflect the\n         // current state of the incoming data.\n         //\n         // EG: This DC is a list of Roles that connect to User, and an updated\n         // User is passed in.\n\n         let currCursor = this.getCursor();\n         let updateCursor = null;\n\n         // if it is a linked object\n         // look for connected fields that link to the incoming objectId\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields?.length > 0\n         ) {\n            // various PK name\n            // webix datacollections require an .id value, so make sure\n            // this incoming value has an .id set\n            let PK = obj.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     // check to see if we are supposed to be related to this\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // If NO, then make sure we Unrelate data\n                     // if this is an array -> filter out the entry\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           // NOTE: Special case: the incoming value.id will be .uuid\n                           // however in case of User Fields, v.id == username and not .uuid\n                           // so we put our default check to be v[PK] here to play nice\n                           (v) => (v[PK] || v.id || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        // this is not an array so set link to null\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // However, if we are supposed to be related => make sure we are\n                     // If this is an array, then add to list\n                     // AND YES: make sure it is cloned\n                     if (valIsRelated) {\n                        values = this.AB.cloneDeep(values);\n                     }\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           // just update the one entry in my array with the new\n                           // value\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map(\n                           (v) => f.getRelationValue(v) /*v.id || v[PK] || v*/\n                        );\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        // make ConnectedField use .getRelationValue() here!\n                        updateItemData[f.columnName] =\n                           f.getRelationValue(values);\n                     }\n                  });\n\n                  // If this item needs to update\n                  // meaning there is > 1 key in the object (we always have .id)\n                  if (Object.keys(updateItemData).length > 1) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                        if (currCursor?.id == dcItem.id) {\n                           updateCursor = dcItem;\n                        }\n                     }\n                  }\n               });\n            }\n         }\n\n         //\n         // Case 3: Our DC is linked to a DC that was effected by this update.\n         //\n         // We will approach it from another direction, if the current DC made\n         // an update to it's current Cursor, then we will emit a \"cursorStale\"\n         // event, so our linked DCs will update themselves with the new value:\n         if (updateCursor) {\n            this.emit(\"cursorStale\", null);\n         }\n         // this.updateRelationalDataFromLinkDC(data.objectId, values);\n         this.refreshLinkCursor();\n\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData?.[PK] == values[PK]) {\n                        this.emit(\"cursorStale\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData?.[obj.PK()] == delId)\n                  this.emit(\"cursorStale\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      const linkDC = this.datacollectionLink;\n      // if (linkDC && this.settings.loadAll) {\n      if (linkDC) {\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"changeCursor\",\n            listener: (currentCursor) => {\n               // NOTE: we can clear data here to update UI display, then data will be fetched when webix.dataFeed event\n               if (\n                  !this.settings?.loadAll &&\n                  currentCursor?.id != linkDC.previousCursorId\n               )\n                  this.clearAll();\n\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"cursorStale\",\n            listener: (currentCursor) => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               // if don't have .loadAll set,  we'll need to update our data:\n               if (!this.settings?.loadAll) {\n                  // What I do here depends on what my linked DC has set for\n                  // it's .loadConnections (shouldPopulate) value\n                  let dvLink = this.datacollectionLink;\n                  let isMyDataThere = dvLink.shouldPopulate;\n                  if (Array.isArray(isMyDataThere)) {\n                     // if this was an array: it should be an array of columnNames\n                     // of the dvLink that are being populated.\n\n                     // the column I'm interested in:\n                     let colName = this.fieldLink.fieldLink.columnName;\n\n                     // is it there?\n                     isMyDataThere = isMyDataThere.indexOf(colName) > -1;\n                  }\n                  if (!isMyDataThere) {\n                     // If it didn't populate it's data, then I can't be\n                     // efficient about how to update my data.\n                     // we'll just have to reload:\n\n                     // find out how many entries we have already loaded and try to\n                     // load at least that many again.:\n                     let count = 20;\n                     if (this.__dataCollection.count() > count)\n                        count = this.__dataCollection.count();\n                     if (this.__treeCollection?.count() > count)\n                        count = this.__treeCollection.count();\n\n                     let currCursor = this.__dataCollection.getCursor();\n                     this.clearAll();\n                     this.reloadData(0, count).then(() => {\n                        this.__dataCollection.setCursor(currCursor);\n                        this.emit(\"cursorSelect\", currCursor);\n                     });\n                  } else {\n                     // if the linked DC does have my data populated:\n\n                     // the values I currently contain can fall into 1 of 3 categories:\n                     // 1) A value I currently have that I need to Keep\n                     // 2) A value I currently have that I need to remove\n                     // 3) A value I don't have, but need to Add\n\n                     // the current value of the cursor should have the ID references\n                     // to what SHOULD be in my display\n\n                     // get the current cursor of our linked DC\n                     let linkCursor;\n\n                     if (dvLink) {\n                        linkCursor = dvLink.getCursor();\n                     }\n                     if (!linkCursor) {\n                        // if linkCursor is no longer set, then we should clear()\n                        this.clearAll();\n                        return;\n                     }\n\n                     let PK = this.datasource.PK();\n\n                     // lets start by assuming all the current values in cursor are #3\n                     // -> all the values into valuesToAdd:\n\n                     let colName = this.fieldLink.fieldLink.relationName();\n                     let valuesToAdd = {};\n                     let valuesIn = linkCursor[colName] || [];\n                     if (!Array.isArray(valuesIn)) valuesIn = [valuesIn];\n                     valuesIn = valuesIn.filter((v) => v);\n                     valuesIn.forEach((v) => {\n                        valuesToAdd[v[PK]] = v;\n                     });\n\n                     let valuesToRemove = [];\n                     // step through all the values I currently have\n                     let currValues = this.__dataCollection.find(() => true);\n                     currValues.forEach((value) => {\n                        // if value is in valuesToAdd\n                        if (valuesToAdd[value[PK]]) {\n                           // we already have it so turns out we don't need to add\n                           // it after all\n                           delete valuesToAdd[value[PK]];\n                        } else {\n                           // the current state of the Link Cursor value doesn't have\n                           // this value, so we need to remove it:\n                           valuesToRemove.push(value[PK]);\n                        }\n                     });\n\n                     // now remove the items we don't want:\n                     this.__dataCollection.remove(valuesToRemove);\n\n                     // then we have to ask for the values we need to add:\n                     valuesToAdd = Object.keys(valuesToAdd); // convert to []\n                     if (valuesToAdd.length > 0) {\n                        let cond = { where: {} };\n                        cond.where[PK] = valuesToAdd;\n                        // NOTE: we are using the abbreviated condition syntax here.\n\n                        // NOTE: staleRefresh() has some buffering capabilities\n                        // that combine multiple calls into 1 more efficient call:\n                        this.model.staleRefresh(cond).then((res) => {\n                           // check to make sure there is data to work with\n                           if (Array.isArray(res.data) && res.data.length) {\n                              res.data.forEach((d) => {\n                                 this.__dataCollection.add(d);\n                              });\n                           }\n                        });\n                     }\n                  }\n\n                  return;\n               }\n\n               // Otherwise, we need to refilter our data:\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               const followCursor = followDC.getCursor();\n               const currentCursor = this.getCursor();\n\n               // If the cursor is not the new, then it should not reload.\n               if (\n                  followCursor?.[followDC.datasource.PK()] ==\n                  currentCursor?.[this.datasource.PK()]\n               )\n                  return;\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"cursorStale\",\n            listener: () => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   async waitForDataCollectionToInitialize(DC, msg) {\n      DC.init();\n\n      return new Promise((resolve, reject) => {\n         /* eslint-disable no-fallthrough */\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventRemove(\"initializedData\");\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n         /* eslint-enable no-fallthrough */\n      });\n   }\n\n   // /**\n   //  * @method whereCleanUp()\n   //  * Parse through the current where condition and remove any null or\n   //  * empty logical blocks.\n   //  * @param {obj} curr\n   //  *        1) The current where condition in ABQuery Format:\n   //  *        {\n   //  *           glue: [AND, OR],\n   //  *           rules: [ {rule} ]\n   //  *        }\n   //  *        or 2) The current {rule} to validate\n   //  *        {\n   //  *          key:{string},\n   //  *          rule:{string},\n   //  *          vlaue:{mixed}\n   //  *        }\n   //  * @return {ABQuery.where} / { Rule }\n   //  */\n   // whereCleanUp(curr) {\n   //    if (curr) {\n   //       if (curr.glue && curr.rules) {\n   //          // this is a logical Block (AND, OR)\n   //          // we need to filter the children\n   //          let newValue = { glue: curr.glue, rules: [] };\n   //          curr.rules.forEach((r) => {\n   //             let cleanRule = this.whereCleanUp(r);\n   //             // don't add values that didn't pass\n   //             if (cleanRule) {\n   //                newValue.rules.push(cleanRule);\n   //             }\n   //          });\n\n   //          // if we have a non empty block, then return it:\n   //          if (newValue.rules.length > 0) {\n   //             return newValue;\n   //          }\n\n   //          // this isn't really a valid conditional, so null\n   //          return null;\n   //       }\n\n   //       // This is a specific rule, that isn't null so:\n   //       return curr;\n   //    }\n   //    return null;\n   // }\n\n   async loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? {}\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n      wheres.glue = wheres.glue || \"and\";\n      wheres.rules = wheres.rules || [];\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      // add the filterCond if there are rules to add\n      if (this.__filterCond?.rules?.length > 0) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      let linkRule = this.ruleLinkedData();\n      if (!this.settings.loadAll && linkRule) {\n         __additionalWheres.rules.push(linkRule);\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         if (wheres.rules.length) {\n            __additionalWheres.rules.unshift(wheres);\n         }\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n      wheres = obj.whereCleanUp(wheres);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate: this.shouldPopulate,\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      //\n      // Step 1: make sure any DataCollections we are linked to are\n      // initialized first.  Then proceed with our initialization.\n      //\n      const parentDc = this.datacollectionLink ?? this.datacollectionFollow;\n      // If we are linked to another datacollection then wait for it\n      if (parentDc) {\n         await this.waitForDataCollectionToInitialize(parentDc);\n      }\n\n      //\n      // Step 2: if we have any filter rules that depend on other DataCollections,\n      // then wait for them to be initialized first.\n      // eg: \"(not_)in_data_collection\" rule filters\n      if (wheres?.rules?.length) {\n         const dcFilters = [];\n\n         wheres.rules.forEach((rule) => {\n            // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n            if (\n               rule.rule == \"in_data_collection\" ||\n               rule.rule == \"not_in_data_collection\"\n            ) {\n               const dv = this.AB.datacollectionByID(rule.value);\n               if (dv) {\n                  dcFilters.push(this.waitForDataCollectionToInitialize(dv));\n               }\n            }\n         });\n\n         await Promise.all(dcFilters);\n      }\n\n      //\n      // Step 3: pull data to data collection\n      // we will keep track of the resolve, reject for this\n      // operation.\n      // the actual resolve() should happen in the\n      // .processIncomingData() after the  data is processed.\n      return new Promise((resolve, reject) => {\n         this._pendingLoadDataResolve = {\n            resolve: resolve,\n            reject: reject,\n         };\n\n         this.platformFind(model, cond).catch((err) => {\n            reject(err);\n         });\n      });\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method shouldPopulate()\n    * Return our populate status. We now want to query this info outside this\n    * object.\n    * @return {bool|Array}\n    *         true/false,  or an array of columnNames that are being populated.\n    */\n   get shouldPopulate() {\n      return (\n         this.settings.populate ??\n         (this.settings.preventPopulate ? false : true)\n      );\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         let pos = this.__dataCollection.count();\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n            cb?.();\n            resolve();\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               setTimeout(() => {\n                  this.refreshLinkCursor();\n               }, 250);\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method ruleLinkedData()\n    * return a QueryFilter rule that also checks that incoming data is linked\n    * to our .datacollectionLink (if it exists).\n    * @return {obj} {QueryFilterRule}\n    */\n   ruleLinkedData() {\n      let rule = null;\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            rule = {\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            };\n         }\n      }\n      return rule;\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      // if we pass in wheres, then Save that value to our internal .filterConditions\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      let filter = this.AB.cloneDeep(\n         this.settings.objectWorkspace?.filterConditions ?? {\n            glue: \"and\",\n            rules: [],\n         }\n      );\n      // sanity checks:\n      // I've learned not to trust: this.settings.objectWorkspace\n      filter.glue = filter.glue || \"and\";\n      filter.rules = filter.rules || [];\n\n      // if there is a linkRule, add it to filter\n      let linkRule = this.ruleLinkedData(); // returns a rule if we are linked\n      if (linkRule) {\n         // NOTE: linkRule was originally designed to produce a rule for the\n         // loadData() routine.  In SQL, our linkRule might have an \"equals\"\n         // rule, to match.  But in this context if our linktype is \"many\"\n         // we need to change the rule to \"contains\":\n         if (this.fieldLink?.linkType() == \"many\") {\n            linkRule.rule = \"contains\";\n         }\n\n         // if linkRule not already IN filter:\n         let isAlreadyThere = false;\n         let keys = Object.keys(linkRule);\n         (filter.rules || []).forEach((r) => {\n            if (isAlreadyThere) return;\n            let allMatch = true;\n            keys.forEach((k) => {\n               if (r[k] != linkRule[k]) {\n                  allMatch = false;\n               }\n            });\n            isAlreadyThere = allMatch;\n         });\n         if (!isAlreadyThere) {\n            // link Rule needs to be ANDed to our current Rules:\n            if (filter.glue == \"and\") {\n               filter.rules.push(linkRule);\n            } else {\n               filter = { glue: \"and\", rules: [filter, linkRule] };\n            }\n         }\n      }\n\n      if ((filter.rules || []).length > 0 && !this.isCursorFollow) {\n         this.__filterDatacollection.setValue(filter);\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   updateRelationalDataFromLinkDC(objectId, rowData) {\n      const dcLink = this.datacollectionLink;\n      const cursorLink = dcLink?.getCursor();\n\n      // Add the new data that just relate to the Link DC\n      if (\n         dcLink?.datasource.id == objectId &&\n         cursorLink &&\n         cursorLink.id == rowData?.id\n      ) {\n         const obj = this.datasource;\n         const linkedField = this.fieldLink;\n         let relatedData = rowData[linkedField.fieldLink.relationName()];\n         if (relatedData && !Array.isArray(relatedData))\n            relatedData = [relatedData];\n\n         (relatedData ?? []).forEach((item) => {\n            if (item == null) return;\n\n            if (!this.__dataCollection.exists(item[obj.PK()])) {\n               // QUESTION: Should we .find to get fully info here ?\n               const newItem = this.AB.cloneDeep(item);\n               newItem[linkedField.relationName()] = [rowData];\n               this.__dataCollection.add(newItem);\n            }\n         });\n\n         // trigger to components to know there are updated data.\n         this.emit(\"warnRefresh\");\n      }\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method eventRemove()\n    * unsubscribe a event.\n    *\n    */\n   eventRemove(eventName) {\n      if (this.__events?.length > 0 && eventName) {\n         this.__events.forEach((e) => {\n            if (eventName == e.eventName)\n               e.emitter.removeListener(e.eventName, e.listener);\n         });\n\n         this.__events = this.__events.filter((e) => e.eventName != eventName);\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n\n   get previousCursorId() {\n      return this.__previousCursorId;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABApplicationMobile = require(\"../platform/ABApplicationMobile\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\nconst ABMobileViewFormItem = require(\"../platform/mobile/ABMobileViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectApi,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n         ABMobileViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      // just in case we got here by mistake:\n      if (values.appType == \"mobile\") {\n         return this.applicationMobileNew(values);\n      }\n\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method applicationMobileNew()\n    * Return a new instance of an ABApplicationMobile object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplicationMobile object we are\n    *        creating.\n    * @return {ABApplicationMobile}\n    */\n   applicationMobileNew(values) {\n      return new ABApplicationMobile(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else if (values.isAPI == true) newObj = new ABObjectApi(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   objectKey() {\n      return this.objectByID(\"d734fe8c-b615-446c-8a5f-793ddece19f9\");\n   }\n\n   objectSecret() {\n      return this.objectByID(\"db5b3b26-5300-4c92-bc73-8ce4f4696992\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      // return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n\n      let active = attributes?.settings?.active ?? \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            // resolve(numberOfRows);\n            return numberOfRows;\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {} };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            var resolve = responseHash[key].resolve;\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n\n            // if we didn't get the linked object, just return.\n            if (!objectLink) return;\n\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","const ABObject = require(\"../platform/ABObject\");\nconst ABModelApi = require(\"../platform/ABModelApi\");\n\nmodule.exports = class ABObjectApiCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isAPI = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.readonly = parseInt(attributes.readonly) || 0;\n      this.apiType = attributes.apiType || \"Read\";\n      this.request = attributes.request ?? {};\n      this.request.headers = attributes.request?.headers ?? [];\n      this.response = attributes.response ?? {};\n      this.response.fields = attributes.response?.fields ?? [];\n      this.isFetched = attributes.isFetched ?? false;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isAPI = this.isAPI;\n      result.readonly = this.readonly;\n      result.apiType = this.apiType;\n      result.request = this.request ?? {};\n      result.request.headers = this.request?.headers ?? [];\n      result.response = this.response ?? {};\n      result.response.fields = this.response?.fields ?? [];\n      result.isFetched = this.isFetched;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApi(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/count/${this.id}`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal || this.readonly;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   /**\n    * @method whereCleanUp()\n    * Parse through the current where condition and remove any null or\n    * empty logical blocks.\n    * @param {obj} curr\n    *        1) The current where condition in ABQuery Format:\n    *        {\n    *           glue: [AND, OR],\n    *           rules: [ {rule} ]\n    *        }\n    *        or 2) The current {rule} to validate\n    *        {\n    *          key:{string},\n    *          rule:{string},\n    *          vlaue:{mixed}\n    *        }\n    * @return {ABQuery.where} / { Rule }\n    */\n   whereCleanUp(curr) {\n      if (curr) {\n         if (curr.glue && curr.rules) {\n            // this is a logical Block (AND, OR)\n            // we need to filter the children\n            let newValue = { glue: curr.glue, rules: [] };\n            curr.rules.forEach((r) => {\n               let cleanRule = this.whereCleanUp(r);\n               // don't add values that didn't pass\n               if (cleanRule) {\n                  newValue.rules.push(cleanRule);\n               }\n            });\n\n            // if we have a non empty block, then return it:\n            if (newValue.rules.length > 0) {\n               return newValue;\n            }\n\n            // this isn't really a valid conditional, so null\n            return null;\n         }\n\n         // This is a specific rule, that isn't null so:\n         // if it isn't {}, then return it\n         if (Object.keys(curr).length > 0) return curr;\n\n         // otherwise we skip this as well\n         return null;\n      }\n      return null;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      this.__linkProblems = this.__linkProblems ?? [];\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","/*\n * ABViewManagerMobile\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\n[\n   require(\"../platform/mobile/ABMobilePage\"),\n   require(\"../platform/mobile/ABMobileView\"),\n   require(\"../platform/mobile/ABMobileViewForm\"),\n   require(\"../platform/mobile/ABMobileViewFormButton\"),\n   require(\"../platform/mobile/ABMobileViewFormCheckbox\"),\n   require(\"../platform/mobile/ABMobileViewFormConnect\"),\n   require(\"../platform/mobile/ABMobileViewFormDate\"),\n   require(\"../platform/mobile/ABMobileViewFormDatetime\"),\n   require(\"../platform/mobile/ABMobileViewFormEmail\"),\n   require(\"../platform/mobile/ABMobileViewFormFile\"),\n   require(\"../platform/mobile/ABMobileViewFormFormula\"),\n   require(\"../platform/mobile/ABMobileViewFormImage\"),\n   require(\"../platform/mobile/ABMobileViewFormNumber\"),\n   require(\"../platform/mobile/ABMobileViewFormReadonly\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectMultiple\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectSingle\"),\n   require(\"../platform/mobile/ABMobileViewFormTextbox\"),\n   require(\"../platform/mobile/ABMobileViewLabel\"),\n   require(\"../platform/mobile/ABMobileViewList\"),\n].forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"mobile-view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   // pull relation data\n   if (value == null && field.relationName) {\n      const relationName = field.relationName();\n      const pureRelationName = relationName.split(\".\")[1]; // support [BASE_OBJECT.columnName] field name of ABQuery\n      value = rowData[relationName] || rowData[pureRelationName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"checked\":\n            result = value == true || value > 0 || value == \"true\";\n            break;\n         case \"unchecked\":\n            result =\n               value == false ||\n               value <= 0 ||\n               value == \"false\" ||\n               value == null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n      /* eslint-disable no-fallthrough */\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"equals\"\n\n         case \"equals\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == compareValue).length >\n               0;\n            break;\n         case \"not_contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"not_equals\"\n\n         case \"not_equal\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == compareValue).length <\n               1;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      /* eslint-enable no-fallthrough */\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            connectedVal[field.indexField.columnName] ??\n            connectedVal[field.indexField2.columnName] ??\n            connectedVal[field.columnName] ??\n            connectedVal;\n      }\n\n      // Compare value isn't always a string?\n      // https://appdev-designs.sentry.io/issues/5056850389/\n      let compareValueLowercase =\n         typeof compareValue === \"string\"\n            ? compareValue.toLowerCase?.()\n            : compareValue;\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         result.push({\n            id: condKey,\n            value: dateConditions[condKey],\n            batch: \"datepicker\",\n            handler: (a, b) => this.dateValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         checked: this.labels.component.checkedCondition,\n         unchecked: this.labels.component.notCheckedCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"none\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n         \"is_empty\",\n         \"is_not_empty\",\n         \"checked\",\n         \"unchecked\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\" || f.key == \"datetime\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value\n         ? this.AB.rules.toDateFormat(value, {\n              format: \"YYYY-MM-DD\",\n           })\n         : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      let val = myParameter?.[this.columnName];\n      if (val == \"{}\" || val == \"\") {\n         delete myParameter[this.columnName];\n      }\n      if (\"string\" === typeof val) {\n         try {\n            myParameter[this.columnName] = JSON.parse(val);\n         } catch (e) {\n            /* ignore */\n         }\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n         rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      // Integer\n      let result = `${negativeSign}${integerValue}`;\n\n      // Decimal\n      if (decimalStr && options.decimalDelimiter && options.decimalSize) {\n         const decimalVal = data.toFixed(options.decimalSize).split(\".\")[1];\n         result += `${options.decimalDelimiter}${decimalVal}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data?.[this.columnName]?.length > MAX_CHAR_LENGTH) {\n         const L = this.AB.Label();\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/*\n * ABMobilePageCore\n *\n * An view that represents a \"Page\" on the Mobile Device.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABMobilePageDefaults = {\n   key: \"mobile-page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-'  )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\",\n   // {string}\n   // What type of \"Page\" this is: ['page', 'popup', 'reportPage']\n\n   defaultPage: 0,\n   // {bool} 1|0\n   // is this the default page for the Mobile App? If so, this is the initial\n   // Page that is displayed when the App is loaded.\n   // NOTE: there can be only 1 page defined in the app as .defaultPage\n\n   hideTitle: 0,\n   // {bool} 1|0\n   // By default we will display this.label as our Title. Set this to 1 to not\n   // show the tile on the page.\n\n   hideTabs: 0,\n   // {bool} 1|0\n   // By default, pages will show any Tab options on their display.  Set this\n   // to 1 to not show the tab options for this Page. (good for pages that\n   // are linkedPages with forms )\n};\n\nmodule.exports = class ABMobilePageCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMobilePageDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABMobilePage, but has\n      // different implications ... so we default an ABMobilePage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABMobilePageDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABMobilePage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n      obj.route = this.route;\n\n      obj.myAppID = this.myAppID;\n\n      obj.menuType = this.menuType;\n\n      obj.defaultPage = this.defaultPage;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const DV = ABPropertyComponentDefaults;\n\n      this.route =\n         values.route || (this.name || this.label).replaceAll(\" \", \"_\");\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      this.menuType = values.menuType || \"menu\";\n      // {string}  [\"menu\", \"tab\"]\n      // indicates if this Page was added as a Mobile App's \"menu\" or \"Tab\"\n\n      this.defaultPage = values.defaultPage || 0;\n      // {bool}  1|0\n      // indicates if this is the default page that is loaded when the mobile app\n      // is started.\n      // NOTE: only 1 Page in a Mobile App can have this setting = 1.\n\n      this.settings.hideTitle = parseInt(\n         values.settings.hideTitle ?? DV.hideTitle\n      );\n      // {bool} 1|0\n      // By default an ABMobilePage will display it's this.label for a title\n      // on the page.  Setting this to TRUE (1) will hide the title.\n\n      this.settings.hideTabs = parseInt(\n         values.settings.hideTabs ?? DV.hideTabs\n      );\n      // {bool} 1|0\n      // By default, pages will show any Tab options on their display.  Set this\n      // to 1 to not show the tab options for this Page. (good for pages that\n      // are linkedPages with forms )\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`,\n               {\n                  appID: this.application.id,\n                  pageID: this.id,\n                  missingPageID: id,\n               }\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      // this.settings.columns = this.settings.columns || 1;\n      // this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABMobilePage\n            // be sure to remove any of it's ABMobilePage as well\n            // This cleans out any dangling ABDefinitions\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABMobilePage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            // make sure .defaultPage is properly set\n            if (this.defaultPage) {\n               return this.application.setPageDefault(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABMobilePage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABMobilePages for this ABMobilePage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABMobilePages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABMobilePages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // if (this._pages && this._pages.length > 0) {\n         //    result = this._pages.filter(filter);\n\n         //    if (result.length < 1) {\n         //       this._pages.forEach((p) => {\n         //          var subPages = p.pages(filter, deep);\n         //          if (subPages && subPages.length > 0) {\n         //             result = subPages;\n         //          }\n         //       });\n         //    }\n         // }\n         result = this.application._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABMobilePage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABMobilePage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABMobilePage that is tied to this\n    * ABMobilePage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABMobilePage}\n    */\n   pageNew(values) {\n      // make sure this is an ABMobilePage description\n      values.key = ABMobilePageDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABMobilePage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABMobilePage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages((p) => p.id != page.id);\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABMobilePageDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABMobilePage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABMobilePage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABMobileViewDefaults = {\n   key: \"mobile-view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABMobileViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABMobileViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABMobileViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || this.viewKey(),\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         // accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || this.viewKey();\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      // this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label =\n               this.parent.label +\n               \".\" +\n               (this.field?.()?.columnName ?? this.defaults.key);\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   // isAccessibleForRoles(roles) {\n   //    var foundRole = false;\n\n   //    var accessibleRoles = Object.keys(this.accessLevels) || [];\n   //    (roles || []).forEach((r) => {\n   //       if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n   //          foundRole = true;\n   //       }\n   //    });\n\n   //    return foundRole;\n   // }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   // getUserAccess() {\n   //    // by default everyone has no access\n   //    var accessLevel = 0;\n\n   //    if (this.application.isAccessManaged) {\n   //       // check to see if the current users is the access manager\n   //       var isAccessManager = false;\n   //       // first check if manager is defined by their role\n   //       if (parseInt(this.application.accessManagers.useRole) == 1) {\n   //          // if so check if any of the user's role match the managers\n   //          this.AB.Account.roles().forEach((role) => {\n   //             if (\n   //                this.application.accessManagers.role.indexOf(\n   //                   role.id || role.uuid\n   //                ) > -1\n   //             ) {\n   //                // if so set the access level to full access\n   //                isAccessManager = true;\n   //                accessLevel = 2;\n   //             }\n   //          });\n   //       }\n   //       // if the user isn't already set as the manager and the manager is defined by their account\n   //       if (\n   //          !isAccessManager &&\n   //          parseInt(this.application.accessManagers.useAccount) == 1\n   //       ) {\n   //          // check if the user's account matches the managers\n   //          if (\n   //             this.application.accessManagers.account.indexOf(\n   //                this.AB.Account.uuid() + \"\"\n   //             ) > -1\n   //          ) {\n   //             // if so set the access level to full access\n   //             isAccessManager = true;\n   //             accessLevel = 2;\n   //          }\n   //       }\n\n   //       // if the user is not the manager check if the page has access levels defined for roles\n   //       if (\n   //          this.accessLevels &&\n   //          Object.keys(this.accessLevels).length > 0 &&\n   //          !isAccessManager\n   //       ) {\n   //          // check to see if the user's roles matches one of the roles defined\n   //          this.AB.Account.roles().forEach((role) => {\n   //             var currentRole = this.accessLevels[role.id || role.uuid];\n   //             if (currentRole && parseInt(currentRole) > accessLevel)\n   //                // if the access level is higher than a previous role set to the new level\n   //                accessLevel = parseInt(currentRole);\n   //          });\n   //       }\n   //    } else {\n   //       accessLevel = 2;\n   //    }\n\n   //    return accessLevel;\n   // }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"mobile-page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\n               \"mobile-form\",\n               \"grid\",\n               \"line\",\n               \"area\",\n               \"bar\",\n               \"gantt\",\n               \"kanban\",\n            ].indexOf(this.key) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"mobile-form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\n                  \"button\",\n                  \"label\",\n                  \"mobile-page\",\n                  \"tab\",\n                  \"viewcontainer\",\n               ].indexOf(this.key) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `MobileView[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   // updateAccessLevels(roleId, accessLevel) {\n   //    if (parseInt(accessLevel) == 0) {\n   //       if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n   //    } else {\n   //       this.accessLevels[roleId] = accessLevel;\n   //    }\n\n   //    return this.save(false, false);\n   // }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         // result = result.concat(this._views.filter(filter));\n\n         // this._views.forEach((v) => {\n         //    var subViews = v.views(filter, deep);\n         //    if (subViews && subViews.length > 0) {\n         //       result = result.concat(subViews);\n         //    }\n         // });\n         result = this.application._searchDeep(this, \"_views\", filter);\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewByID()\n    *\n    * return the specific View referenced by the given ID.\n    *\n    * @param {uuid} ID\n    *        the {ABMobileView}.id of the child view we are requesting\n    *\n    * @return {ABMobileView || undefined}\n    */\n   viewByID(ID) {\n      return this.views((v) => v.id == ID, true)[0];\n   }\n\n   /**\n    * @method viewNew()\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   // viewDestroy(view) {\n   //    console.error(\"DEPRECIATED: where is this called?\");\n   //    return this.viewRemove(view);\n   // }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // the default widget doesn't.\n      // only those that actually do, should override this.\n      return false;\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"mobile-page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"mobile-button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormButtonCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      Object.keys(ABViewFormButtonPropertyComponentDefaults).forEach((k) => {\n         let val =\n            this.settings[k] ?? ABViewFormButtonPropertyComponentDefaults[k];\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // just ignore the error and save val\n         }\n         this.settings[k] = val;\n      });\n\n      // this.settings.includeSave = JSON.parse(\n      //    this.settings.includeSave ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeSave\n      // );\n      // this.settings.includeCancel = JSON.parse(\n      //    this.settings.includeCancel ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeCancel\n      // );\n      // this.settings.includeReset = JSON.parse(\n      //    this.settings.includeReset ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeReset\n      // );\n\n      // this.settings.isDefault = JSON.parse(\n      //    this.settings.isDefault ||\n      //       ABViewFormButtonPropertyComponentDefaults.isDefault\n      // );\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABMobileViewFormCheckboxDefaults = {\n   key: \"mobile-checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCheckboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormCheckboxPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABMobileViewFormConnectDefaults = {\n   key: \"mobile-connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormConnectCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABMobileViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"mobile-form\", // unique key identifier for this ABMobileViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABMobileViewFormCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"mobile-label\", \"mobile-button\", \"mobile-text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    * return an array of all the ABViewFormField children\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewFormField that this fn\n    *\t       returns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) =>\n               comp instanceof this.AB.Class.ABMobileViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * @method addFieldToForm()\n    * Create a New Form Item on this Form from a given ABFieldXXX object.\n    * @param {ABFieldXXX} field\n    * @param {int} yPosition\n    * @return {ABMobileViewFormXXX}\n    */\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      // TODO: figure out how to decode the Data Field and return a form\n      // element.\n\n      var fieldComponent = field.formComponentMobile();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"mobile-fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCustomCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatepickerDefaults = {\n   key: \"mobile-date\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatepickerCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatetimePropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatetimeDefaults = {\n   key: \"mobile-datetime\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"Date and Time\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatetimeCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatetimeDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatetimeDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatetimePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormEmailPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormEmailDefaults = {\n   key: \"mobile-email\", // {string} unique key for this view\n   icon: \"envelope\", // {string} fa-[icon] reference for this view\n   labelKey: \"Email\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormEmailCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormEmailDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormEmailDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormEmailPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFilePropertyComponentDefaults = {};\n\nconst ABViewFormFileDefaults = {\n   key: \"mobile-file\",\n   // {string} unique key for this view\n   icon: \"file\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"file\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFileCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFilePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFormulaPropertyComponentDefaults = {};\n\nconst ABViewFormFormulaDefaults = {\n   key: \"mobile-formula\",\n   // {string} unique key for this view\n   icon: \"circle-o-notch\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Formula\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFormulaCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFormulaDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFormulaPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormFile = require(\"../../platform/mobile/ABMobileViewFormFile\");\n\nconst ABViewFormImagePropertyComponentDefaults = {};\n\nconst ABViewImageFileDefaults = {\n   key: \"mobile-image\",\n   // {string} unique key for this view\n   icon: \"file-image-o\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Image\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormImageCore extends ABMobileViewFormFile {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewImageFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewImageFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormImagePropertyComponentDefaults;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABMobileViewFormItemCore extends ABMobileView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABMobileViewFormNumberDefaults = {\n   key: \"mobile-numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormNumberCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABMobileViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n};\n","const ABMobileViewFormCustom = require(\"../../platform/mobile/ABMobileViewFormCustom\");\n\nconst ABMobileViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABMobileViewFormReadonlyDefaults = {\n   key: \"mobile-fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormReadonly extends ABMobileViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormReadonlyPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormSelectSingle = require(\"../../platform/mobile/ABMobileViewFormSelectSingle\");\n\nconst ABMobileViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectMultipleDefaults = {\n   key: \"mobile-selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectMultipleCore extends (\n   ABMobileViewFormSelectSingle\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectMultiplePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectSingleDefaults = {\n   key: \"mobile-selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectSingleCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectSinglePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n   placeholder: \"\", // default placeholder text\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"mobile-textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormTextboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   toObj() {\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n\n      return super.toObj();\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewLabelCore extends ABMobileView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.linkPageAdd != \"\";\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.eventDefinitionType] =\n            ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.type] =\n            ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         let error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         let error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               let error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || !data.length)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || !data.length)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      // NOTE: We are pretending our response is a type of ABFieldList. But our\n      // ABField objects no longer allow \".\" in our columnNames:\n      //    ( https://github.com/digi-serve/appbuilder_class_core/blob/212cf5fa1c1d5c959aa246c730582ed50809ee0f/dataFields/ABFieldCore.js#L262 )\n      // But our Process tasks really will be expecting it there so lets put\n      // it back:\n      listField.columnName = `${myID}.userFormResponse`;\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               ///\n               /// Questioning the validity of this section of code.\n               /// In order to get here, we tried to find field, and it\n               /// didn't exist.\n               /// then we turn around and REPEAT the same attempt\n               /// and check for field again.\n               /*\n               // parts[1] should be a field.id\n               object = this.AB.objectByID(this.objectID);\n               field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n               */\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(/* attributes */) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            // This function exists on platform_web but not platform_service\n            this.warningMessage?.(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return null;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   includeDelete: false,\n   deleteLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         (this.settings?.includeSave ?? true) &&\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n      this.settings.includeDelete = JSON.parse(\n         this.settings.includeDelete ||\n            ABViewFormButtonPropertyComponentDefaults.includeDelete\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (this.settings[f] == null)\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABViewPage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABViewPage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      // this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === definition.id) {\n               newPages.push(pg.refreshInstance(this));\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         // var currPage = this._pages.find((p) => p.id === definition.id);\n         // if (currPage) {\n         //    this._pages = this._pages.filter((p) => p.id != currPage.id);\n         //    this._pages.push(currPage.refreshInstance());\n         // }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         // \"views\", // <-- these are gathered in \"pages\"\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationMobileCore = require(\"../core/ABApplicationMobileCore.js\");\n\nconst ABViewPageMobile = require(\"./mobile/ABMobilePage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplicationMobile extends (\n   ABApplicationMobileCore\n) {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPageMobile\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPageMobile}\n    */\n   pageNew(values) {\n      const newPage = new ABViewPageMobile(values, this);\n      newPage.parent = this;\n      return newPage;\n   }\n\n   async setPageDefault(page) {\n      if (this.pageDefault != page.id) {\n         let oldPage = this.pageByID(this.pageDefault, true);\n         if (oldPage) {\n            oldPage.defaultPage = 0;\n            await oldPage.save();\n         }\n\n         this.pageDefault = page.id;\n         await this.save();\n      }\n   }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App ?what is this?\n    * @param {string} idBase Identifier for this component\n    * @param {import(\"../ABFactory\").default} AB ABFactory instance\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      this.AB = AB;\n      // Transition Code:\n      // make sure we have an this.AB\n      if (!AB && App?.AB) {\n         this.AB = App.AB;\n      }\n\n      if (!App) {\n         if (this.AB._App) {\n            App = this.AB._App;\n         } else {\n            App = {\n               uuid: this.AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: this.AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: this.AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: this.AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            this.AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!this.AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = this.AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      [\n         \"ab.datacollection.create\",\n         \"ab.datacollection.update\",\n         \"ab.datacollection.stale\",\n         \"ab.datacollection.delete\",\n      ].forEach((key) => {\n         this.AB.on(key, (data) => {\n            this.emit(key, data);\n         });\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (dc.__prevLinkDcCursor != value) {\n               cursorUpdated = true;\n            }\n\n            dc.__prevLinkDcCursor = this?.datacollectionLink?.getCursor()?.id;\n\n            // NOTE: If no cursor of the parent DC, then show empty list\n            if (\n               this.datacollectionLink &&\n               value == null &&\n               dc.__prevLinkDcCursor == null\n            ) {\n               this.clearAll();\n            }\n            // this is the same item that was already bound...don't reload data\n            else if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\">\n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            try {\n               webix.ui(ui).start();\n            } catch (err) {\n               this.AB.notify.developer(err, {\n                  context:\n                     \"ABHint.createUIHint() error calling webix.ui(ui).start()\",\n                  ui,\n               });\n            }\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.delete\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         // let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         // if (key) {\n         //    no_socket_trigger(this, key, data);\n         // }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            .then((newVal) => {})\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         no_socket_trigger(this, \"ab.datacollection.create\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               id,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      }).then((res) => {\n         // properly issue the delete\n         no_socket_trigger(this, \"ab.datacollection.delete\", id);\n         return res;\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         // properly issue the update\n         no_socket_trigger(this, \"ab.datacollection.update\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelAPI\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPI extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond = {}) {\n      cond.isAPI = true;\n      cond.url = this.object?.request?.url;\n\n      return super.findAll(cond);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchCreate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   async create(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.create() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.delete() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.update() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchUpdate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (Object.prototype.hasOwnProperty.call(data, f.columnName))\n            f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd && !skipMigrate) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews?.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         if (!f) return;\n         allWarnings = allWarnings.concat(f?.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         if (!i) return;\n         allWarnings = allWarnings.concat(i?.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f?.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i?.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanValues()\n    * perform a final review of the data a form will try to submit for\n    * this object.  The lets individual fields have a chance to update or\n    * remove values before they are sent.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanValues(rowData) {\n      this.fields().forEach((f) => {\n         f.formCleanData(rowData);\n      });\n   }\n};\n","const atomicjs = require(\"atomicjs\");\nconst ABObjectApiCore = require(\"../core/ABObjectApiCore\");\n\nmodule.exports = class ABObjectApi extends ABObjectApiCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async fetchData(insertDataMax = 20) {\n      if (this.isFetched) return;\n\n      const headers = this.headers;\n\n      const response = await atomicjs(this.request.url, {\n         method: this.request.verb,\n         headers,\n         data: {},\n         timeout: null,\n         withCredentials: false,\n      });\n\n      let parsedResponse = this.dataFromKey(response);\n\n      const model = this.model();\n\n      if (parsedResponse.length == null || parsedResponse.length === 0) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[f.columnName];\n         });\n\n         await model.create(data);\n\n         return;\n      }\n\n      let pendingModelCreate = [];\n\n      for (let i = 0; i < parsedResponse.length; i++) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[i][f.columnName];\n         });\n\n         pendingModelCreate.push(model.create(data));\n\n         if (pendingModelCreate % insertDataMax === 0)\n            await Promise.all(pendingModelCreate);\n      }\n\n      if (pendingModelCreate.length > 0) await Promise.all(pendingModelCreate);\n\n      this.isFetched = true;\n\n      await this.save();\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      return await super.save(true);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","const ABViewManagerMobileCore = require(\"../core/ABViewManagerMobileCore\");\n\nmodule.exports = class ABViewManagerMobile extends ABViewManagerMobileCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = cond.value?.split?.(\",\") ?? [];\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      cond.value = values\n         .map((v) => {\n            // Convert date format\n            if (field && (field.key == \"date\" || field.key == \"datetime\"))\n               return field.exportValue(new Date(v));\n\n            return v;\n         })\n         .join(\",\");\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is unchecked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n               case \"checked\":\n               case \"unchecked\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiNoneValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"];\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection && !skipMigrate) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      try {\n         item.setValue(val);\n      } catch (err) {\n         // this error is fine because we handled it already\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      let FC = {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = FC.common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n      return FC;\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      // default is to just leave data as is.\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   formComponentMobile() {\n      if (this.settings.linkType == \"many\") {\n         return super.formComponent(\"mobile-selectmultiple\");\n      }\n      return super.formComponent(\"mobile-selectsingle\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n\n      if (theEditor) {\n         // PREVENT: repeatly refresh data too often\n         if (theEditor._getOptionsThrottle) {\n            clearTimeout(theEditor._getOptionsThrottle);\n            // NOTE: remove variables that reference the Promise and Resolve to let GC cleans up.\n            // https://dev.to/xnimorz/js-promises-3-garbage-collection-and-memory-leaks-2oi7?fbclid=IwAR1wqgNz2KqchaM7eRkclR6YWHT01eva4y5IWpnaY0in6BrxmTAtpNCnEXM\n            delete theEditor._timeToPullData;\n            delete theEditor._getOptionsResolve;\n         }\n         theEditor._timeToPullData = await new Promise((resolve) => {\n            theEditor._getOptionsResolve = resolve;\n            theEditor._getOptionsThrottle = setTimeout(() => {\n               resolve(true);\n            }, 100);\n         });\n         if (!theEditor._timeToPullData) return;\n      }\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // // Get Local Storage unless xxx->one connected field\n               // if (this?.settings?.linkViaType != \"one\") {\n               //    // We store the .findAll() results locally and return that for a\n               //    // quick response:\n               //    return await this.AB.Storage.get(storageID);\n               // }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      if (!editor) return Promise.resolve([]);\n\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        const filterField = field.object.fieldByID(\n                           value.filterValue.config.dataFieldId\n                        );\n                        let valItem;\n\n                        // When options does not load yet, then pull select value from DC\n                        if (!filterField._options?.length) {\n                           const linkedField =\n                              (form.datacollection.datasource?.fields(\n                                 (f) =>\n                                    f.id == value.value ||\n                                    f.columnName == value.value\n                              ) ?? [])[0];\n\n                           if (linkedField) {\n                              // Get values from DC\n                              const formVals = form.datacollection?.getCursor();\n\n                              valItem =\n                                 formVals[linkedField.relationName()] ??\n                                 formVals[value.value];\n                           }\n                        } else {\n                           valItem = filterField.getItemFromVal(parentValue);\n                        }\n\n                        if (valItem) {\n                           newVal = valItem[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      if (!this.handlerOptionData) {\n         this.handlerOptionData = (data) => {\n            if (theEditor.$destructed) {\n               this.removeListener(\"option.data\", this.handlerOptionData);\n               return;\n            }\n            this.populateOptions(theEditor, data, field, form, true);\n         };\n      }\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", this.handlerOptionData).once(\n         \"option.data\",\n         this.handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let currVal = theEditor.getValue();\n         // in a multiselect environment, the current val can be an encoded string:\n         // \"id1,id2\".  Break this into an array:\n         if (field.linkType() == \"many\" && typeof currVal == \"string\") {\n            currVal = currVal.split(\",\");\n         }\n         if (!Array.isArray(currVal)) {\n            currVal = [currVal];\n         }\n\n         let selectedVals = [];\n         currVal.forEach((cVal) => {\n            // Check exists item\n            const isExists = data.some((d) => d.id == cVal);\n\n            if (isExists) {\n               selectedVals.push(cVal);\n            }\n\n            // if we couldn't find it by it's .id, then check to see\n            // if there is a custom index (.indexField  .indexField2)\n            // that does match.\n            // Select option item from custom index value\n            if (\n               !isExists &&\n               field.isConnection &&\n               (field.indexField || field.indexField2)\n            ) {\n               const selectedItem = data.filter(\n                  (d) =>\n                     d[field.indexField?.columnName ?? \"\"] == cVal ||\n                     d[field.indexField2?.columnName ?? \"\"] == cVal\n               )[0];\n\n               if (selectedItem) selectedVals.push(selectedItem.id);\n            }\n         });\n\n         theEditor.setValue(selectedVals);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (item.getValue()) {\n            let val = item.getValue().split(\",\");\n            val.forEach((record) => {\n               vals.push(item.getList().getItem(record));\n            });\n         }\n         return vals;\n      } else {\n         if (item.getValue()) {\n            return item.getList().getItem(item.getValue());\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      // try to prevent form flicker:\n      // Only reset the value if the value changes:\n      let currVal = item.getValue();\n      let newVal = Array.isArray(val)\n         ? val\n              .map(\n                 (e) =>\n                    this.getRelationValue(e, { forUpdate: true }) ??\n                    e.id ??\n                    e.uuid ??\n                    e\n              )\n              .join(\",\")\n         : this.getRelationValue(val, { forUpdate: true }) ??\n           val.id ??\n           val.uuid ??\n           val;\n      if (currVal != newVal) {\n         item.setValue(newVal);\n      }\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = this.AB.Account?.language() == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-date\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-date\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-datetime\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-datetime\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-email\",\n            settings: {},\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message:\n                        \"ABFieldFile:onFileUploadError(): Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"ABFieldFile:customEdit(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-file\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            status: (f) => {\n               if (f.percent) {\n                  webixContainer.hideProgress();\n                  webixContainer.showProgress({\n                     type: \"top\",\n                     position: f.percent / 100,\n                  });\n               }\n            },\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: (item) => {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n                  this.uploadInProgress = true;\n                  // Display the image from local file\n                  var reader = new FileReader();\n                  reader.onload = (e) => {\n                     this.showImage(null, node, e.target.result);\n                     webixContainer.showProgress({\n                        type: \"top\",\n                        delay: 2000,\n                     });\n                  };\n                  reader.readAsDataURL(item.file);\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n                  this.uploadInProgress = false;\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this.toObj(),\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this.toObj(),\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this.toObj(),\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-image\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node, url) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${url ?? this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      if (this.uploadInProgress)\n         validator.addError(this.columnName, L(\"Image still uploading\"));\n   }\n\n   rotateLeft(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=left`,\n      });\n   }\n\n   rotateRight(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=right`,\n      });\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      item.config.value = rowData[this.columnName];\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // \"\" isn't a valid json value, so just remove the data and\n         // let the DB handle the default value.\n         delete rowData[this.columnName];\n      }\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message:\n                        \"ABFieldList:customDisplay(): Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple\n               ? \"mobile-selectmultiple\"\n               : \"mobile-selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   // formComponentMobile() {\n   //    // NOTE: what is being returned here needs to mimic an ABView CLASS.\n   //    // primarily the .common() and .newInstance() methods.\n   //    const formComponentSetting = super.formComponent();\n\n   //    // .common() is used to create the display in the list\n   //    formComponentSetting.common = () => {\n   //       return {\n   //          key: \"mobile-textbox\",\n   //          settings: {\n   //             type: \"single\",\n   //          },\n   //       };\n   //    };\n\n   //    return formComponentSetting;\n   // }\n\n   /**\n    * @method formComponentMobile\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message:\n                                    \"ABFieldTree:onItemClick(): Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v?.username ?? v?.uuid ?? v?.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // this means this value isn't set.\n         // can we remove this from the data?\n         delete rowData[this.columnName];\n         super.setValue(item, rowData);\n         return;\n      }\n\n      if (this.linkType() == \"many\") {\n         // val should be an array.\n         if (!Array.isArray(val)) {\n            val = [val];\n         }\n         // if any of those contain \"ab-current-user\" replace it:\n         val = val.map((v) =>\n            v == \"ab-current-user\" ? this.AB.Account.username() : v\n         );\n      } else {\n         // val is a single entry string\n         // Select \"[Current user]\" to update\n         if (val == \"ab-current-user\") val = this.AB.Account.username();\n      }\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n\n   getOptions(...params) {\n      return super.getOptions(...params).then((options) => {\n         // in a ABFieldUser, our options.id elements need to have\n         // the username, not the .uuid:\n         (options || []).forEach((o) => {\n            if (o.username) {\n               o.id = o.username;\n            }\n         });\n\n         return options;\n      });\n   }\n\n   pullRelationValues(row) {\n      let values = super.pullRelationValues(row);\n\n      // remember, our .id == .username\n      if (Array.isArray(values)) {\n         // prevent any null or undefined:\n         values = values.filter((v) => v);\n         values = values.map((v) => {\n            v.id = v.username || v.id;\n            return v;\n         });\n      } else {\n         if (values) {\n            values.id = values.username || values.id;\n         }\n      }\n\n      return values;\n   }\n\n   pullRecordRelationValues(record) {\n      let data = super.pullRecordRelationValues(record);\n      if (Array.isArray(data)) {\n         data = data.map((d) => {\n            d.id = d.username ?? d.id;\n            return d;\n         });\n      } else {\n         data.id = data.username || data.id;\n      }\n\n      return data;\n   }\n};\n","const ABMobilePageCore = require(\"../../core/mobile/ABMobilePageCore\");\n\nmodule.exports = class ABMobilePage extends ABMobilePageCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // check to see if I've been updated, if so, alert my parent:\n      this.__Handler_ABDEF_UPDATED = (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n            this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         }\n      };\n      this.AB.on(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n\n      // check to see if any of my child pages have been updated and\n      // update my defintion of them:\n      this.__Handler_DEF_UPDATED = (page) => {\n         // create a new Field with the updated def\n         var def = this.AB.definitionByID(page.id);\n         if (!def) return;\n\n         var newPage = this.pageNew(def);\n\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === page.id) {\n               newPages.push(newPage);\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         page.off(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      };\n      this.pages().forEach((p) => {\n         p.on(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance(parent) {\n      // create a new Field with the updated def\n      var def = this.AB.definitionByID(this.id);\n      if (!def) return;\n\n      var newPage = (parent ?? this.parent)?.pageNew(def);\n\n      try {\n         // detatch ourself from other emitters:\n         this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         this.pages().forEach((pg) => {\n            pg.removeAllListeners(\"definition.updated\");\n         });\n      } catch (e) {\n         // debugger;\n         console.error(e);\n      }\n\n      return newPage;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let allViews = this.views();\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no widgets\");\n      }\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABMobileViewCore = require(\"../../core/mobile/ABMobileViewCore.js\");\n\nmodule.exports = class ABMobileView extends ABMobileViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"mobile-view\",\n         \"mobile-page\",\n         // \"formpanel\",\n         // \"viewcontainer\",\n         // // not allowed Detail's widgets\n         // \"detailcheckbox\",\n         // \"detailcustom\",\n         // \"detailconnect\",\n         // \"detailimage\",\n         // \"detailselectivity\",\n         // \"detailtext\",\n         // \"detailtree\",\n         // // not allowed Form's widgets\n         // \"button\",\n         // \"checkbox\",\n         // \"connect\",\n         // \"datepicker\",\n         // \"fieldcustom\",\n         // \"textbox\",\n         // \"numberbox\",\n         // \"selectsingle\",\n         // \"selectmultiple\",\n         // \"formtree\",\n         // \"fieldreadonly\",\n         // // not allowed Chart's Widgets\n         // \"pie\",\n         // \"bar\",\n         // \"line\",\n         // \"area\",\n         // // not allowed Report page\n         // \"report\",\n         // \"reportPage\",\n         // \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our sub views\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABMobileViewFormCore = require(\"../../core/mobile/ABMobileViewFormCore\");\n\nconst ABMobileViewFormButton = require(\"./ABMobileViewFormButton\");\n\nmodule.exports = class ABMobileViewForm extends ABMobileViewFormCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method refreshDefaultButton()\n    * On the ABDesigner once a Form Field is added/removed from a form, we want\n    * to make sure the default Form Button is pushed down to the bottom of the\n    * list of form Items.\n    * @param {obj} ids\n    *        The id hash of the webix widgets that show the fields.\n    * @return {ABMobileViewFormButton}\n    */\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABMobileViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABMobileViewFormButton.newInstance(\n            this.application,\n            this\n         );\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.dataviewID) {\n         this.warningsMessage(`does not have a DataCollection assigned.`);\n      } else {\n         let DC = this.datacollection;\n         if (!DC) {\n            this.warningsMessage(\n               `references an unknown DataCollection [${this.settings.dataviewID}].`\n            );\n         }\n      }\n   }\n};\n","const ABMobileViewFormButtonCore = require(\"../../core/mobile/ABMobileViewFormButtonCore\");\n\nmodule.exports = class ABMobileViewFormButton extends (\n   ABMobileViewFormButtonCore\n) {};\n","const ABMobileViewFormCheckboxCore = require(\"../../core/mobile/ABMobileViewFormCheckboxCore\");\n\nmodule.exports = class ABMobileViewFormCheckbox extends (\n   ABMobileViewFormCheckboxCore\n) {};\n","const ABMobileViewFormConnectCore = require(\"../../core/mobile/ABMobileViewFormConnectCore\");\n\n// const ABViewPropertyAddPage =\n//    require(\"./viewProperties/ABViewPropertyAddPage\").default;\n// const ABViewPropertyEditPage =\n//    require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\n// const ABViewFormConnectPropertyComponentDefaults =\n//    ABMobileViewFormConnectCore.defaultValues();\n\n// const ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\n// let FilterComponent = null;\n// let SortComponent = null;\n\nmodule.exports = class ABMobileViewFormConnect extends (\n   ABMobileViewFormConnectCore\n) {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions\n         /* ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n         */\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Does this do anything here?\n      // this.addPageTool.fromSettings(this.settings);\n      // this.editPageTool.fromSettings(this.settings);\n   }\n\n   // static get addPageProperty() {\n   //    return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   // static get editPageProperty() {\n   //    return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n   //    return new ABViewFormConnectComponent(this);\n   // }\n\n   // get addPageTool() {\n   //    if (this.__addPageTool == null)\n   //       this.__addPageTool = new ABViewPropertyAddPage();\n\n   //    return this.__addPageTool;\n   // }\n\n   // get editPageTool() {\n   //    if (this.__editPageTool == null)\n   //       this.__editPageTool = new ABViewPropertyEditPage();\n\n   //    return this.__editPageTool;\n   // }\n};\n","const ABMobileViewFormCustomCore = require(\"../../core/mobile/ABMobileViewFormCustomCore\");\n\nmodule.exports = class ABMobileViewFormCustom extends (\n   ABMobileViewFormCustomCore\n) {};\n","const ABMobileViewFormDateCore = require(\"../../core/mobile/ABMobileViewFormDateCore\");\n\nmodule.exports = class ABMobileViewFormDate extends ABMobileViewFormDateCore {};\n","const ABMobileViewFormDatetimeCore = require(\"../../core/mobile/ABMobileViewFormDatetimeCore\");\n\nmodule.exports = class ABMobileViewFormDatetime extends (\n   ABMobileViewFormDatetimeCore\n) {};\n","const ABMobileViewFormEmailCore = require(\"../../core/mobile/ABMobileViewFormEmailCore\");\n\nmodule.exports = class ABMobileViewFormEmail extends (\n   ABMobileViewFormEmailCore\n) {};\n","const ABMobileViewFormFileCore = require(\"../../core/mobile/ABMobileViewFormFileCore\");\n\nmodule.exports = class ABMobileViewFormFile extends ABMobileViewFormFileCore {};\n","const ABMobileViewFormFormulaCore = require(\"../../core/mobile/ABMobileViewFormFormulaCore\");\n\nmodule.exports = class ABMobileViewFormFormula extends (\n   ABMobileViewFormFormulaCore\n) {};\n","const ABMobileViewFormImageCore = require(\"../../core/mobile/ABMobileViewFormImageCore\");\n\nmodule.exports = class ABMobileViewFormImage extends (\n   ABMobileViewFormImageCore\n) {};\n","const ABMobileViewFormItemCore = require(\"../../core/mobile/ABMobileViewFormItemCore\");\n\nmodule.exports = class ABMobileViewFormItem extends ABMobileViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`FormItem Test Warning.`);\n   // }\n};\n","const ABMobileViewFormNumberCore = require(\"../../core/mobile/ABMobileViewFormNumberCore\");\n\nmodule.exports = class ABMobileViewFormNumber extends (\n   ABMobileViewFormNumberCore\n) {};\n","const ABMobileViewFormReadonlyCore = require(\"../../core/mobile/ABMobileViewFormReadonlyCore\");\n\nmodule.exports = class ABMobileViewFormReadonly extends (\n   ABMobileViewFormReadonlyCore\n) {};\n","const ABMobileViewFormSelectMultipleCore = require(\"../../core/mobile/ABMobileViewFormSelectMultipleCore\");\n\nmodule.exports = class ABMobileViewFormSelectMultiple extends (\n   ABMobileViewFormSelectMultipleCore\n) {};\n","const ABMobileViewFormSelectSingleCore = require(\"../../core/mobile/ABMobileViewFormSelectSingleCore\");\n\nmodule.exports = class ABMobileViewFormSelectSingle extends (\n   ABMobileViewFormSelectSingleCore\n) {};\n","const ABMobileViewFormTextboxCore = require(\"../../core/mobile/ABMobileViewFormTextboxCore\");\n\nmodule.exports = class ABMobileViewFormTextbox extends (\n   ABMobileViewFormTextboxCore\n) {\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`${k} references an unknown Page.`);\n   // }\n};\n","const ABMobileViewLabelCore = require(\"../../core/mobile/ABMobileViewLabelCore\");\n// const ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABMobileViewLabel extends ABMobileViewLabelCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n\n   //    // return new ABViewLabelComponent(this);\n   // }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABMobileViewListCore = require(\"../../core/mobile/ABMobileViewListCore\");\n\nmodule.exports = class ABMobileViewList extends ABMobileViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      [\"linkPageAdd\", \"linkPageDetail\"].forEach((k) => {\n         if (this.settings[k]) {\n            let page = this.application.pageByID(this.settings[k], true);\n            if (!page) {\n               this.warningsMessage(`${k} references an unknown Page.`);\n            }\n         }\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            } else {\n               Filter.setValue(null);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n            dv.on(key, this._handler_doOnShow);\n         });\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n         });\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return `<div class=\"ab-carousel-image-container\">\n            <link rel=\"preload\" href=\"${\n               row.src\n            }\" as=\"image\" fetchpriotity=\"low\"/>\n            <img id=\"${this.ids.component}-${row.id}\" src=\"${\n            row.src\n         }\" class=\"content\" ondragstart=\"return false\" loading=\"lazy\" />\n            ${\n               settings.showLabel\n                  ? `<div class=\"ab-carousel-image-title\">${\n                       row.label || \"\"\n                    }</div>`\n                  : \"\"\n            }\n            <div class=\"ab-carousel-image-icon\">\n            ${\n               settings.detailsPage || settings.detailsTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n                  : \"\"\n            }\n            ${\n               settings.editPage || settings.editTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n                  : \"\"\n            }\n            <span class=\"webix_icon ab-carousel-zoom-in fa fa-search-plus\"></span>\n            <span class=\"webix_icon ab-carousel-zoom-out fa fa-search-minus\"></span>\n                  <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-left fa fa-rotate-left\"></span>\n               <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-right fa fa-rotate-right\"></span>\n               <span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>\n               <span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>\n            </div>\n         </div>`;\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n               imgFile,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = async (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-left\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"left\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-right\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"right\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-in\") > -1\n               ) {\n                  this.zoom(\"in\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-out\") > -1\n               ) {\n                  this.zoom(\"out\");\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n\n   async rotateImage(rowId, imgFile, field, direction = \"right\") {\n      this.busy();\n\n      // call api to rotate\n      if (direction == \"left\") await field.rotateLeft(imgFile);\n      else await field.rotateRight(imgFile);\n\n      // refresh image\n      const imgElm = document.getElementById(`${this.ids.component}-${rowId}`);\n      if (imgElm) {\n         await fetch(imgElm.src, { cache: \"reload\", mode: \"no-cors\" });\n         imgElm.src = `${imgElm.src}#${new Date().getTime()}`;\n      }\n\n      this.ready();\n   }\n\n   zoom(inOrOut = \"in\") {\n      const imgContainer = document.getElementsByClassName(\n         \"ab-carousel-image-container\"\n      )[0];\n      if (!imgContainer) return;\n\n      const imgElem = imgContainer.getElementsByTagName(\"img\")[0];\n      if (!imgElem) return;\n\n      const step = 15;\n      const height = parseInt(\n         (imgElem.style.height || 100).toString().replace(\"%\", \"\")\n      );\n      const newHeight = inOrOut == \"in\" ? height + step : height - step;\n      imgElem.style.height = `${newHeight}%`;\n\n      imgContainer.style.overflow = newHeight > 100 ? \"auto\" : \"\";\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (this.settings.viewType == \"advanced\") {\n         if (!this?.settings?.dataviewID) return { height: 1 };\n      } else {\n         if (!this?.settings?.dataviewID || !this?.settings?.field)\n            return { height: 1 };\n      }\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      // give the Object a final chance to review the data being handled.\n      obj.formCleanValues(formVals);\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      const validator = object.isValidData(formVals);\n      let isValid = validator.pass();\n\n      // $$($formView).validate();\n      $formView.validate();\n      /**\n       * helper function to fix the webix ui after adding an validation error\n       * message.\n       * @param {string} col - field.columnName\n       */\n      const fixInvalidMessageUI = (col) => {\n         const $forminput = $formView.elements[col];\n         if (!$forminput) return;\n         // Y position\n         const height = $forminput.$height;\n         if (height < 56) {\n            $forminput.define(\"height\", 60);\n            $forminput.resize();\n         }\n\n         // X position\n         const domInvalidMessage = $forminput.$view.getElementsByClassName(\n            \"webix_inp_bottom_label\"\n         )[0];\n         if (!domInvalidMessage?.style[\"margin-left\"]) {\n            domInvalidMessage.style.marginLeft = `${\n               this.settings.labelWidth ??\n               ABViewFormPropertyComponentDefaults.labelWidth\n            }px`;\n         }\n      };\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            fixInvalidMessageUI(f.columnName);\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n               fixInvalidMessageUI(err.name);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // Load data of DCs that use in record rules\n      await this.loadDcDataOfRecordRules();\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         $formView.hideProgress?.();\n         return;\n      }\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(errs, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      await Promise.all(tasks);\n\n      return true;\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n\n   /**\n    * @method deleteData\n    * delete data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async deleteData($formView) {\n      // get ABDatacollection\n      const dc = this.datacollection;\n      if (dc == null) return;\n\n      // get ABObject\n      const obj = dc.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dc.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = $formView.getValues();\n\n      if (formVals?.id) {\n         const result = await model.delete(formVals.id);\n\n         // clear form\n         if (result) {\n            dc.setCursor(null);\n            $formView.clear();\n         }\n\n         return result;\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow =\n         _grid.data.find({ appbuilder_select_item: 1 }).length < 1;\n      const filterRow = (row) =>\n         noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow,\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Update webix.datatable\n                        (updatedRowIds ?? []).forEach((rowId) => {\n                           $datatable.updateItem(rowId, vals);\n                        });\n\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n         this.datacollection?.removeListener(key, this.handler_select);\n      });\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            onBeforeEditStart: function (id) {\n               if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // console.warn(\"!! ToDo: onBeforeEditStop()\");\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1) {\n            // If the confirm popup is showing, then skip to show a new one\n            if (!this._deleteConfirmPopup) {\n               this._deleteConfirmPopup = abWebix.confirm({\n                  title: self.label(\"Delete data\"),\n                  text: self.label(\"Do you want to delete this row?\"),\n                  callback: (result) => {\n                     delete this._deleteConfirmPopup;\n                     if (result) {\n                        const deleteRow = async () => {\n                           try {\n                              const response =\n                                 await CurrentObject.model().delete(id.row);\n\n                              if (response.numRows > 0) {\n                                 $DataTable.remove(id);\n                                 $DataTable.clearSelection();\n                              } else\n                                 abWebix.alert({\n                                    text: self.label(\n                                       \"No rows were effected.  This does not seem right.\"\n                                    ),\n                                 });\n                           } catch (err) {\n                              self.AB.notify.developer(err, {\n                                 context: \"ABViewGridComponent.onItemClick\",\n                                 message: \"Error deleting item\",\n                                 obj: CurrentObject.toObj(),\n                                 id: id.row,\n                              });\n\n                              //// TODO: what do we do here?\n                           }\n                        };\n\n                        deleteRow();\n                     }\n\n                     $DataTable.clearSelection();\n\n                     return true;\n                  },\n               });\n            }\n         } else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n      else super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: this.handler_select.bind(this),\n            });\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--)\n         if (!lastCol) {\n            const col = columnHeaders[i];\n\n            if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n               lastCol = col;\n\n               break;\n            }\n         }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      let id = rowData?.id ?? rowData;\n      if (this.__timeout_selectRow) {\n         console.log(\"Duplicate selectRow():\", id);\n         clearTimeout(this.__timeout_selectRow);\n      }\n      this.__timeout_selectRow = setTimeout(() => {\n         const $DataTable = this.getDataTable();\n         if (!$DataTable) return;\n\n         if (!id) $DataTable.unselect();\n         else if ($DataTable.exists(id)) {\n            $DataTable.select(id, false);\n            $DataTable.showItem(id);\n         } else $DataTable.select(null, false);\n\n         this.__timeout_selectRow = null;\n      }, 15);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         // autoheight: true,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      // if popup does not already exist add it\n      if (!$$(this.ids.component)) webix.ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: \"sort\" + webix.uid(),\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               {\n                  view: \"segmented\",\n                  width: 200,\n                  options: [\n                     {\n                        id: \"\",\n                        value: L(\"Please select field\"),\n                     },\n                  ],\n                  on: {\n                     onChange: (/* newv, oldv */) => {\n                        // 'asc' or 'desc' values\n                        this.triggerOnChange();\n                     },\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var segmentButton = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[1];\n         segmentButton.setValue(dir);\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (allFields.length == 0) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            var dir = cView.getChildViews()[1].getValue();\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      sortDir.define(\"options\", options);\n      sortDir.refresh();\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n      $$(this.ids.component).show(view, options);\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.find((f) => f.id == fieldId);\n\n            if (fieldObj) {\n               // Add selected field to list\n               selectedFields.push(fieldObj);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach(function (cView) {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter(function (f) {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter(function (\n               x\n            ) {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter(function (x) {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dir = cView.getChildViews()[1].getValue();\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map(function (item) {\n                     return item.text || item;\n                  })\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      const whereWidget = this.view.settings?.where;\n      if ((whereWidget?.rules ?? []).length) {\n         where.rules.push(whereWidget);\n      }\n\n      const whereClient = this.clientFilter.getValue();\n      if ((whereClient?.rules ?? []).length) {\n         where.rules.push(whereClient);\n      }\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                     newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"cursorStale\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            // QUESTION: is this a problem if the check !(key in (...)) finds\n            // an event that some OTHER widget has added and not this one?\n            if (\n               dc.datacollectionLink &&\n               !(key in (dc.datacollectionLink._events ?? []))\n            )\n               baseView.eventAdd({\n                  emitter: dc.datacollectionLink,\n                  eventName: key,\n                  listener: () => {\n                     baseView.refreshData();\n                  },\n               });\n         });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n         // load data when a widget is showing\n         dc.loadData();\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: key,\n               listener: (...p) => this.displayView(...p),\n            });\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.dataview,\n            view: \"dataview\",\n            scroll: \"y\",\n            sizeToContent: true,\n            css: \"borderless transparent\",\n            xCount: this.settings.xCount,\n            template: (item) => this.itemTemplate(item),\n            on: {\n               onAfterRender: () => {\n                  this.applyClickEvent();\n                  this.addCyAttribute();\n               },\n            },\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n\n      window.addEventListener(\"resize\", () => {\n         clearTimeout(this._resizeEvent);\n         this._resizeEvent = setTimeout(() => {\n            this.resize($dataView.getParentView());\n            delete this._resizeEvent;\n         }, 20);\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.resize();\n   }\n\n   resize(base_element) {\n      const $dataview = $$(this.ids.dataview);\n      $dataview.resize();\n\n      const item_width = this.getItemWidth(base_element);\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth(base_element) {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = base_element ?? $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      if (parentWidth > window.innerWidth) parentWidth = window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 19 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: (...p) => this.displayData(...p),\n            });\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow;\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node\n         .getElementsByClassName(\"webix_template\")[1]\n         ?.removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SAFE_HTML_TAGS = [\n   \"abbr\",\n   \"acronym\",\n   \"b\",\n   \"blockquote\",\n   \"br\",\n   \"code\",\n   \"div\",\n   \"em\",\n   \"i\",\n   \"li\",\n   \"ol\",\n   \"p\",\n   \"span\",\n   \"strong\",\n   \"table\",\n   \"td\",\n   \"tr\",\n   \"ul\",\n   \"h1\",\n   \"h2\",\n   \"h3\",\n   \"h4\",\n   \"h5\",\n];\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      switch (field?.key) {\n         case \"string\":\n         case \"LongText\": {\n            const strVal = val\n               // Sanitize all of HTML tags\n               .replace(/[<]/gm, \"&lt;\")\n               // Allow safe HTML tags\n               .replace(\n                  new RegExp(`(&lt;(/)?(${SAFE_HTML_TAGS.join(\"|\")}))`, \"gm\"),\n                  \"<$2$3\"\n               );\n\n            $detailItem.setValues({ display: strVal });\n            break;\n         }\n         default:\n            $detailItem.setValues({ display: val });\n            break;\n      }\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow;\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   getReportData() {\n      const result = {};\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            const obj = dc.datasource;\n            const objModel = obj.model();\n            const dcCursor = dc.getCursor();\n            const dcValues = [];\n            // const dataList = [];\n\n            // merge cursor to support dc and tree cursor in the report\n            // if (dcCursor) {\n            //    const treeCursor = dc.getCursor(true);\n\n            //    dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n            // } else {\n            //    dataList.push(...this.AB.cloneDeep(dc.getData()));\n            // }\n\n            let where = {};\n            if (dcCursor) {\n               where = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: obj.PK(),\n                        rule: \"equals\",\n                        value: dcCursor[obj.PK()],\n                     },\n                  ],\n               };\n            } else {\n               where = this.AB.merge(\n                  where,\n                  dc.settings?.objectWorkspace?.filterConditions ?? {}\n               );\n            }\n\n            // Pull data that have full relation values.\n            // NOTE: When get data from DataCollection, those data is pruned.\n            const dataList = (\n               await objModel.findAll({\n                  disableMinifyRelation: true,\n                  populate: true,\n                  skip: 0,\n                  where,\n               })\n            ).data;\n\n            // update property names to column labels to match format names in docx file\n            const mlFields = obj.multilingualFields();\n\n            dataList.forEach((data) => {\n               let resultData;\n\n               // For support label of columns every languages\n               obj.fields().forEach((f) => {\n                  const fieldLabels = [];\n\n                  // Query Objects\n                  if (obj instanceof ABObjectQuery) {\n                     if (typeof f.object.translations === \"string\")\n                        f.object.translations = JSON.parse(\n                           f.object.translations\n                        );\n\n                     if (typeof f.translations === \"string\")\n                        f.translations = JSON.parse(f.translations);\n\n                     (f.object.translations || []).forEach((objTran) => {\n                        const fieldTran = (f.translations || []).filter(\n                           (fieldTran) =>\n                              fieldTran.language_code === objTran.language_code\n                        )[0];\n\n                        if (!fieldTran) return;\n\n                        const objectLabel = objTran.label;\n                        const fieldLabel = fieldTran.label;\n\n                        // Replace alias with label of object\n                        fieldLabels.push(`${objectLabel}.${fieldLabel}`);\n                     });\n                  }\n                  // Normal Objects\n                  else if (typeof f.translations === \"string\")\n                     f.translations = JSON.parse(f.translations);\n\n                  f.translations.forEach((tran) => {\n                     fieldLabels.push(tran.label);\n                  });\n\n                  resultData = Object.assign(\n                     resultData ?? {},\n                     this.setReportValues(data, f, fieldLabels, mlFields) ?? {}\n                  );\n\n                  // Keep ABObject into .scope of DOCX templater\n                  resultData._object = obj;\n               });\n\n               dcValues.push(resultData);\n            });\n\n            // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n            const datacollectionData =\n               dcValues.length > 1 ? dcValues : dcValues[0];\n\n            if (\n               isDcLabelAdded ||\n               (Array.isArray(datacollectionData) &&\n                  datacollectionData.length > 1)\n            )\n               (dc.translations || []).forEach((tran) => {\n                  result[tran.label] = datacollectionData;\n               });\n            else Object.assign(result, datacollectionData);\n         });\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[field.columnName];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // Sentry Fix: sometimes v is just the uuid\n               // Q: what should we do in this case?\n               if (typeof v == \"string\") return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n\n                  return defaultVal;\n               } else return defaultVal;\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // delete button\n      if (settings.includeDelete) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.deleteLabel || this.label(\"Delete\"),\n               css: \"webix_danger\",\n               click: function () {\n                  self.onDelete(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button delete ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.view.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            // Catch uncaught error reported in Sentry and add context\n            // APPBUILDER-WEB-1A3(https://appdev-designs.sentry.io/issues/4631880265/)\n            try {\n               saveButton.enable?.();\n            } catch (e) {\n               this.AB.notify.developer(e, {\n                  context:\n                     \"formButton.onSave > catch err > saveButton.enable()\",\n                  buttonID: this?.view?.id,\n                  formID: this?.view?.parent?.id,\n               });\n            }\n         });\n   }\n\n   onDelete(deleteButton) {\n      this.AB.Webix.confirm({\n         title: this.label(\"Delete data\"),\n         text: this.label(\"Do you want to delete this data?\"),\n         callback: async (confirm) => {\n            if (!confirm) return;\n\n            deleteButton.disable?.();\n\n            try {\n               // get form component\n               const form = this.view.parentFormComponent();\n               const $formView = deleteButton.getFormView();\n\n               // delete a record row\n               await form.deleteData($formView);\n            } catch (err) {\n               console.error(err);\n            } finally {\n               deleteButton.enable?.();\n            }\n         },\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n         this.eventAdd({\n            emitter: dc,\n            eventName: key,\n            listener: (rowData) => {\n               const baseView = this.view;\n               const linkViaOneConnection = baseView.fieldComponents(\n                  (comp) => comp instanceof ABViewFormConnect\n               );\n               // clear previous xxx->one selections and add new from\n               // cursor change\n               linkViaOneConnection.forEach((f) => {\n                  const field = f.field();\n                  if (\n                     field?.settings?.linkViaType == \"one\" &&\n                     field?.linkViaOneValues\n                  ) {\n                     delete field.linkViaOneValues;\n                     const relationVals =\n                        rowData?.[field.relationName()] ??\n                        rowData?.[field.columnName];\n                     if (relationVals) {\n                        if (Array.isArray(relationVals)) {\n                           const valArray = [];\n                           relationVals.forEach((v) => {\n                              valArray.push(\n                                 field.getRelationValue(v, { forUpdate: true })\n                              );\n                           });\n                           field.linkViaOneValues = valArray.join(\",\");\n                        } else {\n                           field.linkViaOneValues = field.getRelationValue(\n                              relationVals,\n                              { forUpdate: true }\n                           );\n                        }\n                     }\n                  }\n               });\n\n               this.displayData(rowData);\n            },\n         });\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      // I think this case is currently handled by the DC.[changeCursor, cursorStale]\n      // events:\n      // this.eventAdd({\n      //    emitter: dc,\n      //    eventName: \"ab.datacollection.update\",\n      //    listener: (msg, data) => {\n      //       if (!data?.objectId) return;\n\n      //       const object = dc.datasource;\n\n      //       if (!object) return;\n\n      //       if (\n      //          object.id === data.objectId ||\n      //          object.fields((f) => f.settings.linkObject === data.objectId)\n      //             .length > 0\n      //       ) {\n      //          const currData = dc.getCursor();\n\n      //          if (currData) this.displayData(currData);\n      //       }\n      //    },\n      // });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            this.eventAdd({\n               emitter: linkDv,\n               eventName: key,\n               listener: (rowData) => {\n                  this.displayParentData(rowData);\n               },\n            });\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      // Load data of DCs that are use in record rules here\n      // no need to wait until they are done. (Let the save button enable)\n      // It will be re-check again when saving.\n      baseView.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      const normalFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormItem &&\n            !(comp instanceof ABViewFormCustom)\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else {\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            field.setValue($$(comp.ids.formItem), rowData);\n         });\n      }\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   get multiselect() {\n      return this.field?.settings.linkType == \"many\";\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = this.multiselect; // field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         if (_ui.labelPosition == \"top\") {\n            _ui.labelPosition = \"left\";\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     view: \"label\",\n                     label: field.label,\n                     // height: 22,\n                     align: \"left\",\n                  },\n                  {\n                     cols: [apcUI, _ui],\n                  },\n               ],\n            };\n         } else {\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: field.label,\n                           width: formSettings.labelWidth,\n                           align: \"left\",\n                        },\n                        apcUI,\n                        _ui,\n                     ],\n                  },\n               ],\n            };\n         }\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      if (this.multiselect) {\n         if (typeof data == \"string\") {\n            data = data.split(\",\");\n         }\n      }\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // Q: if we don't have a $formItem, is any of the rest valid?\n      if ($formItem) {\n         // for xxx->one connections we need to populate again before setting\n         // values because we need to use the selected values to add options\n         // to the UI\n         if (this?.field?.settings?.linkViaType == \"one\") {\n            this.busy();\n            await field.getAndPopulateOptions(\n               $formItem,\n               baseView.options,\n               field,\n               baseView.parentFormComponent()\n            );\n            this.ready();\n         }\n\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      this.busy();\n      try {\n         await field.getAndPopulateOptions(\n            // $node,\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewFormConnectComponent > onShow() error calling field.getAndPopulateOptions\",\n         });\n      }\n      this.ready();\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (typeof field == \"undefined\") {\n         console.warn(\n            `BaseView[${baseView.id}] returned an undefined field()`,\n            baseView.toObj()\n         );\n      }\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field?.label ?? \"\")\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (field !== null && !window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      // Sentry Fix: caught an error where this.AB was not set, but this.view was...\n      // attempt to catch this situation and post more data:\n      if (!this.AB) {\n         if (this.view.AB) {\n            this.AB = this.view.AB;\n         } else {\n            let errNoAB = new Error(\n               \"ABViewFormDatePicerComponent:getValue(): AB was not set.\"\n            );\n            // sentry logs the console before the error, so dump the offending view here:\n            console.log(\"view:\", JSON.stringify(this.view.toObj()));\n            throw errNoAB;\n         }\n      }\n      const date = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n\n      if (this.AB.Account?._config?.languageCode == \"th\")\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n      this.type =\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (this.type) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   async onShow() {\n      if (this.type !== \"rich\") return;\n      await this.initTinyMCE();\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(this.ids.formItem);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if ($formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n\n   /**\n    * Ensure TinyMCE has been loaded and initialized.\n    */\n   async initTinyMCE() {\n      await this.AB.custom[\"tinymce-editor\"].init();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      let $item;\n      try {\n         $item = $menu.getMenuItem(itemId);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewMenuComponent > onClick error gettint menu / menu item\",\n            itemId,\n            menu: {\n               id: this.view.id,\n               settings: this.view.settings,\n            },\n         });\n         return;\n      }\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   onShow() {\n      this.initPdfjs();\n      super.onShow();\n   }\n\n   /**\n    * Loads the pdfjs dependecies. We defer loading since it is a large library\n    * that is not needed in the initial page load.\n    */\n   async initPdfjs() {\n      if (this.pdfjs && window.pdfjsWorker) return;\n      this.busy();\n      this.pdfjs = (\n         await import(\n            /* webpackPrefetch: true */\n            \"../../../../init/pdfjs\"\n         )\n      ).default;\n\n      this.ready();\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = $carousel.config.width - 20;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n               onUploadComplete: () => $uploader.destructor(),\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await this.pdfjs.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      // Select all of images by default\n      this.selectAll();\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n/* global pivot */\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n            [\n               pivot.views.table,\n               class CustomTable extends pivot.views.table {\n                  CellFormat(value) {\n                     const decimalPlaces = settings.decimalPlaces ?? 2;\n                     if (!value) value = value === 0 ? \"0\" : \"\";\n                     return value\n                        ? parseFloat(value).toFixed(decimalPlaces)\n                        : value;\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar?.$view?.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    )?.$view?.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId).show(false, false);\n            $sidebar.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\") {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dataview,\n               eventName: key,\n               listener: (...p) => this.displayText(...p),\n            });\n         });\n      }\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) {\n         this.datacollection.once(\"changeCursor\", () => {\n            this.view?.changePage(pageId);\n         });\n         this.datacollection.setCursor(rowId);\n      } else {\n         this.view?.changePage(pageId);\n      }\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.tableName}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.modifyCondition: error:\",\n                  data: options.data,\n               });\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField =\n                              this.queryObject.application.urlResolve(\n                                 emailFieldUrl\n                              );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery =\n                              this.currentForm.AB.datacollectionByID(dcId);\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         var value = op.value;\n\n         switch (value) {\n            case \"ab-current-user\":\n               value = this.currentForm.AB.Account.username();\n               break;\n            case \"ab-current-date\":\n               value = new Date();\n               break;\n         }\n\n         // in the case of a connected Field, we use op.value to get the\n         // datacollection, and find it's currently selected value:\n         if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default: // dataView.getItem(dataView.getCursor());\n                  value = clonedDataCollection.getCursor();\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\": {\n                           let fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                        }\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./formioBuilder\").default,\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./tinyMce\").default,\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function () {\n            return false;\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: Moved from ABDesigner to prevent loading formIO library globally or\n * duplicating it. Revisit when formIOv5 releases as it should then be possible\n * to package the form renderer without the builder.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomFormBuilderBuilder extends ABLazyCustomComponent {\n   get key() {\n      return \"formiobuilder\";\n   }\n\n   constructor(App) {\n      super(App);\n      this.label = this.AB.Label();\n      this.view = this.key;\n   }\n\n   /**\n    * Load the FormIO dependency and add the component to webix\n    * @returns {Promise<null>}\n    */\n   async init() {\n      if (this.initialized) return;\n      const { FormBuilder } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      this.FormBuilder = FormBuilder;\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(this.ui(), this.AB.Webix.ui.popup);\n      this.initialized = true;\n   }\n\n   /**\n    * Generate the custom webix ui\n    * @method ui\n    * @returns {Object} custom webix ui\n    */\n   ui() {\n      return {\n         name: this.key,\n         defaults: {\n            css: \"scrolly forceOpen\",\n            hidden: false,\n            autofit: true,\n         },\n         $init: async function (config) {\n            const comp = this.parseDataFields(config.dataFields);\n            const formComponents = config.formComponents\n               ? config.formComponents\n               : { components: [comp.approveButton.schema] };\n            try {\n               this.builder = new this.FormBuilder(this.$view, formComponents, {\n                  noDefaultSubmitButton: true,\n                  noNewEdit: true,\n                  builder: {\n                     basic: false,\n                     advanced: false,\n                     customBasic: false,\n                     premium: false,\n                     custom: {\n                        title: this.label(\"Fields\"),\n                        weight: 0,\n                        default: true,\n                        components: comp,\n                     },\n                     layout: {\n                        components: {\n                           table: true,\n                        },\n                     },\n                  },\n               });\n               await this.builder.ready;\n            } catch (err) {\n               this.notify(\"Error initializing formio builder\", err);\n            }\n         },\n         // set up a function that can be called to request the form schema\n         getFormData: function () {\n            return this.builder.schema;\n         },\n         // Pass functions into the Webix component to be use in $init\n         label: this.label,\n         parseDataFields: this.parseDataFields,\n         notify: this.AB.notify.developer,\n         FormBuilder: this.FormBuilder,\n      };\n   }\n\n   /**\n    * Generate the formio custom components based on the fields.\n    * Used internally in the webix component.\n    * @method parseDataFields\n    * @param {object[]} fields {field: ABField, key, label, object: ABObject}\n    * @returns {object} each key is a formio component\n    */\n   parseDataFields(fields) {\n      const components = {};\n      fields.forEach(({ field, key, label }) => {\n         if (!field) return;\n\n         const schema = {\n            abFieldID: field.id,\n            label: field.label,\n            disabled: true,\n            key,\n            _key: key,\n            type: \"textfield\",\n            input: true,\n         };\n\n         switch (field.key) {\n            case \"boolean\":\n               schema.type = \"checkbox\";\n               break;\n            case \"calculate\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = ${field.settings.formula\n                  .replace(/{/g, \"data['\")\n                  .replace(/}/g, \"']\")}`;\n               break;\n            case \"connectObject\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = data['${key}.format']`;\n               break;\n            case \"date\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy\";\n               break;\n            case \"datetime\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy h:mm a\";\n               break;\n            case \"email\":\n               schema.type = \"email\";\n               break;\n            case \"file\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"a\";\n               schema.className = \"btn btn-primary btn-block\";\n               schema.content = `<i class='fa fa-paperclip'></i> {{data['${key}']?.filename ?? \"No File\"}}`;\n               schema.attrs = [\n                  {\n                     attr: \"href\",\n                     value: field.urlFile(`{{data['${key}'].uuid}}`),\n                  },\n                  {\n                     attr: \"target\",\n                     value: \"_blank\",\n                  },\n               ];\n               schema.refreshOnChange = true;\n               schema.input = false;\n               break;\n            case \"image\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"img\";\n               schema.className = \"img-thumbnail max100\";\n               schema.content = \"\";\n               (schema.attrs = [\n                  {\n                     attr: \"src\",\n                     value: field.urlImage(`{{data['${key}']}}`),\n                  },\n               ]),\n                  (schema.refreshOnChange = true);\n               schema.input = false;\n               break;\n            case \"list\":\n               var values = [];\n               field.settings.options.forEach((opt) => {\n                  values.push({\n                     label: opt.text,\n                     value: opt.id,\n                  });\n               });\n               schema.type = \"select\";\n               schema.data = { values };\n               schema.multiple = field.settings.isMultiple;\n               break;\n            case \"LongText\":\n               schema.type = \"textarea\";\n               break;\n            case \"number\":\n               schema.type = \"number\";\n               break;\n            case \"TextFormula\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = '${field.settings.textFormula}'`;\n               break;\n            default:\n               break;\n         }\n         components[key] = {\n            title: label,\n            key,\n            icon: field.icon,\n            schema,\n         };\n      });\n\n      components[\"approveButton\"] = {\n         title: this.label(\"Approve Button\"),\n         key: \"approve\",\n         icon: \"check-square\",\n         schema: {\n            label: this.label(\"Approve\"),\n            type: \"button\",\n            key: \"approve\",\n            event: \"approve\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-up\",\n            action: \"event\",\n            theme: \"success\",\n         },\n      };\n      components[\"denyButton\"] = {\n         title: this.label(\"Deny Button\"),\n         key: \"deny\",\n         icon: \"ban\",\n         schema: {\n            label: this.label(\"Deny\"),\n            type: \"button\",\n            key: \"deny\",\n            event: \"deny\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-down\",\n            action: \"event\",\n            theme: \"danger\",\n         },\n      };\n      components[\"customButton\"] = {\n         title: this.label(\"Custom Action Button\"),\n         key: \"custom\",\n         icon: \"cog\",\n         schema: {\n            label: this.label(\"Custom Name\"),\n            type: \"button\",\n            key: \"custom\",\n            event: \"yourEvent\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-cog\",\n            action: \"event\",\n            theme: \"primary\",\n         },\n      };\n      return components;\n   }\n}\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n *\n */\nconst ABLazyCustomComponent = require(\"./lazyComponent.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABLazyCustomComponent {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n      const { Form } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: async function (config) {\n            this.$ready.push(() => this.initForm(config));\n         },\n\n         initForm: async (config) => {\n            var formComponents = config.formComponents ?? {};\n            var formData = config.formData ?? {};\n            const component = $$(config.id);\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  formData[data] = formData[data].map((item) => item.id);\n               }\n            }\n\n            const form = new Form(component.$view, formComponents);\n            // readOnly: true\n            // sanitizeConfig: {\n            //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n            //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n            // }\n            // }).then(function (form) {\n            await form.build();\n            // now that it is set up we can push it into the global var\n            // formBuilder = builder;\n            // Provide a default submission.\n            form.instance.submission = {\n               data: formData,\n            };\n            (formComponents.components || []).forEach((comp) => {\n               if (\n                  comp.type == \"button\" &&\n                  comp.action == \"event\" &&\n                  comp.event\n               ) {\n                  form.instance.once(comp.event, function (/* click */) {\n                     config?.onButton(comp.event);\n                     // _this.emit(\"button\", comp.event);\n                  });\n               }\n            });\n            // });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      this._logic = {};\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(_ui, this.AB.Webix.ui.view);\n      this.initialized = true;\n   }\n};\n","/**\n * Base class for any custom webix component that we want to initalize lazily,\n * usually to reduce the dependency size required on load.\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABLazyCustomComponent extends ABEmitter {\n   constructor({ AB }) {\n      super();\n      this.initialized = false;\n      this.AB = AB;\n      this.setDefaultUI();\n   }\n\n   /**\n    * Sets a default UI used before the actual webix component is ready. Meant as\n    * a helper to future developers.\n    */\n   setDefaultUI() {\n      this.AB.Webix.protoUI(\n         {\n            name: this.key,\n            defaults: {\n               template:\n                  \"This custom webix component has not been initialized. <br>Call AB.custom.#key#.init() before using this component.\",\n               data: { key: this.key },\n            },\n            $init: () =>\n               console.warn(\n                  `${this.key} custom webix component used before being initalized`\n               ),\n         },\n         this.AB.Webix.ui.template\n      );\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\",\n         },\n\n         // override this function to return number value type\n         $getValue: function () {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\",\n         },\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * tinyMce\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomTinyMCE extends ABLazyCustomComponent {\n   get key() {\n      return \"tinymce-editor\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n\n      await import(\n         /* webpackPrefetch: true */\n         \"../js/webix/extras/tinymce.js\"\n      );\n      this.initialized = true;\n   }\n}\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function (obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function () {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function (id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  },\n               },\n            },\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","EventEmitter","constructor","super","this","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","init","AB","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","on","context","err","data","console","error","emit","Promise","canSwitcheroo","r","uuid","length","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","key","fn","filter","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","webix","alert","title","Multilingual","label","text","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","result","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","values","postMissing","arguments","Array","isArray","replace","newKey","slice","postMissingLabel","forEach","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","warn","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","k","l","shift","push","then","catch","toString","indexOf","setTimeout","destroy","save","toObj","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","options","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","type","useThese","search","val","encodeURIComponent","join","_request","put","delete","isNetworkConnected","salSend","packet","_retry","notify","developer","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","socketDataSave","HashSocketJobs","packets","ev","io","socket","jobID","socketDataLog","obj","objectByID","objectId","model","performance","op","normalizeData","socketLog","socketLogClear","isConnected","route","query","match","http","undefined","toLowerCase","request","jwres","statusCode","errStr","body","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","isNetworkSlow","_networkSlow","registerNetworkTestWorker","worker","slow","_networkTestWorker","onmessage","category","level","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","value","clear","remove","clearAll","_storage","config","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthLarge","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","name","pass","fail","toValidationObject","invalidAttributes","attr","updateForm","form","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","UISettings","validator","errorSailsCleanup","raw","hasFocused","attrs","wasForm","elements","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","refresh","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","isValid","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","async","allInits","all","_localSettings","json","definitionSync","def","domain","info","plugins","pluginLoad","p","cloneDeep","rest","emitData","Label","localSettings","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","appType","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","icon","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","fromValues","ViewManager","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","isWebApp","isMobile","datacollectionsExcluded","datacollections","datacollectionsIncluded","sort","sortFn","a","b","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","f","settings","linkObject","linkedObjects","currObjID","linkedObjectID","linkedFields","columnName","deep","_searchDeep","curr","items","resultsCurr","resultsP","concat","processes","hasProcess","process","views","_views","subViews","lookDeep","view","pageViews","subPages","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","application","ABViewManagerMobile","ABApplication","pageDefault","DefaultValues","object","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","sortFields","loadAll","populate","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","static","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","fieldByID","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","__previousCursorId","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","item","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","force","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","fields","found","currRowId","rowId","isCursorFollow","dcFollow","datacollectionFollow","loadData","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","$$","pos","getParentView","index","DC","addView","L","css","click","event","reloadData","removeView","parseTreeCollection","datasourceLink","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","updateRelationalDataFromLinkDC","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","currCursor","updateCursor","ABObject","count","getRelationValue","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDC","eventAdd","emitter","eventName","listener","currentCursor","previousCursorId","isMyDataThere","shouldPopulate","colName","valuesToAdd","valuesIn","valuesToRemove","followDC","followCursor","eventRemove","start","limit","sorts","wheres","__additionalWheres","linkRule","ruleLinkedData","unshift","whereCleanUp","skip","parentDc","waitForDataCollectionToInitialize","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","incomingData","total_count","nextData","remain","splice","parsedData","queuedParse","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkDv","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","dataCollectionLink","linkCursorId","__filterDatasource","filterComplexNew","fieldsLoad","setValue","__filterDatacollection","linkType","isAlreadyThere","allMatch","__filterScope","scopeList","userScopes","s","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","dcLink","cursorLink","linkedField","relatedData","newItem","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","builder","definitionDestroy","definitionUpdate","ABApplicationMobile","ABDefinition","ABComponent","ABFieldManager","ABIndex","ABObjectExternal","ABObjectImport","ABObjectApi","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","ABMobileViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","applicationByID","ID","applicationNew","applicationMobileNew","datacollectionNew","fieldNew","newField","indexNew","objectNew","isExternal","isImported","isAPI","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","objectKey","objectSecret","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","defaults","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","App","idBase","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","objectID","fieldID","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","Fields","FIELD","active","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","unique","fieldIDs","_unknownFieldIDs","field","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","c","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModelApi","readonly","apiType","isFetched","getPagingValues","pagingSettings","paging","dataFromKey","itemResult","dataKey","header","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","displayData","labelData","defaultField","fieldUseAsLabel","trim","noLabelText","newValue","cleanRule","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","list","param","responses","processedIDs","apply","el","AllViews","Views","default","common","V","getFieldVal","pureRelationName","isNaN","_settings","condition","_QueryFields","_Fields","_logic","callbacks","onChange","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","indexField","indexField2","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","Number","queryId","fieldId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","linkViaType","isSource","fieldsAddFiltersString","opt","isCustomFK","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","component","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","checked","checkedCondition","unchecked","notCheckedCondition","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","getValue","isComplete","noValueRules","isCompleteRules","returnSingular","columnId","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","menuName","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","Math","round","floor","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","linkColumn","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldKey","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldIsSortable","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","showIcon","required","width","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","position","places","n","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","decimalVal","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","random","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABMobileView","ABMobilePageDefaults","ABPropertyComponentDefaults","defaultPage","hideTitle","hideTabs","myAppID","menuType","DV","missingPageID","allPageDeletes","allPages","pageRemove","pageInsert","setPageDefault","refreshInstance","page","updateIcon","lookUpIds","mapNewIdFn","copy","ABMobileViewDefaults","labelKey","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","viewIcon","tabIcon","viewIDs","isRoot","height","x","y","dx","dy","allParents","parents","curView","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","dataviewID","_currentObject","errNoDCID","errNoDC","viewByID","viewRemove","viewInsert","viewReorder","viewId","toPosition","findIndex","allViewDeletes","wantsAdd","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","newName","allSaves","p2","vi","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABMobileViewFormCheckboxPropertyComponentDefaults","ABMobileViewFormCheckboxDefaults","ABMobileViewFormConnectPropertyComponentDefaults","formView","popupWidth","popupHeight","ABMobileViewFormConnectDefaults","ABRecordRule","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","showLabel","labelPosition","labelWidth","clearOnLoad","clearOnSave","displayRules","editForm","recordRules","submitRules","objectLoad","componentList","viewsToAllow","fieldComponents","flattenComponents","components","comp","addFieldToForm","yPosition","fieldComponent","formComponentMobile","newInstance","RecordRule","_recordRule","formLoad","fromSettings","rulesReady","doRecordRulesPre","processPre","doRecordRules","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABMobileViewFormDatepickerPropertyComponentDefaults","timepicker","ABMobileViewFormDatepickerDefaults","ABMobileViewFormDatetimePropertyComponentDefaults","ABMobileViewFormDatetimeDefaults","ABMobileViewFormEmailPropertyComponentDefaults","ABMobileViewFormEmailDefaults","ABViewFormFilePropertyComponentDefaults","ABViewFormFileDefaults","ABViewFormFormulaPropertyComponentDefaults","ABViewFormFormulaDefaults","ABMobileViewFormFile","ABViewFormImagePropertyComponentDefaults","ABViewImageFileDefaults","ABViewFormFieldPropertyComponentDefaults","disable","ABMobileViewFormNumberPropertyComponentDefaults","isStepper","ABMobileViewFormNumberDefaults","ABMobileViewFormCustom","ABMobileViewFormReadonlyPropertyComponentDefaults","ABMobileViewFormReadonlyDefaults","ABMobileViewFormSelectSingle","ABMobileViewFormSelectMultiplePropertyComponentDefaults","ABMobileViewFormSelectMultipleDefaults","ABMobileViewFormSelectSinglePropertyComponentDefaults","ABMobileViewFormSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","placeholder","ABViewFormTextboxDefaults","ABViewLabelPropertyComponentDefaults","ABViewDefaults","formatNormal","formatTitle","formatDescription","ABViewListPropertyComponentDefaults","linkPageAdd","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","elem","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","abFieldID","vals","path","pluck","action","myID","listField","ABProcessTaskUserDefaults","ui","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","ABViewCSVExporterPropertyComponentDefaults","buttonLabel","hasHeader","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","rowDatas","ABViewCarouselPropertyComponentDefaults","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","parseIntOrDefault","_this","parseOrDefault","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","multipleSeries","ABViewChartDefaults","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","columns","gravity","movable","viewsSortByPosition","accessLevels","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","urlView","updateAccessLevels","roleId","viewDestroy","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","ABViewDetailDefaults","addFieldToDetail","detailComponent","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","includeDelete","deleteLabel","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","ABViewFormConnectDefaults","formComponent","ABViewFormDatepickerPropertyComponentDefaults","ABViewFormDatepickerDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","padding","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","columnConfig","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getSubMenu","getMenuItem","submenu","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","color","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","year","agenda","timelineSectionList","unitList","export","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","pg","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","ids","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","ABApplicationMobileCore","ABViewPageMobile","newPage","oldPage","CustomComponentManager","uid","actions","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","define","cursorUpdated","__prevLinkDcCursor","hideProgressOfComponents","attachFlexlayout","showProgress","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","hideProgress","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","extend","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","cookie","hide","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","display","onPrevious","delay","ABIndexCore","migrateCreate","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","no_socket_trigger","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","batchCreate","once","newVal","loadInto","DT","logs","update","batchUpdate","rowIds","_handler_object_migrate","fromObj","hasOwnProperty","disableRelatedQueries","fieldDrops","allFields","skipMigrate","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","node","getItemNode","column","customDisplay","allWarnings","w","isUuid","formCleanValues","formCleanData","atomicjs","ABObjectApiCore","insertDataMax","verb","withCredentials","parsedResponse","pendingModelCreate","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","ABViewManagerMobileCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","rows","borderless","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","enable","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiNoneValue","uiUserValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","uiBooleanValue","onAfterRender","queryView","$view","style","zIndex","isQueryField","u","linkObjectId","processFieldKey","pField","popUp","show","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFieldList","getFilterUI","isolate","cols","oldVal","selectCombineCondition","suggest","onBeforeShow","resize","$viewCond","selectField","cells","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","autowidth","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","getChildViews","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","blockOnChange","unblockOnChange","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","ProgressBar","toggleForm","excludeSelected","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","childViews","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","FC","getSettings","ABFieldAutoIndexCore","editor","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsThrottle","_timeToPullData","_getOptionsResolve","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","filterField","dataFieldId","valItem","formVals","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","currVal","selectedVals","cVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","percent","uploadInProgress","showImage","readAsDataURL","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","rotateLeft","imgFile","rotateRight","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onShow","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","linkCol","newLinkDef","setDisplayOptions","ABMobilePageCore","__Handler_ABDEF_UPDATED","__Handler_DEF_UPDATED","removeAllListeners","ABMobileViewCore","viewsToIgnore","ABMobileViewFormCore","ABMobileViewFormButton","refreshDefaultButton","defaultButton","yList","posY","ABMobileViewFormButtonCore","ABMobileViewFormCheckboxCore","ABMobileViewFormConnectCore","__filterComponent","ABMobileViewFormCustomCore","ABMobileViewFormDateCore","ABMobileViewFormDatetimeCore","ABMobileViewFormEmailCore","ABMobileViewFormFileCore","ABMobileViewFormFormulaCore","ABMobileViewFormImageCore","ABMobileViewFormItemCore","ABMobileViewFormNumberCore","ABMobileViewFormReadonlyCore","ABMobileViewFormSelectMultipleCore","ABMobileViewFormSelectSingleCore","ABMobileViewFormTextboxCore","ABMobileViewLabelCore","ABMobileViewListCore","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","onItemClick","modal","fillspace","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgData","ab","align","abWebix","onclick","getNode","fullscreen","exit","head","rotateImage","zoom","showFilterPopup","showPopup","direction","imgElm","getElementById","fetch","cache","inOrOut","imgContainer","imgElem","newHeight","overflow","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","setSettings","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","getFormValues","visibleFields","allVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","fixInvalidMessageUI","$forminput","$height","domInvalidMessage","marginLeft","saveButton","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","loadDcDataOfRecordRules","recordRulesReady","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","CurrentObject","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onBeforeEditStart","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","_deleteConfirmPopup","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","by","byValue","gColName","group","localSettingsSave","old","removeCellCss","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","newData","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","__timeout_selectRow","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","_blockOnChange","uiForm","clickAddNewSort","triggerOnChange","dir","sort_form","viewIndex","listFields","onChangeCombo","refreshFieldList","cView","selectedValue","chosenField","sortDir","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","enableFields","aValue","bValue","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","whereWidget","whereClient","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","$popup","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectField","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","initDetailComponent","scroll","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","_resizeEvent","base_element","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","SAFE_HTML_TAGS","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","strVal","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","disableMinifyRelation","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onDelete","onCancel","onClear","onSave","cancelButton","noPopupFilter","pageCurr","resetButton","buttonID","formID","deleteButton","deleteData","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","relationVals","valArray","displayParentData","applicationLoad","formField","nval","oval","fieldValidating","ms","customFields","normalFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","selectedItems","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","errNoAB","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","newv","oldv","setHTML","tagMode","tagTemplate","selectedOptions","menubar","initTinyMCE","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","initPdfjs","pdfjs","pdfjsWorker","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","toBlob","File","canvasId","showPage","fileBlob","_toBlob","$uploader","onUploadComplete","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_readFileBuffer","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","_uploadImage","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","CellFormat","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","waitInitializingDCEvery","updated","reportModels","dcID","reportFields","getReportFields","refs","moduleID","moduleId","moduleData","queryID","queryIndex","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","MyLocal","Local","_currentModuleID","getQueries","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","linkDc","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","start_date","end_date","all_day","recurring","section","origin_id","sections","uiNav","uiNavPopup","calendars","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","buttonCancel","buttonSave","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","types","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint8Array","Uint16Array","Uint32Array","deflateRaw","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","F","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","max_length","has_stree","dyn_tree","max_code","stat_desc","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","ABCustomFormBuilderBuilder","FormBuilder","autofit","$init","parseDataFields","dataFields","formComponents","approveButton","schema","noDefaultSubmitButton","noNewEdit","basic","advanced","customBasic","premium","weight","getFormData","_key","inputType","calculateValue","refreshOnChange","block","leftIcon","theme","ABLazyCustomComponent","Form","$ready","initForm","submission","onButton","setDefaultUI","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","ABCustomTinyMCE","eachRow","$count","master"],"sourceRoot":""}