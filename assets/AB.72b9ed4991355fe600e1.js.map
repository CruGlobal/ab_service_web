{"version":3,"file":"AB.72b9ed4991355fe600e1.js","mappings":"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BAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,GACbC,aAAc,GACdC,YAAa,GACbC,aAAc,IACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,IACxBC,yBAA0B,IAC1BC,yBAA0B,IAC1BC,wBAAyB,GAGzBC,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,IACjBC,iBAAkB,IAClBC,kBAAmB,IACnBC,mBAAoB,IACpBC,mBAAoB,EAGpBC,YAAY,GC9Cf,GAEGhC,iBAAkB,GAGlBC,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,GAGvBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,IACfC,mBAAoB,GAGpBE,iBAAkB,IAClBC,kBAAmB,IACnBC,iBAAkB,IAClBC,sBAAuB,IAGvBC,aAAc,EACdC,YAAa,EACbC,aAAc,GACdC,YAAa,GACbC,aAAc,GACdC,cAAe,IACfC,eAAgB,IAChBC,uBAAwB,GACxBC,yBAA0B,EAC1BC,yBAA0B,EAC1BC,wBAAyB,EAGzBC,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,IACjBC,iBAAkB,IAClBC,kBAAmB,IACnBE,mBAAoB,EAGpBC,YAAY,GCzCf,GACGpC,OAAQ,WAEL,OAAI3C,OAAOgF,WAAa,IACd,EAEH,CACV,EACAC,MCjBO,CACJ,QACA,eACA,iBACA,eACA,iBACA,SACA,MACA,eACA,gBACA,aACA,cACA,SACA,YACA,sCACA,SACA,UACA,YACA,oBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,QACA,UACA,aACA,oBACA,oBACA,sBACA,sBACA,uBACA,oBACA,qBACA,kBACA,aACA,aACA,cACA,WACA,SACA,aACA,WACA,WACA,mBACA,8BACA,WACA,KACA,oBACA,aACA,WACA,gBACA,MACA,WACA,OACA,YACA,cACA,UACA,OACA,OACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,gBACA,eACA,eACA,kBACA,yBACA,MACA,OACA,UACA,iBACA,OACA,SACA,aACA,eACA,UACA,aACA,gBACA,YACA,mBACA,UACA,YACA,QACA,YACA,cACA,OACA,OACA,OACA,OACA,WACA,aACA,UACA,YACA,MACA,MACA,WACA,aACA,WACA,WACA,MACA,aACA,MACA,aACA,WACA,mBACA,mBACA,aACA,kBACA,mBACA,SACA,eACA,MACA,aACA,aACA,cACA,sBACA,sBACA,uBACA,oBACA,WACA,kBACA,YACA,KACA,UACA,iBACA,cACA,SACA,gBACA,YACA,YACA,UACA,cACA,QACA,eACA,QACA,eACA,iBACA,eACA,iBACA,sBACA,sBACA,uBACA,oBACA,eACA,eACA,gBACA,aACA,QACA,SACA,SACA,WACA,iBACA,cACA,YACA,UACA,QACA,QACA,QACA,iBACA,eACA,MACA,OACA,YACA,UACA,WACA,SACA,MACA,OACA,UACA,UACA,YACA,aACA,eACA,WACA,aACA,UACA,WACA,iBACA,SACA,OACA,YACA,mBACA,cACA,kBACA,OACA,aACA,OACA,OACA,QACA,MACA,UACA,YACA,WACA,WACA,OACA,WACA,SACA,YACA,UACA,aACA,UACA,OACA,SACA,eACA,WACA,WACA,kBACA,oBACA,UACA,SACA,OACA,OACA,UACA,QACA,aACA,aACA,SACA,WACA,aACA,gBACA,kBACA,kBACA,SACA,SACA,OACA,MACA,OACA,WACA,cACA,qBACA,uBACA,SACA,eACA,gBACA,uBACA,MACA,YACA,aACA,KACA,WACA,aACA,oBACA,kBACA,gBACA,eACA,MACA,OACA,SACA,cACA,OACA,iBACA,eACA,cACA,eACA,eACA,eACA,SACA,aACA,eACA,iBACA,oBACA,eACA,YACA,cACA,eACA,cACA,aACA,UACA,OACA,SACA,OACA,oBACA,UACA,cACA,OACA,iBACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,cACA,gBACA,OACA,eACA,YACA,eACA,WACA,UACA,aACA,iBACA,UACA,WACA,UACA,QACA,MACA,KACA,OACA,QACA,aACA,aACA,KACA,YACA,OACA,MACA,aACA,SACA,aACA,gBACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,cACA,qBACA,uBACA,qBACA,gBACA,iBACA,WACA,OACA,QACA,WACA,cACA,cACA,gBACA,cACA,cACA,eACA,YACA,eACA,eACA,iBACA,cACA,kBACA,eACA,cACA,cACA,kBACA,UACA,QACA,SACA,aACA,QACA,UACA,YACA,UACA,OACA,aACA,QACA,YACA,cACA,cACA,cACA,gBACA,iBACA,cACA,kBACA,QACA,QACA,WACA,WACA,UACA,YACA,MACA,QACA,OACA,QACA,SACA,WACA,OACA,cACA,MACA,YACA,cACA,oBACA,WACA,UACA,SACA,SACA,MACA,WACA,MACA,aACA,MACA,WACA,SACA,SACA,gBACA,OACA,UACA,QACA,UACA,aACA,WACA,YACA,YACA,YACA,aACA,cACA,aACA,OACA,WACA,kBACA,SACA,QACA,OACA,WACA,UACA,UACA,iBACA,OACA,kBACA,kBACA,mBACA,gBACA,aACA,QACA,SACA,eACA,aACA,iBACA,OACA,MACA,aACA,QACA,UACA,YACA,OACA,cACA,cACA,gBACA,gBACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,YACA,aACA,mBACA,QACA,eACA,eACA,iBACA,WACA,SACA,eACA,OACA,QACA,SACA,eACA,aACA,gBACA,QACA,UACA,SACA,cACA,eACA,iBACA,gBACA,uBACA,WACA,SACA,QACA,gBACA,UACA,YACA,cACA,cACA,gBACA,YACA,YACA,QACA,QACA,eACA,iBACA,MACA,SACA,SACA,gBACA,kBACA,UACA,QACA,eACA,QACA,YACA,YACA,aACA,iBACA,gBACA,YACA,cACA,mBACA,QACA,OACA,cACA,gBACA,OACA,OACA,cACA,cACA,gBACA,UACA,YACA,QACA,eACA,eACA,KACA,SACA,WACA,kBACA,oBACA,QACA,aACA,cACA,KACA,SACA,UACA,QACA,UACA,SACA,eACA,gBACA,UACA,aACA,SACA,SACA,UACA,SACA,QACA,YACA,aACA,UACA,MACA,OACA,SACA,cACA,eACA,SACA,MACA,aACA,MACA,QACA,QACA,MACA,SACA,OACA,WACA,SACA,SACA,eACA,cACA,SACA,OACA,SACA,SACA,QACA,YACA,mBACA,eACA,iBACA,SACA,SACA,SACA,OACA,eACA,eACA,kBACA,gBACA,SACA,UACA,gBACA,WACA,SACA,UACA,cACA,UACA,WACA,QACA,QACA,UACA,aACA,UACA,WACA,iBACA,kBACA,cACA,gBACA,OACA,iBACA,kBACA,kBACA,mBACA,WACA,YACA,YACA,mBACA,oBACA,UACA,aACA,gBACA,UACA,QACA,UACA,SACA,WACA,iBACA,iBACA,OACA,YACA,kBACA,iBACA,cACA,SACA,QACA,eACA,gBACA,eACA,cACA,cACA,gBACA,OACA,cACA,gBACA,cACA,gBACA,cACA,qBACA,YACA,SACA,WACA,QACA,cACA,cACA,UACA,QACA,SACA,aACA,MACA,OACA,QACA,OACA,WACA,aACA,gBACA,WACA,cACA,aACA,KACA,WACA,UACA,YACA,cACA,gBACA,gBACA,gBACA,gBACA,gBACA,oBACA,mBACA,mBACA,sBACA,6BACA,aACA,cACA,gBACA,cACA,YACA,SACA,QACA,eACA,iBACA,kBACA,oBACA,OACA,cACA,cACA,aACA,YACA,eACA,YACA,YACA,QACA,cACA,kBACA,QACA,UACA,OACA,SACA,cACA,SACA,QACA,MACA,MACA,SACA,gBACA,eACA,KACA,SACA,UACA,iBACA,WACA,YACA,OACA,mBACA,aACA,SACA,SACA,aACA,WACA,SACA,MACA,MACA,OACA,cACA,gBACA,UACA,SACA,YACA,cACA,aACA,QACA,QACA,UACA,QACA,eACA,aACA,UACA,SACA,gBACA,eACA,QACA,eACA,OACA,KACA,uBACA,cACA,aACA,YACA,UACA,SACA,QACA,SACA,WACA,aACA,iBACA,OACA,cACA,eACA,iBACA,kBACA,kBACA,iBACA,UACA,MACA,YACA,aACA,aACA,UACA,SACA,OACA,cACA,eACA,sBACA,Q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","sources":["webpack://ab_platform_web/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://ab_platform_web/./resources/Account.js","webpack://ab_platform_web/./AppBuilder/_factory_utils/Dialog.js","webpack://ab_platform_web/./resources/Multilingual.js","webpack://ab_platform_web/./resources/NetworkRest.js","webpack://ab_platform_web/./resources/NetworkRestSocket.js","webpack://ab_platform_web/./resources/Network.js","webpack://ab_platform_web/./resources/StorageLocal.js","webpack://ab_platform_web/./resources/Storage.js","webpack://ab_platform_web/./resources/Tenant.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configDesktop.js","webpack://ab_platform_web/./AppBuilder/uiSettings/configMobile.js","webpack://ab_platform_web/./AppBuilder/uiSettings/config.js","webpack://ab_platform_web/./AppBuilder/uiSettings/icons.js","webpack://ab_platform_web/./AppBuilder/ABFactory.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationCore.js","webpack://ab_platform_web/./AppBuilder/core/ABApplicationMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDataCollectionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABDefinitionCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFactoryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABFieldManager.js","webpack://ab_platform_web/./AppBuilder/core/ABHintCore.js","webpack://ab_platform_web/./AppBuilder/core/ABIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/ABMLClassCore.js","webpack://ab_platform_web/./AppBuilder/core/ABModelCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectApiCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ABObjectQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/ABProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/ABStepCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ABViewManagerMobileCore.js","webpack://ab_platform_web/./AppBuilder/core/FilterComplexCore.js","webpack://ab_platform_web/./AppBuilder/core/RowFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldAutoIndexCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldBooleanCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCombineCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldDateTimeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFileCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldImageCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldListCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldLongTextCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldStringCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTextFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/dataFields/ABFieldUserCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobilePageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDateCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormDatetimeCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFileCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormFormulaCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormImageCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/mobile/ABMobileViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessLaneCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessParticipantCore.js","webpack://ab_platform_web/./AppBuilder/core/process/ABProcessTaskManager.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessElementCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessEndCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessGatewayExclusiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskEmailCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCalculateCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceInsertRecordCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskServiceQueryCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskSubProcessCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserApprovalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTaskUserExternalCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerLifecycleCore.js","webpack://ab_platform_web/./AppBuilder/core/process/tasks/ABProcessTriggerTimerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLFindCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRootObjectCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRow.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLRowUpdateCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSet.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetFirstCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetPluckCore.js","webpack://ab_platform_web/./AppBuilder/core/ql/ABQLSetSaveCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVExporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCSVImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCarouselCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartAreaCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartBarCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartLineCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewChartPieCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCommentCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConditionalContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewConnectDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewContainerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataFilterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDataviewCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDetailTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewDocxBuilderCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormButtonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCheckboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormConnectCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormCustomCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormDatepickerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormItemCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormJsonCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormNumberCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormReadonlyCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectMultipleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormSelectSingleCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTextboxCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewFormTreeCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGanttCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewGridCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewImageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewKanbanCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLabelCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewLayoutCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewListCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewMenuCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPDFImporterCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPageCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewPivotCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewReportsManagerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewSchedulerCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTabCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewTextCore.js","webpack://ab_platform_web/./AppBuilder/core/views/ABViewWidgetCore.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplication.js","webpack://ab_platform_web/./AppBuilder/platform/ABApplicationMobile.js","webpack://ab_platform_web/./AppBuilder/platform/ABComponent.js","webpack://ab_platform_web/./AppBuilder/platform/ABDataCollection.js","webpack://ab_platform_web/./AppBuilder/platform/ABDefinition.js","webpack://ab_platform_web/./AppBuilder/platform/ABEmitter.js","webpack://ab_platform_web/./AppBuilder/platform/ABHint.js","webpack://ab_platform_web/./AppBuilder/platform/ABIndex.js","webpack://ab_platform_web/./AppBuilder/platform/ABMLClass.js","webpack://ab_platform_web/./AppBuilder/platform/ABModel.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABModelQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABObject.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectApi.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectExternal.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectImport.js","webpack://ab_platform_web/./AppBuilder/platform/ABObjectQuery.js","webpack://ab_platform_web/./AppBuilder/platform/ABProcess.js","webpack://ab_platform_web/./AppBuilder/platform/ABStep.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManager.js","webpack://ab_platform_web/./AppBuilder/platform/ABViewManagerMobile.js","webpack://ab_platform_web/./AppBuilder/platform/CSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/FilterComplex.js","webpack://ab_platform_web/./AppBuilder/platform/RowFilter.js","webpack://ab_platform_web/./AppBuilder/platform/RowUpdater.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABField.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldAutoIndex.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldBoolean.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldCombine.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldConnect.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDate.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldDateTime.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldEmail.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFile.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldImage.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldJson.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldList.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldLongText.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldNumber.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldSelectivity.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldString.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTextFormula.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldTree.js","webpack://ab_platform_web/./AppBuilder/platform/dataFields/ABFieldUser.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobilePage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileView.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDate.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormDatetime.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormEmail.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFile.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormFormula.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormImage.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/mobile/ABMobileViewList.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessLane.js","webpack://ab_platform_web/./AppBuilder/platform/process/ABProcessParticipant.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessElement.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessEnd.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessGatewayExclusive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskEmail.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskService.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceAccountingJEArchive.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceCalculate.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceInsertRecord.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskServiceQuery.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskSubProcess.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUser.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserApproval.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTaskUserExternal.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTrigger.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerLifecycle.js","webpack://ab_platform_web/./AppBuilder/platform/process/tasks/ABProcessTriggerTimer.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQL.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLFind.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLManager.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRootObject.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowSave.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLRowUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetFirst.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetPluck.js","webpack://ab_platform_web/./AppBuilder/platform/ql/ABQLSetSave.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABView.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVExporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCSVImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCarouselComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewCarousel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChart.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartArea.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartBar.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartLine.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewChartPie.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewComment.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConditionalContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConnectDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewConnectDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewContainer.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataFilterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataFilter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDataview.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetail.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDetailTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewDocxBuilder.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewForm.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormButton.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCheckbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormConnect.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormCustom.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormDatepicker.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormItem.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormJson.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormNumber.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormReadonly.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectMultiple.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormSelectSingle.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTextbox.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewFormTree.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGanttComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGantt.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupExport.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupMassUpdate.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewGridComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGrid.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewGridPopupSortFields.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewImage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanban.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewKanbanFormSidePanel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLabel.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewLayout.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewList.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewMenu.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPDFImporter.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewPivot.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewReportsManager.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewScheduler.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewTab.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewText.js","webpack://ab_platform_web/./AppBuilder/platform/views/ABViewWidget.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVExporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCSVImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartAreaComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartBarComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartLineComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewChartPieComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewCommentComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewConditionalContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewContainerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDataviewComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDetailTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewDocxBuilderComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormButtonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCheckboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormConnectComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormCustomComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormDatepickerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormItemComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormJsonComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormNumberComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormReadonlyComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectMultipleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormSelectSingleComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTextboxComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewFormTreeComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewImageComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewKanbanComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLabelComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewLayoutComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewListComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewMenuComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPDFImporterComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewPivotComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewReportsManagerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewSchedulerComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTabComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewComponent/ABViewTextComponent.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewProperty.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyAddPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyEditPage.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyFilterData.js","webpack://ab_platform_web/./AppBuilder/platform/views/viewProperties/ABViewPropertyLinkPage.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewQueryBuilderObjectFieldConditions.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRule.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleAction.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleList.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormRecordRules.js","webpack://ab_platform_web/./AppBuilder/rules/ABViewRuleListFormSubmitRules.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleInsertConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdate.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleClosePopup.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleEmail.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleExistPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleParentPage.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionFormSubmitRuleWebsite.js","webpack://ab_platform_web/./AppBuilder/rules/ruleActions/ABViewRuleActionObjectUpdater.js","webpack://ab_platform_web/./js/docxtemplater-image-module.v3.0.2.min.js","webpack://ab_platform_web/./js/docxtemplater.v3.0.12.min.js","webpack://ab_platform_web/./js/jszip.min.js","webpack://ab_platform_web/./webix_custom_components/activelist.js","webpack://ab_platform_web/./webix_custom_components/countfooter.js","webpack://ab_platform_web/./webix_custom_components/customComponentManager.js","webpack://ab_platform_web/./webix_custom_components/datetimepicker.js","webpack://ab_platform_web/./webix_custom_components/editlist.js","webpack://ab_platform_web/./webix_custom_components/edittree.js","webpack://ab_platform_web/./webix_custom_components/editunitlist.js","webpack://ab_platform_web/./webix_custom_components/focusableTemplate.js","webpack://ab_platform_web/./webix_custom_components/formioBuilder.js","webpack://ab_platform_web/./webix_custom_components/formioPreview.js","webpack://ab_platform_web/./webix_custom_components/lazyComponent.js","webpack://ab_platform_web/./webix_custom_components/numbertext.js","webpack://ab_platform_web/./webix_custom_components/thaicalendar.js","webpack://ab_platform_web/./webix_custom_components/timepicker.js","webpack://ab_platform_web/./webix_custom_components/tinyMce.js","webpack://ab_platform_web/./webix_custom_components/totalfooter.js","webpack://ab_platform_web/./webix_custom_components/treesuggest.js"],"sourcesContent":["var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-ps\": 68634,\n\t\"./ar-ps.js\": 68634,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 69038,\n\t\"./bs.js\": 69038,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 68131,\n\t\"./es-mx.js\": 68131,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku-kmr\": 36063,\n\t\"./ku-kmr.js\": 36063,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var EventEmitter = require(\"events\").EventEmitter;\n\nclass Account extends EventEmitter {\n   constructor() {\n      super();\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._listRoles = null;\n      // {array}\n      // a list of all the Defined Roles in the Tenant's system.\n\n      this._listScopes = null;\n      // {array | null}\n      // a list of all the Defined Scopes in the Tenant's sytem.\n\n      this._listUsers = null;\n      // {array | null}\n      // a list of all the Defined Users in the Tenant's system.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var UserConfig = this.AB.Config.userConfig();\n      if (UserConfig) {\n         this.isAuthenticated = true;\n         this._config = UserConfig;\n      }\n\n      var MetaConfig = this.AB.Config.metaConfig();\n      if (MetaConfig) {\n         this._listRoles = MetaConfig.roles || [];\n         this._listScopes = MetaConfig.scopes || [];\n         this._listUsers = MetaConfig.users || [];\n      }\n\n      this.AB.Network.on(\"account.logout\", (context, err, data) => {\n         if (err) {\n            console.error(err);\n            return;\n         }\n         this.emit(\"logout\", data);\n      });\n\n      return Promise.resolve();\n   }\n\n   canSwitcheroo() {\n      return (\n         this.roles((r) => r.uuid === \"320ef94a-73b5-476e-9db4-c08130c64bb8\")\n            .length > 0\n      );\n   }\n\n   isSwitcherood() {\n      return this.AB.Config.userReal();\n   }\n\n   isSystemDesigner() {\n      return (\n         this.roles((r) => r.uuid === \"6cc04894-a61b-4fb5-b3e5-b8c3f78bd331\")\n            .length > 0\n      );\n   }\n\n   email() {\n      return this._config?.email ?? \"\";\n   }\n\n   language() {\n      return this._config?.languageCode ?? \"en\";\n   }\n\n   logout() {\n      return this.AB.Network.post(\n         {\n            url: \"/auth/logout\",\n            data: { tenantUrl: this.AB.Tenant.setting(\"url\") },\n         },\n         {\n            key: \"account.logout\",\n            context: {},\n         }\n      );\n   }\n\n   roles(fn = () => true) {\n      return (this._config?.roles || []).filter(fn);\n   }\n   rolesAll() {\n      return this._listRoles;\n   }\n\n   scopes() {\n      return this._listScopes;\n   }\n\n   username() {\n      return this._config?.username;\n   }\n\n   userList() {\n      return this._listUsers;\n   }\n\n   uuid() {\n      return this._config?.uuid;\n   }\n\n   imageID() {\n      return this._config?.image_id;\n   }\n\n   sendEmailNotifications() {\n      return this._config?.sendEmailNotifications;\n   }\n}\n\nexport default new Account();\n","//\n// Dialog\n// A common set of UI dialogs to show the User.\n//\n// NOTE: IN TRANSITION: this is our previous method of handling\n// dialogs.  In future, refactor to use webix directly in code.\n//\n\nexport default {\n   // Instance properties\n\n   // Alert\n   // A dialogue that popup with a message, and requires an [ok] button press\n   Alert: function (opts) {\n      webix.alert({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\"opp.dialog.alert.title\", \"*Alert\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.alert.text\",\n               \"*Something is wrong.\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.dialog.alert.ok\", \"*OK\"),\n      });\n   },\n\n   // Confirm\n   // A [Yes] [No] dialogue that pops up with a message\n   Confirm: function (opts) {\n      var title =\n         opts.title ||\n         AB.Multilingual.label(\"opp.dialog.confirm.confirmTitle\", \"* Confirm\");\n      var message =\n         opts.text ||\n         opts.message ||\n         AB.Multilingual.label(\n            \"opp.dialog.confirm.confirmMsg\",\n            \"* Are you sure you want to do this?\"\n         );\n\n      var labelYes =\n         opts.labelYes ||\n         opts.ok ||\n         AB.Multilingual.label(\"opp.common.yes\", \"* yes\");\n      var labelNo =\n         opts.labelNo ||\n         opts.cancel ||\n         AB.Multilingual.label(\"opp.common.no\", \"* no\");\n\n      // var fnYes = opts.fnYes || function () { };\n      // var fnNo = opts.fnNo || function () { };\n\n      webix.confirm({\n         title: title,\n         text: message,\n\n         ok: labelYes,\n         cancel: labelNo,\n\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n\n      // bootbox.dialog({\n      //     title: title,\n      //     message: message,\n      //     buttons: {\n      //         yes: {\n      //             label: labelYes,\n      //             className: 'btn-primary',\n      //             callback: fnYes\n      //         },\n      //         no: {\n      //             label: labelNo,\n      //             className: 'btn-default',\n      //             callback: fnNo\n      //         }\n      //     }\n      // });\n   },\n\n   // ConfirmDelete\n   // A Confirm dialogue geared towards deleting items.\n   // [delete] [cancel]\n   ConfirmDelete: function (opts) {\n      this.Confirm({\n         title:\n            opts.title ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteTitle\",\n               \"* Confirm Delete\"\n            ),\n         ok: opts.ok || AB.Multilingual.label(\"opp.common.delete\", \"* Delete\"),\n         cancel:\n            opts.cancel ||\n            AB.Multilingual.label(\"opp.common.cancel\", \"* Cancel\"),\n         text:\n            opts.text ||\n            opts.message ||\n            AB.Multilingual.label(\n               \"opp.dialog.confirm.deleteMsg\",\n               \"* Are you sure you want to delete this?\",\n               [\"this\"]\n            ),\n         callback: function (result) {\n            if (result) {\n               if (opts.fnYes) opts.fnYes();\n            } else {\n               if (opts.fnNo) opts.fnNo();\n            }\n\n            if (opts.callback) opts.callback(result);\n         },\n      });\n   },\n\n   // Message\n   // A simple message displayed to the user.  Can time out\n   Message: function (opts) {\n      var message = opts.text || opts.message;\n      var timeout = opts.timeout || 2000;\n\n      webix.message({\n         text: message,\n         expire: timeout,\n      });\n   },\n};\n","/*\n * Multilingual\n * manage our multilingual Translations/Labels/etc.\n */\n\nvar MLClass = require(\"../AppBuilder/platform/ABMLClass\");\n\nclass Multilingual extends MLClass {\n   constructor() {\n      super([], {});\n      // super()\n      //    [] = no labels\n      //    {} = placeholder ABFactory entry until .init() is called.\n\n      this.isAuthenticated = false;\n      this._config = null;\n\n      this._missingLabelID = false;\n      this._missingLabels = {};\n      this._pluginLabelsMissing = {};\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.labels = this.AB.Config.labelConfig();\n      this._languages = this.AB.Config.languageConfig();\n\n      this.pluginLabels = {};\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   currentLanguage() {\n      return this.AB.Account.language();\n   }\n\n   label(key, altText, values = [], postMissing = true) {\n      // part of our transition: L(\"single string\") should start to work:\n      if (typeof altText == \"undefined\" && key) {\n         altText = key;\n      }\n\n      // other case: L(\"single string {0}\", [])\n      if (arguments.length == 2 && Array.isArray(altText)) {\n         values = altText;\n         altText = key;\n      }\n\n      // We need to escape \" characters or else they will get added to the the lang.js\n      // then we get errors next time we try to parse it as JSON (see appbuilder.label-missing)\n      altText = altText.replace(/\"/g, '\\\\\"');\n      key = key.replace(/\"/g, '\\\\\"');\n\n      // NOTE: transition to new Labels\n      // currently our code still uses the L(key, altText, values) format, but\n      // the labels we get back are in L(altText, values) format.\n      //\n      // we are going to keep this like this until we have a well functioning\n      // UI display of our Apps, which should flesh out most of the missing\n      // labels to our files.\n      //\n      // After that, convert our L(k, t, v) to L(t, v)\n\n      var newKey = altText;\n      if (newKey[0] == \"*\") {\n         newKey = newKey.slice(1);\n      }\n      var label = this.labels[newKey];\n      if (!label) {\n         if (postMissing) {\n            this.postMissingLabel(key, altText);\n         }\n         label = altText;\n      }\n\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      label = label.replace(/\\\\\"/g, '\"'); // unescape \" in the label\n      return label;\n   }\n\n   labelPlugin(plugin, altText, values = []) {\n      // 1st check to see if it is a common label from platform:\n      var label = this.label(altText, altText, values, false);\n      if (!label) {\n         // ok, so check to see if it is a Plugin Label:\n         label = this.pluginLabels[plugin][altText];\n      }\n      if (!label) {\n         // !! record it missing.\n         this._pluginLabelsMissing[plugin] =\n            this._pluginLabelsMissing[plugin] || {};\n         this._pluginLabelsMissing[plugin][altText] = altText;\n         label = altText;\n      }\n      values.forEach((v, i) => {\n         var sub = `{${i}}`;\n         label = label.replaceAll(sub, v);\n      });\n      return label;\n   }\n\n   languages() {\n      return this._languages;\n\n      // console.error(\n      //    \"Multilingual:languages(): Implement Language Storage/Retrieval.\"\n      // );\n      // return [];\n   }\n\n   pluginLoadLabels(key, labels) {\n      this.pluginLabels[key] = labels;\n   }\n   pluginLabelReport(key) {\n      console.warn(\"missing labels for plugin: \", key);\n      console.warn(\"current language:\", this.currentLanguage());\n      var labels = JSON.stringify(this._pluginLabelsMissing[key], null, 3);\n      console.warn(labels);\n   }\n\n   postMissingLabel(key, altText) {\n      if (this._missingLabelID) {\n         clearTimeout(this._missingLabelID);\n      }\n      var batchLength = 50;\n      var sendBatch = () => {\n         var batchLabels = [];\n         let missingLabels = Object.keys(this._missingLabels).map(\n            (k) => this._missingLabels[k]\n         );\n         if (missingLabels.length <= batchLength) {\n            batchLabels = missingLabels;\n            this._missingLabels = {};\n         } else {\n            for (var i = 0; i <= batchLength; i++) {\n               var l = missingLabels.shift();\n               batchLabels.push(l);\n               delete this._missingLabels[l.key];\n            }\n         }\n         this.AB.Network.post({\n            url: \"/multilingual/label-missing\",\n            data: { labels: JSON.stringify(batchLabels) },\n         })\n            .then(() => {\n               if (Object.keys(this._missingLabels).length > 0) {\n                  sendBatch();\n               }\n            })\n            .catch((err) => {\n               const strErr = err.toString();\n               if (strErr.indexOf(\"unable to get\") > -1) {\n                  console.error(\n                     \"Missing language file for :\" + this.currentLanguage()\n                  );\n               }\n            });\n      };\n      this._missingLabelID = setTimeout(() => {\n         sendBatch();\n      }, 1000);\n\n      this._missingLabels[key] = { key, altText };\n   }\n   ///\n   /// Disable un-needed ABMLClass functionality\n   ///\n   /// NOTE: we are mainly Piggybacking on ABMLClass for it's\n   /// .translate() and .unTranslate() capabilities. So disable these\n   /// for good measure.\n   destroy() {\n      console.error(\"Multilingual:destroy(): Should not be called.\");\n      return Promise.resolve();\n   }\n   save() {\n      console.error(\"Multilingual:save(): Should not be called.\");\n      return Promise.resolve();\n   }\n   toObj() {\n      console.error(\"Multilingual:toObj(): Should not be called.\");\n      return {};\n   }\n   toDefinition() {\n      console.error(\"Multilingual:toDefinition(): Should not be called.\");\n      return {};\n   }\n}\n\nexport default new Multilingual();\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\n/* global Connection */\n// import Account from \"./Account\";\n// import analytics from \"./Analytics\";\n// import EventEmitter from \"eventemitter2\";\nvar EventEmitter = require(\"events\").EventEmitter;\n// import Lock from \"./Lock\";\n\n// import { storage } from \"./Storage\";\n// import Tenant from \"./Tenant\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// Temp placeholders until Resources are implemented:\n\n// End Temp\n\nconst Atomic = require(\"atomicjs/dist/atomic.min.js\");\n// Atomic : a small $.ajax() replacement\n\nvar Config = null;\n// {} Config\n// the site specific configuration information\n\nclass NetworkRest extends EventEmitter {\n   constructor(parent) {\n      // {Network} parent\n\n      super({\n         wildcard: true,\n         newListener: false,\n         maxListeners: 0,\n      });\n\n      this.baseURL = null;\n      // {string} .baseURL\n      // the url of our site.\n\n      this.numRetries = 3;\n      // {int} .numRetries\n      // the number or times we should attempt to issue a network request.\n\n      this._network = parent;\n      // {Network} ._network\n      // the Parent Network Resource that the rest of the Platform actually\n      // works with.\n\n      this.isRealTime = false;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n   }\n\n   /**\n    * @method init\n    * @param {ABFactory} AB\n    * @param {object} options\n    * @param {string} options.baseURL\n    * @return {Promise}\n    */\n   init(AB, options) {\n      this.AB = AB;\n\n      Config = this.AB.Config.siteConfig();\n      options = options || {};\n      if (options) {\n         this.baseURL = options.baseURL || Config.appbuilder.urlCoreServer;\n         this.numRetries =\n            options.networkNumRetries || Config.appbuilder.networkNumRetries;\n      }\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(params, jobResponse) {\n      params.type = params.type || \"GET\";\n\n      // data sent to params on a \"GET\" request need to be converted to\n      // uri querystring values:\n      var data = params.data || params.params;\n      if (data) {\n         var useThese = [\"string\", \"number\", \"boolean\"];\n         var search = Object.keys(data)\n            .map(function (key) {\n               var val = data[key];\n               if (useThese.indexOf(typeof val) == -1) {\n                  val = JSON.stringify(val);\n               }\n               return key + \"=\" + encodeURIComponent(val);\n            })\n            .join(\"&\");\n\n         var join = \"?\";\n         if (params.url.indexOf(\"?\") > -1) {\n            join = \"&\";\n         }\n         params.url = [params.url, search].join(join);\n      }\n\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(params, jobResponse) {\n      params.type = params.type || \"POST\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(params, jobResponse) {\n      params.type = params.type || \"PUT\";\n      return this._request(params, jobResponse);\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(params, jobResponse) {\n      params.type = params.type || \"DELETE\";\n      return this._request(params, jobResponse);\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return this._network.isNetworkConnected();\n   }\n\n   salSend(params) {\n      return Atomic(params.url, params).then((packet) => {\n         // {json} packet\n         // the response from Atomic is in format:\n         // {data: {…}, xhr: XMLHttpRequest}\n         // we just want to send back our { status:\"\", data:xxx } packet.\n         return packet.data;\n      });\n   }\n\n   /**\n    * _request()\n    * perform the actual AJAX request for this operation.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   _request(params, jobResponse) {\n      // make sure we don't process too many retries:\n      params._retry = params._retry || 0;\n      if (params._retry >= this.numRetries) {\n         var err = new Error(\n            `Too many retries (${this.numRetries}) for ${params.url}`\n         );\n         err.code = \"E_TOMANYRETRIES\";\n         this.AB.notify.developer(err, {\n            context: \"NetworkRest:_request: Too Many Retries\",\n         });\n         // this.AB.Analytics.logError(err);\n         if (jobResponse) {\n            this._network.publishResponse(jobResponse, err);\n         }\n\n         return Promise.reject(err);\n      }\n\n      return new Promise((resolve, reject) => {\n         params.url = params.url || \"/\";\n         if (params.url[0] == \"/\") {\n            params.url = this.baseURL + params.url;\n         }\n\n         params.headers = params.headers || {};\n         if (this.AB.Account.authToken) {\n            params.headers.Authorization = this.AB.Account.authToken;\n         }\n         params.headers[\"Content-type\"] = \"application/json\";\n\n         var tenantID = this.AB.Tenant.id();\n         if (tenantID) {\n            params.headers[\"tenant-token\"] = tenantID;\n         }\n\n         // params.timeout = params.timeout || 6000;\n\n         if (this.isNetworkConnected()) {\n            params.method = params.method || params.type;\n            params.timeout = 6000; // ??\n            params.data = params.data || params.params;\n            delete params.params;\n\n            this.salSend(params)\n               .then((packet) => {\n                  // TODO: check if packet.status == \"error\"\n                  // and then .publishResponse() as an error\n\n                  //\n                  var data = packet;\n                  if (jobResponse) {\n                     this._network.publishResponse(jobResponse, null, data);\n                  }\n                  resolve(data);\n               })\n               .catch((err) => {\n                  // err.status\n                  // err.statusText\n                  // err.responseText\n                  // err.message  {socket}\n                  // err.stack    {socket}\n\n                  // if this is a network connection error, send the attempt again:\n                  if (\n                     err.statusText == \"Request timeout\" ||\n                     (err.message && err.message.indexOf(\"disconnected\") > -1)\n                  ) {\n                     //// Network Error: conneciton refused, access denied, etc...\n                     this.AB.Analytics.log(\n                        \"NetworkRest._request():network connection error detected. Trying again\"\n                     );\n\n                     params._retry++;\n\n                     // retry the attempt:\n                     this._request(params)\n                        .then((data) => {\n                           // console.log('--- timeout.then():',data);\n                           this.AB.warn(\n                              \"*** NetworkRest._request().then(): attempt resolved.\"\n                           );\n                           resolve(data);\n                        })\n                        .catch((_err) => {\n                           this.AB.notify.developer(_err, {\n                              message:\n                                 \"*** NetworkRest._request().catch(): retry failed:\",\n                           });\n                           reject(_err);\n                        });\n\n                     return;\n                  } else {\n                     // Else attempt to emit() some common Error types for\n                     // additional Platform Handling.\n                     if (err.status == 403) {\n                        this.emit(\"error.badAuth\", err);\n                     } else if (err.status >= 400 && err.status < 500) {\n                        this.emit(\"error.badRequest\", err);\n                     } else if (err.status >= 500) {\n                        this.emit(\"error.badServer\", err);\n                     }\n                  }\n\n                  var packet = null;\n                  if (err.responseText) {\n                     try {\n                        packet = JSON.parse(err.responseText);\n                     } catch (e) {\n                        /* ignore */\n                     }\n                  }\n                  // if this is an req.ab.error() response:\n                  if (packet && packet.status == \"error\") {\n                     // check if REAUTH Error:\n                     if (packet.id == 5 || packet.code == \"E_REAUTH\") {\n                        this._network.emit(\"reauth\");\n                        return;\n                     }\n\n                     this.AB.notify.developer(new Error(packet.message), {\n                        context:\n                           \"NetworkRest:_request:Error returned from Server (req.ab.error())\",\n                        data: packet.data,\n                        status: packet.status,\n                     });\n                     // this.AB.Analytics.logError(packet.data);\n                     // this.AB.error(packet.data);\n                     if (jobResponse) {\n                        this._network.publishResponse(\n                           jobResponse,\n                           packet,\n                           null\n                        );\n                     }\n                     return reject(packet.data);\n                  } else {\n                     // unknown/unexpected error:\n                     var error = new Error(\n                        `${err.status} ${err.statusText || err.message}: ${\n                           params.method\n                        } ${params.url}`\n                     );\n                     error.response = err.responseText;\n                     error.text = err.statusText;\n                     error.err = err;\n                     error.url = `${params.method} ${params.url}`;\n                     this.AB.notify.developer(error, {\n                        context:\n                           \"NetworkRest:_request:Unknown Error returned from server\",\n                        err,\n                        response: err.responseText,\n                        text: err.statusText || err.message,\n                        url: error.url,\n                     });\n                     // this.AB.Analytics.logError(error);\n                     // this.AB.error(error);\n                     if (jobResponse) {\n                        this._network.publishResponse(jobResponse, error);\n                     }\n                     return reject(error);\n                  }\n               });\n         } else {\n            // now Queue this request params.\n            this.AB.Analytics.log(\n               \"NetworkRest:_request(): Network is offline. Queuing request.\"\n            );\n            this._network\n               .queue(params, jobResponse)\n               .then(() => {\n                  resolve({ status: \"queued\" });\n               })\n               .catch(reject);\n         }\n      });\n   }\n\n   /**\n    * resend()\n    * processes messages that were queued due to network connectivity\n    * issues.\n    * @param {obj} params  the jQuery.ajax() formatted params\n    * @param {obj} jobRequest  the information about the request's response.\n    * @return {Promise}\n    */\n   resend(params, jobResponse) {\n      // var op = params.type.toLowerCase();\n      return this._request(params, jobResponse);\n   }\n}\n\nexport default NetworkRest;\n","/*\n * NetworkRest.js\n * The base Networking class.  This class is responsible for job submissions\n * and outlines the basic Network interface.\n */\n\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\n\nconst listSocketEvents = [\n   // NOTE: ABFactory.definitionXXX() will manage emitting these\n   // events internally:\n   // \"ab.abdefinition.create\",\n   // \"ab.abdefinition.update\",\n   // \"ab.abdefinition.delete\",\n   \"ab.datacollection.create\",\n   \"ab.datacollection.update\",\n   \"ab.datacollection.stale\",\n   \"ab.datacollection.delete\",\n   \"ab.inbox.create\",\n   \"ab.inbox.update\",\n   // \"ab.object.update\",\n];\n// {array}\n// The io.socket.* events we are listening for that relate to our datacollection\n// maintainence.\n\nfunction socketDataSave(key, length) {\n   if (!HashSocketJobs[key]) {\n      HashSocketJobs[key] = {\n         packets: 0,\n         length: 0,\n      };\n   }\n\n   HashSocketJobs[key].packets++;\n   HashSocketJobs[key].length += length;\n}\nfunction socketDataLog(AB, key, data) {\n   let length = \"??\";\n   try {\n      length = JSON.stringify(data).length;\n   } catch (e) {\n      console.log(e);\n      //\n   }\n\n   if (data.objectId) {\n      let obj = AB.objectByID(data.objectId);\n      console.warn(`socket: ${key} ${obj.label ?? obj.name}(${length})`, data);\n   } else {\n      console.warn(`socket: ${key} (${length})`, data);\n   }\n\n   if (data.jobID) {\n      socketDataSave(data.jobID, length);\n      socketDataSave(`${data.jobID}-${key}`, length);\n   }\n}\n\nlet HashSocketJobs = {\n   /* jobID : { #packets, length } */\n};\n\nclass NetworkRestSocket extends NetworkRest {\n   constructor(parent) {\n      // {Network} parent\n\n      super(parent);\n\n      this.isRealTime = true;\n      // {bool}\n      // does this Network type support RealTime updates. (socket = true);\n\n      // Pass the io.socket.on(*) events to our AB factory.\n      listSocketEvents.forEach((ev) => {\n         io.socket.on(ev, (data) => {\n            socketDataLog(this.AB, ev, data);\n\n            // check if the ev contains 'datacollection'\n            // and do a single normalizeData() on the incoming data here\n            // before sending it off to be processed.\n            if (ev.indexOf(\"ab.datacollection\") > -1) {\n               let values = data.data;\n               if (values) {\n                  let obj = this.AB.objectByID(data.objectId);\n                  if (obj) {\n                     let model = obj.model();\n                     if (ev != \"ab.datacollection.delete\") {\n                        let jobID = this.AB.jobID();\n                        performance.mark(`${ev}:normalization`, {\n                           op: \"function\",\n                           data: { jobID },\n                        });\n                        model.normalizeData(data.data);\n                        performance.measure(`${ev}:normalization`);\n                     }\n                  }\n               }\n            }\n            this.AB.emit(ev, data);\n         });\n      });\n   }\n\n   //\n   // Interface API\n   //\n\n   socketLog() {\n      console.warn(JSON.stringify(HashSocketJobs, null, 4));\n   }\n\n   socketLogClear() {\n      HashSocketJobs = {};\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   isNetworkConnected() {\n      return io.socket.isConnected();\n   }\n\n   salSend(params) {\n      let route, query;\n      try {\n         // Extract paramitized route (ex: `/app_builder/model/:ID`) for performance tracking\n         [, route, query] = params.url.match(\n            /https?:\\/\\/[^/]+(\\/[^?]+)\\??(.*)/\n         );\n         route = route.replace(/\\b[a-fA-F\\d-]{36}\\b/g, \":ID\");\n         performance.mark(route, {\n            op: \"websocket.client\",\n            data: {\n               http: {\n                  query: query || undefined,\n                  method: params.method,\n               },\n               url: params.url,\n            },\n         });\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: `salSend() create performance.mark`,\n         });\n      }\n\n      return new Promise((resolve, reject) => {\n         params.method = params.method.toLowerCase();\n\n         io.socket.request(params, (data, jwres) => {\n            // {json} data\n            // the data response from the request\n            // {json} jwres\n            // A JSON WebSocket Response object.\n            //    {json} jwres.headers :  header values\n            //    {int}  jwres.statusCode : http response code\n            //    {json} jwres.body === resData\n\n            // if this is an  error\n            if (jwres.statusCode >= 400) {\n               // Our NetworkRest.error( err ) should be in this format:\n               // err.status\n               // err.statusText\n               // err.responseText\n\n               var errStr = jwres.error ? jwres.error.toString() : jwres.body;\n\n               var err = new Error(`Socket Error: ${errStr}`);\n               err.status = jwres.statusCode;\n               err.statusText = errStr;\n               err.responseText = jwres.body;\n\n               // on RequestTimeout:\n               // err.statusText == \"Request timeout\"\n\n               reject(err);\n            } else {\n               // some errors like socket disconnected return an Error for data\n               if (data instanceof Error) {\n                  reject(data);\n                  return;\n               }\n\n               if (typeof data == \"string\") {\n                  performance.mark(\"JSON.parse\", { op: \"serialize\" });\n                  data = JSON.parse(data);\n                  performance.measure(\"JSON.parse\");\n               }\n\n               // Got a JSON response but was the service response an error?\n               // this would be a strange case where the .statusCode < 400\n               if (data?.status == \"error\") {\n                  // make sure to reject an err.responseText = data\n                  reject({\n                     status: jwres.statusCode,\n                     responseText: JSON.Stringify(data),\n                  });\n               }\n               // Success!\n               else {\n                  performance.measure(route);\n                  resolve(data);\n               }\n            }\n         });\n      });\n   }\n}\n\nexport default NetworkRestSocket;\n","/*\n * Network.js\n * A network manager for interfacing with our AppBuilder server.\n */\n/* global Connection */\nvar EventEmitter = require(\"events\").EventEmitter;\nimport performance from \"../utils/performance\";\nimport NetworkRest from \"./NetworkRest\";\nimport NetworkRestSocket from \"./NetworkRestSocket\";\n// import NetworkRelay from \"./NetworkRelay\";\n\nclass Network extends EventEmitter {\n   constructor() {\n      super();\n\n      this.setMaxListeners(0);\n      // we'll have > 10 for sure!\n\n      this.queueLock = null;\n      // {Lock} .queueLock\n      // our semaphore for coordinating our access to our local storage.\n\n      this._config = null;\n      this._network = null;\n      // {NetworkRelay | NetworkRest | NetworkSocket}\n      // the underlying Network connection object actually performing the\n      // communications with the Server.\n      // Which one is specified in the config.appbuilder.networkType setting\n\n      this._queueCount = 0;\n      // {int} _queueCount\n      // the # of network operations currently queued, pending Network\n      // reconnect.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n\n      this.queueLock = new this.AB.Lock();\n\n      this._config = this.AB.Config.siteConfig();\n      if (this._config) {\n         switch (this._config.appbuilder.networkType) {\n            case \"relay\":\n               // this._network = new NetworkRelay();\n               break;\n\n            case \"socket\":\n               this._network = new NetworkRestSocket(this);\n               break;\n\n            case \"rest\":\n            default:\n               this._network = new NetworkRest(this);\n               break;\n         }\n\n         return this._network.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      //\n      // Handle reconnections and flushing the Queue:\n      //\n      if (io && io.socket) {\n         // When our Socket reconnects, be sure to flush any pending transactions.\n         io.socket.on(\"connected\", () => {\n            this.queueFlush();\n            if (this.idConnectionCheck) {\n               clearTimeout(this.idConnectionCheck);\n               this.idConnectionCheck = null;\n            }\n         });\n      } else {\n         console.error(\"!!! Network.init() : Did not find io.socket\");\n         window.addEventListener(\"online\", () => this.queueFlush());\n      }\n\n      return Promise.resolve();\n   }\n\n   //\n   // Interface API\n   //\n   /**\n    * Network.isRealTime\n    * indicates wether or not the current network connection supports\n    * RealTime updates.\n    * @return {bool}\n    */\n   get isRealTime() {\n      return this._network.isRealTime;\n   }\n\n   /**\n    * Network.get(options, jobResponse)\n    * perform a GET request back to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   get(...params) {\n      return this._network.get(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.post()\n    * perform an AJAX POST request to the AppBuilder server.\n    * this is a CREATE operation.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   post(...params) {\n      return this._network.post(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.put()\n    * perform a PUT request to the AppBuilder server.\n    * This is for UPDATE/REPLACE operations to data on the server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   put(...params) {\n      return this._network.put(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   /**\n    * Network.delete()\n    * perform an AJAX DELETE request to the AppBuilder server.\n    * @param {obj} params the request parameters that need to be executed on\n    *              the AppBuilder Server\n    * @param {obj} jobResponse the callback info for handling the response.\n    *              {\n    *                  key:'unique.key',\n    *                  context:{ obj data }\n    *              }\n    * @return {Promise}\n    */\n   delete(...params) {\n      return this._network.delete(...params).then((data) => {\n         return this.normalizeData(data);\n      });\n   }\n\n   ////\n   //// Network Utilities\n   ////\n\n   _connectionCheck() {\n      // if (!this.idConnectionCheck) {\n      if (this.isNetworkConnected()) {\n         this.queueFlush().catch(() => {\n            // on an error, we are still having connection issues\n            this.idConnectionCheck = setTimeout(() => {\n               this._connectionCheck();\n            }, 250);\n         });\n         this.idConnectionCheck = null;\n      } else {\n         this.idConnectionCheck = setTimeout(() => {\n            this._connectionCheck();\n         }, 250);\n      }\n      // }\n   }\n\n   /**\n    * Check whether the network is slow\n    * @returns {Boolean}\n    */\n   isNetworkSlow() {\n      return !!this._networkSlow;\n   }\n\n   /**\n    * Register the network speed test worker\n    * @param {Worker} worker\n    * @param {boolean} slow is the current state slow?\n    */\n   registerNetworkTestWorker(worker, slow) {\n      this._networkTestWorker = worker;\n      this._networkSlow = slow;\n      this._networkTestWorker.onmessage = ({ data }) => {\n         if (this._networkSlow !== data) {\n            this._networkSlow = data;\n            this.emit(\"networkslow\", this._networkSlow);\n            // Tell sentry our network speed changed\n            performance.setContext(\"breadcrumb\", {\n               category: \"network\",\n               message: this._networkSlow\n                  ? \"Slow network detected\"\n                  : \"Network speed restored\",\n               level: \"info\",\n            });\n         }\n      };\n   }\n\n   /**\n    * @method networkStatus\n    * return the connection type currently registered with the network\n    * plugin.\n    * @return {string}\n    */\n   networkStatus() {\n      return navigator.connection.type;\n   }\n\n   /**\n    * @method isNetworkConnected\n    * return true/false if the device is currently connected to the\n    * internet.\n    * @return {bool}\n    */\n   isNetworkConnected() {\n      // if this is a Web Client and using sails.socket.io\n      if (io && io.socket && io.socket.isConnected) {\n         return io.socket.isConnected();\n      }\n\n      // if this isn't a Cordova Plugin, then return navigator data:\n      if (typeof Connection == \"undefined\") {\n         // NOTE: this technically only detects if we are connected to a\n         // network.  It doesn't guarantee we can communicate across the 'net\n         return navigator.onLine;\n      }\n\n      // Cordova Plugin:\n      return this.networkStatus() != Connection.NONE;\n   }\n\n   /**\n    * publishResponse()\n    * emit the requested response for this network operation.\n    * @param {obj} jobResponse\n    * @param {obj} error\n    * @param {obj} data\n    */\n   publishResponse(jobResponse, error, data) {\n      if (data) {\n         data = this.normalizeData(data);\n      }\n      this.emit(jobResponse.key, jobResponse.context, error, data);\n   }\n\n   normalizeData(data) {\n      // Data returning from our server is wrapped in an outer layer of\n      // information that is for our Networking API.\n      // the outer wrapper should be:\n      // on success :\n      // {\n      //   status: \"success\",\n      //   data:{Data For App}\n      // }\n      // on Error:\n      // {\n      //   status: \"error\",\n      //   id: {int} error code\n      //   ... other data here\n      // }\n\n      // we have physically received a data packet from the server,\n      // but we are informed that our transaction was problematic\n      // (400 level USER problem?)\n      if (data.status === \"error\") {\n         // TODO: review Error procedure here\n         return data;\n      }\n\n      // on success\n      // make sure we return the Application Level Data packet:\n      return data.data || data;\n   }\n\n   ////\n   //// Queued Requests\n   ////\n\n   /**\n    * refQueue()\n    * sub classes can override this for their own separate Queue Data\n    * @return {string}\n    */\n   refQueue() {\n      return \"networkQueue\";\n   }\n\n   /**\n    * queueCount()\n    * return the # of messages in the queue.\n    * @return {int}\n    */\n   queueCount() {\n      return this._queueCount;\n   }\n\n   /**\n    * Adds a request to the outgoing queue.\n    *\n    * @param {object} data\n    * @param {object} jobResponse\n    * @return {Promise}\n    */\n   queue(data, jobResponse) {\n      var refQueue = this.refQueue();\n\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n            .then((queue) => {\n               queue = queue || [];\n               queue.push({ data, jobResponse });\n               this.AB.log(\n                  `:::: ${queue.length} request${\n                     queue.length > 1 ? \"s\" : \"\"\n                  } queued`\n               );\n               this._queueCount = queue.length;\n               return this.AB.Storage.set(refQueue, queue);\n            })\n            .then(() => {\n               this.emit(\"queued\");\n               // if we are not already polling the network, start\n               if (!this.idConnectionCheck) {\n                  this._connectionCheck();\n               }\n               this.queueLock.release();\n               resolve();\n            })\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"Error while queueing data\",\n               });\n               this.AB.Analytics.logError(err);\n               reject(err);\n\n               this.queueLock.release();\n            });\n      });\n   }\n\n   /**\n    * queueFlush()\n    * Flush the queue and send the contents to the relay server.\n    */\n   queueFlush() {\n      var refQueue = this.refQueue();\n\n      // if we are not connected, then stop\n      if (!this.isNetworkConnected()) {\n         var error = new Error(\"Not connected to the internet.\");\n         error.code = \"E_NOTCONNECTED\";\n         return Promise.reject(error);\n      }\n\n      // otherwise, attempt to flush the queue:\n      return new Promise((resolve, reject) => {\n         this.queueLock\n            .acquire()\n\n            //\n            // Get queue contents\n            //\n            .then(() => {\n               return this.AB.Storage.get(refQueue);\n            })\n\n            //\n            // Send off each queued request\n            //\n            .then((queue) => {\n               // default to [] if not found\n               queue = queue || [];\n\n               // recursively process each pending queue request\n               var processRequest = (cb) => {\n                  if (queue.length == 0) {\n                     cb();\n                  } else {\n                     var entry = queue.shift();\n                     var params = entry.data;\n                     var job = entry.jobResponse;\n                     this._network\n                        .resend(params, job)\n                        .then(() => {\n                           processRequest(cb);\n                        })\n                        .catch((err) => {\n                           // if the err was due to a network connection error\n                           if (err && err.code == \"E_TOMANYRETRIES\") {\n                              cb(err);\n                              return;\n                           }\n                           // otherwise, try the next\n                           processRequest(cb);\n                        });\n                  }\n               };\n\n               return new Promise((res, rej) => {\n                  processRequest((err) => {\n                     if (err) {\n                        rej(err);\n                     } else {\n                        res();\n                     }\n                  });\n               });\n            })\n\n            //\n            // Clear queue contents\n            //\n            .then(() => {\n               this._queueCount = 0;\n               return this.AB.Storage.set(refQueue, []);\n            })\n\n            // release the Lock\n            .then(() => {\n               this.emit(\"queue.synced\");\n               return this.queueLock.release();\n            })\n\n            // all done.\n            .then(() => {\n               resolve();\n            })\n\n            // respond to errors:\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message: \"commAPI queueFlush error\",\n               });\n               this.AB.Analytics.logError(err);\n\n               this.queueLock.release().then(() => {\n                  reject(err);\n               });\n            });\n      });\n   }\n\n   /**\n    * Reset credentials to a blank state.\n    * @return {Promise}\n    */\n   reset() {\n      return Promise.resolve();\n   }\n\n   /**\n    * type()\n    * return the type of network connection we are using.\n    * [\"rest\", \"socket\", \"relay\"]\n    * @return {string}\n    */\n   type() {\n      return this._config.appbuilder.networkType;\n   }\n\n   // uuid() {\n   //    return this.AB.uuid();\n   // }\n\n   getTokens() {\n      // called in appPage.js : openRelayLoader()\n      return {};\n   }\n}\n\nexport default new Network();\n","/*\n * StorageLocal\n *\n * An interface for storing and retrieving Client Side data.  Data stored\n * in StorageLoacal is NOT encrypted.\n *\n * This implementation is based upon the webix.storage.local library.\n * See: https://docs.webix.com/api__refs__storage.local.html\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nclass StorageLocal extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      // {Webix.storage} object.\n      // We divide the storage data according to the tenant we are working\n      // with.  This way Users who can move between different Tenants can\n      // keep their local data separated.\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var tenantID = this.AB.Tenant.id();\n      if (!tenantID) {\n         tenantID = \"noAuth\";\n         // \"noAuth\" is considered the tenant on our Login sequence\n         // which should have a minimum of data stored (language maybe?)\n      }\n\n      this.tenantStorage = this.AB.Webix.storage.prefix(\n         tenantID,\n         this.AB.Webix.storage.local\n      );\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   set(key, value /* , options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.put(key, value);\n      });\n   }\n\n   get(key /*, options = {} */) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.get(key);\n      });\n   }\n\n   clear(key) {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.remove(key);\n      });\n   }\n\n   clearAll() {\n      return Promise.resolve().then(() => {\n         return this.tenantStorage.clear();\n      });\n   }\n}\n\nexport default new StorageLocal();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport StorageLocal from \"./StorageLocal.js\";\n\nclass Storage extends EventEmitter {\n   constructor() {\n      super();\n\n      this.tenantStorage = null;\n      this._config = null;\n      this._storage = null;\n   }\n\n   init(AB) {\n      // {ABFactory} AB\n\n      this.AB = AB;\n      var config = this.AB.Config.siteConfig();\n      if (config) {\n         if (config.storage && config.storage.encrypted) {\n            console.error(\"TODO: Implement Encrypted Storage\");\n            // this._storage = StorageEncrypted;\n            this._storage = StorageLocal;\n         } else {\n            this._storage = StorageLocal;\n         }\n\n         return this._storage.init(AB);\n      } else {\n         console.error(\"??? Why No site config ???\");\n      }\n\n      return Promise.resolve();\n   }\n\n   set(...params) {\n      return this._storage.set(...params);\n   }\n\n   get(...params) {\n      return this._storage.get(...params);\n   }\n\n   clear(...params) {\n      return this._storage.clear(...params);\n   }\n\n   clearAll(...params) {\n      return this._storage.clearAll(...params);\n   }\n}\n\nexport default new Storage();\n","var EventEmitter = require(\"events\").EventEmitter;\n\nimport Config from \"../config/Config.js\";\n\nclass Tenant extends EventEmitter {\n   constructor() {\n      super();\n\n      this.text = false;\n      this._config = null;\n      this.textClickToEnter = null;\n   }\n\n   init() {\n      var config = Config.tenantConfig();\n      if (config) {\n         // check if we have options that are stored as a string\n         if (\n            typeof config.options === \"string\" ||\n            config.options instanceof String\n         ) {\n            // if we do try to parse them into a JSON object\n            try {\n               config.options = JSON.parse(config.options);\n            } catch (error) {\n               console.error(error);\n            }\n         }\n         this._config = config;\n         this.textClickToEnter = config.options.textClickToEnter;\n      }\n\n      // this isn't actually an Async operation, so just resolve()\n      return Promise.resolve();\n   }\n\n   id() {\n      if (!this._config || this._config.id == \"??\") {\n         return null;\n      }\n      return this._config.id;\n   }\n\n   setting(key, value) {\n      if (this._config) {\n         if (value) {\n            this._config.options[key] = value;\n            return;\n         }\n         return this._config.options[key];\n      }\n   }\n}\n\nexport default new Tenant();\n","/**\n * @class configDesktop\n *\n * Manage our configuration settings for Desktop styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthXLarge: 350,\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 5,\n   smallSpacer: 10,\n   mediumSpacer: 25,\n   largeSpacer: 50,\n   xLargeSpacer: 100,\n   xxLargeSpacer: 200,\n   xxxLargeSpacer: 400,\n   appListSpacerRowHeight: 100,\n   appListSpacerColMinWidth: 100,\n   appListSpacerColMaxWidth: 200,\n   objectWorkspaceColWidth: 20,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 150,\n   labelWidthXXLarge: 200,\n   labelWidthXXXLarge: 280,\n   labelWidthCheckbox: 0,\n\n   // show elements on desktop\n   hideMobile: false,\n};\n","/**\n * @class configMobile\n *\n * Manage our configuration settings for mobile styles.\n\n */\n\nexport default {\n   // Application List\n   appListRowHeight: 67,\n\n   // button types\n   buttonWidthLarge: 200,\n   buttonWidthMedium: 150,\n   buttonWidthSmall: 100,\n   buttonWidthExtraSmall: 50,\n\n   // tab types\n   tabWidthLarge: 200,\n   tabWidthMedium: 120,\n   tabWidthSmall: 100,\n   tabWidthExtraSmall: 50,\n\n   // column types\n   columnWidthLarge: 250,\n   columnWidthMedium: 200,\n   columnWidthSmall: 150,\n   columnWidthExtraSmall: 100,\n\n   // spacers\n   xSmallSpacer: 1,\n   smallSpacer: 1,\n   mediumSpacer: 10,\n   largeSpacer: 20,\n   xLargeSpacer: 50,\n   xxLargeSpacer: 100,\n   xxxLargeSpacer: 120,\n   appListSpacerRowHeight: 10,\n   appListSpacerColMinWidth: 1,\n   appListSpacerColMaxWidth: 1,\n   objectWorkspaceColWidth: 1,\n\n   // labels\n   labelWidthSmall: 50,\n   labelWidthMedium: 80,\n   labelWidthLarge: 120,\n   labelWidthXLarge: 120,\n   labelWidthXXLarge: 120,\n   labelWidthCheckbox: 0,\n\n   // hide elements for mobile\n   hideMobile: true,\n};\n","/**\n * @class config\n *\n * Manage our configuration settings.\n */\n\nimport ConfigDesktop from \"./configDesktop\";\nimport ConfigMobile from \"./configMobile\";\nimport Icons from \"./icons\";\n\nexport default {\n   config: function () {\n      // TODO: decide which config file to return here:\n      if (window.innerWidth < 768) {\n         return ConfigMobile;\n      }\n      return ConfigDesktop;\n   },\n   icons: Icons.icons,\n};\n","export default {\n   icons: [\n      \"500px\",\n      \"address-book\",\n      \"address-book-o\",\n      \"address-card\",\n      \"address-card-o\",\n      \"adjust\",\n      \"adn\",\n      \"align-center\",\n      \"align-justify\",\n      \"align-left\",\n      \"align-right\",\n      \"amazon\",\n      \"ambulance\",\n      \"american-sign-language-interpreting\",\n      \"anchor\",\n      \"android\",\n      \"angellist\",\n      \"angle-double-down\",\n      \"angle-double-left\",\n      \"angle-double-right\",\n      \"angle-double-up\",\n      \"angle-down\",\n      \"angle-left\",\n      \"angle-right\",\n      \"angle-up\",\n      \"apple\",\n      \"archive\",\n      \"area-chart\",\n      \"arrow-circle-down\",\n      \"arrow-circle-left\",\n      \"arrow-circle-o-down\",\n      \"arrow-circle-o-left\",\n      \"arrow-circle-o-right\",\n      \"arrow-circle-o-up\",\n      \"arrow-circle-right\",\n      \"arrow-circle-up\",\n      \"arrow-down\",\n      \"arrow-left\",\n      \"arrow-right\",\n      \"arrow-up\",\n      \"arrows\",\n      \"arrows-alt\",\n      \"arrows-h\",\n      \"arrows-v\",\n      \"asl-interpreting\",\n      \"assistive-listening-systems\",\n      \"asterisk\",\n      \"at\",\n      \"audio-description\",\n      \"automobile\",\n      \"backward\",\n      \"balance-scale\",\n      \"ban\",\n      \"bandcamp\",\n      \"bank\",\n      \"bar-chart\",\n      \"bar-chart-o\",\n      \"barcode\",\n      \"bars\",\n      \"bath\",\n      \"bathtub\",\n      \"battery\",\n      \"battery-0\",\n      \"battery-1\",\n      \"battery-2\",\n      \"battery-3\",\n      \"battery-4\",\n      \"battery-empty\",\n      \"battery-full\",\n      \"battery-half\",\n      \"battery-quarter\",\n      \"battery-three-quarters\",\n      \"bed\",\n      \"beer\",\n      \"behance\",\n      \"behance-square\",\n      \"bell\",\n      \"bell-o\",\n      \"bell-slash\",\n      \"bell-slash-o\",\n      \"bicycle\",\n      \"binoculars\",\n      \"birthday-cake\",\n      \"bitbucket\",\n      \"bitbucket-square\",\n      \"bitcoin\",\n      \"black-tie\",\n      \"blind\",\n      \"bluetooth\",\n      \"bluetooth-b\",\n      \"bold\",\n      \"bolt\",\n      \"bomb\",\n      \"book\",\n      \"bookmark\",\n      \"bookmark-o\",\n      \"braille\",\n      \"briefcase\",\n      \"btc\",\n      \"bug\",\n      \"building\",\n      \"building-o\",\n      \"bullhorn\",\n      \"bullseye\",\n      \"bus\",\n      \"buysellads\",\n      \"cab\",\n      \"calculator\",\n      \"calendar\",\n      \"calendar-check-o\",\n      \"calendar-minus-o\",\n      \"calendar-o\",\n      \"calendar-plus-o\",\n      \"calendar-times-o\",\n      \"camera\",\n      \"camera-retro\",\n      \"car\",\n      \"caret-down\",\n      \"caret-left\",\n      \"caret-right\",\n      \"caret-square-o-down\",\n      \"caret-square-o-left\",\n      \"caret-square-o-right\",\n      \"caret-square-o-up\",\n      \"caret-up\",\n      \"cart-arrow-down\",\n      \"cart-plus\",\n      \"cc\",\n      \"cc-amex\",\n      \"cc-diners-club\",\n      \"cc-discover\",\n      \"cc-jcb\",\n      \"cc-mastercard\",\n      \"cc-paypal\",\n      \"cc-stripe\",\n      \"cc-visa\",\n      \"certificate\",\n      \"chain\",\n      \"chain-broken\",\n      \"check\",\n      \"check-circle\",\n      \"check-circle-o\",\n      \"check-square\",\n      \"check-square-o\",\n      \"chevron-circle-down\",\n      \"chevron-circle-left\",\n      \"chevron-circle-right\",\n      \"chevron-circle-up\",\n      \"chevron-down\",\n      \"chevron-left\",\n      \"chevron-right\",\n      \"chevron-up\",\n      \"child\",\n      \"chrome\",\n      \"circle\",\n      \"circle-o\",\n      \"circle-o-notch\",\n      \"circle-thin\",\n      \"clipboard\",\n      \"clock-o\",\n      \"clone\",\n      \"close\",\n      \"cloud\",\n      \"cloud-download\",\n      \"cloud-upload\",\n      \"cny\",\n      \"code\",\n      \"code-fork\",\n      \"codepen\",\n      \"codiepie\",\n      \"coffee\",\n      \"cog\",\n      \"cogs\",\n      \"columns\",\n      \"comment\",\n      \"comment-o\",\n      \"commenting\",\n      \"commenting-o\",\n      \"comments\",\n      \"comments-o\",\n      \"compass\",\n      \"compress\",\n      \"connectdevelop\",\n      \"contao\",\n      \"copy\",\n      \"copyright\",\n      \"creative-commons\",\n      \"credit-card\",\n      \"credit-card-alt\",\n      \"crop\",\n      \"crosshairs\",\n      \"css3\",\n      \"cube\",\n      \"cubes\",\n      \"cut\",\n      \"cutlery\",\n      \"dashboard\",\n      \"dashcube\",\n      \"database\",\n      \"deaf\",\n      \"deafness\",\n      \"dedent\",\n      \"delicious\",\n      \"desktop\",\n      \"deviantart\",\n      \"diamond\",\n      \"digg\",\n      \"dollar\",\n      \"dot-circle-o\",\n      \"download\",\n      \"dribbble\",\n      \"drivers-license\",\n      \"drivers-license-o\",\n      \"dropbox\",\n      \"drupal\",\n      \"edge\",\n      \"edit\",\n      \"eercast\",\n      \"eject\",\n      \"ellipsis-h\",\n      \"ellipsis-v\",\n      \"empire\",\n      \"envelope\",\n      \"envelope-o\",\n      \"envelope-open\",\n      \"envelope-open-o\",\n      \"envelope-square\",\n      \"envira\",\n      \"eraser\",\n      \"etsy\",\n      \"eur\",\n      \"euro\",\n      \"exchange\",\n      \"exclamation\",\n      \"exclamation-circle\",\n      \"exclamation-triangle\",\n      \"expand\",\n      \"expeditedssl\",\n      \"external-link\",\n      \"external-link-square\",\n      \"eye\",\n      \"eye-slash\",\n      \"eyedropper\",\n      \"fa\",\n      \"facebook\",\n      \"facebook-f\",\n      \"facebook-official\",\n      \"facebook-square\",\n      \"fast-backward\",\n      \"fast-forward\",\n      \"fax\",\n      \"feed\",\n      \"female\",\n      \"fighter-jet\",\n      \"file\",\n      \"file-archive-o\",\n      \"file-audio-o\",\n      \"file-code-o\",\n      \"file-excel-o\",\n      \"file-image-o\",\n      \"file-movie-o\",\n      \"file-o\",\n      \"file-pdf-o\",\n      \"file-photo-o\",\n      \"file-picture-o\",\n      \"file-powerpoint-o\",\n      \"file-sound-o\",\n      \"file-text\",\n      \"file-text-o\",\n      \"file-video-o\",\n      \"file-word-o\",\n      \"file-zip-o\",\n      \"files-o\",\n      \"film\",\n      \"filter\",\n      \"fire\",\n      \"fire-extinguisher\",\n      \"firefox\",\n      \"first-order\",\n      \"flag\",\n      \"flag-checkered\",\n      \"flag-o\",\n      \"flash\",\n      \"flask\",\n      \"flickr\",\n      \"floppy-o\",\n      \"folder\",\n      \"folder-o\",\n      \"folder-open\",\n      \"folder-open-o\",\n      \"font\",\n      \"font-awesome\",\n      \"fonticons\",\n      \"fort-awesome\",\n      \"forumbee\",\n      \"forward\",\n      \"foursquare\",\n      \"free-code-camp\",\n      \"frown-o\",\n      \"futbol-o\",\n      \"gamepad\",\n      \"gavel\",\n      \"gbp\",\n      \"ge\",\n      \"gear\",\n      \"gears\",\n      \"genderless\",\n      \"get-pocket\",\n      \"gg\",\n      \"gg-circle\",\n      \"gift\",\n      \"git\",\n      \"git-square\",\n      \"github\",\n      \"github-alt\",\n      \"github-square\",\n      \"gitlab\",\n      \"gittip\",\n      \"glass\",\n      \"glide\",\n      \"glide-g\",\n      \"globe\",\n      \"google\",\n      \"google-plus\",\n      \"google-plus-circle\",\n      \"google-plus-official\",\n      \"google-plus-square\",\n      \"google-wallet\",\n      \"graduation-cap\",\n      \"gratipay\",\n      \"grav\",\n      \"group\",\n      \"h-square\",\n      \"hacker-news\",\n      \"hand-grab-o\",\n      \"hand-lizard-o\",\n      \"hand-o-down\",\n      \"hand-o-left\",\n      \"hand-o-right\",\n      \"hand-o-up\",\n      \"hand-paper-o\",\n      \"hand-peace-o\",\n      \"hand-pointer-o\",\n      \"hand-rock-o\",\n      \"hand-scissors-o\",\n      \"hand-spock-o\",\n      \"hand-stop-o\",\n      \"handshake-o\",\n      \"hard-of-hearing\",\n      \"hashtag\",\n      \"hdd-o\",\n      \"header\",\n      \"headphones\",\n      \"heart\",\n      \"heart-o\",\n      \"heartbeat\",\n      \"history\",\n      \"home\",\n      \"hospital-o\",\n      \"hotel\",\n      \"hourglass\",\n      \"hourglass-1\",\n      \"hourglass-2\",\n      \"hourglass-3\",\n      \"hourglass-end\",\n      \"hourglass-half\",\n      \"hourglass-o\",\n      \"hourglass-start\",\n      \"houzz\",\n      \"html5\",\n      \"i-cursor\",\n      \"id-badge\",\n      \"id-card\",\n      \"id-card-o\",\n      \"ils\",\n      \"image\",\n      \"imdb\",\n      \"inbox\",\n      \"indent\",\n      \"industry\",\n      \"info\",\n      \"info-circle\",\n      \"inr\",\n      \"instagram\",\n      \"institution\",\n      \"internet-explorer\",\n      \"intersex\",\n      \"ioxhost\",\n      \"italic\",\n      \"joomla\",\n      \"jpy\",\n      \"jsfiddle\",\n      \"key\",\n      \"keyboard-o\",\n      \"krw\",\n      \"language\",\n      \"laptop\",\n      \"lastfm\",\n      \"lastfm-square\",\n      \"leaf\",\n      \"leanpub\",\n      \"legal\",\n      \"lemon-o\",\n      \"level-down\",\n      \"level-up\",\n      \"life-bouy\",\n      \"life-buoy\",\n      \"life-ring\",\n      \"life-saver\",\n      \"lightbulb-o\",\n      \"line-chart\",\n      \"link\",\n      \"linkedin\",\n      \"linkedin-square\",\n      \"linode\",\n      \"linux\",\n      \"list\",\n      \"list-alt\",\n      \"list-ol\",\n      \"list-ul\",\n      \"location-arrow\",\n      \"lock\",\n      \"long-arrow-down\",\n      \"long-arrow-left\",\n      \"long-arrow-right\",\n      \"long-arrow-up\",\n      \"low-vision\",\n      \"magic\",\n      \"magnet\",\n      \"mail-forward\",\n      \"mail-reply\",\n      \"mail-reply-all\",\n      \"male\",\n      \"map\",\n      \"map-marker\",\n      \"map-o\",\n      \"map-pin\",\n      \"map-signs\",\n      \"mars\",\n      \"mars-double\",\n      \"mars-stroke\",\n      \"mars-stroke-h\",\n      \"mars-stroke-v\",\n      \"maxcdn\",\n      \"meanpath\",\n      \"medium\",\n      \"medkit\",\n      \"meetup\",\n      \"meh-o\",\n      \"mercury\",\n      \"microchip\",\n      \"microphone\",\n      \"microphone-slash\",\n      \"minus\",\n      \"minus-circle\",\n      \"minus-square\",\n      \"minus-square-o\",\n      \"mixcloud\",\n      \"mobile\",\n      \"mobile-phone\",\n      \"modx\",\n      \"money\",\n      \"moon-o\",\n      \"mortar-board\",\n      \"motorcycle\",\n      \"mouse-pointer\",\n      \"music\",\n      \"navicon\",\n      \"neuter\",\n      \"newspaper-o\",\n      \"object-group\",\n      \"object-ungroup\",\n      \"odnoklassniki\",\n      \"odnoklassniki-square\",\n      \"opencart\",\n      \"openid\",\n      \"opera\",\n      \"optin-monster\",\n      \"outdent\",\n      \"pagelines\",\n      \"paint-brush\",\n      \"paper-plane\",\n      \"paper-plane-o\",\n      \"paperclip\",\n      \"paragraph\",\n      \"paste\",\n      \"pause\",\n      \"pause-circle\",\n      \"pause-circle-o\",\n      \"paw\",\n      \"paypal\",\n      \"pencil\",\n      \"pencil-square\",\n      \"pencil-square-o\",\n      \"percent\",\n      \"phone\",\n      \"phone-square\",\n      \"photo\",\n      \"picture-o\",\n      \"pie-chart\",\n      \"pied-piper\",\n      \"pied-piper-alt\",\n      \"pied-piper-pp\",\n      \"pinterest\",\n      \"pinterest-p\",\n      \"pinterest-square\",\n      \"plane\",\n      \"play\",\n      \"play-circle\",\n      \"play-circle-o\",\n      \"plug\",\n      \"plus\",\n      \"plus-circle\",\n      \"plus-square\",\n      \"plus-square-o\",\n      \"podcast\",\n      \"power-off\",\n      \"print\",\n      \"product-hunt\",\n      \"puzzle-piece\",\n      \"qq\",\n      \"qrcode\",\n      \"question\",\n      \"question-circle\",\n      \"question-circle-o\",\n      \"quora\",\n      \"quote-left\",\n      \"quote-right\",\n      \"ra\",\n      \"random\",\n      \"ravelry\",\n      \"rebel\",\n      \"recycle\",\n      \"reddit\",\n      \"reddit-alien\",\n      \"reddit-square\",\n      \"refresh\",\n      \"registered\",\n      \"remove\",\n      \"renren\",\n      \"reorder\",\n      \"repeat\",\n      \"reply\",\n      \"reply-all\",\n      \"resistance\",\n      \"retweet\",\n      \"rmb\",\n      \"road\",\n      \"rocket\",\n      \"rotate-left\",\n      \"rotate-right\",\n      \"rouble\",\n      \"rss\",\n      \"rss-square\",\n      \"rub\",\n      \"ruble\",\n      \"rupee\",\n      \"s15\",\n      \"safari\",\n      \"save\",\n      \"scissors\",\n      \"scribd\",\n      \"search\",\n      \"search-minus\",\n      \"search-plus\",\n      \"sellsy\",\n      \"send\",\n      \"send-o\",\n      \"server\",\n      \"share\",\n      \"share-alt\",\n      \"share-alt-square\",\n      \"share-square\",\n      \"share-square-o\",\n      \"shekel\",\n      \"sheqel\",\n      \"shield\",\n      \"ship\",\n      \"shirtsinbulk\",\n      \"shopping-bag\",\n      \"shopping-basket\",\n      \"shopping-cart\",\n      \"shower\",\n      \"sign-in\",\n      \"sign-language\",\n      \"sign-out\",\n      \"signal\",\n      \"signing\",\n      \"simplybuilt\",\n      \"sitemap\",\n      \"skyatlas\",\n      \"skype\",\n      \"slack\",\n      \"sliders\",\n      \"slideshare\",\n      \"smile-o\",\n      \"snapchat\",\n      \"snapchat-ghost\",\n      \"snapchat-square\",\n      \"snowflake-o\",\n      \"soccer-ball-o\",\n      \"sort\",\n      \"sort-alpha-asc\",\n      \"sort-alpha-desc\",\n      \"sort-amount-asc\",\n      \"sort-amount-desc\",\n      \"sort-asc\",\n      \"sort-desc\",\n      \"sort-down\",\n      \"sort-numeric-asc\",\n      \"sort-numeric-desc\",\n      \"sort-up\",\n      \"soundcloud\",\n      \"space-shuttle\",\n      \"spinner\",\n      \"spoon\",\n      \"spotify\",\n      \"square\",\n      \"square-o\",\n      \"stack-exchange\",\n      \"stack-overflow\",\n      \"star\",\n      \"star-half\",\n      \"star-half-empty\",\n      \"star-half-full\",\n      \"star-half-o\",\n      \"star-o\",\n      \"steam\",\n      \"steam-square\",\n      \"step-backward\",\n      \"step-forward\",\n      \"stethoscope\",\n      \"sticky-note\",\n      \"sticky-note-o\",\n      \"stop\",\n      \"stop-circle\",\n      \"stop-circle-o\",\n      \"street-view\",\n      \"strikethrough\",\n      \"stumbleupon\",\n      \"stumbleupon-circle\",\n      \"subscript\",\n      \"subway\",\n      \"suitcase\",\n      \"sun-o\",\n      \"superpowers\",\n      \"superscript\",\n      \"support\",\n      \"table\",\n      \"tablet\",\n      \"tachometer\",\n      \"tag\",\n      \"tags\",\n      \"tasks\",\n      \"taxi\",\n      \"telegram\",\n      \"television\",\n      \"tencent-weibo\",\n      \"terminal\",\n      \"text-height\",\n      \"text-width\",\n      \"th\",\n      \"th-large\",\n      \"th-list\",\n      \"themeisle\",\n      \"thermometer\",\n      \"thermometer-0\",\n      \"thermometer-1\",\n      \"thermometer-2\",\n      \"thermometer-3\",\n      \"thermometer-4\",\n      \"thermometer-empty\",\n      \"thermometer-full\",\n      \"thermometer-half\",\n      \"thermometer-quarter\",\n      \"thermometer-three-quarters\",\n      \"thumb-tack\",\n      \"thumbs-down\",\n      \"thumbs-o-down\",\n      \"thumbs-o-up\",\n      \"thumbs-up\",\n      \"ticket\",\n      \"times\",\n      \"times-circle\",\n      \"times-circle-o\",\n      \"times-rectangle\",\n      \"times-rectangle-o\",\n      \"tint\",\n      \"toggle-down\",\n      \"toggle-left\",\n      \"toggle-off\",\n      \"toggle-on\",\n      \"toggle-right\",\n      \"toggle-up\",\n      \"trademark\",\n      \"train\",\n      \"transgender\",\n      \"transgender-alt\",\n      \"trash\",\n      \"trash-o\",\n      \"tree\",\n      \"trello\",\n      \"tripadvisor\",\n      \"trophy\",\n      \"truck\",\n      \"try\",\n      \"tty\",\n      \"tumblr\",\n      \"tumblr-square\",\n      \"turkish-lira\",\n      \"tv\",\n      \"twitch\",\n      \"twitter\",\n      \"twitter-square\",\n      \"umbrella\",\n      \"underline\",\n      \"undo\",\n      \"universal-access\",\n      \"university\",\n      \"unlink\",\n      \"unlock\",\n      \"unlock-alt\",\n      \"unsorted\",\n      \"upload\",\n      \"usb\",\n      \"usd\",\n      \"user\",\n      \"user-circle\",\n      \"user-circle-o\",\n      \"user-md\",\n      \"user-o\",\n      \"user-plus\",\n      \"user-secret\",\n      \"user-times\",\n      \"users\",\n      \"vcard\",\n      \"vcard-o\",\n      \"venus\",\n      \"venus-double\",\n      \"venus-mars\",\n      \"viacoin\",\n      \"viadeo\",\n      \"viadeo-square\",\n      \"video-camera\",\n      \"vimeo\",\n      \"vimeo-square\",\n      \"vine\",\n      \"vk\",\n      \"volume-control-phone\",\n      \"volume-down\",\n      \"volume-off\",\n      \"volume-up\",\n      \"warning\",\n      \"wechat\",\n      \"weibo\",\n      \"weixin\",\n      \"whatsapp\",\n      \"wheelchair\",\n      \"wheelchair-alt\",\n      \"wifi\",\n      \"wikipedia-w\",\n      \"window-close\",\n      \"window-close-o\",\n      \"window-maximize\",\n      \"window-minimize\",\n      \"window-restore\",\n      \"windows\",\n      \"won\",\n      \"wordpress\",\n      \"wpbeginner\",\n      \"wpexplorer\",\n      \"wpforms\",\n      \"wrench\",\n      \"xing\",\n      \"xing-square\",\n      \"y-combinator\",\n      \"y-combinator-square\",\n      \"yahoo\",\n      \"yc\",\n      \"yc-square\",\n      \"yelp\",\n      \"yen\",\n      \"yoast\",\n      \"youtube\",\n      \"youtube-play\",\n      \"youtube-square\",\n   ],\n};\n","import ABFactoryCore from \"./core/ABFactoryCore\";\n\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { nanoid } from \"nanoid\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport performance from \"../utils/performance\";\nimport FilterComplex from \"./platform/FilterComplex\";\nimport SortPopup from \"./platform/views/ABViewGridPopupSortFields\";\n\n//\n// Our Common Resources\n//\nimport Config from \"../config/Config.js\";\n// Config : responsible for all the configuration/settings of our instance.\n\nimport Account from \"../resources/Account.js\";\n// Account : manages the current Logged in User and Account information.\n\nimport ClassUI from \"../ui/ClassUI.js\";\n\nimport Dialog from \"./_factory_utils/Dialog.js\";\n// Dialog : common UI dialogs.\n\nimport Multilingual from \"../resources/Multilingual.js\";\n// Multilingual: our interface Labels and language options\n\nimport Network from \"../resources/Network.js\";\n// Network: our interface for communicating to our server\n\nimport Storage from \"../resources/Storage.js\";\n// Storage: manages our interface for local storage\n\nimport ABViewManager from \"./core/ABViewManagerCore\";\n\nimport Tenant from \"../resources/Tenant.js\";\n// Tenant: manages the Tenant information of the current instance\n\nimport UISettings from \"./uiSettings/config.js\";\n// UISettings: detailed settings for our common UI elements\n\nclass ABValidator {\n   constructor(AB) {\n      this.AB = AB;\n      this.errors = [];\n   }\n\n   addError(name, message) {\n      this.errors.push({ name: name, message: message });\n   }\n\n   pass() {\n      return this.errors.length == 0;\n   }\n\n   fail() {\n      return this.errors.length > 0;\n   }\n\n   toValidationObject() {\n      var obj = {\n         error: \"E_VALIDATION\",\n         invalidAttributes: {},\n      };\n\n      var attr = obj.invalidAttributes;\n\n      this.errors.forEach((e) => {\n         attr[e.name] = attr[e.name] || [];\n         attr[e.name].push(e);\n      });\n\n      return obj;\n   }\n\n   updateForm(form) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isFormValidationError(vObj, form);\n   }\n\n   updateGrid(rowID, grid) {\n      var vObj = this.toValidationObject();\n      this.AB.Validation.isGridValidationError(vObj, rowID, grid);\n   }\n}\n\n//\n// AppBuilder Objects\n//\n\nclass ABFactory extends ABFactoryCore {\n   constructor(definitions) {\n      super(definitions);\n\n      // Common Reference to Configuration Values\n      this.Config = Config;\n\n      //\n      // Resources\n      //\n      this.Account = Account;\n      this.Dialog = Dialog;\n      this.Multilingual = Multilingual;\n      this.Network = Network;\n      this.Storage = Storage;\n      this.Tenant = Tenant;\n      this.Webix = webix;\n\n      // Plugin Classes\n      this.ClassUI = ClassUI;\n\n      // additional Class definitions\n      this.Class.FilterComplex = FilterComplex;\n      this.Class.ABViewManager = ABViewManager;\n      this.Class.SortPopup = SortPopup;\n\n      // Temp placeholders until Resources are implemented:\n      this.Analytics = {\n         log: () => {},\n         logError: () => {},\n      };\n      this.Lock = class Lock {\n         constructor() {}\n\n         acquire() {\n            return Promise.resolve();\n         }\n         release() {\n            return Promise.resolve();\n         }\n      };\n\n      this.UISettings = UISettings;\n\n      this.Validation = {\n         validator: () => {\n            return new ABValidator(this);\n         },\n\n         errorSailsCleanup: function (error) {\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               // dig down to sails provided error object:\n               if (\n                  error.error &&\n                  error.error == \"E_UNKNOWN\" &&\n                  error.raw &&\n                  error.raw.length > 0\n               ) {\n                  error = error.raw[0];\n               }\n\n               // drill down to the embedded .err object if it exists\n               if (error.err) {\n                  error = error.err;\n               }\n\n               // if this is from our server response:\n               if (\n                  error.data &&\n                  error.data.error &&\n                  error.data.error == \"E_VALIDATION\"\n               ) {\n                  error = error.data;\n               }\n            }\n\n            return error;\n         },\n\n         /**\n          * @function AB.Validation.isFormValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of the form elements.\n          *\n          * @codestart\n          * var form = $$('formID');\n          * var values = form.getValues();\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Form.isFormValidationError(err, form)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {obj} error\n          *        the error response object\n          * @param {obj} form\n          *        the webix form instance (or reference)\n          * @return {bool}\n          *         true if error was about a form element.\n          *         false otherwise.\n          */\n         isFormValidationError: function (error, form) {\n            var hasFocused = false;\n            // {bool} have we set focus to form component?\n\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasForm = false;\n                     for (var attr in attrs) {\n                        // if this is a field in the form:\n                        if (form.elements[attr]) {\n                           var errors = attrs[attr];\n                           var msg = [];\n                           errors.forEach(function (err) {\n                              msg.push(err.message);\n                           });\n\n                           // set the invalid error message\n                           form.markInvalid(attr, msg.join(\", \"));\n\n                           // set focus to the 1st form element we mark:\n                           if (!hasFocused) {\n                              form.elements[attr].focus();\n                              hasFocused = true;\n                           }\n\n                           wasForm = true;\n                        }\n                     }\n\n                     if (wasForm) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our form with an error\n            // this was not a validation error so return false\n            return false;\n         },\n\n         /**\n          * @method AB.Validation.isGridValidationError\n          *\n          * scans the given error to see if it is a sails' response about an invalid\n          * value from one of our grid columns.\n          *\n          * @codestart\n          * var grid = $$('myGrid');\n          * model.attr(values);\n          * model.save()\n          * .fail(function(err){\n          *     if (!OP.Validation.isGridValidationError(err, editor, grid)) {\n          *         OP.error.log('Error saving current model ()', {error:err, values:values});\n          *     }\n          * })\n          * .then(function(newData){\n          *\n          * });\n          * @codeend\n          *\n          * @param {Error} error\n          *        the error response object\n          * @param {integer} row\n          *        the row id of the Grid to update.\n          * @param {webix.datatable} Grid\n          *        the webix grid instance (or reference)\n          * @return {bool}\n          *         true if error was about a grid column.\n          *         false otherwise.\n          */\n         isGridValidationError: function (error, row, Grid) {\n            // if we have an error object:\n            if (error) {\n               //// if the error obj is provided by Sails response,\n               //// do some clean up on the error object:\n\n               error = this.errorSailsCleanup(error);\n\n               //// Now process the error object\n               ////\n               if (\n                  (error.error && error.error == \"E_VALIDATION\") ||\n                  (error.code && error.code == \"E_VALIDATION\")\n               ) {\n                  var attrs = error.invalidAttributes;\n                  if (attrs) {\n                     var wasGrid = false;\n                     for (var attr in attrs) {\n                        Grid.addCellCss(row, attr, \"webix_invalid\");\n                        Grid.addCellCss(row, attr, \"webix_invalid_cell\");\n\n                        var msg = [];\n                        attrs[attr].forEach((e) => {\n                           msg.push(e.message);\n                        });\n\n                        webix.alert({\n                           text: attr + \": \" + msg.join(\", \"),\n                        });\n\n                        wasGrid = true;\n                     }\n\n                     Grid.refresh(row);\n                     Grid.clearSelection();\n\n                     if (wasGrid) {\n                        return true;\n                     }\n                  }\n               }\n            }\n\n            // if we missed updating our Grid with an error\n            // this was not a validation error so return false\n            return false;\n         },\n      };\n\n      // TODO: make sure \"error\" s are handled and sent to logs\n      // this.on(\"error\", ()=>{ Analytics.error })\n\n      this.Definitions = {};\n      // {obj} the provided interface for working with the ABDefinition table.\n      // NOTE: on the web client, we simply perform web API calls to perform\n      // the actions.  These are defined below.\n\n      this.on(\"error\", (err) => {\n         // this simply prevents thrown errors if there are no listeners.\n         console.error(err);\n      });\n\n      this._plugins = [];\n      // {array} of loaded Plugin.applications.\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our definitionsXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this.Network.on(\"definition.create\", (context, err, fullDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: fullDef.id,\n            data: fullDef,\n         };\n         this.emit(\"ab.abdefinition.create\", pkt);\n\n         let newDef = this.definitionNew(fullDef);\n         pending?.resolve(newDef);\n      });\n\n      this.Network.on(\"definition.update\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            if (err.toString().indexOf(\"Not Found\") > -1) {\n               return this.definitionCreate(context.values)\n                  .then(pending?.resolve)\n                  .catch(pending?.reject);\n            }\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         this._definitions[context.id] = serverDef;\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: serverDef.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.update\", pkt);\n\n         pending?.resolve(serverDef);\n      });\n\n      this.Network.on(\"definition.delete\", (context, err, serverDef) => {\n         var pending = this._pendingNetworkRequests[context.uuid];\n         if (err) {\n            // log the error\n            // this.error(err);\n            pending?.reject(err);\n            return;\n         }\n\n         delete this._definitions[context.id];\n\n         // for immediate feedback to our UI:\n         // simulate the RT update from our sockets:\n         var pkt = {\n            id: context.id,\n            data: serverDef,\n         };\n         this.emit(\"ab.abdefinition.delete\", pkt);\n\n         pending?.resolve();\n      });\n\n      //\n      // Rules\n      //\n      const platformRules = {\n         /**\n          * @method toDate\n          *\n          * @param {string} dateText\n          * @param {Object} options - {\n          *                               format: \"string\",\n          *                               ignoreTime: boolean\n          *                            }\n          * @return {Date}\n          */\n         toDate: (dateText = \"\", options = {}) => {\n            if (!dateText) return;\n\n            if (options.ignoreTime) dateText = dateText.replace(/T.*/, \"\");\n\n            let result = options.format\n               ? moment(dateText, options.format)\n               : moment(dateText);\n\n            let supportFormats = [\n               \"YYYY-MM-DD\",\n               \"YYYY/MM/DD\",\n               \"DD/MM/YYYY\",\n               \"MM/DD/YYYY\",\n               \"DD-MM-YYYY\",\n               \"MM-DD-YYYY\",\n            ];\n\n            supportFormats.forEach((format) => {\n               if (!result || !result.isValid())\n                  result = moment(dateText, format);\n            });\n\n            return new Date(result);\n         },\n\n         /**\n          * @method toDateFormat\n          *\n          * @param {Date} date\n          * @param {Object} options - {\n          *           format: \"string\",\n          *           localeCode: \"string\"\n          *         }\n          *\n          * @return {string}\n          */\n         toDateFormat: (date, options) => {\n            if (!date) return \"\";\n\n            let momentObj = moment(date);\n\n            if (options.localeCode) momentObj.locale(options.localeCode);\n\n            return momentObj.format(options.format);\n         },\n\n         /**\n          * @method subtractDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         subtractDate: (date, number, unit) => {\n            return moment(date).subtract(number, unit).toDate();\n         },\n\n         /**\n          * @method addDate\n          *\n          * @param {Date} date\n          * @param {number} number\n          * @param {string} unit\n          *\n          * @return {Date}\n          */\n         addDate: (date, number, unit) => {\n            return moment(date).add(number, unit).toDate();\n         },\n      };\n      (Object.keys(platformRules) || []).forEach((k) => {\n         this.rules[k] = platformRules[k];\n      });\n   }\n\n   /**\n    * init()\n    * prepare the ABFactory for operation. This includes parsing the\n    * definitions into useable objects, preparing the System Resources, etc.\n    * @return {Promise}\n    */\n   async init() {\n      //\n      // Prepare our Resources First\n      //\n      var allInits = [];\n\n      allInits.push(this.Account.init(this));\n      allInits.push(this.Multilingual.init(this));\n      allInits.push(this.Network.init(this));\n      allInits.push(this.Tenant.init(this));\n\n      await Promise.all(allInits);\n      await this.Storage.init(this);\n      var data = await this.Storage.get(\"local_settings\");\n      this._localSettings = data || {};\n\n      //\n      // Real Time Update Handlers\n      //\n\n      // new ABDefinition created:\n      this.on(\"ab.abdefinition.create\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"created\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition updated:\n      this.on(\"ab.abdefinition.update\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         this._definitions[pkt.id] = pkt.data;\n         this.definitionSync(\"updated\", pkt.id, pkt.data);\n      });\n\n      // ABDefinition delete:\n      this.on(\"ab.abdefinition.delete\", (pkt) => {\n         // pkt.id : definition.id\n         // pkt.data : definition\n         if (typeof pkt.data.json == \"string\") {\n            try {\n               pkt.data.json = JSON.parse(pkt.data.json);\n            } catch (e) {\n               console.log(e);\n            }\n         }\n         delete this._definitions[pkt.id];\n         this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      });\n\n      return super.init();\n\n      // return Promise.all(allInits)\n      //    .then(() => {\n      //       // some Resources depend on the above to be .init() before they can\n      //       // .init() themselves.\n      //       return this.Storage.init(this).then(() => {\n      //          return this.Storage.get(\"local_settings\").then((data) => {\n      //             this._localSettings = data || {};\n      //          });\n      //       });\n      //    })\n      //    .then(() => {\n      //       //\n      //       // RealTime Updates of our ABDefinitions\n      //       //\n\n      //       // new ABDefinition created:\n      //       this.on(\"ab.abdefinition.create\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"created\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition updated:\n      //       this.on(\"ab.abdefinition.update\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          this._definitions[pkt.id] = pkt.data;\n      //          this.definitionSync(\"updated\", pkt.id, pkt.data);\n      //       });\n\n      //       // ABDefinition delete:\n      //       this.on(\"ab.abdefinition.delete\", (pkt) => {\n      //          // pkt.id : definition.id\n      //          // pkt.data : definition\n      //          if (typeof pkt.data.json == \"string\") {\n      //             try {\n      //                pkt.data.json = JSON.parse(pkt.data.json);\n      //             } catch (e) {\n      //                console.log(e);\n      //             }\n      //          }\n      //          delete this._definitions[pkt.id];\n      //          this.definitionSync(\"destroyed\", pkt.id, pkt.data);\n      //       });\n\n      //       return super.init();\n      //    });\n   }\n\n   /**\n    * definiitonCreate(def)\n    * create a new ABDefinition\n    * @param {obj} def\n    *        the value hash of the new definition entry\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionCreate(def) {\n      // we will set our uuid\n      if (typeof def.id == \"undefined\") {\n         def.id = this.uuid();\n         def.json.id = def.id;\n      }\n\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.create\",\n            context: {\n               uuid,\n            },\n         };\n         this.Network.post(\n            {\n               url: `/definition/create`,\n               data: def,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to CREATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to CREATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionCreate()\",\n               message,\n               def,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionDestroy(id)\n    * delete an ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @return {Promise}\n    */\n   async definitionDestroy(id) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.delete\",\n            context: {\n               id,\n               uuid,\n            },\n         };\n         this.Network.delete(\n            {\n               url: `/definition/${id}`,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to DESTROY definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to DELETE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionDestroy()\",\n               message,\n               id,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionUpdate(id, def)\n    * update an existing ABDefinition\n    * @param {string} id\n    *        the uuid of the ABDefinition to update.\n    * @param {obj} values\n    *        the value hash of the new definition values\n    * @return {Promise}\n    *        resolved with a new {ABDefinition} for the entry.\n    */\n   async definitionUpdate(id, values) {\n      return new Promise((resolve, reject) => {\n         var uuid = this.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"definition.update\",\n            context: {\n               id,\n               uuid,\n               values,\n            },\n         };\n         this.Network.put(\n            {\n               url: `/definition/${id}`,\n               data: values,\n            },\n            jobResponse\n         ).catch((err) => {\n            var message = \"Error attempting to UPDATE definitions\";\n            if (err.code == \"E_NOPERM\") {\n               message = \"User Doesn't have permission to UPDATE definitions\";\n            }\n            this.notify.developer(err, {\n               context: \"ABFactory.definitionUpdate()\",\n               message,\n            });\n\n            // NOTE: when using jobResponse type calls, expect that\n            // handler to be handling the errors.\n            // don't keep propagating them here.\n         });\n      });\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   // definitionsParse(defs = []) {\n   //    if (!Array.isArray(defs)) {\n   //       defs = [defs];\n   //    }\n\n   //    // store/replace the incoming definitions\n   //    // 1st: insert ALL our definitions internally\n   //    defs.forEach((d) => {\n   //       this._definitions[d.id] = d;\n   //    });\n   //    // 2nd: Now we can then go through and signal the \"updates\"\n   //    // and the related objects can find their dependent definitions.\n   //    defs.forEach((d) => {\n   //       this.definitionSync(\"updated\", d.id, d);\n   //    });\n\n   //    return Promise.resolve();\n   // }\n\n   /**\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain which group of people we are sending a notification to.\n    * @param {Error} error An error object generated at the point of issue.\n    * @param {json} info Additional related information concerning the issue.\n    */\n   notify(domain, error, info) {\n      performance.notify(domain, error, info);\n   }\n\n   plugins() {\n      return this._plugins;\n   }\n   pluginLoad(p) {\n      this._plugins.push(p);\n   }\n\n   //\n   // Utilities\n   //\n   alert(options) {\n      this.Webix.alert(options);\n   }\n\n   cloneDeep(value) {\n      return _.cloneDeep(value);\n   }\n\n   error(message, ...rest) {\n      var emitData = {\n         message: `ABFactory[${this.Tenant.id()}]:${message.toString()}`,\n      };\n\n      console.error(emitData.message);\n      if (message instanceof Error) {\n         emitData.error = message;\n         // this dumps the error.stack\n         console.error(message);\n      }\n\n      if (rest.length > 0) {\n         rest.forEach((r) => {\n            if (r instanceof Error) {\n               emitData.error = r;\n               // this dumps the error.stack\n               console.error(r);\n            }\n\n            if (typeof r == \"object\") {\n               for (var k in r) {\n                  emitData[k] = r[k];\n                  console.error(k, r[k]);\n               }\n            }\n         });\n      }\n      this.emit(\"error\", emitData);\n   }\n\n   jobID() {\n      return nanoid();\n   }\n\n   Label() {\n      return (...params) => {\n         return this.Multilingual.label(...params);\n      };\n   }\n\n   localSettings(key, value) {\n      if (typeof value == \"undefined\") {\n         // this is a getter:\n         return this._localSettings[key];\n      } else {\n         // setting a value:\n         this._localSettings[key] = value;\n         return this.Storage.set(`local_settings`, this._localSettings);\n      }\n   }\n\n   log(message, ...rest) {\n      console.log(message);\n      rest.forEach((r) => {\n         console.log(r);\n      });\n   }\n\n   isNil(value) {\n      return _.isNil(value);\n   }\n\n   /**\n    * @method rules.isUUID\n    * evaluate a given value to see if it matches the format of a uuid\n    * @param {string} key\n    * @return {boolean}\n    */\n   isUUID(key) {\n      var checker = RegExp(\n         \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n         \"i\"\n      );\n      return checker.test(key);\n   }\n\n   merge(...params) {\n      return _.merge(...params);\n   }\n\n   orderBy(...params) {\n      return _.orderBy(...params);\n   }\n\n   uniq(...params) {\n      return _.uniq(...params);\n   }\n\n   kebabCase(...params) {\n      return _.kebabCase(...params);\n   }\n\n   sumBy(...params) {\n      return _.sumBy(...params);\n   }\n\n   meanBy(...params) {\n      return _.meanBy(...params);\n   }\n\n   maxBy(...params) {\n      return _.maxBy(...params);\n   }\n\n   minBy(...params) {\n      return _.minBy(...params);\n   }\n\n   uuid() {\n      return uuidv4();\n   }\n\n   warn(message, ...rest) {\n      console.warn(message);\n      rest.forEach((r) => {\n         console.warn(r);\n      });\n   }\n\n   isString(...params) {\n      return _.isString(params);\n   }\n}\n\nexport default ABFactory;\n","/**\n * ABApplicationCore\n *\n * This is the core ABApplication class that manages the common operations\n * of an ABApplication across platforms.\n *\n * It's primary responsibility is to decode a given set of attributes into\n * a working instance of an ABApplication that can return instances of\n * it's defined sub objects.\n *\n * Platform Specific versions of those objects should be defined in a peer\n * directory named platform. These versions of the objects should override\n * these Core objects with platform specific methods of operation (like\n * .save()).\n *\n * Initially your target application should load your platform/ABApplication.js\n * file, which will include this file and sub class it.\n *\n * However, this file will include the remaining files from your platform/*\n * versions.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManager = require(\"../platform/ABViewManager\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nfunction toBool(val) {\n   if (typeof val == \"undefined\") {\n      return false;\n   }\n\n   if (val === \"\" || val === \"false\" || val === \"0\") {\n      return false;\n   }\n\n   if (val === \"true\" || val === \"1\") {\n      return true;\n   }\n\n   return val;\n}\n\nmodule.exports = class ABApplicationCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\", \"description\"], AB);\n\n      // attributes should be in format:\n      // {\n      //    id:##,\n      //    json:{},\n      //    name:\"XYZ\"\n      // }\n      attributes.json = attributes.json || {};\n\n      // ABApplication Attributes\n      this.id = attributes.id;\n      // {string} uuid\n\n      this.type = attributes.type || \"application\";\n      // {string} .type\n      // the ABDefinition.type of this object.\n\n      this.appType = attributes.appType || \"web\";\n      // {string} .appType\n      // the kind of Application this is. [\"web\", \"mobile\"]\n\n      this.json = attributes.json;\n      if (typeof this.json == \"string\") this.json = JSON.parse(this.json);\n      // {obj} .json\n      // the full settings of this ABApplication\n\n      this.json[\"versionData\"] = attributes.json?.versionData || {\n         versionNumber: \"1.0.0\",\n         changeLog: {\n            \"1.0.0\": {\n               author: \"N/A\",\n               version: \"1.0.0\",\n               keepVersion: 0,\n               commitMessage: \"Initial Version\",\n               timestamp: new Date().toISOString(),\n            },\n         },\n      };\n\n      if (typeof this.json.versionData == \"string\")\n         this.json.versionData = JSON.parse(this.json.versionData);\n      // {obj} .json\n      // the full version log data of this ABApplication\n\n      this.name = attributes.name || this.json.name || \"\";\n      // {string} .name\n      // the hard coded name of this ABDefinition Object, not to be confused\n      // with the .label.  The .name is created at design time and is a text\n      // reference for this object.\n\n      this.icon = attributes.icon || \"fa-rocket\";\n      // {string} .icon\n      // this is a reference to a font awesome icon including the `fa-`\n      // example `fa-child` should be stored for the `child` icon to be used\n      // if user wants to get creative they can add more to this field following\n      // these examples https://fontawesome.com/v4/examples/\n\n      this.isSystemObject = toBool(attributes.isSystemObject);\n      // {bool} .isSystemObject\n      // is this one of the integrated System Objects used by our framework?\n      // Some ABApplications and ABObjects are central to the running of the\n      // AppBuilder site.  They are marked with .isSystemObject = true;  It\n      // requires the role \"System Designer\" in order to edit/modify them.\n\n      this.roleAccess = attributes.roleAccess || [];\n      if (!Array.isArray(this.roleAccess)) {\n         this.roleAccess = [this.roleAccess];\n      }\n      this.roleAccess = this.roleAccess.filter((r) => r);\n      // {array}\n      // the {ABSiteRole.id}s of the roles allowed to work with this\n      // ABApplication. (see .isAccessManaged for more info)\n\n      this.isAccessManaged = JSON.parse(attributes.isAccessManaged || false);\n      // {bool} .isAccessManaged\n      // does this Application imploy the more sophisticated  Access\n      // permissions, or the simpler Role access permissions.\n      // {true} : allows an administrator to set which role can View|Edit|Delete\n      //          elements of an application.\n      // {false}: indicates users having one of the .roleAccess values can have\n      //          full access to this application\n\n      this.accessManagers = attributes.accessManagers;\n      if (typeof this.accessManagers == \"string\")\n         this.accessManagers = JSON.parse(this.accessManagers);\n      // {??} .accessManagers\n      // if .isAccessManaged == true, then .accessManagers contain the definitions\n      // of the detailed access permissions.\n\n      this.isTranslationManaged = JSON.parse(\n         attributes.isTranslationManaged || false\n      );\n      this.translationManagers = attributes.translationManagers;\n      if (typeof this.translationManagers == \"string\")\n         this.translationManagers = JSON.parse(this.translationManagers);\n\n      this.isTutorialManaged = JSON.parse(\n         attributes.isTutorialManaged || false\n      );\n      this.tutorialManagers = attributes.tutorialManagers;\n      if (typeof this.tutorialManagers == \"string\")\n         this.tutorialManagers = JSON.parse(this.tutorialManagers);\n\n      this.hintIDs = attributes.json.hintIDs || [];\n      // {array} .hintIDs\n      // All the {ABHint.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABHint}s are included or excluded from\n      // this app.\n\n      this.objectIDs = attributes.json.objectIDs || [];\n      // {array} .objectIDs\n      // All the {ABObject.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObject}s are included or excluded from this app.\n\n      this.queryIDs = attributes.json.queryIDs || [];\n      // {array} .queryIDs\n      // All the {ABObjectQuery.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABObjectQueries}s are included or excluded from\n      // this app.\n\n      this.datacollectionIDs = attributes.json.datacollectionIDs || [];\n      // {array} .datacollectionIDs\n      // All the {ABDataCollection.id} values that have been pulled into this\n      // ABApplication for use in it's design environment.  This is how we\n      // determine which {ABDataCollection}s are included or excluded from\n      // this app.\n\n      // import all our {ABViewPage}s\n      let newPages = [];\n      (attributes.json.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            newPages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.id}] is referenceing an unknown Page[${id}]`,\n               {\n                  appID: this.id,\n                  pageID: id,\n               }\n            );\n            // console.error(\n            //    `App[${this.id}] is referenceing an unknown Page[${id}]`\n            // );\n         }\n      });\n      this._pages = newPages;\n      // {array} ._pages\n      // an array of all the {ABViewPages} this ABApplication offers as\n      // interfaces for working with our Data.\n      // ABViewPages operate within the confines of an ABApplication so\n      // they are created/stored/accessed from within an ABApplication\n\n      (attributes.json.processIDs || []).forEach((pID) => {\n         var p = this.AB.processByID(pID);\n         if (!p) {\n            this.emit(\n               \"warning\",\n               `Application is referencing an unknown process.`,\n               { appID: this.id, processID: pID }\n            );\n         }\n      });\n\n      this.processIDs = attributes.json.processIDs || [];\n      // {array} .processIDs\n      // an array of all the {ABProcess.id}s referenced by this Application.\n\n      // Object List Settings\n      attributes.json.objectListSettings =\n         attributes.json.objectListSettings || {};\n      this.objectListSettings = this.objectListSettings || {};\n      this.objectListSettings.isOpen = JSON.parse(\n         attributes.json.objectListSettings.isOpen || false\n      );\n      this.objectListSettings.searchText =\n         attributes.json.objectListSettings.searchText || \"\";\n      this.objectListSettings.sortDirection =\n         attributes.json.objectListSettings.sortDirection || \"asc\";\n      this.objectListSettings.isGroup = JSON.parse(\n         attributes.json.objectListSettings.isGroup || false\n      );\n\n      // let the MLClass now process the translations:\n      // transition issues:\n      attributes.translations =\n         attributes.translations || attributes.json.translations;\n\n      super.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManager;\n   }\n\n   /// ABApplication data methods\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABApplication is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      // if we are on the basic Role assignments:\n      if (!this.isAccessManaged) {\n         (roles || []).forEach((r) => {\n            if (this.roleAccess.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n         return foundRole;\n      }\n\n      // isAccessManaged has been set, so 2 kinds of ppl can\n      // see this App\n      // 1) an AccessManager\n      if (parseInt(this.accessManagers.useRole)) {\n         (roles || []).forEach((r) => {\n            if (this.accessManagers.role.indexOf(r.uuid || r) > -1) {\n               foundRole = true;\n            }\n         });\n      }\n\n      // stop here if found.\n      if (foundRole) return foundRole;\n\n      // 2) someone who has a role that can see one of it's pages.\n      // scan each Page of this Application\n      (this.pages() || []).forEach((p) => {\n         // check to see if that page.isAccessibleForRoles()\n         if (p.isAccessibleForRoles(roles)) {\n            foundRole = true;\n         }\n      });\n      return foundRole;\n   }\n\n   get isWebApp() {\n      return this.appType == \"web\";\n   }\n\n   get isMobile() {\n      return this.appType == \"mobile\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      let versionData = this.json.versionData;\n\n      this.json = super.toObj();\n\n      this.json.name = this.name;\n\n      this.json.versionData = versionData;\n\n      this.json.objectIDs = this.objectIDs;\n\n      this.json.objectListSettings = this.objectListSettings;\n\n      this.json.hintIDs = this.hintIDs;\n\n      this.json.queryIDs = this.queryIDs;\n\n      this.json.datacollectionIDs = this.datacollectionIDs;\n\n      this.json.pageIDs = (this._pages || []).map((p) => p.id);\n\n      this.json.processIDs = this.processIDs || [];\n\n      // // for each MobileApp: compile to json\n      // var currApps = [];\n      // this._mobileApps.forEach((app) => {\n      //    currApps.push(app.toObj())\n      // })\n      // this.json.mobileApps = currApps;\n\n      return {\n         id: this.id,\n         type: this.type || \"application\",\n         appType: this.appType || \"web\",\n         name: this.name,\n         icon: this.icon,\n         isSystemObject: this.isSystemObject,\n         json: this.json,\n         roleAccess: this.roleAccess,\n         translations: this.json.translations,\n         isAccessManaged: this.isAccessManaged,\n         isTranslationManaged: this.isTranslationManaged,\n         isTutorialManaged: this.isTutorialManaged,\n         accessManagers: this.accessManagers,\n         translationManagers: this.translationManagers,\n         tutorialManagers: this.tutorialManagers,\n      };\n   }\n\n   ///\n   /// Mobile Apps\n   ///\n\n   ///\n   /// Datacollections\n   ///\n\n   // datacollectionNew(values) {\n   //    return new ABDataCollectionCore(values, this);\n   // }\n\n   datacollectionsExcluded(filter = () => true) {\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   datacollectionsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.datacollections((o) => {\n         return this.datacollectionIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Objects\n   ///\n\n   objectsExcluded(filter = () => true) {\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) == -1;\n      }).filter(filter);\n   }\n\n   objectsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.objects((o) => {\n         return this.objectIDs.indexOf(o.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Hints\n   ///\n\n   hintsExcluded(filter = () => true) {\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) == -1;\n      }).filter(filter);\n   }\n\n   hintsIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.hints((h) => {\n         return this.hintIDs.indexOf(h.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   /**\n    * @method connectedObjects()\n    *\n    * return an array of all the connected ABObjects for a given ABObject.\n    *\n    * @param {string} id\n    *        an ID of an ABObject\n    * @return {array}   array of options for webix select\n    *         [ {id, value}, ... ]\n    */\n   connectedObjects(id) {\n      console.error(\n         \"ABApplicationCore.connectedObjects(): who is calling this?\"\n      );\n\n      if (id == \"\") return [];\n\n      // Determine the object from the ID\n      var myObj = this.AB.objectByID(id);\n\n      // Get all the connected Fields for that object\n      var connectedFields = myObj.connectFields();\n      // Store the related fields associatively inside their related Objects ID\n      var connectedObj = {};\n      connectedFields.forEach((f) => {\n         connectedObj[f.settings.linkObject] = this.AB.objectByID(\n            f.settings.linkObject\n         );\n      });\n      // Look up the objects by their ID and push them in an options array\n      var linkedObjects = [];\n      Object.keys(connectedObj).forEach(function (key /*, index */) {\n         linkedObjects.push({\n            id: this[key].id,\n            value: this[key].label,\n         });\n      }, connectedObj /* = this. inside fn */);\n\n      return linkedObjects;\n   }\n\n   /**\n    * @method connectedFields()\n    * return an array of all the connected ABFields for a given ABObject\n    * @param {string} currObjID\n    *        an ID of the current ABObject\n    * @param {string} linkedObjectID\n    *        an ID of the linked ABObject\n    * @return {array}\n    *        array of options for webix select\n    */\n   connectedFields(currObjID, linkedObjectID) {\n      console.error(\"!!! Who is calling this?\");\n\n      // Determine the object from the currObjID\n      var myObj = this.AB.objectByID(currObjID);\n\n      // Get all the connected Fields for our object that match the linkedObjectID\n      var connectedFields = myObj.connectFields(\n         (f) => f.settings.linkObject == linkedObjectID\n      );\n      // Build an arry of options for the webix select\n      var linkedFields = [];\n      connectedFields.forEach((f) => {\n         linkedFields.push({ id: f.columnName, value: f.label });\n      });\n\n      return linkedFields;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    * return an array of all the ABViewPages for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewPages that this fn\n    *        returns true for.\n    * @param {boolean} deep\n    *        flag to search in sub pages\n    * @return {array}\n    *        array of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._pages || this._pages.length < 1) return result;\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // function searchDeep(curr) {\n         //    let resultsCurr = curr._pages.filter(filter);\n\n         //    for (let p of curr._pages) {\n         //       let resultsP = searchDeep(p);\n         //       if (resultsP.length) {\n         //          resultsCurr = resultsCurr.concat(resultsP);\n         //       }\n         //    }\n         //    // if we get here, end\n         //    return resultsCurr;\n         // }\n\n         // result = searchDeep(this);\n         result = this._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = (this._pages || []).filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method _searchDeep()\n    * search each node of a tree and return all matches that pass the provided\n    * filter.\n    * @param {AB*} curr\n    *        An object that contains a tree structure.\n    * @param {string} key\n    *        The curr[key] reference of the array of items to search\n    * @param {function} filter\n    *        The curr[key].filter(filter) that returns true/false if a node is\n    *        to be included in the result.\n    * @return {array}\n    */\n   _searchDeep(curr, key, filter) {\n      let items = curr[key] ?? [];\n      let resultsCurr = items.filter?.(filter) ?? [];\n\n      for (let p of items) {\n         let resultsP = this._searchDeep(p, key, filter);\n         if (resultsP.length) {\n            resultsCurr = resultsCurr.concat(resultsP);\n         }\n      }\n\n      return resultsCurr;\n   }\n\n   ///\n   /// Processes\n   ///\n\n   /**\n    * @method processes()\n    * return an array of all the ABProcesses for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABProcesses that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABProcesses\n    */\n   processes(filter = () => true) {\n      return this.AB.processes((p) => {\n         return this.processIDs.indexOf(p.id) > -1;\n      }).filter(filter);\n   }\n\n   hasProcess(process) {\n      if (process && process.id) {\n         return this.processIDs.indexOf(process.id) > -1;\n      } else {\n         return false;\n      }\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    * return an array of all the Views for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of Views that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of Views\n    */\n   views(filter) {\n      var result = [];\n      var views = [];\n      var pages = [];\n\n      if (\n         (!this._pages || this._pages.length < 1) &&\n         (!this._views || this._views.length < 1)\n      )\n         return result;\n\n      function lookDeep(view) {\n         if (view._pages && view._pages.length) {\n            view._pages.forEach((p) => {\n               // check the page views recusively\n               var pageViews = p.views(filter, true);\n               // if there was a match store it\n               if (pageViews && pageViews.length > 0) {\n                  result = pageViews;\n               }\n               // if no match move on to the subpages\n               if (result.length < 1) {\n                  // loop through each subpage recursively\n                  var subPages = p.pages(filter, true);\n                  // if there was a match store it\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n                  if (result.length < 1) {\n                     lookDeep(p);\n                  }\n               }\n            });\n         }\n      }\n\n      // look at views recursively\n      if (filter) {\n         // look at views recursively (views can have subviews and so on)\n         if (this._views) {\n            views = this._views.filter(filter);\n\n            if (views.length < 1) {\n               this._views.forEach((v) => {\n                  var subViews = v.views(filter, true);\n                  if (subViews && subViews.length > 0) {\n                     views = subViews;\n                  }\n               });\n            }\n         }\n\n         // if no views of the root page match now look at the sub pages and their views\n         if (views.length) {\n            result = views;\n         } else {\n            // check the first level subpages\n            result = this._pages.filter(filter);\n\n            // if no match check each pages views and subpages\n            if (result.length < 1) {\n               // looping through pages\n               lookDeep(this);\n            }\n         }\n      }\n      // find all views\n      else {\n         // recusively gather all views on this view\n         if (this._views) {\n            views = this._views;\n            if (views.length) {\n               views.forEach((v) => {\n                  var subViews = v.views(() => true, true);\n                  if (subViews && subViews.length) {\n                     views = views.concat(subViews);\n                  }\n               });\n            }\n         }\n\n         // recursively gather all pages and their views\n         if (this._pages) {\n            pages = this._pages;\n            if (pages.length) {\n               pages.forEach((p) => {\n                  // grab all views on this page\n                  var pageViews = p.views(() => true, true);\n                  if (pageViews && pageViews.length) {\n                     views = views.concat(pageViews);\n                  }\n                  // grab all subpages on this page\n                  var subPages = p.pages(() => true, true);\n                  if (subPages && subPages.length) {\n                     pages = pages.concat(subPages);\n                     subPages.forEach((sub) => {\n                        var subViews = sub.views(() => true, true);\n                        if (subViews && subViews.length) {\n                           views = views.concat(subViews);\n                        }\n                     });\n                  }\n               });\n            }\n         }\n\n         result = result.concat(pages, views);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewAll()\n    * return a list of all the {ABViewxxx} classes available.\n    * @return {array} of ABView objects\n    */\n   viewAll(fn = () => true) {\n      return this.ViewManager.allViews(fn);\n   }\n\n   ///\n   /// Queries\n   ///\n\n   /**\n    * queriesExcluded()\n    * return a list of ABObjectQuery(s) that are not included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @return {array}\n    */\n   queriesExcluded(filter = () => true) {\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) == -1;\n      }).filter(filter);\n   }\n\n   /**\n    * queriesIncluded()\n    * return a list of ABObjectQuery(s) that are included in this\n    * ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which queries to return.\n    * @param {fn} [sort] function to sort by, default is .label\n    * @return {array}\n    */\n   queriesIncluded(filter = () => true, sort) {\n      // by default sort by label\n      const sortFn = sort ?? ((a, b) => a.label.localeCompare(b.label));\n      return this.AB.queries((q) => {\n         return this.queryIDs.indexOf(q.id) > -1;\n      })\n         .filter(filter)\n         .sort(sortFn);\n   }\n\n   ///\n   /// Roles\n   ///\n\n   /**\n    * @method roles()\n    * return an array of all the ABRole for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to further reduce which roles to return.\n    * @return {array}   array of ABRole\n    */\n   // roles(filter = () => true) {\n   //    return (this.role || []).filter(filter);\n   // }\n\n   /**\n    * @method urlResolve()\n    * given an object pointer, return the specific object referenced.\n    * pointer must start with a '#', use '/' as delimiters, and either\n    * reference an object's .id, or an object's .property.\n    * for example:\n    * #/_objects   : resolves to the array of ._objects pointed to by this\n    *               application.\n    * #/_objects/[object.id] : reolved to a specific object\n    * #/_objects/[object.id]/_fields/[field.id] : resolves to a specific data field\n    *               refereced by object.id.\n    *\n    * @param {string} pointer : the string url referencing the object you want\n    *                       to retrieve.\n    * @return {obj}\n    */\n   urlResolve(pointer) {\n      var parts = pointer.split(\"/\");\n\n      var parseStep = (obj, steps) => {\n         // we're done.  obj is what we are looking for:\n         if (steps.length == 0) {\n            return obj;\n         }\n\n         // pull the next step key:\n         var key = steps.shift();\n\n         // special case, \"#\" makes sure we are talking about the\n         // Application object\n         if (key == \"#\") {\n            return parseStep(this, steps);\n         }\n\n         // if obj is an [], then key should be an .id reference to\n         // lookup:\n         if (Array.isArray(obj)) {\n            obj = obj.filter(function (o) {\n               return o.id == key;\n            })[0];\n            return parseStep(obj, steps);\n         }\n\n         // otherwise obj should be an {} and key a property:\n         if (obj && obj[key]) {\n            return parseStep(obj[key], steps);\n         }\n\n         if (key == \"_objects\") {\n            console.error(new Error(\"REFACTOR: old objectBy url reference:\"));\n\n            // This can be gotten from our AB\n            var id = steps.shift();\n            return parseStep(this.AB.objectByID(id), steps);\n         }\n\n         // if we got here, there is an error!\n         // console.error('!!! failed to lookup url:'+pointer);\n         console.error(\"!!! failed to lookup url:\" + pointer);\n         return null;\n      };\n\n      return parseStep(this, parts);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer for this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      // NOTE: if we need to expand this to search across\n      // applications, then add in this application.id here:\n      if (acrossApp) return \"#/\" + this.id + \"/\";\n      else return \"#/\";\n   }\n\n   /**\n    * @method urlObject()\n    * return the url pointer for objects in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlObject(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_objects/\";\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for pages in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPage(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_pages/\";\n   }\n\n   /**\n    * @method urlQuery()\n    * return the url pointer for queries in this application.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlQuery(acrossApp) {\n      return this.urlPointer(acrossApp) + \"_queries/\";\n   }\n\n   /**\n    * @method version()\n    * return the current version of this Application.\n    * Version information is in format \"{Major}.{Minor}.{patch}\"\n    * @return {string}\n    */\n   get version() {\n      return this.json?.versionData?.versionNumber ?? \"0.0.0\";\n   }\n\n   ///\n   ///   Object List Settings\n   ///\n   get objectlistIsOpen() {\n      return this.objectListSettings.isOpen;\n   }\n\n   set objectlistIsOpen(isOpen) {\n      this.objectListSettings.isOpen = isOpen;\n   }\n\n   get objectlistSearchText() {\n      return this.objectListSettings.searchText;\n   }\n\n   set objectlistSearchText(searchText) {\n      this.objectListSettings.searchText = searchText;\n   }\n\n   get objectlistSortDirection() {\n      return this.objectListSettings.sortDirection;\n   }\n\n   set objectlistSortDirection(sortDirection) {\n      this.objectListSettings.sortDirection = sortDirection;\n   }\n\n   get objectlistIsGroup() {\n      return this.objectListSettings.isGroup;\n   }\n\n   set objectlistIsGroup(isGroup) {\n      this.objectListSettings.isGroup = isGroup;\n   }\n\n   ///\n   /// Instance generators\n   ///\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABApplication.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      // values.key = ABViewPageCore.common().key;\n      values.key = \"page\";\n\n      return this.ViewManager.newView(values, this, null);\n   }\n\n   /**\n    * @method pageByID()\n    * return pages from the given {id}\n    * @param {string} id\n    *        the uuid of the page to return.\n    * @param {bool} deep\n    *        should this search deep (through all our children's children)\n    * @return {ABViewPage}\n    */\n   pageByID(id, deep = true) {\n      return this.pages((f) => f.id == id, deep)[0];\n   }\n\n   /**\n    * @method viewNew()\n    *\n    * return an instance of a new (unsaved) ABView.\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.ViewManager.newView(values, application, parent);\n   }\n\n   ///\n   /// Utilities\n   ///\n\n   cloneDeep(/* object */) {\n      var errorDepreciated = new Error(\n         \"ABApplicationCore.cloneDeep(): Depreciated!  Use AB.cloneDeep() instead.\"\n      );\n      throw errorDepreciated;\n\n      // return JSON.parse(JSON.stringify(object));\n   }\n};\n","/**\n * ABApplicationMobileCore\n *\n * This is the core ABApplicationMobile class that manages the common operations\n * of a Mobile PWA ABApplication.\n */\n\n// webpack can handle 'require()' statements, but node can't handle import\n// so let's use require():\nconst ABViewManagerMobile = require(\"../platform/ABViewManagerMobile\");\nvar ABApplication = require(\"../platform/ABApplication\");\n\nmodule.exports = class ABApplicationMobileCore extends ABApplication {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.appType = \"mobile\"; // Just making sure.\n      this.networkType = attributes.networkType;\n\n      this.pageDefault = attributes.pageDefault;\n      // {uuid}\n      // the {ABMobilePage}.uuid of the page that is our default Page.\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   get ViewManager() {\n      return ABViewManagerMobile;\n   }\n\n   pageNew(def) {\n      console.error(\"TODO: pageNew for ApplicationMobile\");\n      return null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var json = super.toObj();\n      json.appType = \"mobile\";\n      json.networkType = this.networkType;\n\n      json.pageDefault = this.pageDefault;\n\n      return json;\n   }\n};\n","/*\n * ABDataCollection\n * Defines a set of data that other parts of the Application can work with.\n * it can point to either an ABObject, or ABObjectQuery, and can have an\n * filter, and sorts defined.\n *\n *\n *\n */\n// const ABEmitter = require(\"../platform/ABEmitter\");\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\n// const ABObject = require(\"../platform/ABObject\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n// const RowFilter = require(\"../platform/RowFilter\");\n\nvar DefaultValues = {\n   id: \"uuid\",\n   label: \"\", // label\n   object: {}, // json of ABObject\n   query: {}, // json of ABObjectQuery\n   settings: {\n      datasourceID: \"\", // id of ABObject or ABObjectQuery\n      linkDatacollectionID: \"\", // id of ABDatacollection\n      linkFieldID: \"\", // id of ABField\n      followDatacollectionID: \"\", // id of ABDatacollection\n      objectWorkspace: {\n         filterConditions: {\n            // array of filters to apply to the data table\n            glue: \"and\",\n            rules: [],\n         },\n         sortFields: [], // array of columns with their sort configurations\n      },\n      loadAll: false,\n      // preventPopulate: false, depreciating in favour of populate\n      populate: true, // true/false or array of columns to populate.\n      isQuery: false, // if true it is a query, otherwise it is a object.\n\n      fixSelect: \"\", // _CurrentUser, _FirstRecord, _FirstRecordDefault or row id\n\n      syncType: 1, // 1 (Server), 2 (Client)\n   },\n};\n\nconst QueuedOperations = [];\n// {array} of operations that we want to perform but allow some space\n// between operations.\nvar _queueTimer = null;\n\nfunction runQueue() {\n   // if (!_queueTimer) {\n   //    _queueTimer = setInterval(() => {\n   //       runQueue();\n   //    }, 20);\n   // }\n   if (QueuedOperations.length == 0) {\n      // stop\n      // clearInterval(_queueTimer);\n      _queueTimer = null;\n      return;\n   }\n   var op = QueuedOperations.shift();\n   op.fn();\n   _queueTimer = setTimeout(runQueue, op.timeout);\n}\nfunction queueOperation(fn, timeout = 20) {\n   QueuedOperations.push({ fn, timeout });\n   if (!_queueTimer) {\n      runQueue();\n   }\n}\n\nmodule.exports = class ABDataCollectionCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      attributes = attributes || {};\n\n      // this.application = application;\n\n      this.fromValues(attributes);\n\n      this.__dataCollection = this._dataCollectionNew([]);\n      // {DataCollection}\n      // This is a working instance of a DataCollection, not an {ABDatacCollection}\n      // On web/mobile this is a webix component.  So keep the creation as part of\n      // the platform/ABDataCollection implementation.\n\n      // Set filter value\n      this.refreshFilterConditions();\n\n      this.__bindComponentIds = [];\n      this.__flexComponentIds = [];\n\n      // refresh a data collection\n      // this.init();\n\n      // mark data status does not be initialized\n      this._dataStatus = this.dataStatusFlag.notInitial;\n\n      this.__filterCond = null;\n      // {QueryCondition}\n      // A passed in Query Condition for filtering our DataCollection.\n      // This value is ANDed with our normal filter conditions.\n\n      this.__model = null;\n      // {ABModel}\n      // An instance of the ABModel used for this DataCollection to\n      // access data on the server.\n   }\n\n   /**\n    * contextKey()\n    *\n    * return a unique key that represents data from/for this type of object.\n    *\n    * used when creating Network jobs and needing to be notified when a job\n    * is complete.  We send a contextKey() to the Network job and then listen\n    * for it to know when it is complete.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"datacollection\";\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id;\n      // {string} .id\n      // the uuid of this ABDataCollection Definition.\n\n      this.name = values.name || null;\n      // {string} .name\n      // the unchanging name of this ABDataCollection\n\n      this.type = values.type || \"datacollection\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      values.settings = values.settings || {};\n      this.settings = this.settings || {};\n      // {obj} .settings\n      // the specific operation values for this ABDataCollection\n\n      this.settings.linkDatacollectionID =\n         values.settings.linkDatacollectionID ||\n         DefaultValues.settings.linkDatacollectionID;\n      // {string} .settings.linkDatacollectionID\n      // the uuid of another ABDataCollection that provides the link/trigger\n      // for filtering the values of this ABDataCollection.\n\n      this.settings.linkFieldID =\n         values.settings.linkFieldID || DefaultValues.settings.linkFieldID;\n      // {string} .settings.linkFieldID\n      // this.fieldLink is intended to be the way to connect to the column in\n      // the datacollectionLink that we are following.  However this field\n      // is the field in this.datasource that connects to the field in\n      // datacollectionLink that has the value we are linked to.\n      // So, If this DC(ObjB), and our datacollectionLink (ObjA)\n      // then this.fieldLink = ObjB->FieldB\n      // To find the corresponding field in ObjA, we do:\n      // this.fieldLink.fieldLink  (ObjA->FieldA)\n\n      this.settings.followDatacollectionID =\n         values.settings.followDatacollectionID ||\n         DefaultValues.settings.followDatacollectionID;\n      // {string} .settings.followDatacollectionID\n      // the uuid of another ABDataCollection that provides the follow cursor data collection\n\n      this.settings.objectWorkspace = values.settings.objectWorkspace || {\n         filterConditions:\n            DefaultValues.settings.objectWorkspace.filterConditions,\n         sortFields: DefaultValues.settings.objectWorkspace.sortFields,\n      };\n      // {obj} .settings.objectWorkspace\n      // the default settings for what is shown in the AppBuilder's\n      // DataCollection workspace\n\n      this.settings.fixSelect = values.settings.fixSelect;\n\n      // Convert to boolean\n      this.settings.loadAll = JSON.parse(\n         values.settings.loadAll || DefaultValues.settings.loadAll\n      );\n      // {bool} .settings.loadAll\n      // do we load all the data at one time? false == load by pages.\n\n      this.settings.isQuery = JSON.parse(\n         values.settings.isQuery || DefaultValues.settings.isQuery\n      );\n      // {bool} .settings.isQuery\n      // is the data source for this ABDataCollection based upon an\n      // ABObjectQuery?\n\n      this.settings.populate = (() => {\n         // First check .populate\n         if (values.settings.populate != undefined) {\n            return values.settings.populate;\n            // Then check legacy .preventPopulate\n         } else if (\n            values.settings.preventPopulate == true ||\n            values.settings.preventPopulate == \"1\"\n         ) {\n            return false;\n         } else return DefaultValues.settings.populate;\n      })();\n      // {bool | array} populate\n      // Control whcih related connections to populate. Default, true, populates\n      // all connections. False loads no connnections. Also accepts an array of\n      // column names to load specefic connections.\n\n      // Convert to number\n      this.settings.syncType = parseInt(\n         values.settings.syncType || DefaultValues.settings.syncType\n      );\n      // {int} .settings.syncType\n      // how is the data between this ABDataCollection and it's\n      // .datasource synced?\n\n      this.__datasource = null;\n      // {obj} .__datasource\n      // the reference to the ABObject/ABObjectQuery that this ABDataCollection\n      // is based off of.\n\n      this.settings.datasourceID =\n         values.settings.datasourceID || DefaultValues.settings.datasourceID;\n      // {string} .settings.datasourceID\n      // the uuid of the .__datasource object to use\n\n      // now lookup and reference the proper datasource\n      if (this.settings.datasourceID) {\n         // check for an ABObject\n         var obj = this.AB.objectByID(this.settings.datasourceID);\n         if (!obj) {\n            // this must be an ABObjectQuery then ...\n            obj = this.AB.queryByID(this.settings.datasourceID);\n         }\n\n         if (obj) {\n            this.__datasource = obj;\n            this.settings.isQuery = obj.type === \"query\";\n            if (this.settings.isQuery) {\n               if (this.__datasource.isGroup) {\n                  if (!this.__treeCollection)\n                     this.__treeCollection = this._treeCollectionNew();\n                  // {TreeCollection}\n                  // This is a webix TreeCollection (or similar)\n                  // keep it's implementation as part of the platform\n\n                  this.__isGroup = true;\n               }\n            }\n         } else {\n            console.error(\n               `ABDataCollection[${this.name}][${this.id}] unable to find datasource [${this.settings.datasourceID}]`\n            );\n         }\n      }\n\n      // // Populate data source: ABObject or ABObjectQuery\n      // if (values.query && values.query[0]) {\n      //    this.__datasource = new ABObjectQuery(\n      //       values.query[0],\n      //       this.application\n      //    );\n      //    this.settings.isQuery = true;\n\n      //    if (this.__datasource.isGroup) {\n      //       if (!this.__treeCollection)\n      //          this.__treeCollection = this._treeCollectionNew();\n\n      //       this.__isGroup = true;\n      //    }\n      // } else if (values.object && values.object[0]) {\n      //    this.__datasource = new ABObject(values.object[0], this.application);\n      //    this.settings.isQuery = false;\n      // }\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj(); // untranslate the object\n\n      return {\n         id: this.id,\n         name: this.name || this.label,\n         type: this.type || \"datacollection\",\n         settings: this.AB.cloneDeep(this.settings || {}),\n         translations: obj.translations,\n      };\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDatacollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *      .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      return this;\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABDatacollection\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      var removeFromApplications = () => {\n         return new Promise((next, err) => {\n            // this.AB.applications().then((apps) => {\n\n            const apps = this.AB.applications();\n            // NOTE: apps is a webix datacollection\n\n            var allRemoves = [];\n\n            var appsWithObject = apps.filter((a) => {\n               return a.datacollectionsIncluded((o) => o.id == this.id);\n            });\n            appsWithObject.forEach((app) => {\n               allRemoves.push(app.datacollectionRemove(this));\n            });\n\n            return Promise.all(allRemoves).then(next).catch(err);\n            // });\n         });\n      };\n\n      return Promise.resolve()\n         .then(() => {\n            return removeFromApplications();\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @property $dc\n    * return the underlying webix datacollection\n    * @return {webix.datacollection}\n    */\n   get $dc() {\n      return this.__dataCollection;\n   }\n\n   /**\n    * @property datasource\n    * return a object of this component.\n    *\n    * @return {ABObject|ABObjectQuery}\n    */\n   get datasource() {\n      if (!this.__datasource) {\n         if (this.id && this.name) {\n            // occassionally we have blank DCs (without .id or .name)\n            // and I don't want to see errors for those\n            var err = new Error(\n               `DataCollection[${this.name}][${this.id}] missing reference datasource`\n            );\n            this.AB.notify(\"builder\", err, { datacollection: this.toObj() });\n         }\n         return null;\n      }\n      var obj = this.AB.objectByID(this.__datasource.id);\n      if (!obj) {\n         obj = this.AB.queryByID(this.__datasource.id);\n      }\n      return obj;\n   }\n\n   /**\n    * @property datasource\n    * set a object to data collection\n    *\n    * @param {ABObject|ABObjectQuery} object\n    */\n   set datasource(object) {\n      this.__datasource = object;\n\n      this.refreshFilterConditions();\n   }\n\n   /**\n    * @property sourceType\n    * return type of source.\n    *\n    * @return {string} - 'object' or 'query'\n    */\n   get sourceType() {\n      return this.settings.isQuery ? \"query\" : \"object\";\n   }\n\n   /**\n    * @method datacollectionLink\n    * return a ABDatacollection that link of this.\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollectionLink() {\n      if (!this.AB) return null;\n\n      return this.AB.datacollectionByID(this.settings.linkDatacollectionID);\n   }\n\n   /**\n    * @property fieldLink\n    * return a ABFieldConnect field that link of this.\n    *\n    * @return {ABFieldConnect}\n    */\n   get fieldLink() {\n      let object = this.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.linkFieldID);\n   }\n\n   /**\n    * @property model\n    * return a source model\n    *\n    * @return ABModel\n    */\n   get model() {\n      if (!this.__model) {\n         let object = this.datasource; // already notified\n\n         this.__model = object ? object.model() : null;\n      }\n      return this.__model;\n   }\n\n   get dataStatusFlag() {\n      return {\n         notInitial: 0,\n         initializing: 1,\n         initialized: 2,\n      };\n   }\n\n   get dataStatus() {\n      return this._dataStatus;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   setCursor(itemId) {\n      // If the static cursor is set, then this DC could not set cursor to other rows\n      if (\n         this.settings.fixSelect &&\n         (this.settings.fixSelect != \"_FirstRecordDefault\" ||\n            this.settings.fixSelect == itemId)\n      )\n         return;\n\n      if (this.__treeCollection) {\n         // set cursor of tree collection\n         this.setCursorTree(itemId);\n\n         // pull current row id\n         let currTreeId = this.__treeCollection.getCursor();\n         if (currTreeId) {\n            let currTreeItem = this.__treeCollection.getItem(currTreeId);\n            if (currTreeItem) itemId = currTreeItem._itemId;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc) {\n         // Store the old cursor id\n         this.__previousCursorId = dc.getCursor();\n\n         // clear cursor\n         if (itemId == null) {\n            dc.setCursor(null);\n         }\n         // If set rowId equal current cursor, it will not trigger .onAfterCursorChange event\n         else if (dc.getCursor() == itemId) {\n            this.emit(\"changeCursor\", this.getCursor());\n         }\n         // set new cursor\n         else if (dc.exists(itemId)) {\n            dc.setCursor(itemId);\n         }\n      }\n   }\n\n   /**\n    *\n    * @param {string|number} itemId - Id of item or Id of row data\n    */\n   setCursorTree(itemId) {\n      let tc = this.__treeCollection;\n      if (tc && tc.getCursor() != itemId) {\n         // If it is id of tree collection, then find row id of data\n         let treeCursor = tc.find({ id: itemId }, true);\n         if (treeCursor) {\n            tc.setCursor(itemId);\n         }\n         // If it is not id of tree collection, then find/set root of data\n         else {\n            let treeItem = tc.find({ _itemId: itemId, $parent: 0 }, true);\n            if (treeItem) tc.setCursor(treeItem.id);\n            else tc.setCursor(null);\n         }\n      }\n   }\n\n   getCursor(treeCursor = false) {\n      // Cursor of tree collection\n      if (treeCursor && this.__treeCollection) {\n         let currId = this.__treeCollection.getCursor();\n         if (currId) {\n            let currItem = this.__treeCollection.getItem(currId);\n\n            // filter current id for serialize\n            this.__treeCollection.filter(\n               (item) => item._itemId == currItem._itemId\n            );\n\n            // pull item with child items\n            let currItemAndChilds =\n               this.__treeCollection.serialize()[0] || null;\n\n            // refresh filter\n            this.refreshLinkCursor();\n\n            return currItemAndChilds;\n         }\n      }\n\n      let dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      let currId = dc.getCursor();\n      let currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getFirstRecord() {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getFirstId();\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   getNextRecord(record) {\n      var dc = this.__dataCollection;\n      if (dc == null) return null;\n\n      var currId = dc.getNextId(record.id);\n      var currItem = dc.getItem(currId);\n\n      return currItem;\n   }\n\n   /**\n    * @method refreshLinkCursor\n    *    If the data collection is bound to another and it is the child connection\n    *    it finds it's parents current set cursor and then filters its data\n    *    based off of the cursor.\n    *\n    *    In cases where a DC has set .loadAll, our job is to filter existing data\n    *    that is already loaded in the internal __dataCollection.\n    *\n    *    Otherwise this is not the place to trigger a data refresh.  We depend\n    *    on other mechanisms (.reloadData(), datacollection .select()) to trigger\n    *    an update.\n    */\n   refreshLinkCursor(force = false) {\n      // our filter conditions need to know there was an updated cursor.\n      // some of our filters are based upon our linked data.\n      this.refreshFilterConditions();\n\n      // NOTE: If DC does not set load all data, then it does not need to filter by the parent DC.\n      // because it fetch data when the cursor of the parent DC changes.\n      if (!this.settings.loadAll && !force) return;\n\n      // do not set the filter unless this dc is initialized \"dataStatusFlag==2\"\n      // if (this.dataStatus != this.dataStatusFlag.initialized) return;\n\n      // filter the data in the data collection\n      // using its parents current cursor because all the data in this child\n      // data collection has been loaded and the frontend can decide what is\n      // seen or not seen\n      let linkCursor;\n      let dvLink = this.datacollectionLink;\n      if (dvLink) {\n         linkCursor = dvLink.getCursor();\n      }\n\n      let filterData = (rowData) => {\n         // This row is not loaded yet. It will be loaded when scrolling.\n         if (rowData == null) return true;\n\n         // if link dc cursor is null:\n         // ... if there's no parent show all data\n         // ... if we have a parent hide all data - address cases where user see\n         //     unexpected data (ns_app#318) - should this be a DC setting?\n         if (!linkCursor) return dvLink ? false : true;\n         else return this.isParentFilterValid(rowData);\n      };\n\n      if (this.__dataCollection) this.__dataCollection.filter(filterData);\n      if (this.__treeCollection) this.__treeCollection.filter(filterData);\n   }\n\n   setStaticCursor() {\n      if (this.settings.fixSelect) {\n         // set cursor to the current user\n         if (this.settings.fixSelect == \"_CurrentUser\") {\n            var username = this.currentUserUsername();\n            var userFields = this.datasource.fields((f) => f.key == \"user\");\n\n            // find a row that contains the current user\n            var row = this.__dataCollection.find((r) => {\n               var found = false;\n\n               userFields.forEach((f) => {\n                  if (found || r[f.columnName] == null) return;\n\n                  if (r[f.columnName].filter) {\n                     // Array - isMultiple\n                     found =\n                        r[f.columnName].filter((data) => data.id == username)\n                           .length > 0;\n                  } else if (r[f.columnName] == username) {\n                     found = true;\n                  }\n               });\n\n               return found;\n            }, true);\n\n            // set a first row of current user to cursor\n            if (row) {\n               this.__dataCollection.setCursor(row.id);\n\n               this.setCursorTree(row.id);\n            }\n         } else if (\n            this.settings.fixSelect == \"_FirstRecord\" ||\n            this.settings.fixSelect == \"_FirstRecordDefault\"\n         ) {\n            // // find a row that contains the current user\n            // var row = this.__dataCollection.find((r) => {\n\n            //  var found = false;\n            //  if (!found) {\n            //    found = true;\n            //    return true; // just give us the first record\n            //  }\n\n            // }, true);\n\n            // // set a first row of current user to cursor\n            // if (row)\n            //  this.__dataCollection.setCursor(row.id);\n\n            let currRowId = this.__dataCollection.getCursor();\n            if (\n               !currRowId ||\n               (currRowId && !this.__dataCollection.exists(currRowId))\n            ) {\n               // If current cursor is filtered by parent DC, then select new cursor\n\n               // set a first row to cursor\n               let rowId = this.__dataCollection.getFirstId();\n               // if (rowId) {\n               this.__dataCollection.setCursor(rowId || null);\n\n               if (this.__dataCollection.data.count() == 0) {\n                  this.emit(\"collectionEmpty\", {});\n               }\n\n               this.setCursorTree(rowId);\n               // }\n            }\n         } else {\n            this.__dataCollection.setCursor(this.settings.fixSelect);\n\n            this.setCursorTree(this.settings.fixSelect);\n         }\n      }\n\n      // Set the cursor to the first row\n      if (this.isCursorFollow) {\n         const rowId = this.__dataCollection.getFirstId();\n         this.setCursor(rowId || null);\n         this.setCursorTree(rowId || null);\n\n         // If no data but the parent DC set cursor, then this should be reload data.\n         const dcFollow = this.datacollectionFollow;\n         if (!rowId && dcFollow?.getCursor()) {\n            this.loadData();\n         }\n      }\n   }\n\n   ///\n   /// Data\n   ///\n\n   /**\n    * @method filterCondition()\n    * Provide a temporary filter condition to modify the data we are returning.\n    * Used by User search criterias.\n    * @param {json} cond\n    *        A valid QueryCondition to filter the response.\n    */\n   filterCondition(cond = null) {\n      this.__filterCond = cond;\n   }\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      this.initialized = true;\n\n      if (!this.__dataCollection.___AD.onAfterCursorChange) {\n         this.__dataCollection.___AD.onAfterCursorChange =\n            this.__dataCollection.attachEvent(\"onAfterCursorChange\", () => {\n               // debugger;\n               var currData = this.getCursor();\n\n               this.emit(\"changeCursor\", currData);\n            });\n      }\n\n      // relate data functions\n      let isRelated = (relateData, rowId, PK = \"id\") => {\n         if (Array.isArray(relateData)) {\n            return relateData.filter((v) => (v[PK] || v) == rowId).length > 0;\n         } else {\n            return relateData && (relateData[PK] || relateData) == rowId;\n         }\n      };\n\n      // events\n      this.on(\"ab.datacollection.create\", (data) => {\n         // NOTE: UPDATing this process to add another check.\n         // .isCursorFollow only invalidates the 1st half of the routine.\n         // .isCursorFollow STILL needs to follow the 2nd half of the routine\n         // // If this DC is following cursor for other DC, then it should not add the new item to their list.\n         // if (this.isCursorFollow) return;\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data || !data.data) return;\n\n         let needAdd = false;\n         let updatedVals = [];\n\n         // Don't do First Step if .isCursorFollow\n         if (!this.isCursorFollow) {\n            // First Step\n            // Does this new entry need to be part of the data we are currently\n            // tracking?  If so, add it.\n            Promise.resolve()\n               .then(() => {\n                  return new Promise((next, bad) => {\n                     // Query\n                     if (obj instanceof this.AB.Class.ABObjectQuery) {\n                        let objList =\n                           obj.objects((o) => o.id == data.objectId) || [];\n\n                        needAdd = objList.length > 0;\n\n                        if (!needAdd) return next();\n\n                        let where = {\n                           glue: \"or\",\n                           rules: [],\n                        };\n\n                        objList.forEach((o) => {\n                           let newDataId = data.data[`${o.PK()}`];\n                           if (!newDataId) return;\n\n                           where.rules.push({\n                              key: `${\n                                 o.alias || obj.objectAlias(o.id)\n                              }.${o.PK()}`,\n                              rule: \"equals\",\n                              value: newDataId,\n                           });\n                        });\n\n                        obj.model()\n                           .findAll({\n                              where: where,\n                           })\n                           .then((newQueryData) => {\n                              updatedVals = newQueryData.data || [];\n                              updatedVals.forEach((v) => {\n                                 delete v.id;\n                              });\n\n                              next();\n                           })\n                           .catch(bad);\n                     }\n                     // Object\n                     else {\n                        needAdd = obj.id == data.objectId;\n                        updatedVals = [data.data];\n                        next();\n                     }\n                  });\n               })\n               .then(() => {\n                  if (needAdd) {\n                     (updatedVals || []).forEach((updatedV) => {\n                        // filter condition before add\n                        if (!this.isValidData(updatedV)) return;\n\n                        // filter the cursor of parent DC\n                        const dcLink = this.datacollectionLink;\n                        if (dcLink && !this.isParentFilterValid(updatedV))\n                           return;\n\n                        // check to see if item already exisits in data collection\n                        // and check to see that we are not loading the data serverside from cursor\n                        if (\n                           !this.__dataCollection.exists(\n                              updatedV[`${obj.PK()}`]\n                           ) &&\n                           !this.__reloadWheres\n                        ) {\n                           this.__dataCollection.add(updatedV, 0);\n                           this.emit(\"create\", updatedV);\n                           // this.__dataCollection.setCursor(rowData.id);\n                        } else if (\n                           !this.__dataCollection.exists(\n                              updatedV[`${obj.PK()}`]\n                           ) &&\n                           this.__reloadWheres\n                        ) {\n                           // debugger;\n                           if (this.isParentFilterValid(updatedV)) {\n                              // we track bound components and flexlayout components\n                              var attachedComponents =\n                                 this.__bindComponentIds.concat(\n                                    this.__flexComponentIds\n                                 );\n                              attachedComponents.forEach((bcids) => {\n                                 // if the reload button already exisits move on\n                                 if ($$(bcids + \"_reloadView\")) {\n                                    return false;\n                                 }\n\n                                 // find the position of the data view\n                                 var pos = 0;\n                                 var parent = $$(bcids).getParentView();\n                                 if ($$(bcids).getParentView().index) {\n                                    pos = $$(bcids)\n                                       .getParentView()\n                                       .index($$(bcids));\n                                 } else if (\n                                    $$(bcids).getParentView().getParentView()\n                                       .index\n                                 ) {\n                                    // this is a data view and it is inside a\n                                    // scroll view that is inside an accodion\n                                    // so we need to go deeper to add the button\n                                    parent = $$(bcids)\n                                       .getParentView()\n                                       .getParentView();\n                                    pos = $$(bcids)\n                                       .getParentView()\n                                       .getParentView()\n                                       .index($$(bcids).getParentView());\n                                 }\n\n                                 // store the datacollection so we can pass it to the button later\n                                 var DC = this;\n                                 // add a button that reloads the view when clicked\n                                 if (parent.addView) {\n                                    var L = this.AB.Label();\n                                    parent.addView(\n                                       {\n                                          id: bcids + \"_reloadView\",\n                                          view: \"button\",\n                                          value: L(\n                                             \"New data available. Click to reload.\"\n                                          ),\n                                          css: \"webix_primary webix_warn\",\n                                          click: function (id, event) {\n                                             DC.reloadData();\n                                             $$(id)\n                                                .getParentView()\n                                                .removeView(id);\n                                          },\n                                       },\n                                       pos\n                                    );\n                                 }\n                              });\n                              // this.emit(\"create\", updatedV);\n                           }\n                        }\n                     });\n\n                     if (\n                        this.__treeCollection // && this.__treeCollection.exists(updatedVals.id)\n                     ) {\n                        this.parseTreeCollection({\n                           data: updatedVals,\n                        });\n                     }\n                  }\n\n                  // ABObject only\n                  if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n                     // if it is a linked object\n                     let connectedFields = this.datasource.connectFields(\n                        (f) =>\n                           f.datasourceLink &&\n                           f.datasourceLink.id == data.objectId\n                     );\n\n                     // It should always be only one item for ABObject\n                     updatedVals = updatedVals[0];\n\n                     // update relation data\n                     if (\n                        updatedVals &&\n                        connectedFields &&\n                        connectedFields.length > 0\n                     ) {\n                        // various PK name\n                        let PK = connectedFields[0].object.PK();\n                        if (!updatedVals.id && PK != \"id\")\n                           updatedVals.id = updatedVals[PK];\n\n                        this.__dataCollection.find({}).forEach((d) => {\n                           let updateItemData = {};\n\n                           connectedFields.forEach((f) => {\n                              var updateRelateVal = {};\n                              if (f && f.fieldLink) {\n                                 updateRelateVal =\n                                    updatedVals[f.fieldLink.relationName()] ||\n                                    {};\n                              }\n\n                              let rowRelateVal = d[f.relationName()] || {};\n\n                              let valIsRelated = isRelated(\n                                 updateRelateVal,\n                                 d.id,\n                                 PK\n                              );\n\n                              // Relate data\n                              if (\n                                 Array.isArray(rowRelateVal) &&\n                                 rowRelateVal.filter(\n                                    (v) =>\n                                       v == updatedVals.id ||\n                                       v.id == updatedVals.id ||\n                                       v[PK] == updatedVals.id\n                                 ).length < 1 &&\n                                 valIsRelated\n                              ) {\n                                 rowRelateVal.push(updatedVals);\n\n                                 updateItemData[f.relationName()] =\n                                    rowRelateVal;\n                                 updateItemData[f.columnName] = updateItemData[\n                                    f.relationName()\n                                 ].map((v) => v.id || v[PK] || v);\n                              } else if (\n                                 !Array.isArray(rowRelateVal) &&\n                                 (rowRelateVal != updatedVals.id ||\n                                    rowRelateVal.id != updatedVals.id ||\n                                    rowRelateVal[PK] != updatedVals.id) &&\n                                 valIsRelated\n                              ) {\n                                 updateItemData[f.relationName()] = updatedVals;\n                                 updateItemData[f.columnName] =\n                                    updatedVals.id || updatedVals;\n                              }\n                           });\n\n                           // If this item needs to update\n                           if (Object.keys(updateItemData).length > 0) {\n                              this.__dataCollection.updateItem(\n                                 d.id,\n                                 updateItemData\n                              );\n\n                              if (this.__treeCollection)\n                                 this.__treeCollection.updateItem(\n                                    d.id,\n                                    updateItemData\n                                 );\n\n                              this.emit(\n                                 \"update\",\n                                 this.__dataCollection.getItem(d.id)\n                              );\n                           }\n                        });\n                     }\n                  }\n\n                  this.updateRelationalDataFromLinkDC(data.objectId, data.data);\n                  // filter link data collection's cursor\n                  this.refreshLinkCursor();\n                  this.setStaticCursor();\n               });\n         }\n\n         // SECOND Step:\n         // Try to detect if this newly created entry connects to one of the\n         // values this DC is currently managing.  If so, than add this value\n         // to the connection.\n\n         let incomingObj = this.AB.objectByID(data.objectId);\n         if (!incomingObj) return;\n\n         // find any of incomingObj connections that are tied to my object:\n         let connectedFields = incomingObj\n            .connectFields((f) => f.datasourceLink?.id == obj.id)\n            .filter((f) => f); // <-- safety check, no undefined or nulls\n         if (connectedFields.length == 0) return;\n\n         let iPK = incomingObj.PK();\n         let PK = obj.PK();\n         let newData = this.AB.cloneDeep(data.data);\n\n         let currCursor = this.getCursor();\n         let needsRefresh = false;\n\n         connectedFields.forEach((f) => {\n            // pull the values in this connected fields\n            let values = data.data[f.columnName]; // just need the PK\n\n            if (!Array.isArray(values))\n               values = [values].filter((v) => !this.AB.isNil(v));\n\n            values.forEach((v) => {\n               v = v[PK] || v; // just in case this was an {} and not the {uuid}\n\n               // if this is one of the items we are managing\n               if (this.__dataCollection.exists(v)) {\n                  let localField = f.fieldLink;\n                  if (localField) {\n                     let row = this.__dataCollection.getItem(v);\n                     let colName = localField.columnName;\n                     let relName = localField.relationName();\n\n                     if (localField.linkType() == \"many\") {\n                        if (!Array.isArray(row[colName])) {\n                           row[colName] = [row[colName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        // if it isn't already in the array, add it\n                        let rval = localField.getRelationValue(newData);\n                        if (row[colName].indexOf(rval) == -1) {\n                           row[colName].push(rval);\n                        }\n\n                        if (!Array.isArray(row[relName])) {\n                           row[relName] = [row[relName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        if (\n                           row[relName].filter((r) => r[iPK] == newData[iPK])\n                              .length == 0\n                        ) {\n                           row[relName].push(newData);\n                        }\n                     } else {\n                        row[colName] = localField.getRelationValue(newData);\n                        row[relName] = newData;\n                     }\n\n                     // pass updated data back into DC:\n                     this.__dataCollection.updateItem(v, row);\n\n                     if (this.__treeCollection)\n                        this.__treeCollection.updateItem(v, row);\n\n                     this.emit(\"update\", this.__dataCollection.getItem(v));\n\n                     // if we just updated our Current Cursor, we need to\n                     // let our connected DC's know to refresh.\n                     if (currCursor?.id == v) {\n                        needsRefresh = true;\n                     }\n                  }\n               }\n            });\n         });\n\n         if (needsRefresh) {\n            this.emit(\"cursorStale\", null);\n         }\n      });\n\n      this.on(\"ab.datacollection.connection-added\", (data) => {\n         // This event notifies us of a specific relation being created between\n         // two records. In this case the source object that was originally\n         // operated on, is sent along in data.data.\n         //\n         // eg: if this was a `create` operation, the newly created value is\n         //     included in data.data.\n         // eg: if this was an `update` operation, the row that was modified\n         //     is included.\n         //\n         // {json} data\n         // incoming socket payload:\n         // data.objectID {string}\n         //      the ABObject this connection is being added to\n         // data.fieldID  {string}\n         //      which connect Field in this ABObject the value is added to\n         // data.rowID    {string}\n         //      which specific row/entry this is being added to\n         // data.data     {json}\n         //      The value being added.\n         //\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         if (!data.rowID) return;\n\n         // ABObject only\n         if (!(obj instanceof this.AB.Class.ABObjectQuery)) {\n            // if this is the object we are managing\n            if (obj.id === data.objectID) {\n               let field = obj.fieldByID(data.fieldID);\n               if (field) {\n                  // figure out if we actually have the value that was changed:\n                  let isExists = this.__dataCollection.exists(data.rowID);\n                  if (isExists) {\n                     let newData = this.AB.cloneDeep(data.data);\n                     let row = this.__dataCollection.getItem(data.rowID);\n\n                     let colName = field.columnName;\n                     let relName = field.relationName();\n\n                     if (field.linkType() == \"many\") {\n                        if (!Array.isArray(row[colName])) {\n                           // in case row[col]:{obj} this will make sure it\n                           // is included as an [ {obj} ], but will also prevent\n                           // [ undefined ] if row[col] isn't set:\n                           row[colName] = [row[colName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        row[colName].push(f.getRelationValue(newData));\n\n                        if (!Array.isArray(row[relName])) {\n                           row[relName] = [row[relName]].filter(\n                              (r) => !this.AB.isNil(r)\n                           );\n                        }\n                        row[relName].push(newData);\n                     } else {\n                        row[colName] = f.getRelationValue(newData);\n                        row[relName] = newData;\n                     }\n\n                     // pass updated data back into DC:\n                     this.__dataCollection.updateItem(data.rowID, row);\n\n                     if (this.__treeCollection)\n                        this.__treeCollection.updateItem(data.rowID, row);\n\n                     this.emit(\n                        \"update\",\n                        this.__dataCollection.getItem(data.rowID)\n                     );\n                  }\n               }\n            }\n         } else if (obj instanceof this.AB.Class.ABObjectQuery) {\n            // ABQuery\n\n            // NOTE: that in this case, if this change is about one of the\n            // objects we track, we will most likely have to reload the data\n            // to make sure we are displaying proper data.\n\n            // This will follow the same logic as in \"ab.datacollection.create\"\n            // so instead of repeating that here, let's call our \"create\"\n            // handler instead:\n\n            ///// LEFT OFF HERE:\n            // need to pull out the data in data.data that represents the\n            // connection to data.objectId\n\n            //// WAIT!!!!!!\n            //// Instead, of this \"connection-added\", lets add the logic in\n            //// a \"created\" handler to detect if we should add the new entry\n            //// into A value we currently track.\n            //// ===> This way we only have to send out \"Created\" messages\n            ////\n\n            let newPacket = {\n               objectId: data.objectId,\n               data: this.AB.cloneDeep(data.data),\n            };\n            this.emit(\"ab.datacollection.create\", newPacket);\n         }\n      });\n\n      this.on(\"ab.datacollection.update\", (data) => {\n         // {json} data\n         // incoming socket payload:\n         // data.objectId {string} uuid of the ABObject's row that was updated\n         // data.data {json} the new updated value of that row entry.\n\n         let obj = this.datasource;\n         if (!obj) return;\n\n         // updated values\n         let values = data.data;\n         if (!values) return;\n\n         // #Johnny: removing this check.  A DC that is following another cursor\n         // still has a value that might need updating.\n         // DC who is following cursor should update only current cursor.\n         // if (\n         //    this.isCursorFollow &&\n         //    this.getCursor()?.id != (values[obj.PK()] ?? values.id)\n         // ) {\n         //    return;\n         // }\n\n         let needUpdate = false;\n         let isExists = false;\n         let updatedIds = [];\n         // {array}\n         // an array of the row indexs in our DataCollection that have values\n         // that need to be updated.\n\n         let updatedTreeIds = [];\n         let updatedVals = {};\n\n         //\n         // Case 1: This DC contains the value that was updated\n         // In this case, we want to replace our current entry with\n         // the new one passed in.\n         // EX: This is a DC of Users, and the incoming Entry is a User\n         // that we are already displaying.\n         //\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needUpdate = objList.length > 0;\n            if (needUpdate) {\n               (objList || []).forEach((o) => {\n                  updatedIds = updatedIds.concat(\n                     this.__dataCollection\n                        .find((item) => {\n                           return (\n                              item[\n                                 `${this.datasource.objectAlias(\n                                    o.id\n                                 )}.${o.PK()}`\n                              ] == (values[o.PK()] || values.id)\n                           );\n                        })\n                        .map((o) => o.id) || []\n                  );\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     updatedTreeIds = updatedTreeIds.concat(\n                        this.__treeCollection\n                           .find((item) => {\n                              return (\n                                 item[\n                                    `${this.datasource.objectAlias(\n                                       o.id\n                                    )}.${o.PK()}`\n                                 ] == (values[o.PK()] || values.id)\n                              );\n                           })\n                           .map((o) => o.id) || []\n                     );\n                  }\n               });\n\n               isExists = updatedIds.length > 0;\n\n               updatedVals = this._queryUpdateData(objList, values);\n            }\n         }\n         // Object\n         else {\n            needUpdate = obj.id == data.objectId;\n            if (needUpdate) {\n               // various PK name\n               if (!values.id && obj.PK() != \"id\") values.id = values[obj.PK()];\n\n               updatedIds.push(values.id);\n\n               isExists = this.__dataCollection.exists(values.id);\n               updatedVals = values;\n            }\n         }\n\n         // if it is the source object\n         if (needUpdate) {\n            if (isExists) {\n               if (this.isValidData(updatedVals)) {\n                  // only spread around cloned copies because some objects (I'm\n                  // looking at you ABFieldUser) will modify some data for local\n                  // usage.\n                  updatedVals = this.AB.cloneDeep(updatedVals);\n                  if (this.__dataCollection) {\n                     updatedIds = this.AB.uniq(updatedIds);\n                     updatedIds.forEach((itemId) => {\n                        this.__dataCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  if (this.__treeCollection) {\n                     // update data in tree\n                     updatedTreeIds = this.AB.uniq(updatedTreeIds);\n                     updatedTreeIds.forEach((itemId) => {\n                        this.__treeCollection.updateItem(itemId, updatedVals);\n                     });\n                  }\n\n                  this.emit(\"update\", updatedVals);\n\n                  // If the update item is current cursor, then should tell components to update.\n                  let currData = this.getCursor();\n                  if (currData?.id == updatedVals.id) {\n                     this.emit(\"cursorStale\", currData);\n                  }\n               } else {\n                  // Johnny: Here we are simply removing the DataCollection Entries that are\n                  // no longer valid.\n                  // Just cycle through the collected updatedIds and remove them.\n                  let currData = this.getCursor();\n                  updatedIds.forEach((id) => {\n                     // If the item is current cursor, then the current cursor should be cleared.\n\n                     if (currData?.id == id) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(id);\n\n                     // TODO: update tree list\n                     // if (this.__treeCollection) {\n                     //  this.__treeCollection.remove(id);\n                     // }\n\n                     this.emit(\"delete\", id);\n                  });\n               }\n            }\n            // filter before add new record\n            else if (this.isValidData(updatedVals)) {\n               // this means the updated record was not loaded yet so we are adding it to the top of the grid\n               // the placement will probably change on the next load of the data\n               this.__dataCollection.add(updatedVals, 0);\n\n               if (this.__treeCollection)\n                  this.parseTreeCollection({\n                     data: [updatedVals],\n                  });\n\n               this.emit(\"create\", updatedVals);\n            }\n         }\n\n         //\n         // Case 2: This DC has entries that CONNECT to the updated value.\n         // We need to make sure our connections, properly reflect the\n         // current state of the incoming data.\n         //\n         // EG: This DC is a list of Roles that connect to User, and an updated\n         // User is passed in.\n\n         let currCursor = this.getCursor();\n         let updateCursor = null;\n\n         // if it is a linked object\n         // look for connected fields that link to the incoming objectId\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields?.length > 0\n         ) {\n            // various PK name\n            // webix datacollections require an .id value, so make sure\n            // this incoming value has an .id set\n            let PK = obj.PK();\n            if (!values.id && PK != \"id\") values.id = values[PK];\n\n            if (this.__dataCollection.count() > 0) {\n               this.__dataCollection.find({}).forEach((d) => {\n                  let updateItemData = {\n                     id: d.id,\n                  };\n\n                  connectedFields.forEach((f) => {\n                     if (!f) return;\n\n                     let updateRelateVal = {};\n                     let rowRelateVal = d[f.relationName()] || {};\n\n                     if (f.fieldLink)\n                        updateRelateVal =\n                           values[f.fieldLink.relationName()] || {};\n\n                     // check to see if we are supposed to be related to this\n                     let valIsRelated = isRelated(updateRelateVal, d.id, PK);\n\n                     // If NO, then make sure we Unrelate data\n                     // if this is an array -> filter out the entry\n                     if (\n                        Array.isArray(rowRelateVal) &&\n                        rowRelateVal.filter(\n                           (v) =>\n                              v == values.id ||\n                              v.id == values.id ||\n                              v[PK] == values.id\n                        ).length > 0 &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = rowRelateVal.filter(\n                           // NOTE: Special case: the incoming value.id will be .uuid\n                           // however in case of User Fields, v.id == username and not .uuid\n                           // so we put our default check to be v[PK] here to play nice\n                           (v) => (v[PK] || v.id || v) != values.id\n                        );\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map((v) => v.id || v[PK] || v);\n                     } else if (\n                        // this is not an array so set link to null\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal == values.id ||\n                           rowRelateVal.id == values.id ||\n                           rowRelateVal[PK] == values.id) &&\n                        !valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = null;\n                        updateItemData[f.columnName] = null;\n                     }\n\n                     // However, if we are supposed to be related => make sure we are\n                     // If this is an array, then add to list\n                     // AND YES: make sure it is cloned\n                     if (valIsRelated) {\n                        values = this.AB.cloneDeep(values);\n                     }\n                     if (Array.isArray(rowRelateVal) && valIsRelated) {\n                        // update relate data\n                        if (\n                           rowRelateVal.filter(\n                              (v) =>\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                           ).length > 0\n                        ) {\n                           // just update the one entry in my array with the new\n                           // value\n                           rowRelateVal.forEach((v, index) => {\n                              if (\n                                 v == values.id ||\n                                 v.id == values.id ||\n                                 v[PK] == values.id\n                              )\n                                 rowRelateVal[index] = values;\n                           });\n                        }\n                        // add new relate\n                        else {\n                           rowRelateVal.push(values);\n                        }\n\n                        updateItemData[f.relationName()] = rowRelateVal;\n                        updateItemData[f.columnName] = updateItemData[\n                           f.relationName()\n                        ].map(\n                           (v) => f.getRelationValue(v) /*v.id || v[PK] || v*/\n                        );\n                     } else if (\n                        !Array.isArray(rowRelateVal) &&\n                        (rowRelateVal != values.id ||\n                           rowRelateVal.id != values.id ||\n                           rowRelateVal[PK] != values.id) &&\n                        valIsRelated\n                     ) {\n                        updateItemData[f.relationName()] = values;\n                        // make ConnectedField use .getRelationValue() here!\n                        updateItemData[f.columnName] =\n                           f.getRelationValue(values);\n                     }\n                  });\n\n                  // If this item needs to update\n                  // meaning there is > 1 key in the object (we always have .id)\n                  if (Object.keys(updateItemData).length > 1) {\n                     // normalize data before add to data collection\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n\n                     // NOTE: We could not normalize relational data because they are not full data\n                     // Merge update data to exists data instead\n\n                     if (this.__treeCollection?.exists(d.id)) {\n                        const treeItem = Object.assign(\n                           this.__treeCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__treeCollection.updateItem(d.id, treeItem);\n                     }\n\n                     if (this.__dataCollection?.exists(d.id)) {\n                        const dcItem = Object.assign(\n                           this.__dataCollection.getItem(d.id),\n                           updateItemData\n                        );\n                        this.__dataCollection.updateItem(d.id, dcItem);\n                        this.emit(\n                           \"update\",\n                           this.__dataCollection.getItem(d.id)\n                        );\n                        if (currCursor?.id == dcItem.id) {\n                           updateCursor = dcItem;\n                        }\n                     }\n                  }\n               });\n            }\n         }\n\n         //\n         // Case 3: Our DC is linked to a DC that was effected by this update.\n         //\n         // We will approach it from another direction, if the current DC made\n         // an update to it's current Cursor, then we will emit a \"cursorStale\"\n         // event, so our linked DCs will update themselves with the new value:\n         if (updateCursor) {\n            this.emit(\"cursorStale\", null);\n         }\n         // this.updateRelationalDataFromLinkDC(data.objectId, values);\n         this.refreshLinkCursor();\n\n         this.setStaticCursor();\n      });\n\n      // We are subscribing to notifications from the server that an item may be stale and needs updating\n      // We will improve this later and verify that it needs updating before attempting the update on the client side\n      this.on(\"ab.datacollection.stale\", (data) => {\n         // debugger;\n         // if we don't have a datasource or model, there is nothing we can do here:\n         // Verify the datasource has the object we are listening for if not just stop here\n         if (\n            !this.datasource ||\n            !this.model ||\n            this.datasource.id != data.objectId\n         ) {\n            return;\n         }\n\n         // updated values\n         var values = data.data;\n\n         if (!values) return;\n\n         // use the Object's defined Primary Key:\n         var PK = this.model.object.PK();\n         if (!values[PK]) {\n            PK = \"id\";\n         }\n\n         // DC who is following cursor should update only current cursor.\n         if (\n            this.isCursorFollow &&\n            this.getCursor()?.[PK] != (values[PK] ?? values.id)\n         ) {\n            return;\n         }\n\n         if (values) {\n            if (this.__dataCollection.exists(values[PK])) {\n               var cond = { where: {} };\n               cond.where[PK] = values[PK];\n               // this data collection has the record so we need to query the server to find out what it's latest data is so we can update all instances\n               this.model.staleRefresh(cond).then((res) => {\n                  // check to make sure there is data to work with\n                  if (Array.isArray(res.data) && res.data.length) {\n                     // debugger;\n                     let obj = this.datasource;\n                     if (!obj) return;\n                     // normalize data before add to data collection\n\n                     // UPDATE: this should already have happened in NetworkRestSocket\n                     // when the initial data is received.\n                     //var model = obj.model();\n                     // model.normalizeData(res.data[0]);\n\n                     // tell the webix data collection to update using their API with the row id (values.id) and content (res.data[0])\n                     if (this.__dataCollection.exists(values[PK])) {\n                        this.__dataCollection.updateItem(\n                           values[PK],\n                           res.data[0]\n                        );\n                     }\n\n                     // If the update item is current cursor, then should tell components to update.\n                     var currData = this.getCursor();\n                     if (currData?.[PK] == values[PK]) {\n                        this.emit(\"cursorStale\", currData);\n                     }\n                  } else {\n                     // If there is no data in the object then it was deleted...lets clean things up\n                     // If the deleted item is current cursor, then the current cursor should be cleared.\n                     var currId = this.getCursor();\n                     if (currId == values[PK]) this.emit(\"cursorStale\", null);\n\n                     this.__dataCollection.remove(values[PK]);\n                     this.emit(\"delete\", values[PK]);\n                  }\n               });\n            }\n         }\n\n         // filter link data collection's cursor\n         this.refreshLinkCursor();\n         this.setStaticCursor();\n      });\n\n      this.on(\"ab.datacollection.delete\", (data) => {\n         // debugger;\n         let obj = this.datasource;\n         if (!obj) return;\n\n         let deleteId = data.data;\n         let needDelete = false;\n         let deletedIds = [];\n         let deletedTreeIds = [];\n\n         // Query\n         if (obj instanceof this.AB.Class.ABObjectQuery) {\n            let objList = obj.objects((o) => o.id == data.objectId) || [];\n            needDelete = objList.length > 0;\n            if (needDelete) {\n               (objList || []).forEach((o) => {\n                  deletedIds =\n                     this.__dataCollection\n                        .find((item) => {\n                           return item[`${o.alias}.${o.PK()}`] == deleteId;\n                        })\n                        .map((o) => o.id) || [];\n\n                  // grouped queries\n                  if (this.__treeCollection) {\n                     deletedTreeIds =\n                        this.__treeCollection\n                           .find((item) => {\n                              return item[`${o.alias}.${o.PK()}`] == deleteId;\n                           })\n                           .map((o) => o.id) || [];\n                  }\n               });\n            }\n         }\n         // Object\n         else {\n            needDelete = obj.id == data.objectId;\n            if (needDelete) {\n               deletedIds.push(deleteId);\n            }\n         }\n\n         // if it is the source object\n         if (needDelete) {\n            // If the deleted item is current cursor, then the current cursor should be cleared.\n            var currData = this.getCursor();\n\n            deletedIds.forEach((delId) => {\n               if (currData?.[obj.PK()] == delId)\n                  this.emit(\"cursorStale\", null);\n\n               if (this.__dataCollection.exists(delId))\n                  this.__dataCollection.remove(delId);\n            });\n\n            if (this.__treeCollection) {\n               deletedTreeIds.forEach((delId) => {\n                  if (this.__treeCollection.exists(delId))\n                     this.__treeCollection.remove(delId);\n               });\n            }\n\n            if (deletedIds[0]) this.emit(\"delete\", deletedIds[0]);\n         }\n\n         // if it is a linked object\n         let connectedFields = obj.connectFields(\n            (f) => f.datasourceLink && f.datasourceLink.id == data.objectId\n         );\n\n         // update relation data\n         if (\n            obj instanceof this.AB.Class.ABObject &&\n            connectedFields &&\n            connectedFields.length > 0\n         ) {\n            // various PK name\n            let PK = connectedFields[0].object.PK();\n\n            this.__dataCollection.find({}).forEach((d) => {\n               let updateRelateVals = {};\n\n               connectedFields.forEach((f) => {\n                  let relateVal = d[f.relationName()];\n                  if (relateVal == null) return;\n\n                  if (\n                     Array.isArray(relateVal)\n                     // JOHNNY: for speed improvements, don't make this check:\n                     // just do it and that will reduce 1x through the array.\n                     // &&\n                     // relateVal.filter(\n                     //    (v) =>\n                     //       v == deleteId ||\n                     //       v.id == deleteId ||\n                     //       v[PK] == deleteId\n                     // ).length > 0\n                  ) {\n                     updateRelateVals[f.relationName()] = relateVal.filter(\n                        (v) => (v.id || v[PK] || v) != deleteId\n                     );\n                     updateRelateVals[f.columnName] = updateRelateVals[\n                        f.relationName()\n                     ].map((v) => v.id || v[PK] || v);\n                  } else if (\n                     relateVal == deleteId ||\n                     relateVal.id == deleteId ||\n                     relateVal[PK] == deleteId\n                  ) {\n                     updateRelateVals[f.relationName()] = null;\n                     updateRelateVals[f.columnName] = null;\n                  }\n               });\n\n               // If this item needs to update\n               if (Object.keys(updateRelateVals).length > 0) {\n                  // normalize data before add to data collection\n\n                  // var model = obj.model();\n                  // model.normalizeData(updateRelateVals);\n\n                  this.__dataCollection.updateItem(d.id, updateRelateVals);\n\n                  if (this.__treeCollection)\n                     this.__treeCollection.updateItem(d.id, updateRelateVals);\n\n                  this.emit(\"update\", this.__dataCollection.getItem(d.id));\n               }\n            });\n         }\n      });\n\n      // add listeners when cursor of link data collection is changed\n      const linkDC = this.datacollectionLink;\n      // if (linkDC && this.settings.loadAll) {\n      if (linkDC) {\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"changeCursor\",\n            listener: (currentCursor) => {\n               // NOTE: we can clear data here to update UI display, then data will be fetched when webix.dataFeed event\n               if (\n                  !this.settings?.loadAll &&\n                  currentCursor?.id != linkDC.previousCursorId\n               )\n                  this.clearAll();\n\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n\n         this.eventAdd({\n            emitter: linkDC,\n            eventName: \"cursorStale\",\n            listener: (currentCursor) => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               // if don't have .loadAll set,  we'll need to update our data:\n               if (!this.settings?.loadAll) {\n                  // What I do here depends on what my linked DC has set for\n                  // it's .loadConnections (shouldPopulate) value\n                  let dvLink = this.datacollectionLink;\n                  let isMyDataThere = dvLink.shouldPopulate;\n                  if (Array.isArray(isMyDataThere)) {\n                     // if this was an array: it should be an array of columnNames\n                     // of the dvLink that are being populated.\n\n                     // the column I'm interested in:\n                     let colName = this.fieldLink.fieldLink.columnName;\n\n                     // is it there?\n                     isMyDataThere = isMyDataThere.indexOf(colName) > -1;\n                  }\n                  if (!isMyDataThere) {\n                     // If it didn't populate it's data, then I can't be\n                     // efficient about how to update my data.\n                     // we'll just have to reload:\n\n                     // find out how many entries we have already loaded and try to\n                     // load at least that many again.:\n                     let count = 20;\n                     if (this.__dataCollection.count() > count)\n                        count = this.__dataCollection.count();\n                     if (this.__treeCollection?.count() > count)\n                        count = this.__treeCollection.count();\n\n                     let currCursor = this.__dataCollection.getCursor();\n                     this.clearAll();\n                     this.reloadData(0, count).then(() => {\n                        this.__dataCollection.setCursor(currCursor);\n                        this.emit(\"cursorSelect\", currCursor);\n                     });\n                  } else {\n                     // if the linked DC does have my data populated:\n\n                     // the values I currently contain can fall into 1 of 3 categories:\n                     // 1) A value I currently have that I need to Keep\n                     // 2) A value I currently have that I need to remove\n                     // 3) A value I don't have, but need to Add\n\n                     // the current value of the cursor should have the ID references\n                     // to what SHOULD be in my display\n\n                     // get the current cursor of our linked DC\n                     let linkCursor;\n\n                     if (dvLink) {\n                        linkCursor = dvLink.getCursor();\n                     }\n                     if (!linkCursor) {\n                        // if linkCursor is no longer set, then we should clear()\n                        this.clearAll();\n                        return;\n                     }\n\n                     let PK = this.datasource.PK();\n\n                     // lets start by assuming all the current values in cursor are #3\n                     // -> all the values into valuesToAdd:\n\n                     let colName = this.fieldLink.fieldLink.relationName();\n                     let valuesToAdd = {};\n                     let valuesIn = linkCursor[colName] || [];\n                     if (!Array.isArray(valuesIn)) valuesIn = [valuesIn];\n                     valuesIn = valuesIn.filter((v) => v);\n                     valuesIn.forEach((v) => {\n                        valuesToAdd[v[PK]] = v;\n                     });\n\n                     let valuesToRemove = [];\n                     // step through all the values I currently have\n                     let currValues = this.__dataCollection.find(() => true);\n                     currValues.forEach((value) => {\n                        // if value is in valuesToAdd\n                        if (valuesToAdd[value[PK]]) {\n                           // we already have it so turns out we don't need to add\n                           // it after all\n                           delete valuesToAdd[value[PK]];\n                        } else {\n                           // the current state of the Link Cursor value doesn't have\n                           // this value, so we need to remove it:\n                           valuesToRemove.push(value[PK]);\n                        }\n                     });\n\n                     // now remove the items we don't want:\n                     this.__dataCollection.remove(valuesToRemove);\n\n                     // then we have to ask for the values we need to add:\n                     valuesToAdd = Object.keys(valuesToAdd); // convert to []\n                     if (valuesToAdd.length > 0) {\n                        let cond = { where: {} };\n                        cond.where[PK] = valuesToAdd;\n                        // NOTE: we are using the abbreviated condition syntax here.\n\n                        // NOTE: staleRefresh() has some buffering capabilities\n                        // that combine multiple calls into 1 more efficient call:\n                        this.model.staleRefresh(cond).then((res) => {\n                           // check to make sure there is data to work with\n                           if (Array.isArray(res.data) && res.data.length) {\n                              res.data.forEach((d) => {\n                                 if (!this.__dataCollection.exists(d[PK])) {\n                                    this.__dataCollection.add(d);\n                                 }\n                              });\n                           }\n                        });\n                     }\n                  }\n\n                  return;\n               }\n\n               // Otherwise, we need to refilter our data:\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            },\n         });\n      }\n\n      // add listeners when cursor of the followed data collection is changed\n      const followDC = this.datacollectionFollow;\n      if (followDC) {\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"changeCursor\",\n            listener: () => {\n               const followCursor = followDC.getCursor();\n               const currentCursor = this.getCursor();\n\n               // If the cursor is not the new, then it should not reload.\n               if (\n                  followCursor?.[followDC.datasource.PK()] ==\n                  currentCursor?.[this.datasource.PK()]\n               )\n                  return;\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n\n         this.eventAdd({\n            emitter: followDC,\n            eventName: \"cursorStale\",\n            listener: () => {\n               // cursorStale : the current cursor hasn't CHANGED, but the data\n               // of that value has changed.\n               // This is triggered by one of our socket updates that detects\n               // changes to the cursor data.\n\n               this.clearAll();\n               this.loadData();\n            },\n         });\n      }\n   }\n\n   /*\n    * waitForDataCollectionToInitialize()\n    * there are certain situations where this datacollection shouldn't\n    * load until another one has loaded.  In those cases, the fn()\n    * will wait for the required datacollection to emit \"initializedData\"\n    * before continuing on.\n    * @param {ABViewDataCollection} DC\n    *      the DC this datacollection depends on.\n    * @returns {Promise}\n    */\n   async waitForDataCollectionToInitialize(DC, msg) {\n      DC.init();\n\n      return new Promise((resolve, reject) => {\n         /* eslint-disable no-fallthrough */\n         switch (DC.dataStatus) {\n            // if that DC hasn't started initializing yet, start it!\n            case DC.dataStatusFlag.notInitial:\n               DC.loadData().catch(reject);\n            // no break;\n\n            // once in the process of initializing\n\n            case DC.dataStatusFlag.initializing:\n               /* eslint-enable no-fallthrough*/\n               // listen for \"initializedData\" event from the DC\n               // then we can continue.\n               this.eventRemove(\"initializedData\");\n               this.eventAdd({\n                  emitter: DC,\n                  eventName: \"initializedData\",\n                  listener: () => {\n                     // go next\n                     resolve();\n                  },\n               });\n               break;\n\n            // if it is already initialized, we can continue:\n            case DC.dataStatusFlag.initialized:\n               resolve();\n               break;\n\n            // just in case, if the status is not known, just continue\n            default:\n               resolve();\n               break;\n         }\n         /* eslint-enable no-fallthrough */\n      });\n   }\n\n   // /**\n   //  * @method whereCleanUp()\n   //  * Parse through the current where condition and remove any null or\n   //  * empty logical blocks.\n   //  * @param {obj} curr\n   //  *        1) The current where condition in ABQuery Format:\n   //  *        {\n   //  *           glue: [AND, OR],\n   //  *           rules: [ {rule} ]\n   //  *        }\n   //  *        or 2) The current {rule} to validate\n   //  *        {\n   //  *          key:{string},\n   //  *          rule:{string},\n   //  *          vlaue:{mixed}\n   //  *        }\n   //  * @return {ABQuery.where} / { Rule }\n   //  */\n   // whereCleanUp(curr) {\n   //    if (curr) {\n   //       if (curr.glue && curr.rules) {\n   //          // this is a logical Block (AND, OR)\n   //          // we need to filter the children\n   //          let newValue = { glue: curr.glue, rules: [] };\n   //          curr.rules.forEach((r) => {\n   //             let cleanRule = this.whereCleanUp(r);\n   //             // don't add values that didn't pass\n   //             if (cleanRule) {\n   //                newValue.rules.push(cleanRule);\n   //             }\n   //          });\n\n   //          // if we have a non empty block, then return it:\n   //          if (newValue.rules.length > 0) {\n   //             return newValue;\n   //          }\n\n   //          // this isn't really a valid conditional, so null\n   //          return null;\n   //       }\n\n   //       // This is a specific rule, that isn't null so:\n   //       return curr;\n   //    }\n   //    return null;\n   // }\n\n   async loadData(start, limit) {\n      // mark data status is initializing\n      if (this._dataStatus == this.dataStatusFlag.notInitial) {\n         this._dataStatus = this.dataStatusFlag.initializing;\n         this.emit(\"initializingData\", {});\n      }\n\n      var obj = this.datasource;\n      if (obj == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      var model = obj.model();\n      if (model == null) {\n         this._dataStatus = this.dataStatusFlag.initialized;\n         return Promise.resolve([]);\n      }\n\n      // pull the defined sort values\n      var sorts = this.settings.objectWorkspace.sortFields || [];\n\n      // pull filter conditions\n      let wheres = this.AB.cloneDeep(\n         this.settings.objectWorkspace.filterConditions ?? {}\n      );\n      // if we pass new wheres with a reload use them instead\n      if (this.__reloadWheres) {\n         wheres = this.__reloadWheres;\n      }\n      wheres.glue = wheres.glue || \"and\";\n      wheres.rules = wheres.rules || [];\n\n      const __additionalWheres = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      // add the filterCond if there are rules to add\n      if (this.__filterCond?.rules?.length > 0) {\n         __additionalWheres.rules.push(this.__filterCond);\n      }\n\n      // Filter by a selected cursor of a link DC\n      let linkRule = this.ruleLinkedData();\n      if (!this.settings.loadAll && linkRule) {\n         __additionalWheres.rules.push(linkRule);\n      }\n      // pull data rows following the follow data collection\n      else if (this.datacollectionFollow) {\n         const followCursor = this.datacollectionFollow.getCursor();\n         // store the PK as a variable\n         let PK = this.datasource.PK();\n         // if the datacollection we are following is a query\n         // add \"BASE_OBJECT.\" to the PK so we can select the\n         // right value to report the cursor change to\n         if (this.datacollectionFollow.settings.isQuery) {\n            PK = \"BASE_OBJECT.\" + PK;\n         }\n         if (followCursor) {\n            start = 0;\n            limit = null;\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: followCursor[PK],\n                  },\n               ],\n            };\n         }\n         // Set no return rows\n         else {\n            wheres = {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.datasource.PK(),\n                     rule: \"equals\",\n                     value: \"NO RESULT ROW\",\n                  },\n               ],\n            };\n         }\n      }\n\n      // Combine setting & program filters\n      if (__additionalWheres.rules.length) {\n         if (wheres.rules.length) {\n            __additionalWheres.rules.unshift(wheres);\n         }\n         wheres = __additionalWheres;\n      }\n\n      // remove any null in the .rules\n      // if (wheres?.rules?.filter) wheres.rules = wheres.rules.filter((r) => r);\n      wheres = obj.whereCleanUp(wheres);\n\n      // set query condition\n      var cond = {\n         where: wheres || {},\n         // limit: limit || 20,\n         skip: start || 0,\n         sort: sorts,\n         populate: this.shouldPopulate,\n      };\n\n      //// NOTE: we no longer set a default limit on loadData() but\n      //// require the platform.loadData() to pass in a default limit.\n      if (limit != null) {\n         cond.limit = limit;\n      }\n\n      // if settings specify loadAll, then remove the limit\n      if (this.settings.loadAll && !this.isCursorFollow) {\n         delete cond.limit;\n      }\n\n      //\n      // Step 1: make sure any DataCollections we are linked to are\n      // initialized first.  Then proceed with our initialization.\n      //\n      const parentDc = this.datacollectionLink ?? this.datacollectionFollow;\n      // If we are linked to another datacollection then wait for it\n      if (parentDc) {\n         await this.waitForDataCollectionToInitialize(parentDc);\n      }\n\n      //\n      // Step 2: if we have any filter rules that depend on other DataCollections,\n      // then wait for them to be initialized first.\n      // eg: \"(not_)in_data_collection\" rule filters\n      if (wheres?.rules?.length) {\n         const dcFilters = [];\n\n         wheres.rules.forEach((rule) => {\n            // if this collection is filtered by data collections we need to load them in case we need to validate from them later\n            if (\n               rule.rule == \"in_data_collection\" ||\n               rule.rule == \"not_in_data_collection\"\n            ) {\n               const dv = this.AB.datacollectionByID(rule.value);\n               if (dv) {\n                  dcFilters.push(this.waitForDataCollectionToInitialize(dv));\n               }\n            }\n         });\n\n         await Promise.all(dcFilters);\n      }\n\n      //\n      // Step 3: pull data to data collection\n      // we will keep track of the resolve, reject for this\n      // operation.\n      // the actual resolve() should happen in the\n      // .processIncomingData() after the  data is processed.\n      return new Promise((resolve, reject) => {\n         this._pendingLoadDataResolve = {\n            resolve: resolve,\n            reject: reject,\n         };\n\n         this.platformFind(model, cond).catch((err) => {\n            reject(err);\n         });\n      });\n   }\n\n   platformFind(model, cond) {\n      //// Core Migration Note:\n      //// the ABViewDataCollectionCore now manages data in a different way:\n      //// local data  vs  Remote Data\n      //// this will need to be updated to reflect that management:\n      //// (and also explains why we refactored things into .processIncomingData())\n      return model.findAll(cond).then((data) => {\n         return this.processIncomingData(data);\n      });\n   }\n\n   /**\n    * @method shouldPopulate()\n    * Return our populate status. We now want to query this info outside this\n    * object.\n    * @return {bool|Array}\n    *         true/false,  or an array of columnNames that are being populated.\n    */\n   get shouldPopulate() {\n      return (\n         this.settings.populate ??\n         (this.settings.preventPopulate ? false : true)\n      );\n   }\n\n   /**\n    * @method queuedParse()\n    * This is an attempt at loading very large datasets into a Webix DC without locking up\n    * the display.\n    * @param {array} data\n    *        The data to load into the __dataCollection\n    * @param {callback} cb\n    *        A callback to call when the data has been fully loaded.\n    */\n   async queuedParse(incomingData, cb) {\n      const data = incomingData?.data || incomingData;\n      if (!data?.length) {\n         cb?.();\n         return Promise.resolve();\n      }\n\n      const total_count = incomingData.total_count;\n\n      let nextData;\n      if (data.length > 250) {\n         let pos = this.__dataCollection.count();\n         let remain = data.splice(250);\n         nextData = {\n            data: remain,\n            pos: pos + data.length,\n            total_count,\n         };\n      }\n\n      const parsedData = {\n         data,\n         pos: incomingData.pos,\n         total_count,\n      };\n      this.__dataCollection.parse(parsedData);\n\n      return new Promise((resolve) => {\n         setTimeout(async () => {\n            await this.queuedParse(nextData);\n            cb?.();\n            resolve();\n         }, 15);\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      return Promise.resolve().then(() => {\n         // store total count\n         this.__totalCount = data.total_count;\n\n         // Need to .parse at the first time\n         if (!this.__dataCollection.find({}).length) {\n            this.__dataCollection.clearAll();\n            // this.__dataCollection.parse(data);\n         }\n\n         if (this.__throttleIncoming) clearTimeout(this.__throttleIncoming);\n         this.__throttleIncoming = setTimeout(async () => {\n            // using queuedParse() to responsively handle large datasets.\n            await this.queuedParse(data);\n\n            // In order to get the total_count updated I had to use .load()\n            this.__dataCollection.load(async () => {\n               setTimeout(() => {\n                  this.refreshLinkCursor();\n               }, 250);\n\n               return {\n                  // NOTE: return a empty array to prevent render items in DataTable twice. (Items are rendered in .queuedParse function)\n                  data: [],\n                  pos: data.pos,\n                  total_count: data.total_count,\n               };\n            });\n\n            // this does nothing???\n            this.parseTreeCollection(data);\n\n            // if we are linked, then refresh our cursor\n            var linkDv = this.datacollectionLink;\n            if (linkDv) {\n               // filter data by match link data collection\n               this.refreshLinkCursor();\n               this.setStaticCursor();\n            } else {\n               // set static cursor\n               this.setStaticCursor();\n            }\n\n            // now we close out our .loadData() promise.resolve() :\n            if (this._pendingLoadDataResolve) {\n               this._pendingLoadDataResolve.resolve();\n\n               // after we call .resolve() stop tracking this:\n               this._pendingLoadDataResolve = null;\n            }\n\n            // If dc set load all, then it will not trigger .loadData in dc at\n            // .onAfterLoad event\n            if (this.settings.loadAll) {\n               this.emit(\"loadData\", {});\n            }\n\n            // mark initialized data\n            if (this._dataStatus != this.dataStatusFlag.initialized) {\n               this._dataStatus = this.dataStatusFlag.initialized;\n               this.emit(\"initializedData\", {});\n            }\n         }, 100);\n      });\n   }\n\n   /**\n    * @method reloadData()\n    * Trigger the DataCollection to reload its data from the server.\n    * @param {int} start\n    *        Start position of where we want the data to load.\n    * @param {int} limit\n    *        How many entries to load at a time.\n    * @return {Promise}\n    */\n   reloadData(start, limit) {\n      // var waitForDataCollectionToInitialize = (DC) => {\n      //    return new Promise((resolve, reject) => {\n      //       switch (DC.dataStatus) {\n      //          // if that DC hasn't started initializing yet, start it!\n      //          case DC.dataStatusFlag.notInitial:\n      //             DC.loadData().catch(reject);\n      //          // no break;\n\n      //          // once in the process of initializing\n      //          /* eslint-disable no-fallthrough*/\n      //          case DC.dataStatusFlag.initializing:\n      //             /* eslint-enable no-fallthrough*/\n      //             // listen for \"initializedData\" event from the DC\n      //             // then we can continue.\n      //             this.eventAdd({\n      //                emitter: DC,\n      //                eventName: \"initializedData\",\n      //                listener: () => {\n      //                   // go next\n      //                   resolve();\n      //                },\n      //             });\n      //             break;\n\n      //          // if it is already initialized, we can continue:\n      //          case DC.dataStatusFlag.initialized:\n      //             resolve();\n      //             break;\n\n      //          // just in case, if the status is not known, just continue\n      //          default:\n      //             resolve();\n      //             break;\n      //       }\n      //    });\n      // };\n\n      return Promise.resolve().then(() => {\n         // check if we are currently waiting for more data requests on this datacollection before continuing\n         if (this.reloadTimer) {\n            // if we are already waiting delete the current timer\n            clearTimeout(this.reloadTimer);\n            delete this.reloadTimer;\n         }\n\n         // return a promise\n         if (!this.reloadPromise) {\n            this.reloadPromise = new Promise((resolve, reject) => {\n               this.reloadPromise__resolve = resolve;\n               this.reloadPromise__reject = reject;\n            });\n         }\n\n         // then create a new timeout to delete current timeout, clear data\n         // and load new\n         this.reloadTimer = setTimeout(() => {\n            // clear the data from the dataCollection,\n            this.clearAll();\n            // then loads new data from the server\n            return this.loadData(start, limit)\n               .then(() => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__resolve();\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               })\n               .catch((err) => {\n                  if (this.reloadPromise) {\n                     this.reloadPromise__reject(err);\n                     delete this.reloadPromise;\n                     delete this.reloadPromise__resolve;\n                     delete this.reloadPromise__reject;\n                  }\n                  // delete the current setTimeout\n                  clearTimeout(this.reloadTimer);\n                  delete this.reloadTimer;\n               });\n         }, 50);\n         // setting to 50ms because right now we do not see many\n         // concurrent calls,  we need to increase this if we begin to\n\n         return this.reloadPromise;\n      });\n   }\n\n   /**\n    * reloadWheres()\n    * stores the child data collections filters for subsequent loads.\n    * It is called from bindParentDc() when child data collections that are not\n    * marked to load all data are initializing. To do this we use webix\n    * server side binding by setting the param of \"dataFeed\".\n    * @param {obj} wheres  the new filters for the data collection\n    *        This is a combination of any exisiting filters the data collection\n    *        alreay had as well as the filter for the current cursor set by the\n    *        master data collection. We store this in __reloadWheres for when\n    *        the data needs to be updated.\n    *        The format of the wheres is our Query Builder Format\n    *        ex: {\n    *              \"glue\": \"and\",\n    *              \"rules\": [{\n    *                \"key\": \"33ba8957-6b9c-4ddb-9533-c46b13878ae1\",\n    *                \"rule\": \"contains\",\n    *                \"value\": \"1594176994894\"\n    *              }]\n    *            }\n    */\n   reloadWheres(wheres) {\n      this.__reloadWheres = wheres;\n   }\n\n   getData(filter) {\n      var dc = this.__dataCollection;\n      if (dc) {\n         return dc.find((row) => {\n            let isValid = true;\n\n            // data collection filter\n            // isValid = this.isValidData(row);\n\n            // NOTE: data are filtered from the server side (webix.dataFeed)\n            // parent dc filter\n            let linkDv = this.datacollectionLink;\n            if (linkDv && this.settings.loadAll && isValid) {\n               isValid = this.isParentFilterValid(row);\n            }\n\n            // addition filter\n            if (isValid && filter) {\n               isValid = filter(row);\n            }\n\n            return isValid;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   isParentFilterValid(rowData) {\n      // data is empty\n      if (rowData == null) return false;\n\n      var linkDv = this.datacollectionLink;\n      if (linkDv == null) return true;\n\n      const linkObj = linkDv.datasource;\n      if (linkObj == null) return true;\n\n      var fieldLink = this.fieldLink;\n      if (fieldLink == null) return true;\n\n      // if the parent's cursor is not set we have not filted this collection\n      // yet so the data that comes back should be valid\n      var linkCursor = linkDv.getCursor();\n      if (linkCursor == null) {\n         return true;\n      }\n\n      var linkVal = rowData[fieldLink.relationName()];\n      if (linkVal == null) {\n         // try to get relation value(id) again\n         if (rowData[fieldLink.columnName]) {\n            linkVal = rowData[fieldLink.columnName];\n         } else {\n            return false;\n         }\n      }\n\n      let PK = fieldLink.object.PK();\n\n      // array - 1:M , M:N\n      if (linkVal.filter) {\n         return (\n            linkVal.filter(\n               (val) =>\n                  (val[PK] || val.id || val) ==\n                  (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n            ).length > 0\n         );\n      } else {\n         return (\n            (linkVal[PK] || linkVal.id || linkVal) ==\n            (linkCursor[linkObj.PK()] || linkCursor.id || linkCursor)\n         );\n      }\n   }\n\n   clearAll() {\n      if (this.__dataCollection) this.__dataCollection.clearAll();\n\n      if (this.__treeCollection) this.__treeCollection.clearAll();\n\n      this._dataStatus = this.dataStatusFlag.notInitial;\n   }\n\n   get totalCount() {\n      return this.__totalCount || 0;\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method bind\n    * @param {Object} component - a webix element instance\n    */\n   bind(/* component */) {\n      console.error(\"Platform.ABDataCollection.bind() Not implemented\");\n   }\n\n   unbind(/* component */) {\n      console.error(\"Platform.ABDataCollection.unbind() Not implemented\");\n   }\n\n   removeComponent(comId) {\n      // get index\n      let index = this.__bindComponentIds.indexOf(comId);\n\n      // delete\n      this.__bindComponentIds.splice(index, 1);\n   }\n\n   /**\n    * @method ruleLinkedData()\n    * return a QueryFilter rule that also checks that incoming data is linked\n    * to our .datacollectionLink (if it exists).\n    * @return {obj} {QueryFilterRule}\n    */\n   ruleLinkedData() {\n      let rule = null;\n      const dataCollectionLink = this.datacollectionLink;\n      const fieldLink = this.fieldLink;\n      if (dataCollectionLink && fieldLink) {\n         const linkCursorId = dataCollectionLink?.getCursor()?.id;\n         if (linkCursorId) {\n            rule = {\n               alias: fieldLink.alias, // ABObjectQuery\n               key: fieldLink.id,\n               rule: fieldLink.alias ? \"contains\" : \"equals\", // NOTE: If object is query, then use \"contains\" because ABOBjectQuery return JSON\n               value: fieldLink.getRelationValue(\n                  dataCollectionLink.__dataCollection.getItem(linkCursorId)\n               ),\n            };\n         }\n      }\n      return rule;\n   }\n\n   /**\n    * @method refreshFilterConditions()\n    * This is called in two primary cases:\n    *    - on initialization of a DC to setup our filters.\n    *    - in the operation of the ABDesigner when using a DC to display data\n    *      in the Work_object_grid and the datacollection_work(?)\n    * In the case of the ABDesigner, new temporary where conditions are provided\n    * from the possible filters we can set, and those need to effect the data\n    * we display.\n    * @param {ABRowFilter.where} wheres\n    *        The filter condition from the ABRowFilter values we are storing.\n    */\n   refreshFilterConditions(wheres = null) {\n      // There are 3 Filters that help us know if our data is Valid:\n      // 1) A filter for any ABObjectQuery we are managing.\n      // 2) A filter for our own filter condition\n      // 3) A filter that represents what our scopes allows\n\n      // Set filter of ABObject\n      if (this.__filterDatasource == null)\n         this.__filterDatasource = this.AB.filterComplexNew(\n            `${this.id}_filterDatasource`\n         );\n\n      if (this.datasource) {\n         // this.__filterDatasource.applicationLoad(this.datasource.application);\n         this.__filterDatasource.fieldsLoad(this.datasource.fields());\n\n         let filterConditions;\n\n         // Query\n         if (this.datasource instanceof this.AB.Class.ABObjectQuery) {\n            filterConditions = this.datasource.where;\n         }\n         // Apr 29, 2021 Removed this because we do not want Object filters to\n         // effect validation of DataCollections\n         // Object\n\n         // else if (this.datasource instanceof ABObject) {\n         //    let currentView = this.datasource.currentView();\n         //    if (currentView && currentView.filterConditions)\n         //       filterConditions = currentView.filterConditions;\n         // }\n\n         if (filterConditions)\n            this.__filterDatasource.setValue(filterConditions);\n         else this.__filterDatasource.setValue({});\n      } else {\n         this.__filterDatasource.fieldsLoad([]);\n         this.__filterDatasource.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of data view\n      // Apr 29, 2021 Added this code back to validate with DataCollection Filters\n      if (this.__filterDatacollection == null)\n         this.__filterDatacollection = this.AB.filterComplexNew(\n            `${this.id}_filterDatacollection`\n         );\n\n      // this.__filterDatacollection.applicationLoad(\n      //    this.datasource ? this.datasource.application : null\n      // );\n      this.__filterDatacollection.fieldsLoad(\n         this.datasource ? this.datasource.fields() : []\n      );\n\n      // if we pass in wheres, then Save that value to our internal .filterConditions\n      if (wheres) this.settings.objectWorkspace.filterConditions = wheres;\n\n      let filter = this.AB.cloneDeep(\n         this.settings.objectWorkspace?.filterConditions ?? {\n            glue: \"and\",\n            rules: [],\n         }\n      );\n      // sanity checks:\n      // I've learned not to trust: this.settings.objectWorkspace\n      filter.glue = filter.glue || \"and\";\n      filter.rules = filter.rules || [];\n\n      // if there is a linkRule, add it to filter\n      let linkRule = this.ruleLinkedData(); // returns a rule if we are linked\n      if (linkRule) {\n         // NOTE: linkRule was originally designed to produce a rule for the\n         // loadData() routine.  In SQL, our linkRule might have an \"equals\"\n         // rule, to match.  But in this context if our linktype is \"many\"\n         // we need to change the rule to \"contains\":\n         if (this.fieldLink?.linkType() == \"many\") {\n            linkRule.rule = \"contains\";\n         }\n\n         // if linkRule not already IN filter:\n         let isAlreadyThere = false;\n         let keys = Object.keys(linkRule);\n         (filter.rules || []).forEach((r) => {\n            if (isAlreadyThere) return;\n            let allMatch = true;\n            keys.forEach((k) => {\n               if (r[k] != linkRule[k]) {\n                  allMatch = false;\n               }\n            });\n            isAlreadyThere = allMatch;\n         });\n         if (!isAlreadyThere) {\n            // link Rule needs to be ANDed to our current Rules:\n            if (filter.glue == \"and\") {\n               filter.rules.push(linkRule);\n            } else {\n               filter = { glue: \"and\", rules: [filter, linkRule] };\n            }\n         }\n      }\n\n      if ((filter.rules || []).length > 0 && !this.isCursorFollow) {\n         this.__filterDatacollection.setValue(filter);\n      } else {\n         this.__filterDatacollection.setValue(\n            DefaultValues.settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Set filter of user's scope\n      if (this.__filterScope == null)\n         this.__filterScope = this.AB.filterComplexNew(\n            `${this.id}_filterScope`\n         );\n\n      if (this.datasource) {\n         let scopeList = (this.userScopes || []).filter(\n            (s) =>\n               !s.allowAll &&\n               (s.objectIds || []).indexOf(this.datasource.id) > -1\n         );\n         if (scopeList && scopeList.length > 0) {\n            // this.__filterScope.applicationLoad(this.datasource.application);\n            this.__filterScope.fieldsLoad(this.datasource.fields() || []);\n\n            // concat all rules of scopes\n            let scopeRules = [];\n            scopeList\n               .filter(\n                  (s) => s.filter && s.filter.rules && s.filter.rules.length\n               )\n               .forEach((s) => {\n                  let sRules = (s.filter.rules || []).filter(\n                     (r) =>\n                        this.datasource.fields((f) => f.id == r.key).length > 0\n                  );\n\n                  scopeRules = scopeRules.concat(sRules);\n               });\n\n            let scopeWhere = {\n               glue: \"or\",\n               rules: scopeRules,\n            };\n            this.__filterScope.setValue(scopeWhere);\n         }\n      }\n   }\n\n   get isGroup() {\n      return this.__isGroup || false;\n   }\n\n   ///\n   /// Sync type\n   ///\n\n   get syncTypeFlag() {\n      return {\n         server: 1,\n         client: 2,\n      };\n   }\n\n   get syncType() {\n      return this.settings.syncType || DefaultValues.syncType;\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(/*data*/) {\n      var error = new Error(\n         \"the platform.ABDataCollection._dataCollectionNew() is expected to return a proper DataCollection!\"\n      );\n      console.error(error);\n      return null;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      console.error(\n         \"the platform.ABDataCollection._treeCollectionNew() is expected to return a proper TreeCollection!\"\n      );\n      return null;\n   }\n\n   parseTreeCollection(data = {}) {\n      // TODO all this does is log \"is missing?\"\n      if (data === {}) {\n         console.log(\n            \"Platform.ABDataCollection.parseTreeCollection() missing!\"\n         );\n      }\n   }\n   // parseTreeCollection(data = {}) {\n\n   //  if (!(this.__datasource instanceof ABObjectQuery) ||\n   //    !this.__datasource.isGroup ||\n   //    !this.__treeCollection)\n   //    return;\n\n   //  let addRowToTree = (join = {}, parentAlias = null) => {\n\n   //    let alias = join.alias;\n\n   //    (data.data || []).forEach(row => {\n\n   //      let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n   //      if (!dataId) return;\n\n   //      // find parent nodes\n   //      let parentItemIds = [];\n   //      let parentId = row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n   //      if (parentId) {\n   //        parentItemIds = this.__treeCollection\n   //          .find(item => item._alias == parentAlias && item._dataId == parentId)\n   //          .map(item => item.id);\n   //      }\n\n   //      // check exists\n   //      let exists = this.__treeCollection.find(item => {\n   //        return item._alias == alias &&\n   //          item._dataId == dataId &&\n   //          (parentItemIds.length == 0 || parentItemIds.indexOf(item.$parent) > -1);\n   //      }, true);\n   //      if (exists) return;\n\n   //      let treeNode = {};\n   //      treeNode._alias = alias;\n   //      treeNode._dataId = dataId;\n   //      treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n   //      Object.keys(row).forEach(propName => {\n\n   //        // Pull value from alias\n   //        if (propName.indexOf(`${alias}.`) == 0) {\n   //          treeNode[propName] = row[propName];\n   //        }\n\n   //      });\n\n   //      if (row.translations)\n   //        treeNode.translations = row.translations;\n\n   //      // child nodes\n   //      if (parentItemIds.length > 0)\n   //        parentItemIds.forEach(parentItemId => {\n   //          this.__treeCollection.add(treeNode, null, parentItemId);\n   //        });\n   //      // root node\n   //      else\n   //        this.__treeCollection.add(treeNode, null);\n\n   //    });\n\n   //    // Sub-joins\n   //    (join.links || []).forEach(link => {\n   //      addRowToTree(link, alias);\n   //    });\n\n   //  };\n\n   //  // Show loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.showProgress)\n   //      boundComp.showProgress({ type: \"icon\" });\n\n   //  });\n\n   //  addRowToTree(this.__datasource.joins());\n\n   //  // Hide loading cursor\n   //  (this.__bindComponentIds || []).forEach(comId => {\n\n   //    let boundComp = $$(comId);\n   //    if (boundComp &&\n   //      boundComp.hideProgress)\n   //      boundComp.hideProgress();\n\n   //  })\n   // }\n\n   /**\n    * @method _queryUpdateData\n    *\n    * @param {Array} objList - List of ABObject\n    * @param {Object} values\n    */\n   _queryUpdateData(objList, values) {\n      let updatedVals = {};\n\n      // Add alias to properties of update data\n      Object.keys(values).forEach((key) => {\n         objList.forEach((oItem) => {\n            let alias = this.datasource.objectAlias(oItem.id);\n\n            updatedVals[`${alias}.${key}`] = values[key];\n\n            // Add alias to properties of .translations\n            if (\n               key == \"translations\" &&\n               values[\"translations\"] &&\n               values[\"translations\"].length\n            ) {\n               updatedVals.translations = [];\n\n               values[\"translations\"].forEach((tran) => {\n                  let updatedTran = {};\n\n                  Object.keys(tran).forEach((tranKey) => {\n                     if (tranKey == \"language_code\")\n                        updatedTran[\"language_code\"] = tran[\"language_code\"];\n                     else updatedTran[`${alias}.${tranKey}`] = tran[tranKey];\n                  });\n\n                  updatedVals.translations.push(updatedTran);\n               });\n            }\n         });\n      });\n\n      return updatedVals;\n   }\n\n   isValidData(rowData) {\n      let result = true;\n\n      // NOTE: should we use filter of the current view of object to filter\n      //        if yes, update .wheres condition in .loadData too\n      if (this.__filterDatasource)\n         result = result && this.__filterDatasource.isValid(rowData);\n\n      if (this.__filterDatacollection)\n         result = result && this.__filterDatacollection.isValid(rowData);\n\n      if (result && this.__filterScope)\n         result = result && this.__filterScope.isValid(rowData);\n\n      return result;\n   }\n\n   updateRelationalDataFromLinkDC(objectId, rowData) {\n      const dcLink = this.datacollectionLink;\n      const cursorLink = dcLink?.getCursor();\n\n      // Add the new data that just relate to the Link DC\n      if (\n         dcLink?.datasource.id == objectId &&\n         cursorLink &&\n         cursorLink.id == rowData?.id\n      ) {\n         const obj = this.datasource;\n         const linkedField = this.fieldLink;\n         let relatedData = rowData[linkedField.fieldLink.relationName()];\n         if (relatedData && !Array.isArray(relatedData))\n            relatedData = [relatedData];\n\n         (relatedData ?? []).forEach((item) => {\n            if (item == null) return;\n\n            if (!this.__dataCollection.exists(item[obj.PK()])) {\n               // QUESTION: Should we .find to get fully info here ?\n               const newItem = this.AB.cloneDeep(item);\n               newItem[linkedField.relationName()] = [rowData];\n               this.__dataCollection.add(newItem);\n            }\n         });\n\n         // trigger to components to know there are updated data.\n         this.emit(\"warnRefresh\");\n      }\n   }\n\n   // Clone\n\n   clone(settings) {\n      settings = settings || this.toObj();\n      var clonedDatacollection = new this.constructor(settings, this.AB);\n      clonedDatacollection.__datasource = this.__datasource;\n      clonedDatacollection._dataStatus = this._dataStatus;\n\n      // clonedDatacollection.__dataCollection = this.__dataCollection.copy();\n      clonedDatacollection.__filterDatacollection.setValue(\n         settings.settings.objectWorkspace.filterConditions\n      );\n\n      var parseMe = () => {\n         if (clonedDatacollection.__dataCollection) {\n            clonedDatacollection.__dataCollection.parse(\n               this.__dataCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n         if (clonedDatacollection.__treeCollection) {\n            clonedDatacollection.__treeCollection.parse(\n               this.__treeCollection\n                  .find({})\n                  .filter((row) =>\n                     clonedDatacollection.__filterDatacollection.isValid(row)\n                  )\n            );\n         }\n      };\n\n      parseMe();\n\n      // return new Promise((resolve, reject) => {\n      //    // load the data\n      //    clonedDatacollection\n      //       .loadData()\n      //       .then(() => {\n\n      // set the cursor\n      clonedDatacollection.setStaticCursor();\n\n      var cursorID = this.getCursor();\n      if (cursorID) {\n         // NOTE: webix documentation issue: .getCursor() is supposed to return\n         // the .id of the item.  However it seems to be returning the {obj}\n         if (cursorID.id) cursorID = cursorID.id;\n\n         clonedDatacollection.setCursor(cursorID);\n      }\n\n      return clonedDatacollection;\n\n      // resolve(clonedDatacollection);\n      //       })\n      //       .catch(reject);\n      // });\n   }\n\n   filteredClone(filters) {\n      var obj = this.toObj();\n\n      // check to see that filters are set (this is sometimes helpful to select the first record without doing so at the data collection level)\n      if (filters?.rules?.length) {\n         if (obj.settings.objectWorkspace.filterConditions?.rules?.length) {\n            obj.settings.objectWorkspace.filterConditions.rules =\n               obj.settings.objectWorkspace.filterConditions.rules.concat(\n                  filters.rules\n               );\n         } else {\n            obj.settings.objectWorkspace.filterConditions = filters;\n         }\n      }\n      let clonedDC = this.clone(obj);\n      return clonedDC; // new ABViewDataCollection(settings, this.application, this.parent);\n   }\n\n   //\n   // Event handles\n   //\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    *              emitter: object,\n    *              eventName: string,\n    *              listener: function\n    *            }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      this.__events = this.__events || [];\n\n      let exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    */\n   eventClear() {\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method eventRemove()\n    * unsubscribe a event.\n    *\n    */\n   eventRemove(eventName) {\n      if (this.__events?.length > 0 && eventName) {\n         this.__events.forEach((e) => {\n            if (eventName == e.eventName)\n               e.emitter.removeListener(e.eventName, e.listener);\n         });\n\n         this.__events = this.__events.filter((e) => e.eventName != eventName);\n      }\n   }\n\n   get userScopes() {\n      return [];\n   }\n\n   get isCursorFollow() {\n      return (\n         this.settings.followDatacollectionID &&\n         (!this.settings.linkDatacollectionID || !this.settings.linkFieldID)\n      );\n   }\n\n   get datacollectionFollow() {\n      if (!this.isCursorFollow) return null;\n\n      return (this.AB ?? AB).datacollectionByID(\n         this.settings.followDatacollectionID\n      );\n   }\n\n   get previousCursorId() {\n      return this.__previousCursorId;\n   }\n\n   waitReady() {\n      // if (this.dataStatus == this.dataStatusFlag.initialized) {\n      //    return Promise.resolve();\n      // }\n      // console.log(`DC[${this.label}] waiting for initializedData.`);\n      // return new Promise((resolve /*, reject */) => {\n      //    this.once(\"initializedData\", ()=>{\n      //       resolve();\n      //    })\n\n      // })\n\n      return this.waitForDataCollectionToInitialize(this);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nmodule.exports = class ABDefinitionCore {\n   constructor(attributes, AB) {\n      this.AB = AB;\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\ttype: 'xxxxx',\n\t\t\tjson: \"{json}\"\n\t\t}\n\t\t*/\n      if (attributes.id) {\n         this.id = attributes.id;\n      }\n      this.name =\n         attributes?.name ||\n         attributes?.json?.name ||\n         attributes?.json?.label ||\n         attributes?.json?.translations?.[0]?.label ||\n         \"\";\n      if (!this.name) {\n         this.AB.notify.builder(\n            new Error(\"Attributes for definition had no 'name'\"),\n            {\n               context: \"ABDefinitionCore.fromValues()\",\n               attributes,\n            }\n         );\n      }\n      this.type = attributes.type || attributes?.json?.type || \"\";\n      this.json = attributes.json || null;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      return {\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.json,\n      };\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABDefinition\n    * Also remove it from our parent application\n    * @return {Promise}\n    */\n   destroy() {\n      return this.AB.definitionDestroy(this.id);\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   async save() {\n      if (this.id) {\n         return this.AB.definitionUpdate(this.id, this.toObj());\n      } else {\n         return this.AB.definitionCreate(this.toObj());\n      }\n   }\n};\n","/*\n * ABFactoryCore\n * an object that contains the definitions and references for a single tenant.\n * It is expected that an instance of this should be returned from an\n * ABBootstrap.init(req).then((AB)=>{}) call.\n */\n\n// const _ = require(\"lodash\");\n// const uuidv4 = require(\"uuid\");\n\nconst ABApplication = require(\"../platform/ABApplication\");\nconst ABApplicationMobile = require(\"../platform/ABApplicationMobile\");\nconst ABDefinition = require(\"../platform/ABDefinition\");\n\nconst ABComponent = require(\"../platform/ABComponent\");\n\nconst ABFieldManager = require(\"./ABFieldManager\");\n\nconst ABIndex = require(\"../platform/ABIndex\");\nconst ABObject = require(\"../platform/ABObject\");\nconst ABObjectExternal = require(\"../platform/ABObjectExternal\");\nconst ABObjectImport = require(\"../platform/ABObjectImport\");\nconst ABObjectApi = require(\"../platform/ABObjectApi\");\nconst ABDataCollection = require(\"../platform/ABDataCollection\");\nconst ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\nconst ABHint = require(\"../platform/ABHint\");\nconst ABProcess = require(\"../platform/ABProcess\");\n\nconst ABProcessParticipant = require(\"../platform/process/ABProcessParticipant\");\nconst ABProcessLane = require(\"../platform/process/ABProcessLane\");\nconst ABProcessTaskManager = require(\"./process/ABProcessTaskManager\");\n\nconst ABStep = require(\"../platform/ABStep\");\n\nconst ABViewDetailItem = require(\"../platform/views/ABViewDetailItem\");\nconst ABViewFormItem = require(\"../platform/views/ABViewFormItem\");\nconst ABMobileViewFormItem = require(\"../platform/mobile/ABMobileViewFormItem\");\n\n// const ABObjectWorkspaceViewGrid = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGrid\");\n// const ABObjectWorkspaceViewKanban = require(\"../platform/workspaceViews/ABObjectWorkspaceViewKanban\");\n// const ABObjectWorkspaceViewGantt = require(\"../platform/workspaceViews/ABObjectWorkspaceViewGantt\");\n\nconst RowFilter = require(\"../platform/RowFilter\");\nconst FilterComplex = require(\"../platform/FilterComplex\");\n\nconst ABMLClass = require(\"../platform/ABMLClass\");\n\nconst EventEmitter = require(\"../platform/ABEmitter\");\n\nclass ABFactory extends EventEmitter {\n   constructor(definitions) {\n      /**\n       * @param {hash} definitions\n       *        { ABDefinition.id : {ABDefinition} }\n       *        of all the definitions defined for the current Tenant\n       */\n\n      super();\n      this.setMaxListeners(0);\n\n      this._definitions = definitions || {};\n      // {hash}  { ABDefinition.id : {ABDefinition} }\n      // ensure ._definitions is a HASH{ ID : {ABDefinition}}\n      if (Array.isArray(definitions)) {\n         var hash = {};\n         definitions.forEach((d) => {\n            hash[d.id] = d;\n         });\n         this._definitions = hash;\n      }\n\n      //\n      //\n      // Manage our working objects\n      //\n\n      this._allApplications = [];\n      // {array} of all the ABApplication(s) in our site.\n\n      this._allObjects = [];\n      // {array} of all the ABObject(s) in our site.\n\n      this._allHints = [];\n      // {array} of all the ABHint(s) in our site.\n\n      this._allProcesses = [];\n      // {array} of all the ABProcess(s) in our site.\n\n      this._allQueries = [];\n      // {array} of all the ABObjectQuery(s) in our site.\n\n      this._allSteps = [];\n      // {array} of all the ABStep(s) in our site.\n\n      this._allDatacollections = [];\n      // {array} of all the ABDataCollection(s) in our site.\n\n      //\n      // Class References\n      //\n      this.Class = {\n         ABApplication,\n         ABComponent,\n         ABDefinition,\n         ABFieldManager,\n         ABIndex,\n         ABMLClass,\n         ABObject,\n         ABObjectExternal,\n         ABObjectImport,\n         ABObjectApi,\n         ABObjectQuery,\n         ABProcessParticipant,\n         // ABRole      // Do we need this anymore?\n\n         // ABObjectWorkspaceViewGrid,\n         // ABObjectWorkspaceViewKanban,\n         // ABObjectWorkspaceViewGantt,\n\n         ABProcessTaskManager,\n\n         ABViewDetailItem,\n         ABViewFormItem,\n         ABMobileViewFormItem,\n      };\n\n      //\n      // Rules\n      // These are a common set of \"rules\" for all platforms.\n      //\n      this.rules = {\n         /**\n          * @method AB.rules.isUUID\n          * evaluate a given value to see if it matches the format of a uuid\n          * @param {string} key\n          * @return {boolean}\n          */\n         isUUID: function (key) {\n            var checker = RegExp(\n               \"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$\",\n               \"i\"\n            );\n            return checker.test(key);\n         },\n\n         /**\n          * @method AB.rules.nameFilter()\n          * return a properly formatted name for an AppBuilder object.\n          * @param {string} name\n          *        The name of the object we are conditioning.\n          * @return {string}\n          */\n         nameFilter: function (name) {\n            return String(name).replace(/[^a-z0-9_.]/gi, \"\");\n         },\n\n         /**\n          * @method AB.rules.toApplicationNameFormat()\n          * return a properly formatted Application Name\n          * @param {string} name\n          *        The name of the Application we are conditioning.\n          * @return {string}\n          */\n         toApplicationNameFormat: function (name) {\n            return \"AB_\" + this.nameFilter(name);\n         },\n\n         /**\n          * @method AB.rules.toFieldRelationFormat()\n          * This function uses for define relation name of Knex Objection\n          * return a relation name of column\n          * @param {string} colName\n          *        The name of the Column\n          * @return {string}\n          */\n         toFieldRelationFormat: function (colName) {\n            return this.nameFilter(colName) + \"__relation\";\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableFK()\n          * return foriegnkey (FK) column name for a junction table name\n          * @param {string} objectName\n          *        The name of the Object with a connection\n          * @param {string} columnName\n          *        The name of the connection columnName.\n          * @return {string}\n          */\n         toJunctionTableFK: function (objectName, columnName) {\n            var fkName = objectName + \"_\" + columnName;\n\n            if (fkName.length > 64) fkName = fkName.substring(0, 64);\n\n            return fkName;\n         },\n\n         /**\n          * @method AB.rules.toJunctionTableNameFormat()\n          * return many-to-many junction table name\n          * @param {string} appName\n          *        The name of the Application for this object\n          * @param {string} sourceTableName\n          *        The name of the source object we are conditioning.\n          * @param {string} targetTableName\n          *        The name of the target object we are conditioning.\n          * @param {string} colName\n          * @return {string}\n          */\n         toJunctionTableNameFormat: function (\n            appName,\n            sourceTableName,\n            targetTableName,\n            colName\n         ) {\n            // The maximum length of a table name in MySql is 64 characters\n            appName = this.toApplicationNameFormat(appName);\n            if (appName.length > 17) appName = appName.substring(0, 17);\n\n            if (sourceTableName.length > 15)\n               sourceTableName = sourceTableName.substring(0, 15);\n\n            if (targetTableName.length > 15)\n               targetTableName = targetTableName.substring(0, 15);\n\n            colName = this.nameFilter(colName);\n            if (colName.length > 14) colName = colName.substring(0, 14);\n\n            return \"{appName}_{sourceName}_{targetName}_{colName}\"\n               .replace(\"{appName}\", appName)\n               .replace(\"{sourceName}\", sourceTableName)\n               .replace(\"{targetName}\", targetTableName)\n               .replace(\"{colName}\", colName);\n         },\n\n         /**\n          * @method AB.rules.toObjectNameFormat\n          * return a properly formatted Object/Table Name\n          * @param {string} objectName\n          *        The {ABObject}.name of the Object we are conditioning.\n          * @return {string}\n          */\n         toObjectNameFormat: function (objectName) {\n            return `AB_${this.nameFilter(objectName)}`;\n         },\n      };\n\n      // Notify Helpers\n      this.notify.builder = (...params) => {\n         this.notify(\"builder\", ...params);\n      };\n\n      this.notify.developer = (...params) => {\n         this.notify(\"developer\", ...params);\n      };\n   }\n\n   /**\n    * @method definitionClean()\n    * make sure the provided ABDefinition values are properly formatted\n    * @param {ABDefinition} d\n    *        The json settings of an ABDefinition object.\n    */\n   definitionClean(d) {\n      if (typeof d.json == \"string\") {\n         try {\n            d.json = JSON.parse(d.json);\n         } catch (e) {\n            console.log(e);\n            console.error(` Error on definition id[${d.id}]`);\n         }\n      }\n   }\n\n   init() {\n      let allDefinitions = Object.keys(this._definitions).map(\n         (k) => this._definitions[k]\n      );\n      // {array} all our definitions in an Array format.\n\n      // make sure our definitions.json field is an {} and not string\n      allDefinitions.forEach((d) => {\n         this.definitionClean(d);\n      });\n\n      // perform these in order:\n      [\n         \"object\",\n         \"query\",\n         \"datacollection\",\n         \"process\",\n         \"hint\",\n         \"step\",\n         \"application\",\n      ].forEach((type) => {\n         var objTypes = allDefinitions.filter((d) => d.type == type);\n         objTypes.forEach((def) => {\n            let { keyList, keyFn } = this.objectKeysByDef(def);\n            if (keyList) {\n               this[keyList].push(this[keyFn](def.json));\n            }\n         });\n      });\n\n      this.emit(\"init.objects_ready\");\n      return Promise.resolve();\n   }\n\n   /**\n    * @method objectKeysByDef()\n    * Analyze the provided ABDefinition json and return which set of list and\n    * functions are used to create a new instance of this definition.\n    * @param {json} def\n    *        the ABDefinition json of the definition we are evaluating\n    * @return { keyList, keyFn }\n    *        keyList: {string}  which of our internal lists to store this new\n    *                 object.\n    *        keyFn: {string} which of our methods to call with the def.json\n    *               as the param that will create the new object.\n    *\n    *        ex:  this[keyList].push( this[keyFn](def.json));\n    *\n    *        if this def is not one of the types we track,\n    *        keyList = keyFn = null;\n    */\n   objectKeysByDef(def) {\n      switch (def.type) {\n         case \"application\":\n            return { keyList: \"_allApplications\", keyFn: \"applicationNew\" };\n\n         case \"datacollection\":\n            return {\n               keyList: \"_allDatacollections\",\n               keyFn: \"datacollectionNew\",\n            };\n\n         case \"hint\":\n            return { keyList: \"_allHints\", keyFn: \"hintNew\" };\n\n         case \"steps\":\n            return { keyList: \"_allSteps\", keyFn: \"stepNew\" };\n\n         case \"object\":\n            return { keyList: \"_allObjects\", keyFn: \"objectNew\" };\n\n         case \"process\":\n            return { keyList: \"_allProcesses\", keyFn: \"processNew\" };\n\n         case \"query\":\n            return { keyList: \"_allQueries\", keyFn: \"queryNew\" };\n\n         default:\n            // we don't manage any other\n            return { keyList: null, keyFn: null };\n      }\n   }\n\n   //\n   // Definitions\n   //\n\n   /**\n    * definitionByID(id)\n    * return an ABDefinition.json value ready for our objects to use.\n    * @param {string} id\n    *        the uuid of the ABDefinition to delete\n    * @param {bool} isRaw\n    *        indicates if we want the full ABDefinition, or the .json param\n    *        true : returns full ABDefinition value.\n    *        false: returns the .json parameter used by most ABObjects.\n    * @return {Promise}\n    */\n   definitionByID(id, isRaw = false) {\n      if (this._definitions[id]) {\n         if (isRaw) {\n            return this._definitions[id];\n         } else {\n            return this._definitions[id].json;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * definitionNew(values)\n    * return an ABDefinition object tied to this Tenant.\n    * @param {obj} values\n    *        The value hash of the ABDefinition object to create.\n    * @return {ABDefinition}\n    */\n   definitionNew(values) {\n      return new ABDefinition(values, this);\n   }\n\n   /**\n    * definitionsParse()\n    * include the incoming definitions into our ABFactory. These new\n    * definitions will replace any existing ones with the same .id.\n    * @param {array[ABDefinitioin]} defs\n    *     the incoming array of ABDefinitions to parse.\n    * @return {Promise}\n    */\n   definitionsParse(defs = []) {\n      if (!Array.isArray(defs)) {\n         defs = [defs];\n      }\n\n      // store/replace the incoming definitions\n      // 1st: insert ALL our definitions internally\n      defs.forEach((d) => {\n         this.definitionClean(d);\n         this._definitions[d.id] = d;\n      });\n      // 2nd: Now we can then go through and signal the \"updates\"\n      // and the related objects can find their dependent definitions.\n      defs.forEach((d) => {\n         this.definitionSync(\"updated\", d.id, d);\n      });\n\n      return Promise.resolve();\n   }\n\n   /**\n    * definitionSync()\n    * Synchronize an individual definition into our repository of definitions.\n    * @param {string} op\n    *        the type of synchronization this is\n    *        [ \"created\", \"updated\", \"destroyed\"]\n    * @param {uuid} id\n    *        the definition.id of the definition we are synchronizing\n    * @param {json} def\n    *        the ABDefinition attributes we are storing.\n    */\n   definitionSync(op, id, def) {\n      var { keyList, keyFn } = this.objectKeysByDef(def);\n      if (keyList) {\n         var curr;\n         switch (op) {\n            case \"created\":\n               this[keyList].push(this[keyFn](def.json));\n               this.emit(\"definition.created\", def.json);\n               break;\n\n            case \"updated\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n\n               // remove from list\n               this[keyList] = this[keyList].filter((d) => d.id != id);\n               // add new one:\n               this[keyList].push(this[keyFn](def.json));\n\n               // signal this object needs to be updated:\n               // NOTE: if this is one of the objects we are tracking,\n               // we don't need to this.emit() the message.\n               if (curr) {\n                  curr.emit(\"definition.updated\", def.json);\n               } else {\n                  this.emit(\"definition.updated\", def.json);\n               }\n               break;\n\n            case \"destroyed\":\n               // get the current object\n               curr = this[keyList].find((d) => d.id == id);\n               if (curr) {\n                  // remove from list\n                  this[keyList] = this[keyList].filter((d) => d.id != id);\n\n                  // signal this object needs to be updated:\n                  curr.emit(\"definition.deleted\", def.json);\n\n                  this.emit(\"definition.deleted\", def.json);\n               }\n               break;\n         }\n      }\n   }\n\n   //\n   // ABObjects\n   //\n   /**\n    * @method applications()\n    * return all the ABApplications that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABApplications.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   applications(fn = () => true) {\n      return (this._allApplications || []).filter(fn);\n   }\n\n   /**\n    * @method applicationByID()\n    * returns a single ABApplication that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABApplication we are searching\n    *        for.\n    * @return {ABApplication}\n    *        the matching ABApplication object if found\n    *        {null} if not found.\n    */\n   applicationByID(ID) {\n      return this.applications((a) => a.id == ID)[0];\n   }\n\n   /**\n    * @method applicationNew()\n    * Return a new instance of an ABApplication object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplication object we are\n    *        creating.\n    * @return {ABApplication}\n    */\n   applicationNew(values) {\n      // just in case we got here by mistake:\n      if (values.appType == \"mobile\") {\n         return this.applicationMobileNew(values);\n      }\n\n      return new ABApplication(values, this);\n   }\n\n   /**\n    * @method applicationMobileNew()\n    * Return a new instance of an ABApplicationMobile object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABApplicationMobile object we are\n    *        creating.\n    * @return {ABApplicationMobile}\n    */\n   applicationMobileNew(values) {\n      return new ABApplicationMobile(values, this);\n   }\n\n   /**\n    * @method datacollections()\n    * return an array of all the ABDataCollection for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABDataCollection that\n    *        this fn returns true for.\n    * @return {array}\n    *        array of ABDataCollection\n    */\n   datacollections(filter = () => true) {\n      return (this._allDatacollections || []).filter(filter);\n   }\n\n   /**\n    * @method datacollectionByID()\n    * returns a single ABDatacollection that matches the given ID.\n    * @param {string} ID\n    *        the .id/.name/.label of the ABDatacollection we are searching\n    *        for.\n    * @return {ABDatacollection}\n    *        the matching ABDatacollection object if found\n    *        {null} if not found.\n    */\n   datacollectionByID(ID) {\n      // an undefined or null ID should not match any DC.\n      if (!ID) return null;\n\n      return this.datacollections((dc) => {\n         return dc.id == ID || dc.name == ID || dc.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method datacollectionNew()\n    * create a new instance of ABDataCollection\n    * @param {obj} values\n    *        the initial values for the DC\n    * @return {ABDatacollection}\n    */\n   datacollectionNew(values) {\n      var dc = new ABDataCollection(values, this);\n      dc.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allDatacollections = this._allDatacollections.filter(\n            (d) => d.id != dc.id\n         );\n      });\n      return dc;\n   }\n\n   /**\n    * @method fieldNew()\n    * return an instance of a new (unsaved) ABField that is tied to a given\n    * ABObject.\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    * @param {obj} values  the initial values for this field.\n    *                - { key:'{string}'} is required\n    * @param {ABObject} object  the parent object this field belongs to.\n    * @return {ABField}\n    */\n   fieldNew(values, object) {\n      // NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n      return ABFieldManager.newField(values, object);\n   }\n\n   /**\n    * @method indexNew()\n    * return an instance of a new (unsaved) ABIndex.\n    * @return {ABIndex}\n    */\n   indexNew(values, object) {\n      return new ABIndex(values, object);\n   }\n\n   /**\n    * @method Label()\n    * a simple label factory.\n    * It is expected to be called like this:\n    * @codestart\n    *    var L = AB.Label();\n    *    var outputText = L(\"Hello World\");\n    *    var o2 = L(\"I'm {0} years old\", [5]);\n    * @codeend\n    * @return {fn}\n    */\n   Label() {\n      return (key, altText, values = []) => {\n         var label = key;\n         if (altText) {\n            if (Array.isArray(altText)) {\n               values = altText;\n            } else {\n               label = altText;\n            }\n         }\n\n         values.forEach((v, i) => {\n            var sub = `{${i}}`;\n            label = label.replaceAll(sub, v);\n         });\n\n         return label;\n      };\n   }\n\n   /**\n    * @method objects()\n    * return an array of all the ABObjects for this ABApplication.\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjects that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObject\n    */\n   objects(filter = () => true) {\n      return (this._allObjects || []).filter(filter);\n   }\n\n   /**\n    * @method objectByID()\n    * return the specific object requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   objectByID(ID) {\n      return this.objects((o) => {\n         return o.id == ID || o.name == ID || o.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method objectNew()\n    * return an instance of a new (unsaved) ABObject that is tied to this\n    * ABApplication.\n    * NOTE: this new object is not included in our this.objects until a .save()\n    * is performed on the object.\n    * @return {ABObject}\n    */\n   objectNew(values) {\n      var newObj = null;\n\n      if (values.isExternal == true)\n         newObj = new ABObjectExternal(values, this);\n      else if (values.isImported == true)\n         newObj = new ABObjectImport(values, this);\n      else if (values.isAPI == true) newObj = new ABObjectApi(values, this);\n      else newObj = new ABObject(values, this);\n\n      /*\n      // IS THIS CORRECT?\n      newObj.on(\"destroyed\", () => {\n         // make sure it is no longer in our internal list\n         this._allObjects = this._allObjects.filter((o) => o.id != newObj.id);\n      });\n      */\n\n      return newObj;\n   }\n\n   objectFile() {\n      return this.objectByID(\"4a9d89c9-f4eb-41af-91e4-909eff389f3e\");\n   }\n\n   objectLanguage() {\n      return this.objectByID(\"d84cd351-d96c-490f-9afb-2a0b880ca0ec\");\n   }\n\n   objectProcessForm() {\n      return this.objectByID(\"d36ae4c8-edef-48d8-bd9c-79a0edcaa067\");\n   }\n\n   objectProcessInstance() {\n      return this.objectByID(\"2ba85be0-78db-4eda-ba43-c2c4e3831849\");\n   }\n\n   objectRole() {\n      return this.objectByID(\"c33692f3-26b7-4af3-a02e-139fb519296d\");\n   }\n\n   objectScope() {\n      return this.objectByID(\"af10e37c-9b3a-4dc6-a52a-85d52320b659\");\n   }\n\n   objectToken() {\n      return this.objectByID(\"08826ac7-4b33-4745-a3d7-f7831ca4ff59\");\n   }\n\n   objectUser() {\n      return this.objectByID(\"228e3d91-5e42-49ec-b37c-59323ae433a1\");\n   }\n\n   objectKey() {\n      return this.objectByID(\"d734fe8c-b615-446c-8a5f-793ddece19f9\");\n   }\n\n   objectSecret() {\n      return this.objectByID(\"db5b3b26-5300-4c92-bc73-8ce4f4696992\");\n   }\n\n   //\n   // Hints\n   //\n   /**\n    * @method hints()\n    * return all the ABHints that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABHints.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   hints(filter = () => true) {\n      return (this._allHints || []).filter(filter);\n   }\n\n   /**\n    * @method hintByID()\n    * return the specific hint requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   hintID(ID) {\n      return this.hints((h) => {\n         return h.id == ID || h.name == ID || h.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method hintNew()\n    * return an instance of a new (unsaved) ABHint that is tied to this\n    * ABApplication.\n    * NOTE: this new hint is not included in our this.hints until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   hintNew(values) {\n      var newHint = new ABHint(values, this);\n\n      return newHint;\n   }\n\n   //\n   // Steps\n   //\n   /**\n    * @method steps()\n    * return all the ABSteps that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABSteps.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   steps(filter = () => true) {\n      return (this._allSteps || []).filter(filter);\n   }\n\n   /**\n    * @method stepByID()\n    * return the specific step requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   stepID(ID) {\n      return this.steps((s) => {\n         return s.id == ID || s.name == ID || s.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method stepNew()\n    * return an instance of a new (unsaved) ABStep that is tied to this\n    * ABApplication.\n    * NOTE: this new step is not included in our this.steps until a .save()\n    * is performed on the object.\n    * @return {ABHint}\n    */\n   stepNew(id, hintID) {\n      var stepDef = this.definitionByID(id);\n      if (stepDef) {\n         var getStep = new ABStep(stepDef, this);\n         return getStep;\n      } else {\n         var params = {\n            settings: {\n               hint: hintID,\n            },\n         };\n         var newStep = new ABStep(params, this);\n         return newStep;\n      }\n      // return null;\n   }\n\n   //\n   // Processes\n   //\n   /**\n    * @method processes()\n    * return all the ABProcess that match the provided filter.\n    * @param {fn} fn\n    *        A filter function to select specific ABProcess.\n    *        Must return true to include the entry.\n    * @return {array}\n    */\n   processes(filter = () => true) {\n      return (this._allProcesses || []).filter(filter);\n   }\n\n   /**\n    * @method processByID()\n    * return the specific process requested by the provided id.\n    * @param {string} ID\n    * @return {obj}\n    */\n   processByID(ID) {\n      return this.processes((p) => {\n         return p.id == ID || p.name == ID || p.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method processNew()\n    * Return a new instance of an ABProcess object.\n    * @param {json} values\n    *        the ABDefinition.json of the ABProcess object we are\n    *        creating.\n    * @return {ABProcess}\n    */\n   processNew(values) {\n      return new ABProcess(values, this);\n   }\n\n   /**\n    * @method processElementNew(id)\n    * return an instance of a new ABProcessOBJ that is tied to a given\n    * ABProcess.\n    * @param {string} id\n    *        the ABDefinition.id of the element we are creating\n    * @param {ABProcess} process\n    *        the process this task is a part of.\n    * @return {ABProcessTask}\n    */\n   processElementNew(id, process) {\n      var taskDef = this.definitionByID(id);\n      if (taskDef) {\n         switch (taskDef.type) {\n            case ABProcessParticipant.defaults().type:\n               return new ABProcessParticipant(taskDef, process, this);\n            // break;\n\n            case ABProcessLane.defaults().type:\n               return new ABProcessLane(taskDef, process, this);\n            // break;\n\n            default:\n               // default to a Task\n               return ABProcessTaskManager.newTask(taskDef, process, this);\n            // break;\n         }\n      }\n      return null;\n   }\n\n   /**\n    * @method processElementNewForModelDefinition(def)\n    *\n    * return an instance of a new ABProcess[OBJ] that is tied to the given\n    * BPMI:Element definition.\n    *\n    * @param {BPMI:Element} element the element definition from our BPMI\n    *              modler.\n    * @return {ABProcess[OBJ]}\n    */\n   processElementNewForModelDefinition(element, process) {\n      var newElement = null;\n\n      switch (element.type) {\n         case \"bpmn:Participant\":\n            newElement = new ABProcessParticipant({}, process, this);\n            break;\n\n         case \"bpmn:Lane\":\n            newElement = new ABProcessLane({}, process, this);\n            break;\n\n         default:\n            var defaultDef = ABProcessTaskManager.definitionForElement(element);\n            if (defaultDef) {\n               newElement = ABProcessTaskManager.newTask(\n                  defaultDef,\n                  process,\n                  this\n               );\n            }\n            break;\n      }\n\n      // now make sure this new Obj pulls any relevant info from the\n      // diagram element\n      if (newElement) {\n         newElement.fromElement(element);\n      }\n      return newElement;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery(s).\n    * @param {fn} filter\n    *        a filter fn to return a set of ABObjectQuery(s) that this fn\n    *        returns true for.\n    * @return {array}\n    *        array of ABObjectQuery\n    */\n   queries(filter = () => true) {\n      return (this._allQueries || []).filter(filter);\n   }\n   // queriesAll() {\n   //    console.error(\n   //       \"ABFactory.queriesAll() Depreciated! Use .queries() instead. \"\n   //    );\n   //    return this.queries();\n   // }\n\n   /**\n    * @method queryByID()\n    * return the specific query requested by the provided id.\n    * NOTE: this method has been extended to allow .name and .label\n    * as possible lookup values.\n    * @param {string} ID\n    * @return {ABObjectQuery}\n    */\n   queryByID(ID) {\n      return this.queries((q) => {\n         return q.id == ID || q.name == ID || q.label == ID;\n      })[0];\n   }\n\n   /**\n    * @method queryNew()\n    * return an instance of a new (unsaved) ABObjectQuery that is tied to this\n    * ABFactory.\n    * @return {ABObjectQuery}\n    */\n   queryNew(values) {\n      return new ABObjectQuery(values, this);\n   }\n\n   /**\n    * @method rowfilterNew()\n    * return an instance of a new RowFilter that is tied to this\n    * ABFactory.\n    * @return {RowFilter}\n    */\n   rowfilterNew(App, idBase) {\n      if (App) {\n         console.error(\"!! Who is calling this with an App?\");\n      }\n      return new RowFilter(App || this._App, idBase, this);\n   }\n\n   /**\n    * @method filterComplexNew()\n    * return an instance of a new FilterComplex that is tied to this\n    * ABFactory.\n    * @return {FilterComplex}\n    */\n   filterComplexNew(idBase, options = {}) {\n      return new FilterComplex(idBase, this, options);\n   }\n\n   /**\n    * @method viewNewDetatched()\n    * Return an instance of a View that is NOT attached to an ABApplication.\n    * @return {ABViewXXX}\n    */\n   viewNewDetatched(values) {\n      if (!this._mockApp) {\n         this._mockApp = this.applicationNew({});\n      }\n      return this._mockApp.viewNew(values, this._mockApp);\n   }\n\n   //\n   // Utilities\n   //\n\n   /**\n    * notify()\n    * will send alerts to a group of people. These alerts are usually about\n    * configuration errors, or software problems.\n    * @param {string} domain\n    *     which group of people we are sending a notification to.\n    * @param {Error} error\n    *     An error object generated at the point of issue.\n    * @param {json} info\n    *     Additional related information concerning the issue.\n    */\n   notify(/* ...params */) {\n      console.error(\n         \"ABFactory.notify() is expected to be overwritten by the platform!\"\n      );\n   }\n\n   /**\n    * notifyInfo()\n    * a common routine to parse the info parameter provided to .notify() into\n    * a more detailed set of data.\n    * @param {json} info\n    * @return {json}\n    */\n   _notifyInfo(info) {\n      var moreInfo = {};\n\n      if (info) {\n         Object.keys(info).forEach((k) => {\n            switch (k) {\n               case \"field\":\n                  moreInfo.objectID = info[k].object?.id;\n                  moreInfo.objectName = info[k].object?.name;\n                  moreInfo.fieldID = info[k].id;\n                  moreInfo.fieldName = info[k].label || info[k].name;\n                  break;\n\n               case \"object\":\n                  moreInfo.objectID = info[k].id;\n                  moreInfo.objectName = info[k].name;\n                  break;\n\n               case \"datacollection\":\n                  moreInfo.datacollectionID = info[k].id;\n                  moreInfo.datacollectionName = info[k].label || info[k].name;\n                  var ds = info[k].datasource;\n                  if (ds) {\n                     moreInfo.datacollectionDSID = ds.id;\n                     moreInfo.datacollectionDSName = ds.name;\n                  }\n                  break;\n\n               case \"process\":\n                  moreInfo.processID = info[k].id;\n                  moreInfo.processName = info[k].label || info[k].name;\n                  break;\n\n               case \"req\":\n                  moreInfo.req = {\n                     jobID: info[k].jobID,\n                     tenantID: info[k]._tenantID,\n                     user: info[k]._user,\n                  };\n                  break;\n\n               case \"task\":\n                  if (info[k].process) {\n                     moreInfo.processID = info[k].process.id;\n                     moreInfo.processName =\n                        info[k].process.label || info[k].process.name;\n                  }\n                  moreInfo.taskID = info[k].id;\n                  moreInfo.taskName = info[k].label || info[k].name;\n                  break;\n\n               case \"view\":\n                  if (info[k].application) {\n                     moreInfo.applicationID = info[k].application.id;\n                     moreInfo.applicationName =\n                        info[k].application.label || info[k].application.name;\n                  }\n                  moreInfo.viewID = info[k].id;\n                  moreInfo.viewName = info[k].label || info[k].name;\n                  moreInfo.viewKey = info[k].key;\n                  break;\n               default:\n                  moreInfo[k] = info[k];\n                  break;\n            }\n         });\n      }\n\n      return moreInfo;\n   }\n}\n\nmodule.exports = ABFactory;\n","/*\n * ABFieldManager\n *\n * An interface for managing the different ABFields available in our AppBuilder.\n *\n */\n\n/*\n * Fields\n * A name => ABField  hash of the different ABFields available.\n */\nvar Fields = {};\n\nvar AllFieldClasses = [\n   require(\"../platform/dataFields/ABFieldString\"),\n   require(\"../platform/dataFields/ABFieldLongText\"),\n   require(\"../platform/dataFields/ABFieldNumber\"),\n   require(\"../platform/dataFields/ABFieldDate\"),\n   require(\"../platform/dataFields/ABFieldDateTime\"),\n   require(\"../platform/dataFields/ABFieldBoolean\"),\n   require(\"../platform/dataFields/ABFieldList\"),\n   require(\"../platform/dataFields/ABFieldTree\"),\n   require(\"../platform/dataFields/ABFieldEmail\"),\n   require(\"../platform/dataFields/ABFieldFile\"),\n   require(\"../platform/dataFields/ABFieldImage\"),\n   require(\"../platform/dataFields/ABFieldUser\"),\n   require(\"../platform/dataFields/ABFieldConnect\"),\n   require(\"../platform/dataFields/ABFieldCalculate\"),\n   require(\"../platform/dataFields/ABFieldTextFormula\"),\n   require(\"../platform/dataFields/ABFieldFormula\"),\n   require(\"../platform/dataFields/ABFieldAutoIndex\"),\n   require(\"../platform/dataFields/ABFieldJson\"),\n   require(\"../platform/dataFields/ABFieldCombine\"),\n   require(\"../platform/dataFields/ABFieldSelectivity\"),\n];\n\nAllFieldClasses.forEach((FIELD) => {\n   Fields[FIELD.defaults().key] = FIELD;\n});\n\nmodule.exports = class ABFieldManager {\n   /*\n    * @function allFields\n    * return all the currently defined ABFields in an array.\n    * @return [{ABField},...]\n    */\n   static allFields() {\n      var fields = [];\n      for (var f in Fields) {\n         fields.push(Fields[f]);\n      }\n      return fields;\n   }\n\n   /**\n    * @function fieldByKey()\n    * Return a specific ABField that matches the given key\n    * @param {string} key\n    *        The ABField.key value we are looking for.\n    * @return {ABFieldXXX || undefined}\n    */\n   static fieldByKey(key) {\n      return Fields[key];\n   }\n\n   /*\n    * @function newField\n    * return an instance of an ABField based upon the values.key value.\n    * @return {ABField}\n    */\n   static newField(values, object) {\n      if (values.key) {\n         try {\n            return new Fields[values.key](values, object);\n         } catch (err) {\n            console.log(\"Error\", err);\n            console.log(\"Available fields\", Fields);\n            console.log(\"Requested field\", values.key);\n         }\n      } else {\n         console.log(\"-------\");\n         console.log(\"values:\");\n         console.error(values);\n         console.log();\n         console.error(\"object:\");\n         console.error(object);\n         console.log(\"-------\");\n         throw new Error(\n            `ABFieldManager.newField(): Unknown Field Key [${values.name}][${values.key}] for object[${object.name}]`\n         );\n         //// TODO: what to do here?\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABHintCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"description\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      description: 'description',\n      type: 'hint',\n      settings: {\n         active: {boolean},\n         view: uuid\n      }\n    }\n    */\n\n      let active = attributes?.settings?.active ?? \"1\";\n\n      this.id = attributes?.id || \"\";\n      this.name = attributes?.name || \"New Tutorial\";\n      this.description = attributes?.description || \"\";\n      this.type = attributes?.type || \"hint\";\n      this.settings = {};\n      this.settings.active = active;\n      this.settings.transition = attributes?.settings?.transition;\n      this.settings.showIntroStep = attributes?.settings?.showIntroStep;\n      this.settings.view = attributes?.settings?.view || \"\";\n      this.stepIDs = attributes?.stepIDs || [];\n\n      let currSteps = this?._steps || {};\n      this._steps = {};\n      (attributes?.stepIDs || []).forEach((sID) => {\n         if (!sID) return;\n         var ele = this.AB.stepNew(sID, this.id);\n         if (ele) {\n            this._steps[sID] = ele;\n         }\n      });\n      if (attributes) super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"type\", \"settings\", \"stepIDs\", \"id\", \"name\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * steps()\n    * return an array of steps that match the given filter (or all steps\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABStep]}\n    */\n   steps(fn = () => true) {\n      var allSteps = Object.keys(this._steps).map((e) => {\n         return this._steps[e];\n      });\n      return allSteps.filter(fn);\n   }\n\n   /**\n    * stepAdd()\n    * insert a step to be added to this hint.\n    * @param {ABStep} element\n    *        the full instance of an ABStep to track.\n    */\n   stepAdd(step) {\n      this._steps[step.id] = step;\n   }\n\n   /**\n    * stepByID()\n    * return the {ABStep} that has the given .id\n    * @param {string} id\n    * @return {ABStep[OBJ]}\n    */\n   stepByID(id) {\n      return this._steps[id] ?? null;\n   }\n\n   /**\n    * stepRemove()\n    * remove a step from being displayed by this hint.\n    * @param {id} ABStep ID\n    *        an ID of a step\n    *        to remove.\n    */\n   stepRemove(id) {\n      // remove from stepIDs array\n      let stepIndex = this.stepIDs.indexOf(id);\n      if (stepIndex > -1) {\n         this.stepIDs.splice(stepIndex, 1);\n      }\n      // remove from _steps definitions\n      delete this._steps[id];\n   }\n};\n","const ABMLClass = require(\"../platform/ABMLClass\");\n\nmodule.exports = class ABIndexCore extends ABMLClass {\n   constructor(attributes, object) {\n      super([\"label\"], object.AB);\n      this.object = object;\n\n      this.fromValues(attributes);\n   }\n\n   fromValues(attributes) {\n      /*\n      {\n        id: uuid(),\n        name: 'name',\n        fields:[\n            {ABDataField.id}\n        ],\n        unique: {boolean}\n      }\n      */\n      this.id = attributes.id;\n      this.type = \"index\";\n      this.name = attributes.name;\n      this.unique = JSON.parse(attributes.unique || false);\n\n      // Convert to an array\n      if (attributes.fieldIDs && !Array.isArray(attributes.fieldIDs)) {\n         attributes.fieldIDs = [attributes.fieldIDs];\n      }\n\n      this._unknownFieldIDs = [];\n      this.fields = (attributes.fieldIDs || [])\n         .map((f) => {\n            let field = this.object.fieldByID(f);\n            if (!field) {\n               this._unknownFieldIDs.push(f);\n               let err = new Error(\n                  `Index[${this.name}][${this.id}] is referencing an unknown field[${f}]`\n               );\n               this.AB.notify.developer(err, {\n                  index: this.id,\n                  field: f,\n               });\n            }\n            return field;\n         })\n         .filter((fId) => fId);\n\n      if (this.fields.length == 0) {\n         let err = new Error(\n            `Index[${this.name}][${this.id}] is not referencing any fields`\n         );\n         this.AB.notify.developer(err, {\n            index: this.id,\n            attributeFieldIDs: attributes.fieldIDs || [],\n         });\n      }\n\n      // let the MLClass process the Translations\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let result = super.toObj();\n\n      result.id = this.id;\n      result.type = \"index\";\n      result.name = this.name;\n      result.unique = this.unique;\n\n      // Convert to an array\n      if (this.fields && !Array.isArray(this.fields)) {\n         this.fields = [this.fields];\n      }\n\n      result.fieldIDs = (this.fields || [])\n         .map((f) => {\n            // Convert to the id of field\n            return f.id || f;\n         })\n         .filter((fId) => fId);\n\n      // carry along the unknown Field IDs so a\n      // developer/builder can come along and trace\n      // what happened.\n      this._unknownFieldIDs.forEach((f) => {\n         result.fieldIDs.push(f);\n      });\n\n      return result;\n   }\n\n   get indexName() {\n      let tableName = this.object.dbTableName();\n\n      // Maximum 64 characters long\n      return `${tableName}_${this.name}`.replace(/ /g, \"\").substring(0, 64);\n   }\n\n   get uniqueName() {\n      let indexName = this.indexName.substring(0, 57);\n\n      return `${indexName}_unique`;\n   }\n};\n","/**\n * ABMLClassCore\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This core ABMLClass will internally track the multilingual fields\n * (this.mlFields) and auto\n */\nvar ABEmitter = require(\"../platform/ABEmitter\");\nmodule.exports = class ABMLClassCore extends ABEmitter {\n   constructor(fieldList, AB) {\n      super();\n      this.mlFields = fieldList || [\"label\"];\n      // {array}\n      // field names of values that are multilingual\n\n      this.AB = AB;\n      // {ABFactory}\n      // our common source of references for other AB objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * @method fromValues\n    * called during the .fromValues() work chain.  Should be called\n    * AFTER all the current data is already populated.\n    */\n   fromValues(attributes) {\n      this.translations = attributes.translations;\n\n      // if translations were provided\n      if (this.translations) {\n         // multilingual fields: label, description\n         this.translate();\n      } else {\n         // maybe this came from a form that has ML values in the attributes, but\n         // no .translations[] yet:\n         // check for mlFields in attributes and record them here:\n         (this.mlFields || []).forEach((field) => {\n            if (attributes[field]) {\n               this[field] = attributes[field];\n            }\n         });\n      }\n   }\n\n   /**\n    * @function defaultTranslations()\n    * return an initial .translations entry to initialize the\n    * translations values of a given translateable object.\n    * @param {array} fields  the multilingual fields this obj manages.\n    * @param {json}  values  a default set of values for this object.\n    * @return {array}  of translation entries.\n    */\n   defaultTranslations(fields, values) {\n      values = values || {};\n\n      var entry = {\n         // Question: should this be this.AB.Multilingual.currentLanguage() || \"en\"\n         // currently since the defaults are sent in programattically, we are\n         // expecting the labels to be in \"en\"\n         language_code: \"en\",\n      };\n\n      fields.forEach((f) => {\n         entry[f] = values[f] || f;\n      });\n\n      return [entry];\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return \"en\";\n   }\n\n   /**\n    * @method toObj()\n    * called during the .toObj() work chain.  Should be called\n    * BEFORE the current data is populated.\n    */\n   toObj() {\n      this.unTranslate();\n\n      return {\n         translations: this.translations,\n      };\n   }\n\n   /**\n    * @method toDefinition()\n    * convert this instance into an ABDefinition object.\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      return this.AB.definitionNew({\n         id: this.id,\n         name: this.name,\n         type: this.type,\n         json: this.toObj(),\n      });\n   }\n\n   /**\n    * @method translate\n    * Given a set of json data, pull out any multilingual translations\n    * and flatten those values to the base object.\n    * @param {obj} obj  The instance of the object being translated\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull to\n    *                       the obj[field] value.\n    */\n   translate(obj, json, fields, languageCode = null) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      if (typeof json.translations == \"string\") {\n         json.translations = JSON.parse(json.translations);\n      }\n\n      var currLanguage = languageCode || this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         // [fix] if no matching translation is in our json.translations\n         //       object, then just use the 1st one.\n         var first = null; // the first translation entry encountered\n         var found = false; // did we find a matching translation?\n\n         json.translations.forEach(function (t) {\n            if (!first) first = t;\n\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               found = true;\n\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  if (t[f] != null) obj[f] = t[f];\n\n                  obj[f] = t[f] || \"\"; // default to '' if not found.\n               });\n            }\n         });\n\n         // if !found, then use the 1st entry we did find.  prepend desired\n         // [language_code] to each of the fields.\n         if (!found && first) {\n            // copy each field to the root object\n            fields.forEach(function (f) {\n               if (first[f] != null && first[f] != \"\")\n                  obj[f] = `[${currLanguage}]${first[f]}`;\n               else obj[f] = \"\"; // default to '' if not found.\n            });\n         }\n      }\n   }\n\n   /**\n    * @method unTranslate\n    * Take the multilingual information in the base obj, and push that\n    * down into the json.translations data.\n    * @param {obj} obj  The instance of the object with the translation\n    * @param {json} json The json data being used for translation.\n    *                      There should be json.translations = [ {transEntry}, ...]\n    *                      where transEntry = {\n    *                          language_code:'en',\n    *                          field1:'value',\n    *                          ...\n    *                      }\n    * @param {array} fields an Array of multilingual fields to pull from\n    *                       the obj[field] value.\n    */\n   unTranslate(obj, json, fields) {\n      if (!obj) obj = this;\n      if (!json) json = this;\n      if (!fields) fields = this.mlFields || [];\n\n      if (!json.translations) {\n         json.translations = [];\n      }\n\n      var currLanguage = this.languageDefault();\n\n      if (fields && fields.length > 0) {\n         var foundOne = false;\n\n         json.translations.forEach(function (t) {\n            // find the translation for the current language code\n            if (t.language_code == currLanguage) {\n               // copy each field to the root object\n               fields.forEach(function (f) {\n                  // verify obj[f] is defined\n                  // --> DONT erase the existing translation\n                  if (obj[f] != null) {\n                     t[f] = obj[f];\n                  }\n               });\n\n               foundOne = true;\n            }\n         });\n\n         // if we didn't update an existing translation\n         if (!foundOne) {\n            // create a translation entry:\n            var trans = {};\n\n            // assume current languageCode:\n            trans.language_code = currLanguage;\n\n            fields.forEach(function (field) {\n               if (obj[field] != null) {\n                  trans[field] = obj[field];\n               }\n            });\n\n            json.translations.push(trans);\n         }\n      }\n   }\n};\n","//\n// ABModelCore\n//\n// Represents the Data interface for an ABObject data.\n//\n// to use an ABModel to load a DataTable:\n// Method 1:\n//  gather all the data externally and send to the DataTable\n//    Model.findAll()\n//    .then((data)=>{\n//      DataTable.parse(data);\n//    })\n//\n\nmodule.exports = class ABModelCore {\n   constructor(object) {\n      // link me to my ABObject\n      this.object = object;\n      this.AB = object.AB;\n\n      this._where = null;\n      this._sort = null;\n      this._skip = null;\n      this._limit = null;\n\n      this.staleRefreshInProcess = false;\n      this.staleRefreshMap = {\n         /* id : Promise */\n      };\n      this.staleRefreshPending = [];\n      this.staleRefreshTimerID = null;\n\n      // include this\n      this.responseContext = { key: \"--\", context: {} };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   contextKey(key) {\n      this.responseContext.key = key || \"--\";\n   }\n\n   contextValues(values) {\n      this.responseContext.context = values || {};\n   }\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      console.error(\n         \"!!! ABModelCore.request() should be overridden by platform.\"\n      );\n      return Promise.resolve();\n   }\n\n   // /**\n   //  * @method create\n   //  * update model values on the server.\n   //  */\n   // create(values) {\n\n   //   this.prepareMultilingualData(values);\n\n   //   var params = {\n   //     url: this.object.urlRest(),\n   //     params: values\n   //   }\n   //   return this.request('post', params)\n   //     .then((data) => {\n\n   //       this.normalizeData(data);\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a create event\n   //       // triggerEvent('create', this.object, data);\n\n   //     })\n   //     .catch(reject);\n\n   // }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   // delete(id) {\n\n   //   var params = {\n   //     url: this.object.urlRestItem(id)\n   //   }\n   //   return this.request('delete', params)\n   //     .then((data) => {\n\n   //       return data;\n\n   //       // FIX: now with sockets, the triggers are fired from socket updates.\n   //       // trigger a delete event\n   //       // triggerEvent('delete', this.object, id);\n\n   //     })\n   // }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   //   findAll(cond) {\n\n   //     cond = cond || {};\n\n   //     var params = {\n   //       url: this.object.urlRest(),\n   //       params: cond\n   //     }\n   //     return this.request('get', params)\n   //       .then((data) => {\n\n   //         this.normalizeData(data.data);\n\n   //         resolve(data);\n   //       })\n   //       .catch((err) => {\n   // /// TODO: this should be done in platform/ABModel:\n   //         // if (err && err.code) {\n   //         //  switch(err.code) {\n   //         //    case \"ER_PARSE_ERROR\":\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Parse Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n\n   //         //    default:\n   //         //      OP.Error.log('AppBuilder:ABModel:findAll(): Unknown Error with provided condition', { error: err, condition:cond })\n   //         //      break;\n   //         //  }\n\n   //         // }\n   // console.error(err);\n   //       })\n\n   //   }\n\n   urlParamsCreate(values) {\n      return {\n         url: this.object.urlRest(),\n         params: values,\n      };\n   }\n\n   urlParamsDelete(id) {\n      return {\n         url: this.object.urlRestItem(id),\n      };\n   }\n\n   urlParamsFind(cond) {\n      return {\n         url: this.object.urlRest(),\n         params: cond || {},\n      };\n   }\n\n   urlParamsUpdate(id, values) {\n      return {\n         url: this.object.urlRestItem(id),\n         params: values,\n      };\n   }\n\n   /**\n    * @method count\n    * count a data find with the provided condition.\n    */\n   count(cond) {\n      cond = cond || {};\n\n      var params = {\n         url: this.object.urlRestCount(),\n         params: cond,\n      };\n      return this.request(\"get\", params)\n         .then((numberOfRows) => {\n            // resolve(numberOfRows);\n            return numberOfRows;\n         })\n         .catch((err) => {\n            // TODO: this should be done in platform/ABModel\n\n            // OP.Error.log('AppBuilder:ABModel:count(): Parse Error with provided condition', { error: err, condition:cond })\n\n            // reject(err);\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method staleRefresh\n    * Process a request to refresh the data for a given entry.\n    * This method is called from a ABDataview when it receives\n    * a 'ab.datacollection.stale' message.\n    * This method will try to queue similar reqeusts and then issue 1 large\n    * request, rather than numerous individual ones.\n    * @param {obj} cond  the condition of the entry we are requesting.\n    * @return {Promise}\n    */\n   staleRefresh(cond) {\n      // cond should be { where:{ id: X } } format.\n      var PK = this.object.PK();\n\n      var currID = cond[PK]; // just in case we get a { id: X }\n      if (cond.where) {\n         currID = cond.where[PK];\n      }\n\n      return new Promise((resolve, reject) => {\n         if (!currID) {\n            var Err = new Error(\n               \"Model.staleRefresh(): could not resolve .\" + PK\n            );\n            Err.cond = cond;\n            reject(Err);\n            return;\n         }\n\n         // convert to PK : Promise object:\n         var entry = {\n            resolve: resolve,\n            reject: reject,\n         };\n         entry[PK] = currID;\n\n         // queue up refresh condition\n         this.staleRefreshPending.push(entry);\n\n         // if ! staleRefreshInProcess\n         if (!this.staleRefreshInProcess) {\n            // set timeout to another 200ms wait after LAST staleRefresh()\n            if (this.staleRefreshTimerID) {\n               clearTimeout(this.staleRefreshTimerID);\n            }\n            this.staleRefreshTimerID = setTimeout(() => {\n               this.staleRefreshProcess();\n            }, 200);\n         }\n      });\n   }\n\n   /**\n    * @method staleRefreshProcess\n    * Actually process the current pending requests.\n    */\n   staleRefreshProcess() {\n      this.staleRefreshInProcess = true;\n      var currentEntries = this.staleRefreshPending;\n      this.staleRefreshPending = [];\n      var PK = this.object.PK();\n\n      var responseHash = {\n         /* id : [{entry}] */\n      };\n      var cond = { where: {}, populate: true };\n      cond.where[PK] = [];\n\n      console.log(\n         \"Model.staleRefreshProcess(): buffered \" +\n            currentEntries.length +\n            \" requests\"\n      );\n      currentEntries.forEach((e) => {\n         responseHash[e[PK]] = responseHash[e[PK]] || [];\n         responseHash[e[PK]].push(e);\n      });\n\n      cond.where[PK] = Object.keys(responseHash);\n\n      this.findAll(cond).then((res) => {\n         // for each entry we got back\n         if (Array.isArray(res.data) && res.data.length) {\n            res.data.forEach((data) => {\n               // find it's matching request:\n               if (responseHash[data[PK]]) {\n                  // respond to the pending promise\n                  // and remove these entries from responseHash\n                  var entries = responseHash[data[PK]];\n                  entries.forEach((entry) => {\n                     var resolve = entry.resolve;\n                     resolve({ data: [data] });\n                  });\n\n                  delete responseHash[data[PK]];\n               } else {\n                  console.error(\n                     \"Model.staleRefreshProcess(): returned entry was not in our responseHash:\",\n                     data,\n                     responseHash\n                  );\n               }\n            });\n         }\n\n         // now if there are any entries left in responseHash,\n         // respond with an empty entry:\n         var allKeys = Object.keys(responseHash);\n         if (allKeys.length > 0) {\n            console.warn(\n               \"Model.staleRefreshProcess(): \" +\n                  allKeys.length +\n                  \" entries with no responses. \"\n            );\n         }\n         allKeys.forEach((key) => {\n            let entry = responseHash[key];\n            let resolve;\n            if (Array.isArray(entry)) {\n               resolve = entry[0].resolve;\n            } else {\n               resolve = entry.resolve;\n            }\n            resolve({ data: [] });\n            delete responseHash[key];\n         });\n\n         // now check to see if there are any more pending requests:\n         if (this.staleRefreshPending.length > 0) {\n            // process them:\n            this.staleRefreshProcess();\n         } else {\n            // mark we are no longer processing stale requests.\n            this.staleRefreshInProcess = false;\n         }\n      });\n   }\n\n   /**\n     * @method findConnected\n     * return the connected data associated with an instance of this model.\n     *\n     * to limit the result to only a single connected column:\n     *    model.findConnected( 'col1', {data})\n     *    then ((data) => {\n     *      // data = [{obj1}, {obj2}, ... {objN}]\n     *    })\n     *\n     * To find >1 connected field data:\n     *    model.findConnected( ['col1', 'col2'], {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     col1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     col2 : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n     *\n     * To find all connected field data:\n     *    model.findConnected( {data} )\n     *    .then((data) =>{\n     *    \n     *      // data = {\n     *      //     connectedColName1 : [{obj1}, {obj2}, ... {objN}],\n     *      //     connectedColName2 : [{obj1}, {obj2}, ... {objN}],\n     *      //    ...\n     *      //     connectedColNameN : [{obj1}, {obj2}, ... {objN}]\n     *      // }\n     *    })\n\n     * @param {string/array} fields  [optional] an array of connected fields you want to return.\n     * @param {obj} data  the current object instance (data) to lookup\n     * @return {Promise}\n     */\n   findConnected(fields, data) {\n      if (typeof data == \"undefined\") {\n         if (!Array.isArray(fields) && typeof fields == \"object\") {\n            data = fields;\n            fields = []; // return all fields\n         }\n      }\n\n      if (typeof fields == \"string\") {\n         fields = [fields]; // convert to an array of values\n      }\n\n      return new Promise((resolve, reject) => {\n         // sanity checking:\n         if (!data.id) {\n            // I can't find any connected items, if I can't find this one:\n            resolve(null);\n            return;\n         }\n\n         let cond = {};\n         cond[this.object.PK()] = data.id;\n         this.findAll({ where: cond, populate: true })\n            .then((results) => {\n               if (\n                  !results.data ||\n                  !Array.isArray(results.data) ||\n                  results.data.length == 0\n               ) {\n                  resolve([]); // no data to return.\n                  return;\n               }\n\n               // work with the first object.\n               var myObj = results.data[0];\n\n               // if only 1 field requested, then return that\n               if (fields.length == 1) {\n                  let data =\n                     myObj[\n                        fields[0].replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"\n                     ];\n                  if (!data) return resolve([]);\n\n                  if (!Array.isArray(data)) data = [data];\n\n                  resolve(data);\n                  return;\n               }\n\n               // if no fields requested, return them all:\n               if (fields.length == 0) {\n                  var allFields = this.object.fields((f) => {\n                     return f.settings.linkType;\n                  });\n                  allFields.forEach((f) => {\n                     fields.push(f.columnName);\n                  });\n               }\n\n               var returnData = {};\n               fields.forEach((colName) => {\n                  returnData[colName] =\n                     myObj[colName.replace(/[^a-z0-9.]/gi, \"\") + \"__relation\"];\n               });\n\n               resolve(returnData);\n            })\n            .catch((err) => {\n               console.error(\"!!! error with findConnected() attempt:\", err);\n               reject(err);\n            });\n      });\n   }\n\n   // /**\n   //  * @method loadInto\n   //  * loads the current values into the provided Webix DataTable\n   //  * @param {DataTable} DT  A Webix component that can dynamically load data.\n   //  */\n   // loadInto(DT) {\n\n   //   // if a limit was applied, then this component should be loading dynamically\n   //   if (this._limit) {\n\n   //     DT.define('datafetch', this._limit);\n   //     DT.define('datathrottle', 250);  // 250ms???\n\n   //     // catch the event where data is requested:\n   //     // here we will do our own findAll() so we can persist\n   //     // the provided .where condition.\n\n   //     // oh yeah, and make sure to remove any existing event handler when we\n   //     // perform a new .loadInto()\n   //     DT.___AD = DT.___AD || {};\n   //     if (DT.___AD.onDataRequestEvent) {\n   //       DT.detachEvent(DT.___AD.onDataRequestEvent);\n   //     }\n   //     DT.___AD.onDataRequestEvent = DT.attachEvent(\"onDataRequest\", (start, count) => {\n\n   //       var cond = {\n   //         where: this._where,\n   //         sort: this._sort,\n   //         limit: count,\n   //         skip: start\n   //       }\n\n   //       if (DT.showProgress)\n   //         DT.showProgress({ type: \"icon\" });\n\n   //       this.findAll(cond)\n   //         .then((data) => {\n   //           data.data.forEach((item) => {\n   //             if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //               item.$height = parseInt(item.properties.height);\n   //             } else if (parseInt(this._where.height) > 0) {\n   //               item.$height = parseInt(this._where.height)\n   //             }\n   //           });\n   //           DT.parse(data);\n\n   //           if (DT.hideProgress)\n   //             DT.hideProgress();\n\n   //         })\n\n   //       return false; // <-- prevent the default \"onDataRequest\"\n   //     });\n\n   //     DT.refresh();\n   //   }\n\n   //   // else just load it all at once:\n   //   var cond = {};\n   //   if (this._where) cond.where = this._where;\n   //   if (this._sort) cond.sort = this._sort;\n   //   if (this._limit != null) cond.limit = this._limit;\n   //   if (this._skip != null) cond.skip = this._skip;\n\n   //   if (DT.showProgress)\n   //     DT.showProgress({ type: \"icon\" });\n\n   //   this.findAll(cond)\n   //     .then((data) => {\n   //       data.data.forEach((item) => {\n   //         if (item.properties != null && item.properties.height != \"undefined\" && parseInt(item.properties.height) > 0) {\n   //           item.$height = parseInt(item.properties.height);\n   //         } else if (parseInt(this._where.height) > 0) {\n   //           item.$height = parseInt(this._where.height)\n   //         }\n   //       });\n   //       DT.parse(data);\n\n   //       if (DT.hideProgress)\n   //         DT.hideProgress();\n\n   //     })\n   //     .catch((err) => {\n   //       console.error('!!!!!', err);\n   //     })\n\n   // }\n\n   // /**\n   //  * @method limit\n   //  * set the limit value for this set of data\n   //  * @param {integer} limit  the number or elements to return in this call\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // limit(limit) {\n   //   this._limit = limit;\n   //   return this;\n   // }\n\n   // /**\n   //  * @method skip\n   //  * set the skip value for this set of data\n   //  * @param {integer} skip  the number or elements to skip\n   //  * @return {ABModel} this object that is chainable.\n   //  */\n   // skip(skip) {\n   //   this._skip = skip;\n   //   return this;\n   // }\n\n   //   /**\n   //    * @method update\n   //    * update model values on the server.\n   //    */\n   //   update(id, values) {\n\n   //     this.prepareMultilingualData(values);\n\n   //     // remove empty properties\n   //     for (var key in values) {\n   //       if (values[key] == null)\n   //         delete values[key];\n   //     }\n\n   //     var params = {\n   //       url: this.object.urlRestItem(id),\n   //       params: values\n   //     }\n   //     return this.request('put', params)\n   //       .then((data) => {\n\n   //         // .data is an empty object ??\n\n   //         this.normalizeData(data);\n\n   //         return data;\n\n   //         // FIX: now with sockets, the triggers are fired from socket updates.\n   //         // trigger a update event\n   //         // triggerEvent('update', this.object, data);\n\n   //       })\n   //       .catch((err)=>{\n   // console.error(err);\n   //       });\n\n   //   }\n\n   /**\n    * @method upsert\n    * upsert model values on the server.\n    */\n   upsert(values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      var params = {\n         url: this.object.urlRest(),\n         params: values,\n      };\n      return this.request(\"put\", params)\n         .then((data) => {\n            // .data is an empty object ??\n\n            this.normalizeData(data);\n\n            return data;\n\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a update event\n            // triggerEvent('update', this.object, data);\n         })\n         .catch((err) => {\n            console.error(err);\n         });\n   }\n\n   /**\n    * @method where\n    * set the where condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   where(cond) {\n      this._where = cond;\n      return this;\n   }\n\n   /**\n    * @method where\n    * set the sort condition for the data being loaded.\n    * @param {json} cond  the json condition statement.\n    * @return {ABModel} this object that is chainable.\n    */\n   sort(cond) {\n      this._sort = cond;\n      return this;\n   }\n\n   /**\n    * @method refresh\n    * refresh model definition on the server.\n    */\n   refresh() {\n      console.error(\"!!! Depreciated: where is this being called from?\");\n      return Promise.resolve();\n\n      // var params = {\n      //    url: this.object.urlRestRefresh(),\n      // };\n      // return this.request(\"put\", params);\n   }\n\n   normalizeData(data) {\n      // convert to array\n      if (!(data instanceof Array)) data = [data];\n\n      // find all connected fields\n      var connectedFields = this.object.connectFields();\n\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n\n      // if this object has some date fields, convert the data to date object:\n      var dateFields =\n         this.object.fields(function (f) {\n            return f.key == \"date\" || f.key == \"datetime\";\n         }) || [];\n\n      // calculate fields\n      var calculatedFields = this.object.fields((f) => f.key == \"calculate\");\n\n      data.forEach((d) => {\n         if (d == null) return;\n\n         // various PK name\n         if (!d.id && this.object.PK() != \"id\") d.id = d[this.object.PK()];\n\n         // loop through data's connected fields\n         connectedFields.forEach((c) => {\n            // get the relation name so we can change the original object\n            var relationName = c.relationName();\n\n            // if (d[c.columnName] == null)\n            //  d[c.columnName] = '';\n\n            // if there is no data we can exit now\n            if (d[relationName] == null) return;\n\n            // if relation data is still a string and isn't empty\n            if (\n               typeof d[relationName] == \"string\" &&\n               d[relationName].length > 0\n            ) {\n               // parse the string into an object\n               d[relationName] = JSON.parse(d[relationName]);\n            }\n\n            // if the data is an array we need to loop through it\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((r) => {\n                  // if translations are present and they are still a string\n                  if (r.translations && typeof r.translations == \"string\") {\n                     // parse the string into an object\n                     r.translations = JSON.parse(r.translations);\n                  }\n               });\n               // if the data is not an array it is a single item...check that has translations and it is a string\n            } else if (\n               d[relationName].translations &&\n               typeof d[relationName].translations == \"string\"\n            ) {\n               // if so parse the string into an object\n               d[relationName].translations = JSON.parse(\n                  d[relationName].translations\n               );\n            }\n\n            // set .id to relation columns\n            let objectLink = c.datasourceLink;\n\n            // if we didn't get the linked object, just return.\n            if (!objectLink) return;\n\n            let olPK = objectLink.PK();\n            var relatedMlFields = objectLink.multilingualFields();\n\n            if (Array.isArray(d[relationName])) {\n               d[relationName].forEach((subData) => {\n                  // update .id values\n                  // if (olPK != \"id\" && subData[olPK]) subData.id = subData[olPK];\n                  const relationValue = c.getRelationValue(subData);\n                  if (olPK != \"id\") subData.id = relationValue;\n\n                  // perform Translation\n                  if (relatedMlFields.length) {\n                     objectLink.translate(subData, subData, relatedMlFields);\n                  }\n               });\n            } else {\n               // update .id value\n               // if (d[relationName][olPK]) {\n               //    d[relationName].id = d[relationName][olPK];\n               // }\n               const relationValue = c.getRelationValue(d[relationName]);\n               if (relationValue) {\n                  d[relationName].id = relationValue;\n               }\n\n               // perform Translation\n               if (relatedMlFields.length) {\n                  objectLink.translate(\n                     d[relationName],\n                     d[relationName],\n                     relatedMlFields\n                  );\n               }\n            }\n\n            // if (\n            //    objectLink &&\n            //    olPK != \"id\" &&\n            //    d[relationName] &&\n            //    !d[relationName].id\n            // ) {\n            //    // is array\n            //    if (d[relationName].forEach) {\n            //       d[relationName].forEach((subData) => {\n            //          if (subData[olPK]) subData.id = subData[olPK];\n            //       });\n            //    } else if (d[relationName][olPK]) {\n            //       d[relationName].id = d[relationName][olPK];\n            //    }\n            // }\n\n            // if (relatedMlFields.length) {\n            //    d[relationName];\n            //    objectLink.translate(\n            //       d[relationName],\n            //       d[relationName],\n            //       relatedMlFields\n            //    );\n            // }\n\n            // Change property name of connected field\n            if (!d[c.columnName]) {\n               if (c.linkType() == \"one\") {\n                  if (d[relationName]) {\n                     // d[c.columnName] = d[relationName][olPK];\n                     d[c.columnName] = c.getRelationValue(d[relationName]);\n                  } else {\n                     d[c.columnName] = null;\n                  }\n               } else {\n                  if (d[relationName]) {\n                     if (Array.isArray(d[relationName])) {\n                        try {\n                           d[c.columnName] = (d[relationName] || []).map(\n                              // (i) => i[olPK]\n                              (i) => c.getRelationValue(i)\n                           );\n                        } catch (e) {\n                           console.log(\"+++++++++++++++\");\n                           console.log(`ID:[${c.id}]`);\n                           console.log(`ColumnName:[${c.label}]`);\n                           console.log(`relationName:[${relationName}]`);\n                           console.log(`linkType:[${c.linkType()}]`);\n                           console.log(\"data:\");\n                           console.log(JSON.stringify(d[relationName]));\n                           console.log(\"+++++++++++++++\");\n                        }\n                     } else {\n                        // this is strange: supposed to be \"many\" but coming in\n                        // as \"one\"\n                        console.log(\"+++++++++++++++\");\n                        console.log(`ID:[${c.id}]`);\n                        console.log(`ColumnName:[${c.label}]`);\n                        console.log(`relationName:[${relationName}]`);\n                        console.log(`linkType:[${c.linkType()}]`);\n                        console.log(\"data:\");\n                        console.log(JSON.stringify(d[relationName]));\n                        console.log(\"+++++++++++++++\");\n                        // d[c.columnName] = [d[relationName][olPK]];\n                        d[c.columnName] = [c.getRelationValue(d[relationName])];\n                     }\n                  } else {\n                     d[c.columnName] = [];\n                  }\n               }\n            }\n         });\n\n         if (mlFields.length) {\n            this.object.translate(d, d, mlFields);\n         }\n\n         // convert the data to date object\n         dateFields.forEach((date) => {\n            if (d && d[date.columnName] != null) {\n               // check to see if data has already been converted to a date object\n               if (typeof d[date.columnName] == \"string\") {\n                  if (date.key == \"date\") {\n                     // if we are ignoring the time it means we ignore timezone as well\n                     // so lets trim that off when creating the date so it can be a simple date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName],\n                        {\n                           format: \"MM/DD/YYYY\",\n                           ignoreTime: true,\n                        }\n                     );\n                  } else {\n                     // Convert UTC to Date\n                     d[date.columnName] = this.AB.rules.toDate(\n                        d[date.columnName]\n                     );\n                     // d[date.columnName] = new Date(moment(d[date.columnName]));\n                  }\n               }\n            }\n         });\n\n         calculatedFields.forEach((calField) => {\n            d[calField.columnName] = calField.format(d);\n         });\n      });\n   }\n};\n","const ABObject = require(\"../platform/ABObject\");\nconst ABModelApi = require(\"../platform/ABModelApi\");\n\nmodule.exports = class ABObjectApiCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this.isAPI = true;\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.readonly = parseInt(attributes.readonly) || 0;\n      this.apiType = attributes.apiType || \"Read\";\n      this.request = attributes.request ?? {};\n      this.request.headers = attributes.request?.headers ?? [];\n      this.response = attributes.response ?? {};\n      this.response.fields = attributes.response?.fields ?? [];\n      this.isFetched = attributes.isFetched ?? false;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const result = super.toObj();\n\n      result.isAPI = this.isAPI;\n      result.readonly = this.readonly;\n      result.apiType = this.apiType;\n      result.request = this.request ?? {};\n      result.request.headers = this.request?.headers ?? [];\n      result.response = this.response ?? {};\n      result.response.fields = this.response?.fields ?? [];\n      result.isFetched = this.isFetched;\n\n      return result;\n   }\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelApi(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @function getPagingValues()\n    *\n    * @return {Object} - {\n    *                       start: \"Property name of the API for start index\",\n    *                       limit: \"Property name of the API for limit return the item number\"\n    *                     }\n    */\n   getPagingValues({ skip, limit }) {\n      const result = {};\n      const pagingSettings = this.request?.paging ?? {};\n\n      if (pagingSettings.start && skip != null) {\n         result[pagingSettings.start] = skip;\n      }\n      if (pagingSettings.limit && limit != null) {\n         result[pagingSettings.limit] = limit;\n      }\n\n      return result;\n   }\n\n   dataFromKey(data) {\n      let result = [];\n\n      if (!Array.isArray(data)) data = [data];\n\n      data.forEach((item) => {\n         // Clone item\n         let itemResult = { ...item };\n\n         // Pull data from `Data key` of the API object\n         // FORMAT: \"Property.Name.Value\"\n         (this.response.dataKey ?? \"\").split(\".\").forEach((key) => {\n            if (key == \"\" || key == null) return;\n            itemResult = itemResult?.[key];\n         });\n\n         if (Array.isArray(itemResult)) {\n            result = result.concat(itemResult);\n         } else if (itemResult) {\n            result.push(itemResult);\n         }\n      });\n\n      return result;\n   }\n\n   get headers() {\n      const headers = {};\n\n      (this.request.headers ?? []).forEach((header) => {\n         if (header?.value == null) return;\n\n         headers[header.key] = header.value;\n      });\n\n      return headers;\n   }\n};\n","/**\n * ABObjectCore\n *\n * Manage the loading of specific ABObject data into useable objects\n * that can instantiate themselves and provide field and model resources.\n */\n\nvar ABModel = require(\"../platform/ABModel\");\nvar ABMLClass = require(\"../platform/ABMLClass\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABObjectCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      /*\n{\n\tid: uuid(),\n\tconnName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tlabelSettings: Object,\n\tisImported: 1/0,\n\tisExternal: 1/0,\n\ttableName:'string',  // NOTE: store table name of import object to ignore async\n\tprimaryColumnName: 'string', // NOTE: store column name of PK\n\ttransColumnName: 'string', // NOTE: store column name of translations table\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:\t ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\tfields:[\n\t\t{ABDataField}\n   ],\n   indexes: [\n      {ABIndex}\n   ]\n}\n*/\n\n      this.fromValues(attributes);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object. These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static contextKey() {\n      return \"object\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            connName: 'string', // Sails DB connection name: 'appdev_default', 'legacy_hris', etc. Default is 'appBuilder'.\n            name: 'name',\n            labelFormat: 'xxxxx',\n            labelSettings: Object,\n            isImported: 1/0,\n            isExternal: 1/0,\n            tableName:'string',  // NOTE: store table name of import object to ignore async\n            primaryColumnName: 'string', // NOTE: store column name of PK\n            transColumnName: 'string', // NOTE: store column name of translations table\n            urlPath:'string',\n            importFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n                                        // to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n            translations:[\n                {}\n            ],\n            fields:[\n                {ABDataField}\n            ],\n            indexes: [\n               {ABIndex}\n            ]\n        }\n        */\n\n      this.id = attributes.id;\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = attributes.type || \"object\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.connName = attributes.connName || undefined; // undefined == 'appBuilder'\n      // {string} .connName\n      // the sails.config.connections[connName] configuration reference.\n      // if not set ({undefined}), then our default \"appBuilder\" config is used\n\n      this.name = attributes.name || \"\";\n      // {string} .name\n      // A name reference for this ABObject. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      this.labelFormat = attributes.labelFormat || \"\";\n      // {string} .labelFormat\n      // A string template for how to display an entry for this ABObject in\n      // common UI elements like grids, lists, etc...\n\n      this.labelSettings = attributes.labelSettings || {};\n      // {Object} .labelSettings\n\n      this.labelSettings.isNoLabelDisplay = parseInt(\n         this.labelSettings.isNoLabelDisplay || 0\n      );\n      // {bool} .isNoLabelDisplay\n\n      this.isImported = parseInt(attributes.isImported || 0);\n      // {depreciated}\n      // {bool} .isImported\n      // previously used to mark ABObjects that were created in other\n      // ABApplicaitons.  No longer relevant with Global ABObjects\n\n      this.isExternal = parseInt(attributes.isExternal || 0);\n      // {bool} .isExternal\n      // Marks this ABObject as referencing a pre-existing table in the DB that\n      // we are treating as an ABObject.\n      // These objects are not allowed to create/update/destroy the db table\n      // nor can we add/remove fields.\n      // However we are able to customize the Field definitions to change the\n      // column names, hidden attributes, Object label, etc...\n      // We can update our Defintion attributes, but not any actual DB changes.\n\n      this.tableName = attributes.tableName || \"\"; // NOTE: store table name of import object to ignore async\n      // {string} .tableName\n      // the `{database}.{tableName}` of the db table that this ABObject's data\n      // is stored in.\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.tableName = this.tableName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n\n      this.primaryColumnName = attributes.primaryColumnName || \"\"; // NOTE: store column name of PK\n      // {string} .primaryColumnName\n      // is the col_name of which key is the primary key.  By default it is\n      // \"uuid\", but in some external objects this might be something else\n      // (\"id\", \"ren_id\", etc...).\n\n      this.transColumnName = attributes.transColumnName || \"\"; // NOTE: store column name of translations table\n      // {string} .transColumnName\n      // this is a workaround to include hris_ren_data and hris_ren_trans data\n\n      this.urlPath = attributes.urlPath || \"\";\n\n      // this.importFromObject = attributes.importFromObject || \"\";\n\n      this.isSystemObject = attributes.isSystemObject;\n      // {bool} .isSystemObject\n      // We are now storing some of our System Required Data as ABObjects as well.\n      // These Objects should not be allowed to be modified by typical AppBuilder\n      // designer.  However we can enable a mode for AB Designer to then expand these\n      // ABObjects, and eventually we can use the AppBuilder to Create the AppBuilder.\n      if (\n         typeof this.isSystemObject == \"undefined\" ||\n         this.isSystemObject == \"false\"\n      ) {\n         this.isSystemObject = false;\n      }\n\n      this.createdInAppID = attributes.createdInAppID;\n      // {string} .createdInAppID\n      // the .id of the ABApplication that originally created this ABObject.\n\n      // if attributes.objectWorkspace DOES exist, make sure it is fully\n      // populated.\n      if (typeof attributes.objectWorkspace != \"undefined\") {\n         if (typeof attributes.objectWorkspace.sortFields == \"undefined\")\n            attributes.objectWorkspace.sortFields = [];\n         if (typeof attributes.objectWorkspace.filterConditions == \"undefined\")\n            attributes.objectWorkspace.filterConditions = [];\n         if (typeof attributes.objectWorkspace.frozenColumnID == \"undefined\")\n            attributes.objectWorkspace.frozenColumnID = \"\";\n         if (typeof attributes.objectWorkspace.hiddenFields == \"undefined\")\n            attributes.objectWorkspace.hiddenFields = [];\n      }\n      this.objectWorkspace = attributes.objectWorkspace || {\n         sortFields: [], // array of columns with their sort configurations\n         filterConditions: [], // array of filters to apply to the data table\n         frozenColumnID: \"\", // id of column you want to stop freezing\n         hiddenFields: [], // array of [ids] to add hidden:true to\n      };\n      // {obj} .objectWorkspace\n      // When in the ABObject editor in the AppBuilder Designer, different\n      // views of the information can be created.  These views are stored here\n      // and are avaiable to other users in the Designer.\n\n      // pull in field definitions:\n      var fields = [];\n      this.fieldIDs = attributes.fieldIDs || [];\n      // {array}  [ ABField.id, ... ]\n      // this is a collection of ALL the ABFields this object references.\n      // This will include ABFields that were directly created for this object\n      // and will include ABFields that were imported.\n\n      this.importedFieldIDs = attributes.importedFieldIDs || [];\n      // {array} [ ABField.id, ... ]\n      // this is a collection of the ABFields in our .fieldIDs that were\n      // IMPORTED.\n\n      this._unknownFieldIDs = [];\n      this.fieldIDs.forEach((id) => {\n         if (!id) return;\n\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._fields = fields;\n\n      // pull in index definitions:\n      this.importIndexes(attributes.indexIDs);\n\n      // let the MLClass now process the translations:\n      super.fromValues(attributes);\n   }\n\n   /**\n    * @method importIndexes\n    * instantiate a set of indexes from the given ids.\n    * @param {array} indexIDs The different ABDefinition IDs for each index\n    *        [ \"uuid11\", \"uuid2\", ... \"uuidN\" ]\n    */\n   importIndexes(indexIDs) {\n      this._unknownIndex = [];\n      var indexes = [];\n      (indexIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            indexes.push(this.AB.indexNew(def, this));\n         } else {\n            this._unknownIndex.push(id);\n            let err = new Error(\n               `O[${this.name}] is referenceing an unknown index id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      });\n      this._indexes = indexes;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   // exportFields() {\n   //     var currFields = [];\n   //     this._fields.forEach((obj) => {\n   //         currFields.push(obj.toObj());\n   //     });\n   //     return currFields;\n   // }\n\n   // /**\n   //  * @method exportFields\n   //  * convert our array of fields into a settings object for saving to disk.\n   //  * @return {array}\n   //  */\n   // exportIndexes() {\n   //    var currIndexes = [];\n   //    this._indexes.forEach((idx) => {\n   //       currIndexes.push(idx.toObj());\n   //    });\n   //    return currIndexes;\n   // }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      // track the field .ids of our fields\n      var fieldIDs = this.fields().map((f) => f.id);\n      (this._unknownFieldIDs || []).forEach((id) => {\n         fieldIDs.push(id);\n      });\n      // NOTE: we keep the ._unknownFieldIDs so a developer/builder\n      // can come back and track down what happened to the missing\n      // ids.\n\n      // track the index .ids of our indexes\n      var indexIDs = this.indexes().map((f) => f.id);\n      (this._unknownIndex || []).forEach((id) => {\n         indexIDs.push(id);\n      });\n\n      return {\n         id: this.id,\n         type: this.type || \"object\",\n         connName: this.connName,\n         name: this.name,\n         labelFormat: this.labelFormat,\n         labelSettings: this.labelSettings || {},\n         isImported: this.isImported,\n         isExternal: this.isExternal,\n         tableName: this.tableName,\n         // NOTE: store table name of import object to ignore async\n         primaryColumnName: this.primaryColumnName,\n         // NOTE: store column name of PK\n         transColumnName: this.transColumnName,\n         // NOTE: store column name of translations table\n         urlPath: this.urlPath,\n         // importFromObject: this.importFromObject,\n         objectWorkspace: this.objectWorkspace,\n         isSystemObject: this.isSystemObject,\n\n         translations: obj.translations,\n         fieldIDs: fieldIDs,\n         importedFieldIDs: this.importedFieldIDs,\n         indexIDs: indexIDs,\n         createdInAppID: this.createdInAppID,\n      };\n   }\n\n   ///\n   /// Objects\n   ///\n\n   /**\n    * @method objectLinks()\n    *\n    *  return an array of ABObject that's connected.\n    *\n    * @param {object} filter\n    * @return {array} - An array of ABObject\n    */\n   objectLinks(/* filter */) {\n      var connectFields = this.connectFields();\n\n      return connectFields.map((f) => f.datasourceLink);\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method fields()\n    * return an array of all the ABFields for this ABObject.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array[ABFieldxxx]}\n    */\n   fields(fn = () => true) {\n      return this._fields.filter(fn);\n   }\n\n   /**\n    * @method fieldByID()\n    * return the object's field from the given {ABField.id}\n    * @param {string} id\n    *        the uuid of the field to return.\n    * @return {ABFieldxxx}\n    */\n   fieldByID(id) {\n      return this.fields((f) => f?.id == id)[0];\n   }\n\n   /**\n    * @method connectFields()\n    *\n    * return an array of the ABFieldConnect that is connect object fields.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   connectFields(fn = () => true) {\n      return this.fields((f) => f && f.isConnection).filter(fn);\n   }\n\n   /**\n    * @method fieldImport\n    * register the given ABField.id as an imported field for this ABObject.\n    * The ABField definition should be available before making this call.\n    * After this call, the ABField is included in the ABObject, but the ABObject\n    * has NOT been saved.\n    * @param {ABField} fieldID The ABDefinition.id for a field that is imported\n    *        into this object.\n    */\n   fieldImport(id) {\n      if (!id) return;\n\n      if (this.importedFieldIDs.indexOf(id) == -1) {\n         this.importedFieldIDs.push(id);\n      }\n\n      // just to be safe:\n      var isThere = this._fields.find((f) => f.id == id);\n      if (!isThere) {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            this._fields.push(this.AB.fieldNew(def, this));\n         } else {\n            this._unknownFieldIDs = this._unknownFieldIDs || [];\n            this._unknownFieldIDs.push(id);\n            let err = new Error(\n               `O[${this.name}] is importing an unknown field id[${id}]`\n            );\n            this.AB.notify.builder(err, {\n               field: { id, object: { id: this.id, name: this.name } },\n            });\n         }\n      }\n   }\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @return {ABField}\n    */\n   fieldNew(values) {\n      return this.AB.fieldNew(values, this);\n   }\n\n   /**\n    * @method fieldRemove()\n    *\n    * remove the given ABField from our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldRemove(field) {\n      var origLen = this._fields.length;\n      this._fields = this.fields(function (o) {\n         return o.id != field.id;\n      });\n\n      // be sure to remove this from our imported ids if it was\n      // listed there.\n      this.importedFieldIDs = this.importedFieldIDs.filter(\n         (fid) => fid != field.id\n      );\n\n      if (this._fields.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldReorder()\n    *\n    * reorder the fields in our object\n    *\n    * @param {ABField} field The instance of the field to remove.\n    * @return {Promise}\n    */\n   fieldReorder(sourceId, targetId) {\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == sourceId) {\n            itemMoved = this._fields[i];\n            this._fields.splice(i, 1);\n            oPos = i;\n            break;\n         }\n      }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (var j = 0; j < this._fields.length; j++) {\n         if (this._fields[j].columnName == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) {\n               j++;\n            }\n            this._fields.splice(j, 0, itemMoved);\n            break;\n         }\n      }\n\n      return this.save();\n   }\n\n   /**\n    * @method fieldSave()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldSave(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         this._fields.push(field);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method fieldAdd()\n    *\n    * save the given ABField in our ._fields array and persist the current\n    * values if they changed.\n    *\n    * @param {ABField} field The instance of the field to save.\n    * @return {Promise}\n    */\n   fieldAdd(field) {\n      var isIncluded = this.fieldByID(field.id);\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._fields.push(field);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method imageFields()\n    *\n    * return an array of the ABFieldImage fields this object has.\n    * @param {fn} fn\n    *        a filter function that returns {true} if a value should\n    *        be included, or {false} otherwise.\n    * @return {array}\n    */\n   imageFields(fn = () => true) {\n      return this.fields((f) => f && f.key == \"image\").filter(fn);\n   }\n\n   /**\n    * @method multilingualFields()\n    *\n    * return an array of columnnames that are multilingual.\n    *\n    * @return {array}\n    */\n   multilingualFields() {\n      return this.fields((f) => f && f.isMultilingual).map((f) => f.columnName);\n   }\n\n   /**\n    * @method indexes()\n    *\n    * return an array of all the ABIndex for this ABObject.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   indexes(filter = () => true) {\n      return this._indexes.filter(filter);\n   }\n\n   /**\n    * @method indexByID()\n    * return the object's index from the given {ABIndex.id}\n    * @param {string} id\n    *        the id of the ABIndex to return.\n    * @return {ABIndex}\n    */\n   indexByID(id) {\n      return this.indexes((f) => f.id == id)[0];\n   }\n\n   /**\n    * @method indexRemove()\n    * remove the given ABIndex from our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexRemove(index) {\n      var origLen = this._indexes.length;\n      this._indexes = this.indexes(function (idx) {\n         return idx.id != index.id;\n      });\n\n      // persist our changes if something changed.\n      if (origLen != this._indexes.length) {\n         return this.save();\n      }\n\n      // nothing was removed, so continue on.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method indexSave()\n    * save the given ABIndex in our ._indexes array and persist the current\n    * values.\n    * @param {ABIndex} index\n    * @return {Promise}\n    */\n   indexSave(index) {\n      var isIncluded = this.indexByID(index.id);\n      if (!isIncluded) {\n         this._indexes.push(index);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   ///\n   /// Working with data from server\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObject.\n    */\n   model() {\n      var model = new ABModel(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(ABObjectCore.contextKey());\n      model.contextValues({ id: this.id });\n\n      return model;\n   }\n\n   ///\n   /// URL\n   ///\n\n   /**\n    * @method urlRest\n    * return the url to access the data for this object.\n    * @return {string}\n    */\n   urlRest() {\n      return `/app_builder/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestBatch\n    * return the url to use for batch creates for this object\n    * @return {string}\n    */\n   urlRestBatch() {\n      return `/app_builder/batch/model/${this.id}`;\n   }\n\n   /**\n    * @method urlRestItem\n    * return the url to access the data for an instance of this object.\n    * @return {string}\n    */\n   urlRestItem(id) {\n      return `/app_builder/model/${this.id}/${id}`;\n   }\n\n   /**\n    * @method urlRestLog\n    * return the url to access the logs for this ABObject.\n    * @return {string}\n    */\n   urlRestLog() {\n      return `/app_builder/object/${this.id}/track`;\n   }\n\n   /**\n    * @method urlRestRefresh\n    * return the url to signal a refresh for this object.\n    * @return {string}\n    */\n   urlRestRefresh() {\n      return `/app_builder/model/refreshobject/${this.id}`;\n   }\n\n   /**\n    * @method urlCount\n    * return the url to count of data for this object.\n    * @return {string}\n    */\n   urlRestCount() {\n      return `/app_builder/model/${this.id}/count`;\n   }\n\n   ///\n   ///\tObject Workspace Settings\n   ///\n   get workspaceSortFields() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.sortFields;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.sortFields;\n      }\n   }\n\n   set workspaceSortFields(fields) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.sortFields = fields;\n      }\n      // old version\n      else {\n         this.objectWorkspace.sortFields = fields;\n      }\n   }\n\n   get workspaceFilterConditions() {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) return currView.filterConditions;\n         else return null;\n      }\n      // old version\n      else {\n         return this.objectWorkspace.filterConditions;\n      }\n   }\n\n   set workspaceFilterConditions(filterConditions) {\n      // new version\n      if (this.workspaceViews) {\n         let currView = this.workspaceViews.getCurrentView();\n         if (currView) currView.filterConditions = filterConditions;\n      }\n      // old version\n      else {\n         this.objectWorkspace.filterConditions = filterConditions;\n      }\n   }\n\n   get workspaceFrozenColumnID() {\n      return this.objectWorkspace.frozenColumnID;\n   }\n\n   set workspaceFrozenColumnID(id) {\n      this.objectWorkspace.frozenColumnID = id;\n   }\n\n   get workspaceHiddenFields() {\n      return this.objectWorkspace.hiddenFields || [];\n   }\n\n   set workspaceHiddenFields(fields) {\n      this.objectWorkspace.hiddenFields = fields;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return this.isImported || this.isExternal || this.readonly;\n   }\n\n   /**\n    * @method defaultValues\n    * Collect a hash of key=>value pairs that represent the default values\n    * from each of our fields.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   defaultValues() {\n      var values = {};\n      this.fields().forEach((f) => {\n         f.defaultValue(values);\n      });\n\n      return values;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(/* data */) {\n      // NOTE: the platform needs to define a way to verify the data\n      console.warn(\"Platform.ABObject.isValidData() missing\");\n      return true;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      if (this.application == null) return null;\n\n      return this.application.urlObject(acrossApp) + this.id;\n   }\n\n   /**\n    * @method urlField\n    * return a string pointer to this object's fields\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlField(acrossApp) {\n      console.error(\"Who is calling this?\");\n\n      return this.urlPointer(acrossApp) + \"/_fields/\";\n   }\n\n   /**\n    * @method PK\n    * return a string of the primary column name\n    *\n    * @return {string}\n    */\n   PK() {\n      return this.primaryColumnName || \"uuid\";\n   }\n\n   remoteCreate(data) {\n      console.log(\n         \"object[\" + this.name + \"] received a remoteCreate() with data:\",\n         data\n      );\n   }\n\n   /**\n    * @method clone\n    * return a clone of ABObject\n    *\n    * @return {ABObjectBase}\n    */\n   clone() {\n      // ignore properties who're spend much performance\n      // NOTE: do not clone them. Just copy reference\n      let ignoreProps = [\"application\", \"_fields\"];\n\n      let cloneOne = JSON.parse(JSON.stringify(this));\n\n      ignoreProps.forEach((prop) => {\n         cloneOne[prop] = this[prop];\n      });\n\n      return cloneOne;\n   }\n\n   /**\n    * @method minRelationData()\n    * return an array of ABField.columnNames that make up\n    * the minimum fields required to display this objects __RELATION\n    * data in our UI widgets.\n    */\n   minRelationData() {\n      var fields = [this.PK()];\n\n      if (this.multilingualFields().length > 0) {\n         fields.push(\"translations\");\n      }\n\n      var labelData = this.labelFormat || \"\";\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            fields.push(field.columnName);\n         });\n      }\n      // Default defining label\n      else {\n         const defaultFld = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultFld) fields.push(defaultFld.columnName);\n      }\n\n      // System requires to include number field values\n      // because they are used on Formula/Calculate fields on client side\n      fields = fields.concat(\n         this.fields((f) => f.key == \"number\").map((f) => f.columnName)\n      );\n\n      return fields;\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = \"{\" + defaultField.id + \"}\";\n         else {\n            // if label is empty, then show .id\n            if (!labelData.trim()) {\n               let labelSettings = this.labelSettings || {};\n               if (labelSettings && labelSettings.isNoLabelDisplay) {\n                  labelData = L(labelSettings.noLabelText || \"[No Label]\");\n               } else {\n                  // show id of row\n                  labelData = `${\n                     this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"\n                  }${rowData.id}`;\n               }\n            }\n         }\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.rules.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   /**\n    * @method whereCleanUp()\n    * Parse through the current where condition and remove any null or\n    * empty logical blocks.\n    * @param {obj} curr\n    *        1) The current where condition in ABQuery Format:\n    *        {\n    *           glue: [AND, OR],\n    *           rules: [ {rule} ]\n    *        }\n    *        or 2) The current {rule} to validate\n    *        {\n    *          key:{string},\n    *          rule:{string},\n    *          vlaue:{mixed}\n    *        }\n    * @return {ABQuery.where} / { Rule }\n    */\n   whereCleanUp(curr) {\n      if (curr) {\n         if (curr.glue && curr.rules) {\n            // this is a logical Block (AND, OR)\n            // we need to filter the children\n            let newValue = { glue: curr.glue, rules: [] };\n            curr.rules.forEach((r) => {\n               let cleanRule = this.whereCleanUp(r);\n               // don't add values that didn't pass\n               if (cleanRule) {\n                  newValue.rules.push(cleanRule);\n               }\n            });\n\n            // if we have a non empty block, then return it:\n            if (newValue.rules.length > 0) {\n               return newValue;\n            }\n\n            // this isn't really a valid conditional, so null\n            return null;\n         }\n\n         // This is a specific rule, that isn't null so:\n         // if it isn't {}, then return it\n         if (Object.keys(curr).length > 0) return curr;\n\n         // otherwise we skip this as well\n         return null;\n      }\n      return null;\n   }\n};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nvar ABObject = require(\"../platform/ABObject\");\nvar ABModelQuery = require(\"../platform/ABModelQuery\");\n\nmodule.exports = class ABObjectQueryCore extends ABObject {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      /*\n{\n\tid: uuid(),\n\tname: 'name',\n\tlabelFormat: 'xxxxx',\n\tisImported: 1/0,\n\turlPath:'string',\n\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\ttranslations:[\n\t\t{}\n\t],\n\n\n\n\t// ABOBjectQuery Specific Changes\n\t// we store a list of fields by their urls:\n\tfields:[\n\t\t{\n\t\t\talias: \"\",\n\t\t\tfieldURL:'#/url/to/field',\n\t\t}\n\t],\n\n\n\t// we store a list of joins:\n\tjoins:{\n\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\tobjectURL:\"#/...\",\t\t\t\t\t// the base object of the join\n\t\tlinks: [\n\t\t\t{\n\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// the connection field of the object we are joining with.\n\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n\t\t\t\tlinks: [\n\t\t\t\t\t...\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\n\t},\n\n\n\twhere: { QBWhere }\n}\n*/\n      this.isQuery = true;\n      // {bool}\n      // a property to mark the difference between an ABObject and ABObjectQuery.\n\n      this.__missingObject = this.__missingObject ?? [];\n      // {array} fieldInfo\n      // the field info that defined an object we can't find.\n\n      this.__missingFields = this.__missingFields ?? [];\n      // {array} [ { objID, fieldID }, ... ]\n      // a list of field definitions that we are unable to resolve.\n\n      this.__cantFilter = [];\n      // {array} [ {field, fieldInfo}, ... ]\n      // a list of field that were assigned but can't be used for filtering.\n\n      this.__duplicateFields = [];\n      // {array} [ {fieldInfo}, ... ]\n      // a list of duplicate field definitions.\n\n      this.__linkProblems = [];\n      // {array} [ { message, data }, ...]\n      // a list of warning messages related to link objects\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   /**\n    * contextKey()\n    * returns a unique key that represents a query in\n    * our networking job resolutions.\n    * @return {string}\n    */\n   static contextKey() {\n      return \"query\";\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.type = \"query\";\n\n      // populate connection objects\n      // this._objects = {};\n      // this.obj2Alias = attributes.obj2Alias || {};\n\n      this.alias2Obj = {}; // this gets built in the .importJoins()\n      // { \"alias\" : object.id }\n      // this is a lookup hash of a referenced alias to the Object it\n      // references.\n\n      this.objectIDs = [];\n      // {array}  of ABObject.id s that are referenced by this query.\n      // this is how we limit our searches on objects.\n      // this gets built in the .importJoins();\n\n      this.viewName = attributes.viewName || \"\";\n      // {string}\n      // this is the SQL tablename of where our Query will store it's\n      // view data.\n\n      // import all our ABObjects\n      this.importJoins(attributes.joins || {});\n\n      // import fields after joins are imported\n      this._fields = null;\n      this.importFields(attributes.fields || []);\n      // {array} [ { alias, field}, {},... ]\n      // an array of field definition structures that mark what fields this\n      // query is interested in pulling data from.\n      //    .alias : {string} matches the alias of the ABObject that the field\n      //             is from\n      //    .field : {ABFieldXXX} the link to the actual ABField instance\n\n      // Import our Where condition\n      this.where = attributes.where || {}; // .workspaceFilterConditions\n      // Fix default where.glue value\n      if (\n         this.where &&\n         !this.where.glue &&\n         this.where.rules &&\n         this.where.rules.length > 0\n      )\n         this.where.glue = \"and\";\n\n      this._objectWorkspaceViews = attributes.objectWorkspaceViews || {};\n\n      this.settings = this.settings || {};\n\n      if (attributes && attributes.settings) {\n         // convert from \"0\" => true/false\n         this.settings.grouping = JSON.parse(\n            attributes.settings.grouping || false\n         );\n         this.settings.hidePrefix = JSON.parse(\n            attributes.settings.hidePrefix || false\n         );\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABObjectQuery instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.viewName = this.viewName;\n\n      result.joins = this.exportJoins();\n      result.fields = this.exportFields();\n      result.where = this.where; // .workspaceFilterConditions\n\n      result.settings = this.settings;\n\n      return result;\n   }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    */\n   importFields(fieldSettings) {\n      var newFields = [];\n      (fieldSettings || []).forEach((fieldInfo) => {\n         if (fieldInfo == null) return;\n\n         // pull object by alias name\n         let object = this.objectByAlias(fieldInfo.alias);\n\n         // Pull object from .AB\n         if (!object && this.AB) {\n            object = this.AB.objectByID(fieldInfo.objectID);\n\n            // keep\n            if (object) {\n               this._objects = this._objects || {};\n               this._objects[fieldInfo.alias] = object;\n            }\n         }\n\n         if (!object) {\n            this.__missingObject = this.__missingObject ?? [];\n            this.__missingObject.push(fieldInfo);\n            return;\n         }\n\n         let field = object.fieldByID(fieldInfo.fieldID);\n         if (!field) {\n            this.__missingFields = this.__missingFields ?? [];\n            this.__missingFields.push({\n               objID: object.id,\n               fieldID: fieldInfo.fieldID,\n               fieldInfo,\n            });\n            return;\n         }\n\n         if (!this.canFilterField(field)) {\n            this.__cantFilter = this.__cantFilter ?? [];\n            this.__cantFilter.push({ field, fieldInfo });\n         }\n\n         // check duplicate\n         let isNew =\n            newFields.filter(\n               (f) =>\n                  f.alias == fieldInfo.alias && f.field.id == fieldInfo.fieldID\n            ).length < 1;\n\n         if (!isNew) {\n            this.__duplicateFields = this.__duplicateFields ?? [];\n            this.__duplicateFields.push({ fieldInfo });\n         }\n\n         // should be a field of base/join objects\n         if (field && this.canFilterField(field) && isNew) {\n            // add alias to field\n            // create new instance of this field:\n            var def = field.toObj();\n            let clonedField = new field.constructor(def, field.object);\n\n            clonedField.alias = fieldInfo.alias;\n\n            let alias = fieldInfo.alias;\n            if (Array.isArray(this.joins())) {\n               // NOTE: query v1\n               alias = field.object.name;\n            }\n\n            newFields.push({\n               alias: alias,\n               field: clonedField,\n            });\n         }\n      });\n      this._fields = newFields;\n   }\n\n   /**\n    * @method exportFields\n    * convert our array of fields into a settings object for saving to disk.\n    * @return {array}\n    */\n   exportFields() {\n      var currFields = [];\n      this._fields.forEach((fieldInfo) => {\n         currFields.push({\n            alias: fieldInfo.alias,\n            objectID: fieldInfo.field.object.id,\n            fieldID: fieldInfo.field.id,\n         });\n      });\n\n      // let's persist the faulty settings so a developer or builder can\n      // review and fix it by hand.\n      (this.__missingObject || []).forEach((f) => {\n         currFields.push(f);\n      });\n\n      (this.__cantFilter || []).forEach((f) => {\n         currFields.push(f.fieldInfo);\n      });\n\n      return currFields;\n   }\n\n   /**\n    * @method fields()\n    *\n    * Support the ABObject api by returning a list of fields relevant\n    * to this ABObjectQuery.\n    *\n    * @return {array}\n    */\n   fields(fn = () => true) {\n      if (!fn) fn = () => true;\n      return this._fields.map((f) => f.field).filter(fn);\n   }\n\n   ///\n   /// Joins & Objects\n   ///\n\n   /**\n    * @method joins()\n    *\n    * return an object of joins for this Query.\n    *\n    * @return {Object}\n    */\n   joins() {\n      return this._joins || {};\n   }\n\n   /**\n    * @method objects()\n    *\n    * return an array of all the relevant ABObjects for this Query.\n    *\n    * @return {array}\n    */\n   objects(fn = () => true) {\n      // FOR proper expected operation, this fn must only return object\n      // matches for which this ABQuery is managing objects:\n\n      return this.AB.objects((o) => this.objectIDs.indexOf(o.id) > -1).filter(\n         fn\n      );\n   }\n\n   /**\n    * @method objectAlias()\n    *\n    * return alias of of ABObjects.\n    *\n    * @return {string}\n    */\n   objectAlias(objectId) {\n      let result = null;\n\n      Object.keys(this.alias2Obj || {}).forEach((alias) => {\n         if (!result && this.alias2Obj[alias] == objectId) {\n            result = alias;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method objectBase\n    * return the origin object\n    *\n    * @return {ABObject}\n    */\n   objectBase() {\n      if (!this._joins.objectID) return null;\n\n      return this.AB.objectByID(this._joins.objectID) || null;\n   }\n\n   /**\n    * @method objectByAlias()\n    * return ABObject search by alias name\n    *\n    * @param {string} - alias name\n    * @return {ABClassObject}\n    */\n   objectByAlias(alias) {\n      var objID = this.alias2Obj[alias];\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method objectByID()\n    * return ABObject search by ID\n    * @param {string} objID\n    *        The requested {ABObject}.id of the object to return.\n    * @return {ABObject} | null\n    */\n   objectByID(objID) {\n      if (objID) {\n         return this.objects((o) => o.id == objID)[0];\n      }\n      return null;\n   }\n\n   /**\n    * @method links()\n    *\n    * return an array of links for this Query.\n    *\n    * @return {array}\n    */\n   links(filter = () => true) {\n      return (this._links || []).filter(filter);\n   }\n\n   /**\n    * @method importJoins\n    * instantiate a set of joins from the given attributes.\n    * Our joins contain a set of ABObject URLs that should already be created in our Application.\n    * @param {Object} settings The different field urls for each field\n    *\t\t\t\t\t{ }\n    */\n   importJoins(settings) {\n      // copy join settings\n      this._joins = this.AB.cloneDeep(settings);\n\n      var uniqueObjectIDs = {};\n      // { obj.id : obj.id }\n      // a hash of object.ids for all the relevant ABObjects necessary for this\n      // ABObjectQuery\n\n      var newLinks = [];\n      // {array} of link definitions\n      // build the operating values for this._links\n\n      let storeObject = (object, alias) => {\n         if (!object) return;\n\n         // var inThere = newObjects.filter(obj => obj.id == object.id && obj.alias == alias ).length > 0;\n         // if (!inThere) {\n         // newObjects[alias] = object;\n         // this.obj2Alias[object.id] = alias;\n         this.alias2Obj[alias] = object.id;\n         uniqueObjectIDs[object.id] = object.id;\n         // newObjects.push({\n         // \talias: alias,\n         // \tobject: object\n         // });\n         // }\n      };\n\n      let storeLinks = (links) => {\n         (links || []).forEach((link) => {\n            // var inThere = newLinks.filter(l => l.fieldID == link.fieldID).length > 0;\n            // if (!inThere) {\n            newLinks.push(link);\n            // }\n         });\n      };\n\n      this.__linkProblems = this.__linkProblems ?? [];\n\n      let processJoin = (baseObject, joins) => {\n         if (!baseObject) return;\n\n         (joins || []).forEach((link) => {\n            // Convert our saved settings:\n            //\t{\n            //\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\tobjectID: \"uuid\",\t\t\t\t\t// id of the connection object\n            //\t\tlinks: [\n            //\t\t\t{\n            //\t\t\t\talias: \"\",\t\t\t\t\t\t\t// the alias name of table - use in SQL command\n            //\t\t\t\tfieldID: \"uuid\",\t\t\t\t\t// uhe connection field of the object we are joining with.\n            //\t\t\t\ttype:[left, right, inner, outer]\t// join type: these should match the names of the knex methods\n            //\t\t\t\t\t\t=> innerJoin, leftJoin, leftOuterJoin, rightJoin, rightOuterJoin, fullOuterJoin\n            //\t\t\t\tlinks: [\n            //\t\t\t\t\t...\n            //\t\t\t\t]\n            //\t\t\t}\n            //\t\t]\n            //\t},\n\n            var linkField = baseObject.fieldByID(link.fieldID);\n            if (!linkField) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linkField[${link.fieldID}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            // track our linked object\n            var linkObject = this.AB.objectByID(linkField.settings.linkObject);\n            if (!linkObject) {\n               this.__linkProblems.push({\n                  message: `could not resolve our linked field -> linkObject[${linkField.settings.linkObject}]`,\n                  data: {\n                     link,\n                  },\n               });\n               return;\n            }\n\n            storeObject(linkObject, link.alias);\n\n            storeLinks(link.links);\n\n            processJoin(linkObject, link.links);\n         });\n      };\n\n      // if (!this._joins.objectURL)\n      // \t// TODO: this is old query version\n      // \treturn;\n\n      // store the root object\n      var rootObject = this.objectBase();\n      if (!rootObject) {\n         // this._objects = newObjects;\n         this.__linkProblems.push({\n            message: \"could not resolve our base object\",\n            data: {\n               objectID: this._joins?.objectID,\n            },\n         });\n         return;\n      }\n\n      storeObject(rootObject, \"BASE_OBJECT\");\n\n      storeLinks(settings.links);\n\n      processJoin(rootObject, settings.links);\n\n      // this._objects = newObjects;\n      this._links = newLinks;\n      this.objectIDs = Object.keys(uniqueObjectIDs);\n   }\n\n   /**\n    * @method exportJoins\n    * save our list of objects into our format for persisting on the server\n    * @param {array} settings\n    */\n   exportJoins() {\n      return this.AB.cloneDeep(this._joins || {});\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method model\n    * return a Model object that will allow you to interact with the data for\n    * this ABObjectQuery.\n    */\n   model() {\n      var model = new ABModelQuery(this);\n\n      // default the context of this model's operations to this object\n      model.contextKey(this.constructor.contextKey());\n      model.contextValues({ id: this.id }); // the datacollection.id\n\n      return model;\n   }\n\n   /**\n    * @method canFilterObject\n    * evaluate the provided object to see if it can directly be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterObject(object) {\n      if (!object) return false;\n\n      // I can filter this object if it is one of the objects in my joins\n      return (\n         this.objects((obj) => {\n            return obj.id == object.id;\n         }).length > 0\n      );\n   }\n\n   /**\n    * @method canFilterField\n    * evaluate the provided field to see if it can be filtered by this\n    * query.\n    * @param {ABObject} object\n    * @return {bool}\n    */\n   canFilterField(field) {\n      if (!field) return false;\n\n      // I can filter a field if it's object OR the object it links to can be filtered:\n      let object = field.object;\n      // Transition:\n      // let linkedObject = this.objects(\n      //    (obj) => obj.id == field.settings.linkObject\n      // )[0];\n      var linkedObject = field.datasourceLink;\n\n      return this.canFilterObject(object) || this.canFilterObject(linkedObject);\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this object. This url pointer\n    * should be able to be used by this.AB.urlResolve() to return\n    * this object.\n    *\n    * @param {boolean} acrossApp - flag to include application id to url\n    *\n    * @return {string}\n    */\n   urlPointer(acrossApp) {\n      console.error(\n         \"ABQueryCore.urlPointer(): Depreciated: Where is this being called?\"\n      );\n      return this.application.urlQuery(acrossApp) + this.id;\n   }\n\n   /**\n    * @method isGroup\n    *\n    * @return {boolean}\n    */\n   get isGroup() {\n      return this.settings.grouping || false;\n   }\n\n   /**\n    * @method isReadOnly\n    *\n    * @return {boolean}\n    */\n   get isReadOnly() {\n      return true;\n   }\n\n   /**\n    * @method isDisabled()\n    * check this contains removed objects or fields\n    *\n    * @return {boolean}\n    */\n   isDisabled() {\n      return this.disabled || false;\n   }\n\n   get workspaceFilterConditions() {\n      let filterConditions = super.workspaceFilterConditions;\n      if (\n         filterConditions == null ||\n         filterConditions.rules == null ||\n         !filterConditions.rules.length\n      ) {\n         filterConditions = this.where;\n      }\n\n      return filterConditions;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nconst ABProcessTaskSubProcess = require(\"../platform/process/tasks/ABProcessTaskSubProcess\");\n\nmodule.exports = class ABProcessCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"label\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      this.elements().forEach((e) => {\n         e.onProcessReady();\n      });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process\";\n      this.xmlDefinition = attributes.xmlDefinition || null;\n\n      // this.json = attributes.json || null;\n      let currElements = this._elements || {};\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         var ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this.emit(\n                  \"warning\",\n                  `P[${this.name}] is referencing an unknown process element id[${eID}]`,\n                  { process: this.id, eID }\n               );\n            }\n         }\n      });\n\n      this._connections = attributes.connections || {};\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"xmlDefinition\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      data.elementIDs = [];\n      for (var e in this._elements) {\n         // NOTE: when a task is initially created, it doesn't have an .id\n         // so we need to reference it by it's .diagramID\n         data.elementIDs.push(\n            this._elements[e].id ?? this._elements[e].diagramID\n         );\n      }\n\n      data.connections = this._connections;\n\n      // data.participantIDs = [];\n      // for (var p in this._participants) {\n      //     data.participantIDs.push(this._participants[p].id);\n      // }\n\n      return data;\n   }\n\n   //\n   // XML Model\n   //\n\n   /**\n    * modelDefinition()\n    * return the current xml definition for this process\n    * @return {string}\n    */\n   modelDefinition() {\n      return this.xmlDefinition;\n   }\n\n   /**\n    * modelNew()\n    * initialze our xml definition to a new state.\n    * @return {string}\n    */\n   modelNew() {\n      this.xmlDefinition = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd\" id=\"process-def-${this.id}\" targetNamespace=\"http://bpmn.io/schema/bpmn\">\n  <bpmn2:process id=\"Process_1\" isExecutable=\"true\">\n    <bpmn2:startEvent id=\"StartEvent_1\"/>\n  </bpmn2:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_1\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_1\">\n        <dc:Bounds height=\"36.0\" width=\"36.0\" x=\"412.0\" y=\"240.0\"/>\n      </bpmndi:BPMNShape>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn2:definitions>`;\n\n      //// TODO: create a default Start Task here??\n   }\n\n   /**\n    * modelUpdate()\n    * update our xml definition from the provided description.\n    * @param {string} xml  bpmn2 xml definition from our modeler.\n    * @return {string}\n    */\n   modelUpdate(xml) {\n      this.xmlDefinition = xml;\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn = () => true) {\n      var allConnections = Object.keys(this._connections).map((e) => {\n         return this._connections[e];\n      });\n\n      // If parent, merge connections\n      if (this.process && this.key === \"SubProcess\") {\n         allConnections = allConnections.concat(this.process.connections());\n      }\n\n      return allConnections.filter(fn);\n   }\n\n   /**\n    * connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      return this.connections((t) => {\n         return t.id == dID;\n      })[0];\n   }\n\n   /**\n    * connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      return this.connections((c) => {\n         return c.to == dID;\n      });\n   }\n\n   /**\n    * connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      return this.connections((c) => {\n         return c.from == dID;\n      });\n   }\n\n   /**\n    * connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      delete this._connections[element.id];\n   }\n\n   /**\n    * connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      var bo = element.businessObject;\n      var from = null;\n      if (bo.sourceRef) {\n         from = bo.sourceRef.id;\n      }\n\n      var to = null;\n      if (bo.targetRef) {\n         to = bo.targetRef.id;\n      }\n\n      var connection = {\n         id: element.id,\n         type: element.type,\n         from: from,\n         to: to,\n      };\n      return connection;\n   }\n\n   /**\n    * connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      var simpleConn = this.connectionSimplyElement(element);\n      if (simpleConn.from && simpleConn.to && element.parent) {\n         this._connections[simpleConn.id] = simpleConn;\n      } else {\n         // this connection is no longer connecting anything thing.\n         // it is being removed.\n         this.connectionRemove(element);\n      }\n   }\n\n   /**\n    * elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      var allElements = Object.keys(this._elements).map((e) => {\n         return this._elements[e];\n      });\n      return allElements.filter(fn);\n   }\n\n   /**\n    * elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      this._elements[element.id || element.diagramID] = element;\n   }\n\n   /**\n    * elementByID()\n    * return the {ABProcessElement} that has the given .id\n    * @param {string} id\n    * @return {ABProcess[OBJ]}\n    */\n   elementByID(id) {\n      return this._elements[id] ?? null;\n   }\n\n   /**\n    * elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      return this.elements((t) => {\n         return t.diagramID == dID;\n      })[0];\n   }\n\n   /**\n    * elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      delete this._elements[def.id || def.diagramID];\n   }\n\n   /**\n    * isTriggeredBy()\n    * scan our tasks and see if we have a \"trigger\" task that responds to\n    * the provided key.\n    * @param {string} key the trigger key\n    * @return {bool}\n    */\n   isTriggeredBy(key) {\n      return this.taskForTriggerKey(key) != null;\n   }\n\n   /**\n    * connectionNextTask()\n    * return the ABProcessElement(s) that are after the given Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionNextTask(currElement) {\n      var elements = [];\n      var nextConnections = this.connections((c) => {\n         return c.from == currElement.diagramID;\n      });\n      nextConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.to;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      var elements = [];\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      prevConnections.forEach((c) => {\n         var element = this.elements((e) => {\n            return e.diagramID == c.from;\n         })[0];\n         if (element) {\n            elements.push(element);\n         }\n      });\n      return elements;\n   }\n\n   /**\n    * processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      // var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      // return values.length > 0\n      //    ? values.length > 1\n      //       ? values\n      //       : values[0]\n      //    : null;\n\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      var values = queryPreviousTasks(tasksToAsk, \"processData\", params, this);\n      return values.length > 0\n         ? values.length > 1\n            ? values\n            : values[0]\n         : null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      var tasksToAsk = this.allPreviousTasks(currElement);\n      // var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataFields\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * allPreviousConnections()\n    * walk through the current graph and return all the previous connections\n    * leading up to the given {ProcessElement}\n    * @param {Connection} conn\n    * @param {hash} hashConn\n    *        { connection.id : connection }\n    * @return {array}\n    */\n   allPreviousConnectionsForConnection(conn, hashConn) {\n      var prevConnections = this.connections((c) => {\n         return c.to == conn.from;\n      });\n\n      prevConnections.forEach((c) => {\n         if (!hashConn[c.id]) {\n            hashConn[c.id] = c;\n            this.allPreviousConnectionsForConnection(c, hashConn);\n         }\n      });\n   }\n   allPreviousConnectionsForElement(currElement) {\n      var prevConnections = this.connections((c) => {\n         return c.to == currElement.diagramID;\n      });\n      var hashConn = {\n         /* connection.id : connection */\n      };\n      // hashConn will contains the final collection of connections.\n\n      prevConnections.forEach((c) => {\n         hashConn[c.id] = c;\n         this.allPreviousConnectionsForConnection(c, hashConn);\n      });\n\n      // TODO: detect circle backs and remove connections that\n      // resolve back to currElement\n\n      // convert our hash into an array\n      return Object.keys(hashConn).map((k) => hashConn[k]);\n   }\n\n   allPreviousTasks(currElement) {\n      var prevTasks = {}; /* task.id : task */\n      var allPreviousConnections =\n         this.allPreviousConnectionsForElement(currElement);\n      var task;\n      allPreviousConnections.forEach((conn) => {\n         // each conn has a .to and a .from => grab both tasks\n         task = this.elementForDiagramID(conn.to);\n         if (task) prevTasks[task.id] = task;\n\n         task = this.elementForDiagramID(conn.from);\n         if (task) prevTasks[task.id] = task;\n      });\n\n      var tasksToAsk = Object.keys(prevTasks)\n         .map((k) => prevTasks[k])\n         .filter((t) => t.id != currElement.id);\n\n      return tasksToAsk;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataObjects(currElement) {\n      var tasksToAsk = this.connectionPreviousTask(currElement);\n      var fields = queryPreviousTasks(\n         tasksToAsk,\n         \"processDataObjects\",\n         null,\n         this\n      );\n      return fields.length > 0 ? fields : null;\n   }\n\n   /**\n    * taskForTriggerKey()\n    * return one or more tasks that respond to the given trigger key\n    * @param {string} key a trigger key\n    * @return {[ABProcessTask,...]}\n    */\n   taskForTriggerKey(key) {\n      var trigger = this.elements((t) => {\n         return t.triggerKey == key;\n      })[0];\n      if (trigger) {\n         return trigger;\n      } else {\n         return null;\n      }\n   }\n\n   //\n   // Participants\n   //\n\n   // /**\n   //  * participants()\n   //  * return an array of participants that match the given filter (or all tasks\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided participants\n   //  *                should be returned.\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participants(fn) {\n   //     if (!fn)\n   //         fn = () => {\n   //             return true;\n   //         };\n   //     var all = Object.keys(this._participants).map((p) => {\n   //         return this._participants[p];\n   //     });\n   //     return all.filter(fn);\n   // }\n\n   // /**\n   //  * participantsForDiagramID()\n   //  * return the participant(s) that are tied to the given xml diagram ID.\n   //  * @param {string} dID the diagram ID\n   //  * @return {[ABProcessParticipant,...]}\n   //  */\n   // participantsForDiagramID(dID) {\n   //     return this.participants((p) => {\n   //         return p.diagramID == dID;\n   //     });\n   // }\n};\n\nvar queryPreviousTasks = (\n   list,\n   method,\n   param,\n   process,\n   responses,\n   processedIDs\n) => {\n   // recursive fn() to step through our graph and compile\n   // results.\n   if (typeof responses == \"undefined\") {\n      responses = [];\n   }\n   if (typeof processedIDs == \"undefined\") {\n      processedIDs = [];\n   }\n   if (list.length == 0) {\n      return responses;\n   } else {\n      // get next task\n      const task = list.shift();\n\n      // if we haven't already done task:\n      if (processedIDs.indexOf(task.diagramID) == -1) {\n         // mark this task as having been processed\n         processedIDs.push(task.diagramID);\n\n         let value = null;\n\n         // get any field's it provides\n         if (!(task instanceof ABProcessTaskSubProcess))\n            value = task[method].apply(task, param);\n\n         // value = task[method].apply(task, param);\n\n         if (value === null) value = [];\n         responses = _concat(responses, value);\n\n         // add any previous tasks to our list\n         list = _concat(list, process.connectionPreviousTask(task));\n      }\n\n      // process next Task\n      return queryPreviousTasks(\n         list,\n         method,\n         param,\n         process,\n         responses,\n         processedIDs\n      );\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n\nvar ABMLClass = require(\"../platform/ABMLClass\");\nconst _concat = require(\"lodash/concat\");\n\nmodule.exports = class ABStepCore extends ABMLClass {\n   constructor(attributes, AB) {\n      super([\"name\", \"text\"], AB);\n\n      this.fromValues(attributes);\n\n      // indicate we are ready.\n      // this.elements().forEach((e) => {\n      //    e.onProcessReady();\n      // });\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n    {\n      id: uuid(),\n      name: 'name',\n      type: 'xxxxx',\n      json: \"{json}\"\n    }\n    */\n      this.id = attributes.id;\n      this.name = attributes.name || \"New Step\";\n      this.type = attributes.type || \"step\";\n      this.text = attributes.text || \"\";\n      this.settings = attributes.settings || {};\n      this.settings.event = attributes?.settings?.event || \"click\";\n      this.settings.el = attributes?.settings?.el || \"\";\n      // this.xmlDefinition = attributes.xmlDefinition || null;\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABProcess instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      // debugger;\n      // default label value\n      if (!this.label) {\n         this.label = this.name;\n      }\n\n      // OP.Multilingual.unTranslate(this, this, [\"label\"]);\n      var data = super.toObj();\n\n      var fieldsToSave = [\"id\", \"name\", \"settings\", \"type\"];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   // /**\n   //  * steps()\n   //  * return an array of steps that match the given filter (or all steps\n   //  * if no filter is provided).\n   //  * @param {fn} fn an iterator that returns true if the provided element\n   //  *                should be returned.\n   //  * @return {[ABStep]}\n   //  */\n   // steps(fn = () => true) {\n   //    var allSteps = Object.keys(this._steps).map((e) => {\n   //       return this._steps[e];\n   //    });\n   //    return allSteps.filter(fn);\n   // }\n\n   // /**\n   //  * stepAdd()\n   //  * insert a step to be added to this hint.\n   //  * @param {ABStep} element\n   //  *        the full instance of an ABStep to track.\n   //  */\n   // stepAdd(step) {\n   //    this._steps[step.id] = step;\n   // }\n\n   // /**\n   //  * stepByID()\n   //  * return the {ABStep} that has the given .id\n   //  * @param {string} id\n   //  * @return {ABStep[OBJ]}\n   //  */\n   // stepByID(id) {\n   //    return this._step[id] ?? null;\n   // }\n\n   // /**\n   //  * stepRemove()\n   //  * remove a step from being displayed by this hint.\n   //  * @param {obj|ABStep} def\n   //  *        a definition of, or full Object instance of the ABStep\n   //  *        to remove.\n   //  */\n   // stepRemove(def) {\n   //    delete this._steps[def.id];\n   // }\n};\n","/*\n * ABViewManager\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\nvar AllViews = [\n   require(\"../platform/views/ABView\"),\n   require(\"../platform/views/ABViewCarousel\"),\n   require(\"../platform/views/ABViewChart\"),\n   require(\"../platform/views/ABViewChartArea\"),\n   require(\"../platform/views/ABViewChartBar\"),\n   require(\"../platform/views/ABViewChartLine\"),\n   require(\"../platform/views/ABViewChartPie\"),\n   require(\"../platform/views/ABViewComment\"),\n   require(\"../platform/views/ABViewConditionalContainer\"),\n   require(\"../platform/views/ABViewConnectDataFilter\"),\n   require(\"../platform/views/ABViewContainer\"),\n   require(\"../platform/views/ABViewCSVExporter\"),\n   require(\"../platform/views/ABViewCSVImporter\"),\n   require(\"../platform/views/ABViewDataFilter\"),\n   require(\"../platform/views/ABViewDataview\"),\n   require(\"../platform/views/ABViewDocxBuilder\"),\n   require(\"../platform/views/ABViewGrid\"),\n   require(\"../platform/views/ABViewImage\"),\n   require(\"../platform/views/ABViewLabel\"),\n   require(\"../platform/views/ABViewLayout\"),\n   require(\"../platform/views/ABViewList\"),\n   require(\"../platform/views/ABViewMenu\"),\n   require(\"../platform/views/ABViewPage\"),\n   require(\"../platform/views/ABViewPDFImporter\"),\n   require(\"../platform/views/ABViewPivot\"),\n   require(\"../platform/views/ABViewTab\"),\n   require(\"../platform/views/ABViewText\"),\n\n   //\n   // Special Editors\n   //\n   require(\"../platform/views/ABViewGantt\"),\n   require(\"../platform/views/ABViewKanban\"),\n   require(\"../platform/views/ABViewReportsManager\"),\n   require(\"../platform/views/ABViewScheduler\"),\n\n   //\n   // Detail Components\n   //\n   require(\"../platform/views/ABViewDetail\"),\n   require(\"../platform/views/ABViewDetailCheckbox\"),\n   require(\"../platform/views/ABViewDetailConnect\"),\n   require(\"../platform/views/ABViewDetailCustom\"),\n   require(\"../platform/views/ABViewDetailImage\"),\n   // require(\"../platform/views/ABViewDetailSelectivity\"),\n   require(\"../platform/views/ABViewDetailText\"),\n   require(\"../platform/views/ABViewDetailTree\"),\n\n   //\n   // Form Components\n   //\n   require(\"../platform/views/ABViewForm\"),\n   require(\"../platform/views/ABViewFormButton\"),\n   require(\"../platform/views/ABViewFormCheckbox\"),\n   require(\"../platform/views/ABViewFormConnect\"),\n   require(\"../platform/views/ABViewFormCustom\"),\n   require(\"../platform/views/ABViewFormDatepicker\"),\n   require(\"../platform/views/ABViewFormJson\"),\n   require(\"../platform/views/ABViewFormNumber\"),\n   require(\"../platform/views/ABViewFormReadonly\"),\n   require(\"../platform/views/ABViewFormSelectMultiple\"),\n   require(\"../platform/views/ABViewFormSelectSingle\"),\n   require(\"../platform/views/ABViewFormTextbox\"),\n   require(\"../platform/views/ABViewFormTree\"),\n];\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\nAllViews.forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","/*\n * ABViewManagerMobile\n *\n * An interface for managing the different ABViews available in our AppBuilder.\n *\n */\n\n/*\n * Views\n * A name => ABView  hash of the different ABViews available.\n */\nvar Views = {};\n[\n   require(\"../platform/mobile/ABMobilePage\"),\n   require(\"../platform/mobile/ABMobileView\"),\n   require(\"../platform/mobile/ABMobileViewForm\"),\n   require(\"../platform/mobile/ABMobileViewFormButton\"),\n   require(\"../platform/mobile/ABMobileViewFormCheckbox\"),\n   require(\"../platform/mobile/ABMobileViewFormConnect\"),\n   require(\"../platform/mobile/ABMobileViewFormDate\"),\n   require(\"../platform/mobile/ABMobileViewFormDatetime\"),\n   require(\"../platform/mobile/ABMobileViewFormEmail\"),\n   require(\"../platform/mobile/ABMobileViewFormFile\"),\n   require(\"../platform/mobile/ABMobileViewFormFormula\"),\n   require(\"../platform/mobile/ABMobileViewFormImage\"),\n   require(\"../platform/mobile/ABMobileViewFormNumber\"),\n   require(\"../platform/mobile/ABMobileViewFormReadonly\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectMultiple\"),\n   require(\"../platform/mobile/ABMobileViewFormSelectSingle\"),\n   require(\"../platform/mobile/ABMobileViewFormTextbox\"),\n   require(\"../platform/mobile/ABMobileViewLabel\"),\n   require(\"../platform/mobile/ABMobileViewList\"),\n].forEach((v) => {\n   if (v.default?.common) {\n      v = v.default;\n   }\n   Views[v.common().key] = v;\n});\n\nmodule.exports = class ABViewManagerCore {\n   /**\n    * @function allViews\n    * return all the currently defined ABViews in an array.\n    * @return [{ABView},...]\n    */\n   static allViews(fn = () => true) {\n      var views = [];\n      for (var v in Views) {\n         var V = Views[v];\n         if (fn(V)) {\n            views.push(V);\n         }\n      }\n      return views;\n   }\n\n   /**\n    * @function newView\n    * return an instance of an ABView based upon the values.key value.\n    * @return {ABView}\n    */\n   static newView(values, application, parent) {\n      parent = parent || null;\n\n      if (values.key == \"detailselectivity\") {\n         values.key = \"detailconnect\";\n      }\n\n      //\t\tif ((values.key) && (Views[values.key])) {\n      if (values.key) {\n         if (!Views[values.key]) {\n            console.error(\n               \"!! View[\" +\n                  values.key +\n                  \"] not yet defined.  Have an ABView instead:\"\n            );\n            return new Views[\"mobile-view\"](values, application, parent);\n         }\n\n         return new Views[values.key](values, application, parent);\n      } else {\n         var err = new Error(`Unknown view key [${values.key}]`);\n         console.error(err); // show the stack.\n         console.error({\n            error: err,\n            values: values,\n            application: application,\n         });\n         return null;\n      }\n   }\n\n   static viewClass(key) {\n      if (Views[key]) {\n         return Views[key];\n      }\n      console.error(`Unknown View Key[${key}]`);\n      return;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n// const ABObjectQuery = require(\"../platform/ABObjectQuery\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   const columnName = field.columnName;\n\n   let value = null;\n\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName];\n   } else {\n      value = rowData[columnName];\n   }\n\n   // pull relation data\n   if (value == null && field.relationName) {\n      const relationName = field.relationName();\n      const pureRelationName = relationName.split(\".\")[1]; // support [BASE_OBJECT.columnName] field name of ABQuery\n      value = rowData[relationName] || rowData[pureRelationName];\n   }\n\n   if (value != null && !isNaN(value)) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (const k in rowData) {\n      const key = k.split(\".\")[1];\n      if (key && key == field.id) {\n         value = rowData[k];\n      }\n   }\n\n   if (\n      (value == null || (typeof value == \"number\" && isNaN(value))) &&\n      field.format\n   )\n      value = field.format(rowData);\n\n   return value;\n}\n\nfunction getConnectFieldValue(rowData, field) {\n   let connectedVal = \"\";\n\n   if (rowData) {\n      let relationName = field.relationName();\n      if (rowData[relationName]) {\n         connectedVal =\n            (field.indexField\n               ? rowData[relationName][field.indexField.columnName]\n               : null) ?? // custom index\n            (field.indexField2\n               ? rowData[relationName][field.indexField2.columnName]\n               : null) ?? // custom index 2\n            rowData[relationName].id ??\n            rowData[relationName];\n      } else {\n         let fieldVal = getFieldVal(rowData, field);\n         if (fieldVal != null) {\n            connectedVal = fieldVal;\n         }\n      }\n   }\n   return connectedVal;\n}\n\nmodule.exports = class FilterComplexCore extends ABComponent {\n   constructor(idBase, AB) {\n      idBase = idBase || \"ab_filter_complex\";\n\n      if (typeof AB === \"undefined\") {\n         console.error(\"FilterComplexCore(): being called without an AB!\");\n      }\n\n      super(null, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.condition = {};\n      // const batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      const _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options = {}) {\n      this._settings = options;\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      // If conditions but no data return false\n      if (condition?.rules?.length && rowData == null) return false;\n\n      // If no conditions, then return true\n      if (!condition?.rules?.length || rowData == null) return true;\n\n      let result = condition.glue === \"and\" ? true : false;\n\n      condition.rules.forEach((filter) => {\n         // Nested filters\n         if (filter?.rules?.length) {\n            if (condition.glue === \"or\")\n               result = result || this.isValid(rowData, filter);\n            else result = result && this.isValid(rowData, filter);\n            return;\n         }\n         // Skip incomplete filter condition\n         else if (!filter.key || !filter.rule) return;\n\n         const fieldInfo = (this._Fields || []).filter(\n            (f) => f.id == filter.key || f.columnName == filter.key\n         )[0];\n\n         if (!fieldInfo) return;\n\n         let condResult = null;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         let ruleFieldType = fieldInfo.key;\n\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         let value = null;\n\n         if (fieldInfo.relationName) {\n            value = getConnectFieldValue(rowData, fieldInfo);\n         } else {\n            value = getFieldVal(rowData, fieldInfo);\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               if (value == null) value = \"\";\n\n               condResult = this.textValid(value, filter.rule, filter.value);\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = this.dateValid(value, filter.rule, filter.value);\n               break;\n            case \"number\":\n            case \"calculate\":\n            case \"formula\":\n               condResult = this.numberValid(value, filter.rule, filter.value);\n               break;\n            case \"list\":\n               condResult = this.listValid(value, filter.rule, filter.value);\n               break;\n            case \"boolean\":\n               condResult = this.booleanValid(value, filter.rule, filter.value);\n               break;\n            case \"user\":\n               condResult = this.userValid(value, filter.rule, filter.value);\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = this.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = this.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (condition.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   textValid(value, rule, compareValue) {\n      let result = false;\n\n      value = value.trim().toLowerCase();\n      value = this._logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n      compareValue = compareValue.trim().toLowerCase().replace(/  +/g, \" \");\n\n      // support \"john smith\" => \"john\" OR/AND \"smith\"\n      const compareArray = compareValue.split(\" \");\n\n      switch (rule) {\n         case \"contains\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value.indexOf(val) > -1;\n            });\n            break;\n         case \"not_contains\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value.indexOf(val) < 0;\n            });\n            break;\n         case \"equals\":\n            compareArray.forEach((val) => {\n               if (result == false)\n                  // OR\n                  result = value == val;\n            });\n            break;\n         case \"not_equal\":\n            result = true;\n            compareArray.forEach((val) => {\n               if (result == true)\n                  // AND\n                  result = value != val;\n            });\n            break;\n         case \"is_empty\":\n            result = value == \"\" || value == null;\n            break;\n         case \"is_not_empty\":\n            result = value != \"\" && value != null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   dateValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!(value instanceof Date)) value = new Date(value);\n\n      if (!(compareValue instanceof Date))\n         compareValue = new Date(compareValue);\n      switch (rule) {\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         case \"is_current_date\":\n            result =\n               value.setHours(0, 0, 0, 0) == compareValue.setHours(0, 0, 0, 0);\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      return result;\n   }\n\n   numberValid(value, rule, compareValue) {\n      let result = false;\n\n      value = Number(value);\n      compareValue = Number(compareValue);\n\n      switch (rule) {\n         case \"equal\":\n         case \"equals\":\n            result = value == compareValue;\n            break;\n         case \"not_equal\":\n            result = value != compareValue;\n            break;\n         case \"less\":\n            result = value < compareValue;\n            break;\n         case \"greater\":\n            result = value > compareValue;\n            break;\n         case \"less_or_equal\":\n            result = value <= compareValue;\n            break;\n         case \"greater_or_equal\":\n            result = value >= compareValue;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   listValid(value, rule, compareValue) {\n      let result = false;\n\n      // compareValue = compareValue.toLowerCase();\n\n      if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n      switch (rule) {\n         case \"equals\":\n            if (value) result = compareValue.indexOf(value) > -1;\n            break;\n         case \"not_equal\":\n            if (value) result = compareValue.indexOf(value) < 0;\n            else result = true;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   booleanValid(value, rule, compareValue) {\n      let result = false;\n\n      switch (rule) {\n         case \"checked\":\n            result = value == true || value > 0 || value == \"true\";\n            break;\n         case \"unchecked\":\n            result =\n               value == false ||\n               value <= 0 ||\n               value == \"false\" ||\n               value == null;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n\n      return result;\n   }\n\n   userValid(value, rule, compareValue) {\n      if (!value) return false;\n      let result = false;\n\n      // if (Array.isArray(value)) value = [value];\n      /* eslint-disable no-fallthrough */\n      switch (rule) {\n         case \"is_current_user\":\n            result = value == this.Account.username;\n            break;\n         case \"is_not_current_user\":\n            result = value != this.Account.username;\n            break;\n         case \"contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"equals\"\n\n         case \"equals\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == compareValue).length >\n               0;\n            break;\n         case \"not_contain_current_user\":\n            compareValue = this.Account.username;\n         // break;  <-- NO BREAK HERE: fall through to \"not_equals\"\n\n         case \"not_equal\":\n            if (!Array.isArray(value)) value = [value];\n\n            result =\n               value.filter((v) => (v.username || v) == compareValue).length <\n               1;\n            break;\n         default:\n            result = this.queryFieldValid(value, rule, compareValue);\n            break;\n      }\n      /* eslint-enable no-fallthrough */\n\n      return result;\n   }\n\n   queryFieldValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      // queryId:fieldId\n      const queryId = compareValue.split(\":\")[0],\n         fieldId = compareValue.split(\":\")[1];\n\n      // if no query\n      const query = this.AB.queries((q) => q.id == queryId)[0];\n      if (!query) return result;\n\n      // if no field\n      const field = query.fields((f) => f.id == fieldId)[0];\n      if (!field) return result;\n\n      let qIdBase = \"{idBase}-query-field-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFieldFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFieldFilter.Account = this.Account;\n      inQueryFieldFilter.fieldsLoad(query.fields());\n      inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query_field\":\n            result = inQueryFieldFilter.isValid(rowData);\n            break;\n         case \"not_in_query_field\":\n            result = !inQueryFieldFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   inQueryValid(rowData, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue || !this.AB) return result;\n\n      // if no query\n      let query = this.AB.queries((q) => q.id == compareValue)[0];\n      if (!query) return result;\n\n      let qIdBase = \"{idBase}-query-{id}\"\n            .replace(\"{idBase}\", this.idBase)\n            .replace(\"{id}\", query.id),\n         inQueryFilter = new this.constructor(qIdBase, this.AB);\n      inQueryFilter.Account = this.Account;\n      inQueryFilter.fieldsLoad(query.fields());\n      inQueryFilter.setValue(query.workspaceFilterConditions);\n\n      switch (rule) {\n         case \"in_query\":\n            result = inQueryFilter.isValid(rowData);\n            break;\n         case \"not_in_query\":\n            result = !inQueryFilter.isValid(rowData);\n            break;\n      }\n\n      return result;\n   }\n\n   dataCollectionValid(value, rule, compareValue) {\n      let result = false;\n\n      if (!compareValue) return result;\n\n      let dc = this.AB.datacollections((d) => d.id == compareValue)[0];\n\n      switch (rule) {\n         case \"in_data_collection\":\n            if (!dc) return false;\n\n            result = dc.getData((d) => d.id == value.id).length > 0;\n            break;\n         case \"not_in_data_collection\":\n            if (!dc) return true;\n\n            result = dc.getData((d) => d.id == value.id).length < 1;\n            break;\n      }\n\n      return result;\n   }\n\n   connectFieldValid(rowData, field, rule, compareValue) {\n      let relationName = field.relationName();\n\n      let connectedVal = \"\";\n\n      if (rowData) {\n         if (rowData[relationName]) {\n            connectedVal = (\n               (field.indexField\n                  ? rowData[relationName][field.indexField.columnName]\n                  : null) ?? // custom index\n               (field.indexField2\n                  ? rowData[relationName][field.indexField2.columnName]\n                  : null) ?? // custom index 2\n               rowData[relationName].id ??\n               rowData[relationName]\n            )\n               .toString()\n               .toLowerCase();\n         } else {\n            let fieldVal = getFieldVal(rowData, field);\n            if (fieldVal != null) {\n               connectedVal = fieldVal;\n            }\n         }\n      }\n\n      // If value will be the connected object, then pull value (string)\n      if (typeof connectedVal == \"object\") {\n         connectedVal =\n            connectedVal[field.indexField.columnName] ??\n            connectedVal[field.indexField2.columnName] ??\n            connectedVal[field.columnName] ??\n            connectedVal;\n      }\n\n      // Compare value isn't always a string?\n      // https://appdev-designs.sentry.io/issues/5056850389/\n      let compareValueLowercase =\n         typeof compareValue === \"string\"\n            ? compareValue.toLowerCase?.()\n            : compareValue;\n\n      switch (rule) {\n         case \"contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) > -1;\n         case \"not_contains\":\n            return connectedVal.toString().indexOf(compareValueLowercase) == -1;\n         case \"equals\":\n            return connectedVal == compareValueLowercase;\n         case \"not_equal\":\n            return connectedVal != compareValueLowercase;\n         case \"in_query\":\n         case \"not_in_query\":\n            return this.inQueryValid(rowData[relationName], rule, compareValue);\n         case \"is_current_user\":\n         case \"is_not_current_user\":\n         case \"contain_current_user\":\n         case \"not_contain_current_user\":\n            return this.userValid(connectedVal, rule, compareValue);\n         case \"is_empty\":\n            return (\n               rowData[relationName] == null ||\n               rowData[relationName].length < 1 ||\n               rowData[relationName] == \"\"\n            );\n         case \"is_not_empty\":\n            return (\n               rowData[relationName] != null &&\n               ((Array.isArray(rowData[relationName]) &&\n                  rowData[relationName].length > 0) ||\n                  rowData[relationName] != \"\")\n            );\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            return this.dataCollectionValid(connectedVal, rule, compareValue);\n      }\n   }\n\n   thisObjectValid(rowData, rule, compareValue) {\n      let result = false;\n      let query = null;\n      let listThisObjects = null;\n      let alias = null;\n      let newRowData = null;\n\n      switch (rule) {\n         // if in_query condition\n         case \"in_query\":\n         case \"not_in_query\":\n            if (!this._Object) return result;\n\n            // if > 1 copy of this object in query ==> Error!\n            query = this.AB.queries((q) => q.id == compareValue)[0];\n\n            if (!query) return result;\n\n            listThisObjects = query.objects((o) => {\n               return o.id == this._Object.id;\n            });\n\n            if (listThisObjects.length > 1) {\n               // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n               // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n               // this object as part of the query.\n\n               console.error(\n                  \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n               );\n\n               return true;\n            }\n\n            // get this object's alias from the query\n            alias = query.objectAlias(this._Object.id);\n\n            // make sure all my columns in rowData are prefixed by \"alias\".columnName\n            newRowData = {};\n\n            Object.keys(rowData).forEach((key) => {\n               newRowData[`${alias}.${key}`] = rowData[key];\n            });\n\n            // then pass this on to the _logic.queryValid();\n            return this.inQueryValid(newRowData, rule, compareValue);\n\n         // if in_datacollection condition\n         case \"in_data_collection\":\n         case \"not_in_data_collection\":\n            // send rowData, null to datacollectionValid()\n            return this.dataCollectionValid(rowData, rule, compareValue);\n      }\n   }\n\n   processFieldsLoad(processFields = []) {\n      if (processFields && !Array.isArray(processFields)) {\n         processFields = [processFields];\n      }\n      this._ProcessFields = processFields;\n\n      this.uiInit();\n   }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param array {ABField}\n    * @param object {ABObject} [optional]\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter(\n         (f) => f && f.fieldIsFilterable && f.fieldIsFilterable()\n      );\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         // insert our uuid in addition to the rest of our fields\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n            key: \"uuid\",\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         // NOTE: Could not reference ABObjectQuery because recursive looping reference\n         // if (object instanceof ABObjectQuery) {\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   fieldsToQB() {\n      /*\n      let mapTypes = {\n         LongText: \"string\",\n         email: \"string\",\n         datetime: \"date\",\n         connectField: \"connectObject\"\n      };\n\n      const fields = this._Fields.map((f) => {\n         // Label\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         // Type\n         let type = f.key || f.type;\n         if (mapTypes[type]) type = mapTypes[type];\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return { id: f.columnName, value: label, type: type };\n      });\n      return fields;\n      */\n\n      let fields = (this._Fields || []).map((f) => {\n         let label = f.label;\n         if (this._settings.showObjectName && f.object && f.object.label)\n            label = `${f.object.label}.${f.label}`;\n\n         let type = \"text\"; // \"text\", \"number\", \"date\"\n         let conditions = [];\n         let processFieldKeys = [];\n         let hasQueryField = true;\n\n         if (!this._settings.isProcessParticipant)\n            switch (f.key) {\n               case \"boolean\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersBoolean(f)\n                  );\n                  processFieldKeys = [\"boolean\"];\n\n                  break;\n\n               case \"connectObject\":\n                  conditions = this.fieldsAddFiltersConnectObject(f);\n\n                  // Add filter options to Custom index\n                  if (\n                     // 1:M\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"many\") ||\n                     // 1:1 isSource = true\n                     (f.settings.linkType == \"one\" &&\n                        f.settings.linkViaType == \"one\" &&\n                        f.settings.isSource)\n                  ) {\n                     const stringResults = this.fieldsAddFiltersString(\n                        f\n                     ).filter(\n                        (opt) =>\n                           f.settings.isCustomFK ||\n                           // If this connect field does not use custom FK, then allow just `is empty` and `is not empty` filter options\n                           opt.id == \"is_empty\" ||\n                           opt.id == \"is_not_empty\"\n                     );\n                     conditions = stringResults.concat(conditions);\n                  }\n\n                  hasQueryField = false;\n                  processFieldKeys = [\"connectObject\"];\n\n                  break;\n\n               case \"date\":\n               case \"datetime\":\n                  type = \"date\";\n                  conditions = conditions.concat(this.fieldsAddFiltersDate(f));\n                  processFieldKeys = [\"date\", \"datetime\"];\n\n                  break;\n\n               case \"calculate\":\n               case \"formula\":\n               case \"number\":\n                  type = \"number\";\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersNumber(f)\n                  );\n                  processFieldKeys = [\"calculate\", \"formula\", \"number\"];\n\n                  break;\n\n               case \"string\":\n               case \"LongText\":\n               case \"email\":\n               case \"AutoIndex\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersString(f)\n                  );\n                  processFieldKeys = [\n                     \"string\",\n                     \"LongText\",\n                     \"email\",\n                     \"AutoIndex\",\n                  ];\n\n                  break;\n\n               case \"list\":\n                  conditions = conditions.concat(this.fieldsAddFiltersList(f));\n\n                  break;\n\n               case \"user\":\n                  conditions = conditions.concat(this.fieldsAddFiltersUser(f));\n                  processFieldKeys = [\"user\"];\n\n                  break;\n\n               case \"uuid\":\n                  conditions = conditions.concat(\n                     this.fieldsAddFiltersThisObject(f)\n                  );\n                  hasQueryField = false;\n\n                  break;\n               default:\n                  break;\n            }\n         else\n            switch (f.key) {\n               case \"connectObject\":\n               case \"uuid\":\n                  hasQueryField = false;\n\n                  break;\n            }\n\n         conditions = conditions.concat(\n            this.fieldsAddFiltersQuery(f, hasQueryField)\n         );\n\n         if (this._settings.isRecordRule) {\n            conditions = conditions.concat(this.fieldsAddFiltersRecordRule(f));\n         }\n\n         let isProcessField =\n            (this._ProcessFields || []).filter((processField) => {\n               if (!processField) return false;\n\n               if (processField.field) {\n                  return processFieldKeys.includes(processField.field.key);\n               } else if (processField.key) {\n                  // uuid\n                  let processFieldId = processField.key.split(\".\").pop();\n                  return processFieldId == f.id || processFieldId == f.key;\n               }\n            }).length > 0;\n\n         if (isProcessField) {\n            conditions = conditions.concat(this.fieldsAddFiltersContext(f));\n         }\n\n         conditions = conditions.concat(this.fieldsAddFiltersCustom(f));\n\n         // let type = f.id; // the default unique identifier for our filter types\n         // if (f.id == \"this_object\") {\n         //    // if this happens to be our special \"this_object\" field, then our\n         //    // type needs to be the \"uuid\" type in the definition:\n         //    type = f.type;\n         // }\n\n         // the format for webix querybuilder:\n         // { id  value:\"label\" type }\n         //      type: {string} the type of value it is.\n         //            since we want to tailor value selectors per field,\n         //            we will make a unique type for each field. and then\n         //            add value selectors for that specific .type\n         return {\n            id: f.id,\n            value: label,\n            type: type,\n            conditions: conditions,\n            // format: () => {},\n         };\n      });\n\n      // !!! Process Fields of ABProcess\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L636\n      // https://github.com/digi-serve/appbuilder_class_core/blob/master/FilterComplexCore.js#L564\n      // (this._ProcessFields || [])\n      //    // if there is no .field, it is probably an embedded special field\n      //    .filter((pField) => pField.field == null)\n      //    .forEach((pField) => {\n      //       // like: .uuid\n      //       let key = pField.key.split(\".\").pop();\n      //       if (key == \"uuid\" && this._Object) {\n      //          fields.unshift({\n      //             id: pField.key,\n      //             value: this._Object.label,\n      //             type: \"text\",\n      //             conditions: this.fieldsAddFiltersContext(),\n      //          });\n      //       }\n      //    });\n\n      return fields;\n   }\n\n   fieldsAddFiltersDate(field) {\n      let dateConditions = {\n         less: this.labels.component.beforeCondition,\n         greater: this.labels.component.afterCondition,\n         less_or_equal: this.labels.component.onOrBeforeCondition,\n         greater_or_equal: this.labels.component.onOrAfterCondition,\n         is_current_date: this.labels.component.isCurrentDateCondition,\n         less_current: this.labels.component.beforeCurrentCondition,\n         greater_current: this.labels.component.afterCurrentCondition,\n         less_or_equal_current:\n            this.labels.component.onOrBeforeCurrentCondition,\n         greater_or_equal_current:\n            this.labels.component.onOrAfterCurrentCondition,\n         last_days: this.labels.component.onLastDaysCondition,\n         next_days: this.labels.component.onNextDaysCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in dateConditions) {\n         if (condKey == \"is_current_date\") {\n            result.push({\n               id: condKey,\n               value: dateConditions[condKey],\n               batch: \"none\",\n               handler: (a, b) => this.dateValid(a, condKey, b),\n            });\n         } else {\n            result.push({\n               id: condKey,\n               value: dateConditions[condKey],\n               batch: \"datepicker\",\n               handler: (a, b) => this.dateValid(a, condKey, b),\n            });\n         }\n      }\n      return result;\n   }\n\n   fieldsAddFiltersString(field) {\n      let stringConditions = {\n         contains: {\n            batch: \"text\",\n            label: this.labels.component.containsCondition,\n         },\n         not_contains: {\n            batch: \"text\",\n            label: this.labels.component.notContainsCondition,\n         },\n         equals: {\n            batch: \"text\",\n            label: this.labels.component.isCondition,\n         },\n         not_equal: {\n            batch: \"text\",\n            label: this.labels.component.isNotCondition,\n         },\n         is_empty: {\n            batch: \"none\",\n            label: this.labels.component.isEmpty,\n         },\n         is_not_empty: {\n            batch: \"none\",\n            label: this.labels.component.isNotEmpty,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in stringConditions) {\n         result.push({\n            id: condKey,\n            value: stringConditions[condKey].label,\n            batch: stringConditions[condKey].batch,\n            handler: (a, b) => this.textValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersNumber(field) {\n      let numberConditions = {\n         equals: this.labels.component.equalCondition,\n         not_equal: this.labels.component.notEqualCondition,\n         less: this.labels.component.lessThanCondition,\n         greater: this.labels.component.moreThanCondition,\n         less_or_equal: this.labels.component.lessThanOrEqualCondition,\n         greater_or_equal: this.labels.component.moreThanOrEqualCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in numberConditions) {\n         result.push({\n            id: condKey,\n            value: numberConditions[condKey],\n            batch: \"text\",\n            handler: (a, b) => this.numberValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersList(field) {\n      let listConditions = {\n         equals: this.labels.component.equalListCondition,\n         not_equal: this.labels.component.notEqualListCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in listConditions) {\n         result.push({\n            id: condKey,\n            value: listConditions[condKey],\n            batch: \"list\",\n            handler: (a, b) => this.listValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersBoolean(field) {\n      let booleanConditions = {\n         checked: this.labels.component.checkedCondition,\n         unchecked: this.labels.component.notCheckedCondition,\n      };\n\n      let result = [];\n\n      for (let condKey in booleanConditions) {\n         result.push({\n            id: condKey,\n            value: booleanConditions[condKey],\n            batch: \"none\",\n            handler: (a, b) => this.booleanValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersUser(field) {\n      let userConditions = {\n         is_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isCurrentUserCondition,\n         },\n         is_not_current_user: {\n            batch: \"none\",\n            label: this.labels.component.isNotCurrentUserCondition,\n         },\n         contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.containsCurrentUserCondition,\n         },\n         not_contain_current_user: {\n            batch: \"none\",\n            label: this.labels.component.notContainsCurrentUserCondition,\n         },\n         equals: {\n            batch: \"user\",\n            label: this.labels.component.equalListCondition,\n         },\n         not_equal: {\n            batch: \"user\",\n            label: this.labels.component.notEqualListCondition,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in userConditions) {\n         result.push({\n            id: condKey,\n            value: userConditions[condKey].label,\n            batch: userConditions[condKey].batch,\n            handler: (a, b) => this.userValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersConnectObject(field) {\n      const connectConditions = {\n         same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.sameAsUser,\n            handler: (a, b) => this.userValid(a, \"same_as_user\", b),\n         },\n         not_same_as_user: {\n            batch: \"user\",\n            label: this.labels.component.notSameAsUser,\n            handler: (a, b) => this.userValid(a, \"not_same_as_user\", b),\n         },\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"in_data_collection\", b),\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n            handler: (a, b) =>\n               this.dataCollectionValid(a, \"not_in_data_collection\", b),\n         },\n         // TODO\n         // contains: this.labels.component.containsCondition,\n         // not_contains: this.labels.component.notContainCondition,\n         // equals: this.labels.component.isCondition,\n         // not_equal: this.labels.component.isNotCondition\n      };\n\n      const result = [];\n\n      for (let condKey in connectConditions) {\n         result.push({\n            id: condKey,\n            value: connectConditions[condKey].label,\n            batch: connectConditions[condKey].batch,\n            handler: connectConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersQuery(field, hasQueryField = false) {\n      const queryConditions = hasQueryField\n         ? {\n              in_query_field: {\n                 label: this.labels.component.inQueryField,\n                 batch: \"queryField\",\n              },\n              not_in_query_field: {\n                 label: this.labels.component.notInQueryField,\n                 batch: \"queryField\",\n              },\n           }\n         : {\n              in_query: {\n                 label: this.labels.component.inQuery,\n                 batch: \"query\",\n              },\n              not_in_query: {\n                 label: this.labels.component.notInQuery,\n                 batch: \"query\",\n              },\n           };\n\n      const result = [];\n\n      for (const condKey in queryConditions) {\n         result.push({\n            id: condKey,\n            value: queryConditions[condKey].label,\n            batch: queryConditions[condKey].batch,\n            handler: (a, b) => this.queryFieldValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersThisObject(field) {\n      let thisObjectConditions = {\n         in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.inDataCollection,\n         },\n         not_in_data_collection: {\n            batch: \"datacollection\",\n            label: this.labels.component.notInDataCollection,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in thisObjectConditions) {\n         result.push({\n            id: condKey,\n            value: thisObjectConditions[condKey].label,\n            batch: thisObjectConditions[condKey].batch,\n            handler: (a, b) => this.thisObjectValid(a, condKey, b),\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersRecordRule(field) {\n      let recordRuleConditions = {\n         same_as_field: this.labels.component.sameAsField,\n         not_same_as_field: this.labels.component.notSameAsField,\n      };\n\n      let result = [];\n\n      for (let condKey in recordRuleConditions) {\n         result.push({\n            id: condKey,\n            value: recordRuleConditions[condKey],\n            batch: \"recordRule\",\n            handler: (a, b) => true, // TODO: record rule validation\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersContext(field) {\n      let contextConditions = {\n         context_equals: {\n            batch: \"context\",\n            label: this.labels.component.equalsProcessValue,\n            handler: (a, b) => a == b,\n         },\n         context_not_equal: {\n            batch: \"context\",\n            label: this.labels.component.notEqualsProcessValueCondition,\n            handler: (a, b) => a != b,\n         },\n         context_in: {\n            batch: \"context\",\n            label: this.labels.component.inProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) > -1,\n         },\n         context_not_in: {\n            batch: \"context\",\n            label: this.labels.component.notInProcessValueCondition,\n            handler: (a, b) => a.indexOf(b) == -1,\n         },\n      };\n\n      let result = [];\n\n      for (let condKey in contextConditions) {\n         result.push({\n            id: condKey,\n            value: contextConditions[condKey].label,\n            batch: contextConditions[condKey].batch,\n            handler: contextConditions[condKey].handler,\n         });\n      }\n\n      return result;\n   }\n\n   fieldsAddFiltersCustom(field) {\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id || field] ?? {};\n      return options.conditions ?? [];\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    *\n    * return an array of all the ABObjectQuery.\n    *\n    * @param filter {Object}\n    *\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      const queryList = this._Queries ?? this.AB?.queries?.() ?? [];\n\n      return queryList.filter((q) => filter(q));\n   }\n\n   setValue(settings) {\n      this.condition = settings || {};\n\n      this.condition.rules = this.condition.rules || [];\n   }\n\n   /**\n    * @method getValue\n    * return the current condition of the filter.\n    * @return {JSON} -\n    * {\n    * \tglue: '', // 'and', 'or'\n    *\t\trules: [\n    *\t\t\t{\n    *\t\t\t\tkey:\t'uuid',\n    *\t\t\t\trule:\t'rule',\n    *\t\t\t\tvalue:\t'value'\n    *\t\t\t}\n    *\t\t]\n    * }\n    */\n   getValue() {\n      // When asked for a value before a condition is set, default the\n      // unset glue to \"and\";\n      if (typeof this.condition.glue == \"undefined\") {\n         this.condition.glue = \"and\";\n      }\n      return this.condition;\n   }\n\n   isComplete() {\n      let result = true;\n\n      const noValueRules = [\n         \"is_current_user\",\n         \"is_not_current_user\",\n         \"contain_current_user\",\n         \"not_contain_current_user\",\n         \"same_as_user\",\n         \"not_same_as_user\",\n         \"is_empty\",\n         \"is_not_empty\",\n         \"checked\",\n         \"unchecked\",\n         \"is_current_date\",\n      ];\n\n      const isCompleteRules = (rules = []) => {\n         if (result == false) return;\n\n         rules.forEach((r) => {\n            if (r?.rules && Array.isArray(r?.rules)) {\n               isCompleteRules(r?.rules);\n            } else {\n               result =\n                  result &&\n                  r?.key != null &&\n                  r?.key != \"\" &&\n                  r?.rule != null &&\n                  r?.rule != \"\" &&\n                  ((r?.value != null && r?.value != \"\") ||\n                     noValueRules.indexOf(r?.rule) > -1);\n            }\n         });\n      };\n\n      isCompleteRules(this.condition?.rules);\n\n      return result;\n   }\n};\n","const ABComponent = require(\"../platform/ABComponent\");\n\n/**\n *  support get data from objects and queries\n */\nfunction getFieldVal(rowData, field, returnSingular = true) {\n   if (!field) return null;\n   if (!field.columnName) return null;\n   // if rowData is an array, then pull the first element to get value\n   if (rowData && rowData[0]) rowData = rowData[0];\n\n   let columnId = field.id;\n   let columnName = field.columnName;\n\n   let value = null;\n   if (columnName.indexOf(\".\") > -1) {\n      let colName = columnName.split(\".\")[1];\n      value = rowData[columnName] || rowData[colName] || rowData[columnId];\n   } else {\n      value = rowData[columnName] || rowData[columnId];\n   }\n\n   if (value) {\n      return value;\n   }\n\n   // otherwise, this might be a process check where the rowData keys have\n   // '[diagramID].[field.id]'\n   for (var k in rowData) {\n      var key = k.split(\".\")[1];\n      if (key && (key == columnId || key == columnName)) {\n         value = rowData[k];\n      }\n   }\n\n   // if value is an array, filter empty item\n   if (value && Array.isArray(value)) {\n      value = value.filter((v) => v != null);\n      if (returnSingular) value = value[0];\n   }\n\n   return value;\n}\n\nmodule.exports = class RowFilterCore extends ABComponent {\n   constructor(App, idBase, AB) {\n      idBase = idBase || \"ab_row_filter\";\n\n      super(App, idBase, AB);\n\n      this.Account = { username: \"??\" };\n      this._settings = {};\n      this.config_settings = {};\n      // var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      this._QueryFields = [];\n      this._Fields;\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onChange: () => {},\n         },\n\n         /**\n          * @method getValue\n          *\n          * @return {JSON} -\n          * {\n          * \t\tglue: '', // 'and', 'or'\n          *\t\trules: [\n          *\t\t\t{\n          *\t\t\t\tkey:\t'column name',\n          *\t\t\t\trule:\t'rule',\n          *\t\t\t\tvalue:\t'value'\n          *\t\t\t}\n          *\t\t]\n          * }\n          */\n         getValue: () => {\n            return this.config_settings;\n         },\n\n         removeHtmlTags: function (text) {\n            let result = \"\";\n            try {\n               let div = document.createElement(\"div\");\n               div.innerHTML = text;\n\n               result = div.textContent || div.innerText || \"\";\n            } catch (err) {\n               result = (text || \"\").replace(/(<([^>]+)>)/gi, \"\");\n            }\n\n            return result;\n         },\n\n         textValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value == null) value = \"\";\n\n            value = value.toString().trim().toLowerCase();\n            value = _logic.removeHtmlTags(value); // remove html tags - rich text editor\n\n            compareValue = compareValue\n               .toString()\n               .trim()\n               .toLowerCase()\n               .replace(/  +/g, \" \");\n\n            // support \"john smith\" => \"john\" OR/AND \"smith\"\n            var compareArray = compareValue.split(\" \");\n\n            switch (rule) {\n               case \"contains\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value.indexOf(val) > -1;\n                  });\n                  break;\n               case \"not_contains\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value.indexOf(val) < 0;\n                  });\n                  break;\n               case \"equals\":\n                  compareArray.forEach((val) => {\n                     if (result == false)\n                        // OR\n                        result = value == val;\n                  });\n                  break;\n               case \"not_equal\":\n                  result = true;\n                  compareArray.forEach((val) => {\n                     if (result == true)\n                        // AND\n                        result = value != val;\n                  });\n                  break;\n               case \"is_empty\":\n                  result = value == null || value == \"\";\n                  break;\n               case \"is_not_empty\":\n                  result = value != null && value != \"\";\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         dateValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (!(value instanceof Date)) value = new Date(value);\n\n            if (!(compareValue instanceof Date))\n               compareValue = new Date(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         numberValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            value = Number(value);\n            compareValue = Number(compareValue);\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               case \"less\":\n                  result = value < compareValue;\n                  break;\n               case \"greater\":\n                  result = value > compareValue;\n                  break;\n               case \"less_or_equal\":\n                  result = value <= compareValue;\n                  break;\n               case \"greater_or_equal\":\n                  result = value >= compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         listValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n            if (value && value.toLowerCase) value = value.toLowerCase();\n\n            compareValue = compareValue.toLowerCase();\n\n            if (!Array.isArray(compareValue)) compareValue = [compareValue];\n\n            switch (rule) {\n               case \"equals\":\n                  if (value) result = compareValue.indexOf(value) > -1;\n                  break;\n               case \"not_equal\":\n                  if (value) result = compareValue.indexOf(value) < 0;\n                  else result = true;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         booleanValid: function (rowData, field, rule, compareValue) {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // default value should be false\n            if (value == null) value = false;\n\n            switch (rule) {\n               case \"equals\":\n                  result = value == compareValue;\n                  break;\n               case \"not_equal\":\n                  result = value != compareValue;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         userValid: (rowData, field, rule, compareValue) => {\n            var result = false;\n\n            var value = getFieldVal(rowData, field);\n\n            // if (Array.isArray(value)) value = [value];\n\n            switch (rule) {\n               case \"is_current_user\":\n                  result = value == this.Account.username;\n                  break;\n               case \"is_not_current_user\":\n                  result = value != this.Account.username;\n                  break;\n               case \"contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length > 0;\n                  break;\n               case \"not_contain_current_user\":\n                  if (!value) {\n                     result = false;\n                     break;\n                  }\n                  if (!Array.isArray(value)) value = [value];\n\n                  result =\n                     (value || []).filter((v) => {\n                        if (v) {\n                           return (\n                              (v.username || v.id || v.text || v) ==\n                              this.Account.username\n                           );\n                        } else {\n                           return false;\n                        }\n                     }).length == 0;\n                  break;\n               case \"equals\":\n                  result = value.indexOf(compareValue) > -1;\n                  break;\n               case \"not_equal\":\n                  result = value.indexOf(compareValue) < 0;\n                  break;\n               default:\n                  result = _logic.queryValid(rowData, rule, compareValue);\n                  break;\n            }\n\n            return result;\n         },\n\n         queryValid: (rowData, rule, compareValue) => {\n            var result = false;\n\n            if (!this.AB || !compareValue) return result;\n\n            // queryId:fieldId\n            var queryId = compareValue.split(\":\")[0],\n               fieldId = compareValue.split(\":\")[1];\n\n            // if no query\n            var query = this.queries((q) => q.id == queryId)[0];\n            if (!query) return result;\n\n            // if no field\n            var field = query.fields((f) => f.id == fieldId)[0];\n            if (!field) return result;\n\n            let qIdBase = \"{idBase}-query-field-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFieldFilter = new this.constructor(this.App, qIdBase);\n            inQueryFieldFilter.Account = this.Account;\n            // inQueryFieldFilter.applicationLoad(this._Application);\n            inQueryFieldFilter.fieldsLoad(query.fields());\n            inQueryFieldFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query_field\":\n                  result = inQueryFieldFilter.isValid(rowData);\n                  break;\n               case \"not_in_query_field\":\n                  result = !inQueryFieldFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         inQueryValid: (rowData, columnName, rule, compareValue) => {\n            let result = false;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            if (!compareValue || !this.AB) return result;\n\n            // if no query\n            let query = this.queries((q) => q.id == compareValue)[0];\n            if (!query) return result;\n\n            let qIdBase = \"{idBase}-query-{id}\"\n                  .replace(\"{idBase}\", idBase)\n                  .replace(\"{id}\", query.id),\n               inQueryFilter = new this.constructor(this.App, qIdBase);\n            inQueryFilter.Account = this.Account;\n            // inQueryFilter.applicationLoad(this._Application);\n            inQueryFilter.fieldsLoad(query.fields());\n            inQueryFilter.setValue(query.workspaceFilterConditions);\n\n            switch (rule) {\n               case \"in_query\":\n                  result = inQueryFilter.isValid(rowData);\n                  break;\n               case \"not_in_query\":\n                  result = !inQueryFilter.isValid(rowData);\n                  break;\n            }\n\n            return result;\n         },\n\n         dataCollectionValid: (rowData, columnName, rule, compareValue) => {\n            var result = false;\n\n            if (!compareValue || !this.AB) return result;\n\n            if (columnName) {\n               rowData = rowData[columnName] || {};\n            }\n\n            let dc = this.AB.datacollectionByID(compareValue);\n\n            switch (rule) {\n               case \"in_data_collection\":\n                  if (!dc) return false;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length > 0;\n                  break;\n               case \"not_in_data_collection\":\n                  if (!dc) return true;\n\n                  result =\n                     dc.getData(\n                        (d) => (d.id || d.uuid) == (rowData.id || rowData.uuid)\n                     ).length < 1;\n                  break;\n            }\n\n            return result;\n         },\n\n         connectFieldValid: function (rowData, field, rule, compareValue) {\n            let relationName = field.relationName();\n\n            let connectedVal = \"\";\n\n            if (rowData) {\n               if (rowData[relationName]) {\n                  connectedVal = (\n                     (field.indexField\n                        ? rowData[relationName][field.indexField.columnName]\n                        : false) || // custom index\n                     (field.indexField2\n                        ? rowData[relationName][field.indexField2.columnName]\n                        : false) || // custom index 2\n                     rowData[relationName].id ||\n                     rowData[relationName]\n                  )\n                     .toString()\n                     .toLowerCase();\n               } else {\n                  let fieldVal = getFieldVal(rowData, field);\n                  if (fieldVal != null) {\n                     connectedVal = fieldVal;\n\n                     // an Object to a String\n                     if (typeof connectedVal == \"object\") {\n                        connectedVal =\n                           field.datasourceLink.displayData(connectedVal);\n                     }\n                  }\n               }\n            }\n\n            let compareValueLowercase = (compareValue || \"\").toLowerCase();\n\n            switch (rule) {\n               case \"contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) > -1\n                  );\n               case \"not_contains\":\n                  return (\n                     connectedVal.toString().indexOf(compareValueLowercase) ==\n                     -1\n                  );\n               case \"equals\":\n                  return connectedVal == compareValueLowercase;\n               case \"not_equal\":\n                  return connectedVal != compareValueLowercase;\n               case \"in_query\":\n               case \"not_in_query\":\n                  return _logic.inQueryValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n                  return _logic.userValid(rowData, field, rule, compareValue);\n               case \"is_empty\":\n                  return (\n                     rowData[relationName] == null ||\n                     rowData[relationName].length < 1 ||\n                     rowData[relationName] == \"\"\n                  );\n               case \"is_not_empty\":\n                  return (\n                     rowData[relationName] != null &&\n                     ((Array.isArray(rowData[relationName]) &&\n                        rowData[relationName].length > 0) ||\n                        rowData[relationName] != \"\")\n                  );\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     relationName,\n                     rule,\n                     compareValue\n                  );\n            }\n         },\n\n         thisObjectValid: (rowData, rule, compareValue) => {\n            let result = false;\n\n            switch (rule) {\n               // if in_query condition\n               case \"in_query\":\n               case \"not_in_query\":\n                  if (!this.AB || !this._Object) return result;\n\n                  // if > 1 copy of this object in query ==> Error!\n                  var query = this.queries((q) => q.id == compareValue)[0];\n                  if (!query) return result;\n\n                  var listThisObjects = query.objects((o) => {\n                     return o.id == this._Object.id;\n                  });\n                  if (listThisObjects.length > 1) {\n                     // Alternative: choose the 1st instance of this object in the query, and make the compare on that.\n                     // Be sure to warn the developer of the limitiations of an \"this_object\" \"in_query\"  when query has > 1 copy of\n                     // this object as part of the query.\n\n                     console.error(\n                        \"HEY!  Can't compare this_object to a query that has > 1 copy of that object!\"\n                     );\n                     return true;\n                  }\n\n                  // get this object's alias from the query\n                  var alias = query.objectAlias(this._Object.id);\n\n                  // make sure all my columns in rowData are prefixed by \"alias\".columnName\n                  var newRowData = {};\n                  Object.keys(rowData).forEach((key) => {\n                     newRowData[`${alias}.${key}`] = rowData[key];\n                  });\n\n                  // then pass this on to the _logic.queryValid();\n                  return _logic.inQueryValid(\n                     newRowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n\n               // if in_datacollection condition\n               case \"in_data_collection\":\n               case \"not_in_data_collection\":\n                  // send rowData, null to datacollectionValid()\n                  return _logic.dataCollectionValid(\n                     rowData,\n                     null,\n                     rule,\n                     compareValue\n                  );\n               // break; /* eslint no-unreachable */\n            }\n         },\n      });\n\n      // Interface methods for parent component:\n      // this.objectLoad = _logic.objectLoad;\n      // this.viewLoad = _logic.viewLoad;\n      this.getValue = _logic.getValue;\n      // this.setValue = _logic.setValue;\n      // this.isValid = _logic.isValid;\n   }\n\n   init(options) {\n      if (options.showObjectName) {\n         this._settings.showObjectName = options.showObjectName;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    */\n   isValid(rowData) {\n      var config_settings = this.config_settings;\n      var _logic = this._logic;\n\n      // If no conditions, then return true\n      if (\n         config_settings == null ||\n         config_settings.rules == null ||\n         config_settings.rules.length == 0\n      )\n         return true;\n\n      if (rowData == null) return false;\n\n      var result = config_settings.glue === \"and\" ? true : false;\n\n      config_settings.rules.forEach((filter) => {\n         if (!filter?.key || !filter?.rule) return;\n\n         var fieldInfo = this._Fields.filter((f) => f.id == filter.key)[0];\n         if (!fieldInfo) return;\n\n         var condResult;\n\n         // Filters that have \"this_object\" don't have a fieldInfo.key, so in that case,\n         // define a special .key == \"this_object\"\n         var ruleFieldType = fieldInfo.key;\n         if (typeof fieldInfo.key == \"undefined\") {\n            if (fieldInfo.id != \"this_object\") {\n               fieldInfo.key = \"connectField\"; // if you are looking at the parent object it won't have a key to analyze\n               ruleFieldType = fieldInfo.key;\n            } else ruleFieldType = \"this_object\";\n         }\n\n         switch (ruleFieldType) {\n            case \"string\":\n            case \"LongText\":\n            case \"email\":\n               condResult = _logic.textValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"date\":\n            case \"datetime\":\n               condResult = _logic.dateValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"number\":\n            case \"formula\":\n               condResult = _logic.numberValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"list\":\n               condResult = _logic.listValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"boolean\":\n               condResult = _logic.booleanValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"user\":\n               condResult = _logic.userValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"connectField\":\n            case \"connectObject\":\n               condResult = _logic.connectFieldValid(\n                  rowData,\n                  fieldInfo,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n            case \"this_object\":\n               condResult = _logic.thisObjectValid(\n                  rowData,\n                  filter.rule,\n                  filter.value\n               );\n               break;\n         }\n\n         if (config_settings.glue === \"and\") {\n            result = result && condResult;\n         } else {\n            result = result || condResult;\n         }\n      });\n\n      return result;\n   }\n\n   /**\n    * @method applicationLoad\n    * set application\n    *\n    * @param application {ABApplication}\n    */\n   // applicationLoad(application) {\n   //    this._Application = application;\n   // }\n\n   /**\n    * @method fieldsLoad\n    * set fields\n    *\n    * @param {array} fields\n    *        an array of fields used in this Query\n    * @param {ABObject} object [optional]\n    *        (optional) ABObject reference if this Filter should support\n    *        the \"this object\" conditions.\n    */\n   fieldsLoad(fields = [], object = null) {\n      this._Fields = fields.filter((f) => f?.fieldIsFilterable?.());\n      // NOTE: User fields are now Connections, but we want to treat them\n      // differently.\n      this._QueryFields = this._Fields\n         ? this._Fields.filter((f) => f && f.isConnection && f.key != \"user\")\n         : [];\n\n      // insert our 'this object' entry if an Object was given.\n      if (object) {\n         this._Object = object;\n\n         let thisObjOption = {\n            id: \"this_object\",\n            label: object.label,\n         };\n\n         // If object is query ,then should define default alias: \"BASE_OBJECT\"\n         if (object.viewName) {\n            thisObjOption.alias = \"BASE_OBJECT\";\n         }\n\n         this._Fields.unshift(thisObjOption);\n      } else {\n         delete this._Object;\n      }\n   }\n\n   queriesLoad(queries = []) {\n      this._Queries = queries;\n   }\n\n   /**\n    * @method queries()\n    * return an array of all the ABObjectQuery.\n    * @param {fn} filter\n    * @return {array}\n    */\n   queries(filter = () => true) {\n      let result = [];\n\n      if (this.AB) {\n         result = result.concat(this.AB.queries(filter));\n      }\n\n      if (this._Queries) {\n         result = result.concat(\n            (this._Queries || []).filter(\n               (q) => filter(q) && result.filter((r) => r.id == q.id).length < 1\n            )\n         );\n      }\n\n      return result;\n   }\n\n   setValue(settings) {\n      this.config_settings = settings || {};\n      this.config_settings.rules = this.config_settings.rules || [];\n   }\n};\n","/*\n * ABFieldAutoIndex\n *\n * An ABFieldAutoIndex defines a AutoIndex field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldAutoIndexDefaults = {\n   key: \"AutoIndex\",\n   // unique key to reference this specific DataField\n\n   description: \"Auto Increment Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Auto Index\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"tinyint\", \"smallint\", \"mediumint\", \"int\", \"integer\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   prefix: \"\",\n   delimiter: \"none\",\n   displayLength: 4,\n   previewText: \"0000\",\n};\n\nmodule.exports = class ABFieldAutoIndexCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldAutoIndexDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldAutoIndexDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getDelimiterSign(text) {\n      const delimiterItem = this.delimiterList().filter((item) => {\n         return item.id == text;\n      })[0];\n\n      return delimiterItem ? delimiterItem.sign : \"\";\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\"), sign: \"\" },\n         { id: \"comma\", value: L(\"Comma\"), sign: \", \" },\n         { id: \"slash\", value: L(\"Slash\"), sign: \"/\" },\n         { id: \"space\", value: L(\"Space\"), sign: \" \" },\n         { id: \"dash\", value: L(\"Dash\"), sign: \"-\" },\n         { id: \"colon\", value: L(\"Colon\"), sign: \":\" },\n      ];\n   }\n\n   static setValueToIndex(prefix, delimiter, displayLength, displayNumber) {\n      const resultIndex =\n         prefix +\n         this.getDelimiterSign(delimiter) +\n         (\"0000000000\" + displayNumber).slice(-parseInt(displayLength));\n\n      return resultIndex;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.displayLength = parseInt(this.settings.displayLength);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      if (!rowData?.[this.columnName]) return \"\";\n\n      try {\n         const resultAutoIndex = this.constructor.setValueToIndex(\n            this.settings.prefix,\n            this.settings.delimiter,\n            this.settings.displayLength,\n            rowData[this.columnName]\n         );\n\n         return resultAutoIndex;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldBoolean\n *\n * An ABFieldBoolean defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldBooleanDefaults = {\n   key: \"boolean\",\n   // unique key to reference this specific DataField\n\n   description: \"A single checkbox that can be checked or unchecked.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"check-square-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'check-square-o'  to\n   // reference 'fa-check-square-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Checkbox\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"boolean\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"bool\", \"boolean\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: 0,\n};\n\nmodule.exports = class ABFieldBooleanCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldBooleanDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldBooleanDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      if (this.settings.default != null)\n         this.settings.default = parseInt(this.settings.default);\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null && this.settings.default != null) {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n};\n","/*\n * ABFieldCalculate\n *\n * An ABFieldCalculate defines a calculate field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\n/** Private methods */\nfunction AGE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   const today = new Date();\n   const oneYear = 31536000000; // (24 * 60 * 60 * 1000) * 365;\n   const diffYears = (today - dataDate) / oneYear;\n\n   if (diffYears < 1) return Math.round(diffYears * 10) / 10;\n   // float 2 digits\n   else return Math.floor(diffYears); // no float digit\n\n   // const today = new Date();\n   // const age = today.getFullYear() - dataDate.getFullYear();\n   // if (age < 1) {\n   // \tconst m = today.getMonth() - dataDate.getMonth();\n\n   // \tage = parseFloat(\"0.\" + m);\n\n   // \t// if (m < 0 || (m === 0 && today.getDate() < dataDate.getDate())) {\n   // \t// \tage--;\n   // \t// }\n   // }\n   // return age;\n}\n\nfunction YEAR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getFullYear();\n}\n\nfunction MONTH(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // Start at 0\n   return dataDate.getMonth();\n}\n\nfunction DAY(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   return dataDate.getDate();\n}\n\nfunction DATE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one day\n   const oneDay = 86400000; // 1000 * 60 * 60 * 24\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneDay);\n}\n\nfunction HOUR(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneHour = 3600000; // 1000 * 60 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneHour);\n}\n\nfunction MINUTE(dateString) {\n   // validate\n   if (!dateString) return 0;\n   const dataDate = new Date(dateString);\n   if (!dataDate) return 0;\n\n   // number of miliseconds in one hour\n   const oneMinute = 60000; // 1000 * 60\n\n   // Convert back to days and return\n   return Math.round(dataDate.getTime() / oneMinute);\n}\n\nfunction MINUTE_TO_HOUR(mins) {\n   const hours = mins / 60;\n   const rhours = Math.floor(hours);\n   const minutes = (hours - rhours) * 60;\n   const rminutes = Math.round(minutes);\n\n   return parseFloat(`${rhours}.${rminutes}`);\n}\n\nconst ABFieldCalculateDefaults = {\n   key: \"calculate\",\n   // unique key to reference this specific DataField\n\n   description: \"Perform a calculation based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calculator\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calculator'  to\n   // reference 'fa-calculator'\n\n   isFilterable: (field) => {\n      const unsupportedInFilter = [\"MINUTE_TO_HOUR\", \"DATE\", \"HOUR\", \"MINUTE\"];\n      const unsupported = unsupportedInFilter.filter((item) =>\n         field.settings.formula.includes(item)\n      );\n      return unsupported.length == 0;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Calculate\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   formula: \"\",\n   decimalSign: \"none\", // \"none\", \"comma\", \"period\", \"space\"\n   decimalPlaces: 0, // 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\n};\n\nmodule.exports = class ABFieldCalculateCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCalculateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCalculateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method convertToJs\n    *\n    * @param {ABOBject} object\n    * @param {string} formula\n    * @param {object} rowData\n    * @param {integer} place\n    * @param {string} alias [Optional]\n    */\n   static convertToJs(object, formula, rowData, place, alias = null) {\n      if (!formula) return \"\";\n\n      // replace with current date\n      formula = formula.replace(/\\(CURRENT\\)/g, \"(new Date())\");\n\n      object.fields().forEach((f) => {\n         let colName = f.columnName;\n         if (colName.indexOf(\".\") > -1)\n            // QUERY: get only column name\n            colName = colName.split(\".\")[1];\n\n         // if template does not contain, then should skip\n         if (formula.indexOf(\"{\" + colName + \"}\") < 0) return;\n\n         const data =\n            rowData[`${object.alias ?? alias}.${f.columnName}`] ??\n            rowData[f.columnName];\n\n         // number fields\n         if (f.key == \"number\") {\n            const numberVal = `(${data || 0})`; // (number) - NOTE : (-5) to support negative number\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               numberVal\n            );\n         }\n         // calculate and formula fields\n         else if (f.key == \"calculate\" || f.key == \"formula\") {\n            let calVal = f.format(rowData) || 0;\n\n            // pull number only\n            if (typeof calVal == \"string\")\n               calVal = calVal.replace(/[^-0-9.]/g, \"\");\n\n            calVal = `(${calVal})`;\n\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               calVal\n            );\n         }\n         // date fields\n         else if (f.key == \"date\" || f.key == \"datetime\") {\n            const dateVal = `\"${data || \"\"}\"`; // \"date\"\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               dateVal\n            );\n         }\n         // boolean fields\n         else if (f.key == \"boolean\") {\n            const booleanVal = `(${data || 0})`; // show 1 or 0 for boolean\n            formula = formula.replace(\n               new RegExp(\"{\" + colName + \"}\", \"g\"),\n               booleanVal\n            );\n         }\n      });\n\n      // decimal places - toFixed()\n      // FIX: floating number calculation\n      // https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\n      return eval(formula).toFixed(place || 0);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   format(rowData) {\n      let place = 0;\n      if (this.settings.decimalSign != \"none\") {\n         place = this.settings.decimalPlaces;\n      }\n\n      try {\n         let result = this.constructor.convertToJs(\n            this.object,\n            this.settings.formula,\n            rowData,\n            place,\n            this.alias\n         );\n\n         if (typeof result == \"string\")\n            result = result.replace(/[^-0-9.]/g, \"\");\n\n         switch (this.settings.decimalSign) {\n            case \"comma\":\n               result = result.replace(\".\", \",\");\n               break;\n            case \"space\":\n               result = result.replace(\".\", \" \");\n               break;\n         }\n\n         return result;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n","/*\n * ABFieldCombine\n *\n * An ABFieldCombine defines a combined field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldCombinedDefaults = {\n   key: \"combined\",\n   // unique key to reference this specific DataField\n\n   description: \"Combined Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"key\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'key'  to\n   // reference 'fa-key'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Combined Field\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   combinedFields: \"\",\n   // {string} \"field's uuid1, field's uuid2, field's uuid3, ...\"\n   // This tells us what fields will be combined.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   delimiter: \"plus\", // plus, space, dash, period\n};\n\nmodule.exports = class ABFieldCombineCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldCombinedDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldCombinedDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.delimiter =\n         values.settings.delimiter || defaultValues.delimiter;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Remove every values, then we will use AUTO_INCREMENT of MySQL\n      delete values[this.columnName];\n   }\n};\n","/*\n * ABFieldConnect\n *\n * An ABFieldConnect defines a connect to other object field type.\n *\n */\n\nvar ABField = require(\"../../platform/dataFields/ABField\");\n\n// function L(key, altText) {\n//    // TODO:\n//    return altText; // AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABFieldConnectDefaults = {\n   key: \"connectObject\",\n   // unique key to reference this specific DataField\n\n   description: \"Connect two data objects together\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"external-link\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'external-link'  to\n   // reference 'fa-external-link'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      const linkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      return [\"one:many\", \"one:one\"].indexOf(linkType) > -1;\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Connect to another record\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   linkObject: \"\", // ABObject.id\n   // the .id of the ABObject we are connected to\n\n   linkType: \"one\", // [one, many]\n   // 'one' : this object can have only 1 of our linkObject\n   // 'many': this object can have MANY of our linkObject\n\n   linkViaType: \"many\", // [one, many]\n   // 'one' : the linkedObject can only have 1 of me\n   // 'many' : the linkedObject can have many of me\n\n   linkColumn: \"\", // ABField.id\n   // the .id of the field in the linkedObject that is our\n   // connected field.\n\n   isSource: null, // bit : 1,0\n   // isSource indicates that this object is the source of the connection:\n   // if linkType==one, and isSource=1, then the value in this object's field\n   // \t\tis the connected object's id\n   // if linkType == one, and isSource = 0, then the linkObject has this obj.id\n   //  \tin it's connected field (linkColumn)\n\n   // the next 3 Fields are concerning how we connect to other ABObjects when\n   // we are NOT using the .uuid as the connecting Value. Instead, there is an\n   // ABIndex setting we are connecting with.\n   isCustomFK: 0,\n   // {bool} truthy [0,1, etc...]\n   // indicates that this connection is using 1 or more custom foreign keys\n   // for the data it is storing in it's relationship.\n\n   indexField: \"\", // ABField.id\n   // {string} {ABField.id}\n   // In a Connection defined between A --> B, this field represents the ABField\n   // that is used for the data being stored.\n   // In 1:1,  1:M  or M:1  relationships, .indexField always refers to the\n   //       field we are pulling the Data FROM.\n   // In M:N relationships:  this will refer to the A.Field.id that is a custom\n   //       key (if any).\n\n   indexField2: \"\", // ABField.id\n   // {string}  {ABField.id}\n   // In the M:N relationship: this field refers to the B.Field.id that is a\n   //       custom Key for the data we are storing.\n};\n\nmodule.exports = class ABFieldConnectCore extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldConnectDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.isConnection = true;\n      // {bool}\n      // is this an ABFieldConnect type of field.\n      // this is a simplified helper to identify if an ABField is a type\n      // of connect field.  Since this is the only place it is defined,\n      // all other field types will be falsy\n\n      // // text to Int:\n      // this.settings.isSource = parseInt(this.settings.isSource || 0);\n      // this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldConnectDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.isSource = parseInt(this.settings.isSource || 0);\n      this.settings.isCustomFK = parseInt(this.settings.isCustomFK || 0);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(/* values */) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   relationName() {\n      // there is object name - {objectName}.{columnName}\n      if (this.columnName.indexOf(\".\") > -1) {\n         const names = this.columnName.split(\".\");\n         return `${names[0]}.${this.AB.rules.toFieldRelationFormat(names[1])}`;\n      } else {\n         return this.AB.rules.toFieldRelationFormat(this.columnName);\n      }\n   }\n\n   /**\n    * @method datasourceLink\n    * return the ABObject that this field connection links to\n    * @return {ABObject}\n    */\n   get datasourceLink() {\n      const linkObj = this.AB.objectByID(this.settings.linkObject);\n      if (!linkObj) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkObject[${this.settings.linkObject}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkObject: this.settings.linkObject,\n         });\n      }\n      return linkObj;\n   }\n\n   /**\n    * @method fieldLink\n    * return the ABField that we are linked to.\n    * @return {ABDataField}  or undefined if not found.\n    */\n   get fieldLink() {\n      const objectLink = this.datasourceLink;\n      if (!objectLink) return null; // note: already Notified\n\n      const linkColumn = objectLink.fieldByID(this.settings.linkColumn);\n      if (!linkColumn) {\n         const configError = new Error(\n            `ConnectField[${this.label}][${this.id}] unable to find linkColumn[${this.settings.linkColumn}]`\n         );\n         this.AB.notify.builder(configError, {\n            field: this,\n            linkColumn: this.settings.linkColumn,\n         });\n      }\n      return linkColumn;\n   }\n\n   /**\n    * @method pullRelationValues\n    * Return the data values for this field entry in the provided data row.\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData;\n\n      // Get linked object\n      const linkedObject = this.datasourceLink;\n\n      let data = this.dataValue(row);\n      if (data && linkedObject) {\n         // convert to JSON\n         if (typeof data == \"string\") {\n            try {\n               data = JSON.parse(data);\n            } catch (e) {\n               // must be a UUID\n               // so just set that to selectedData:\n               selectedData = data;\n            }\n         }\n\n         selectedData = data;\n      }\n\n      return selectedData;\n   }\n\n   dataValue(rowData) {\n      if (rowData == null) return \"\";\n\n      const propName = `${this.object.name}.${this.relationName()}`;\n\n      return (\n         rowData[this.relationName()] ||\n         rowData[propName] ||\n         rowData[this.columnName] ||\n         \"\"\n      );\n   }\n\n   format(rowData) {\n      const val = this.pullRelationValues(rowData);\n      const linkedObject = this.datasourceLink;\n\n      // array\n      if (Array.isArray(val))\n         return val\n            .map((v) => {\n               if (v.text == null) return linkedObject.displayData(v) || \"\";\n               else return v.text || \"\";\n            })\n            .join(\", \");\n      // string\n      else if (val) {\n         if (val.text == null) return linkedObject.displayData(rowData) || \"\";\n         else if (val.text) return val.text || \"\";\n      }\n      // empty string\n      else return \"\";\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkType() {\n      return this.settings.linkType;\n   }\n\n   /**\n    * @method linkType\n    * return the type of connection we have to our connected object\n    * @return {string}\n    */\n   linkViaType() {\n      return this.settings.linkViaType;\n   }\n\n   /**\n    * @method isSource\n    * does this object contain the .id of the remote object (in case of linkType : one )\n    * @return {bool}\n    */\n   isSource() {\n      return this.settings.isSource;\n   }\n\n   /**\n    * @property indexField\n    * @return {ABField}\n    */\n   get indexField() {\n      if (!this.settings.isCustomFK || !this.settings.indexField) {\n         return null;\n      }\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n      // 1:M\n      if (linkType === \"one:many\") {\n         return this.datasourceLink.fieldByID(this.settings.indexField);\n      }\n      // 1:1\n      else if (linkType === \"one:one\") {\n         if (this.settings.isSource) {\n            return this.datasourceLink.fieldByID(this.settings.indexField);\n         } else {\n            return this.object.fieldByID(this.settings.indexField);\n         }\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         return this.object.fieldByID(this.settings.indexField);\n      }\n      // M:N\n      else if (linkType === \"many:many\") {\n         let indexField = this.object.fieldByID(this.settings.indexField);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField\n            );\n\n         return indexField;\n      }\n\n      return null;\n   }\n\n   /**\n    * @property indexField2\n    * @return {ABField}\n    */\n   get indexField2() {\n      if (!this.settings.isCustomFK || !this.settings.indexField2) {\n         return null;\n      }\n\n      let indexField;\n\n      // M:N only\n      if (\n         this.settings.linkType == \"many\" &&\n         this.settings.linkViaType == \"many\"\n      ) {\n         indexField = this.object.fieldByID(this.settings.indexField2);\n\n         if (indexField == null)\n            indexField = this.datasourceLink.fieldByID(\n               this.settings.indexField2\n            );\n      }\n\n      return indexField;\n   }\n\n   /**\n    * @method getRelationValue\n    * pull values for update connect data\n    * @param {Object} rowData\n    * @param {Object} options - {\n    *                               forUpdate: boolean\n    *                           }\n    * @return {Object}\n    */\n   getRelationValue(rowData, options = {}) {\n      if (rowData == null) return;\n      let colName;\n      const indexField = this.indexField;\n      const datasourceLink = this.datasourceLink;\n\n      const linkType = `${this.settings.linkType}:${this.settings.linkViaType}`;\n\n      // custom index\n      // M:N\n      if (linkType === \"many:many\") {\n         const indexField2 = this.indexField2;\n\n         if (indexField && indexField.object.id == datasourceLink.id) {\n            colName = indexField.columnName;\n         } else if (indexField2 && indexField2.object.id == datasourceLink.id) {\n            colName = indexField2.columnName;\n         }\n      }\n      // 1:M, 1:1 isSource = true\n      else if (\n         indexField &&\n         (linkType === \"one:many\" ||\n            (linkType === \"one:one\" && this.settings.isSource))\n      ) {\n         colName = indexField.columnName;\n      }\n      // M:1\n      else if (linkType === \"many:one\") {\n         // NOTE: M:1 has special case\n         // it uses different value for search and update.\n         // UPDATE uses row id\n         // SEARCH uses custom index value\n         if (options.forUpdate) {\n            colName = datasourceLink.PK();\n         } else {\n            colName = indexField\n               ? indexField.columnName\n               : this.fieldLink.columnName;\n         }\n      }\n      // NO CUSTOM INDEX\n      else if (datasourceLink) {\n         colName = datasourceLink.PK();\n      }\n\n      let result =\n         rowData[colName] ||\n         rowData[this.object?.PK()] ||\n         rowData.id ||\n         rowData;\n\n      if (colName == \"id\") {\n         result = parseInt(result);\n      }\n\n      return result;\n   }\n};\n","/*\n * ABFieldCore\n *\n * ABFieldBase defines the common ABField structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABObject classes.\n *\n */\n// const ABEmitter = require(\"../../platform/ABEmitter\");\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nmodule.exports = class ABFieldCore extends ABMLClass {\n   constructor(values, object, fieldDefaults) {\n      super([\"label\"], object.AB);\n\n      // NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      this.defaults = fieldDefaults || {};\n\n      /*\n  \t\t{\n  \t\t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n  \t\t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n  \t\t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n  \t\t\tlabel:'',\t\t\t\t\t// pulled from translation\n\t\t\tcolumnName:'column_name',\t// a valid mysql table.column name\n\t\t\tisImported: 1/0,\t\t\t// flag to mark is import from other object\n\t\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n\t\t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n\t\t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n\t\t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n\t\t\t\twidth: {int}\t\t\t// width of display column\n\n\t\t\t\t// specific for dataField\n\t\t\t},\n\t\t\ttranslations:[]\n  \t\t}\n  \t\t*/\n\n      this.object = object;\n\n      this.fromValues(values);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n   static get reservedNames() {\n      return [\n         \"id\",\n         \"created_at\",\n         \"updated_at\",\n         \"properties\",\n         \"createdAt\",\n         \"updatedAt\",\n      ];\n   }\n\n   static defaultValues() {\n      return {};\n   }\n\n   // unique key to reference this specific DataField\n   fieldKey() {\n      return this.defaults.key;\n   }\n\n   /**\n    * Sails ORM data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldOrmTypes() {\n      if (this.defaults.compatibleOrmTypes) {\n         if (Array.isArray(this.defaults.compatibleOrmTypes)) {\n            return this.defaults.compatibleOrmTypes;\n         } else {\n            return [this.defaults.compatibleOrmTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * Mysql data types that can be imported to this DataField\n    * @return {Array}\n    */\n   fieldMysqlTypes() {\n      if (this.defaults.compatibleMysqlTypes) {\n         if (Array.isArray(this.defaults.compatibleMysqlTypes)) {\n            return this.defaults.compatibleMysqlTypes;\n         } else {\n            return [this.defaults.compatibleMysqlTypes];\n         }\n      } else {\n         return [];\n      }\n   }\n\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   fieldIcon() {\n      return this.defaults.icon;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldMenuName() {\n      return this.defaults.menuName;\n   }\n\n   // the multilingual text for the name of this data field.\n   fieldDescription() {\n      return this.defaults.description;\n   }\n\n   // the flag to set when checking if field should be filterable\n   fieldIsFilterable() {\n      if (this.defaults.isFilterable != null) {\n         if (typeof this.defaults.isFilterable === \"function\") {\n            return this.defaults.isFilterable(this);\n         } else {\n            return this.defaults.isFilterable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if field should be sortable\n   fieldIsSortable() {\n      if (this.defaults.isSortable != null) {\n         if (typeof this.defaults.isSortable === \"function\") {\n            return this.defaults.isSortable(this);\n         } else {\n            return this.defaults.isSortable;\n         }\n      }\n\n      return 1;\n   }\n\n   // the flag to set when checking if the field should be used as a label\n   fieldUseAsLabel() {\n      if (this.defaults.useAsLabel != null) {\n         if (typeof this.defaults.useAsLabel === \"function\") {\n            return this.defaults.useAsLabel(this);\n         } else {\n            return this.defaults.useAsLabel;\n         }\n      }\n\n      return 1;\n   }\n\n   fieldSupportRequire() {\n      if (this.defaults.supportRequire) return this.defaults.supportRequire;\n      // default\n      else return true;\n   }\n\n   fieldSupportQuery() {\n      if (this.defaults.supportQuery != null) {\n         if (typeof this.defaults.supportQuery === \"function\") {\n            return this.defaults.supportQuery(this);\n         } else {\n            return this.defaults.supportQuery;\n         }\n      }\n\n      return true;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABField instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      return {\n         id: this.id,\n         type: this.type || \"field\",\n         key: this.key,\n         icon: this.icon,\n         isImported: this.isImported,\n         columnName: this.columnName,\n         settings: this.settings,\n         translations: obj.translations,\n      };\n   }\n\n   defaultCheck(val, defaultVal) {\n      let returnVal = defaultVal;\n      if (typeof val != \"undefined\") {\n         returnVal = val;\n      }\n      return returnVal;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      if (!this.id) this.id = values.id; // NOTE: only exists after .save()\n      this.type == values.type || \"field\";\n      this.key = values.key || this.fieldKey();\n      this.icon = values.icon || this.fieldIcon();\n\n      values.settings = values.settings || {};\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.columnName = values.columnName || \"\";\n\n      this.isImported = values.isImported || 0;\n\n      this.settings = values.settings;\n      this.settings.showIcon = this.defaultCheck(values.settings.showIcon, \"1\");\n      this.settings.required = this.defaultCheck(values.settings.required, \"0\");\n      this.settings.width = this.defaultCheck(values.settings.width, \"0\");\n\n      // convert from \"0\" => 0\n      this.isImported = parseInt(this.isImported);\n      this.settings.showIcon = parseInt(this.settings.showIcon);\n      this.settings.required = parseInt(this.settings.required);\n      this.settings.unique = parseInt(this.settings.unique || 0);\n      this.settings.width = parseInt(this.settings.width);\n\n      // we're responsible for setting up our specific settings:\n      const defaultValues = this.constructor.defaultValues() || {};\n      for (const dv in defaultValues) {\n         this.settings[dv] = this.defaultCheck(\n            values.settings[dv],\n            defaultValues[dv]\n         );\n      }\n\n      // const the MLClass now process the Translations\n      super.fromValues(values);\n\n      // final validity check: columnName really should have a value:\n      this.columnName = this.columnName || this.label;\n\n      // knex does not like .(dot) in table and column names\n      // https://github.com/knex/knex/issues/2762\n      this.columnName = this.columnName.replace(/[^a-zA-Z0-9_ ]/gi, \"\");\n   }\n\n   /**\n    * @method urlPointer()\n    * return a string pointer to decode this object from the root application\n    * object.\n    * @return {string} pointer reference\n    */\n   urlPointer() {\n      return this.object.urlField() + this.id;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"\";\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    */\n   isValidData(data, validator) {\n      // console.error('!!! Field ['+this.fieldKey()+'] has not implemented .isValidData()!!!');\n      if (\n         this.settings.required &&\n         (data[this.columnName] == null || data[this.columnName] == \"\") &&\n         data[this.columnName] != 0\n      ) {\n         validator.addError(this.columnName, \"This is a required field.\");\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return false;\n   }\n\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = \"\";\n      if (rowData?.[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData?.[propName] != null) {\n         result = rowData[propName];\n      }\n\n      return result;\n   }\n\n   /**\n    * @method format\n    * return display text to detail comonent and define label of object\n    *\n    * @param {Object} rowData - data\n    */\n   format(rowData) {\n      if (rowData) {\n         return this.dataValue(rowData);\n      } else return \"\";\n   }\n\n   /**\n    * @method toDefinition()\n    *\n    * convert this instance into an ABDefinition object.\n    *\n    * @return {ABDefinition}\n    */\n   toDefinition() {\n      const myDef = super.toDefinition();\n\n      // attempt to provide a more descriptive name:\n      // [obj]->[fieldName]\n      if (myDef.name == \"\") {\n         myDef.name =\n            myDef.json.name || myDef.json.label || myDef.json.columnName;\n      }\n      if (this.object && this.object.name) {\n         myDef.name = `${this.object.name}->${myDef.name}`;\n      }\n      return myDef;\n   }\n};\n","/*\n * ABFieldDate\n *\n * An ABFieldDate defines a date field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"date\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from a calendar.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"calendar\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'calendar'  to\n   // reference 'fa-calendar'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"date\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"date\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   dateFormat: 2, // 1 (Ignore date), 2, 3, 4, 5\n   defaultDate: 1, // 1 (None), 2 (Current Date), 3 (Specific Date)\n   defaultDateValue: null, // {Date}\n   validateCondition: \"none\",\n   validateRangeUnit: \"days\",\n   validateRangeBefore: 0,\n   validateRangeAfter: 0,\n   validateStartDate: null,\n   validateEndDate: null,\n};\n\nmodule.exports = class ABFieldDateCore extends ABField {\n   constructor(values, object, defaultValues = ABFieldDateDefaults) {\n      super(values, object, defaultValues);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.dateFormat = parseInt(this.settings.dateFormat);\n      this.settings.defaultDate = parseInt(this.settings.defaultDate);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      let dateResult;\n\n      // Set current date as default\n      if (this.settings.defaultDate == 2) {\n         dateResult = new Date();\n      }\n      // Set specific date as default\n      else if (\n         this.settings.defaultDate == 3 &&\n         this.settings.defaultDateValue\n      ) {\n         dateResult = new Date(this.settings.defaultDateValue);\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null) {\n         values[this.columnName] = this.AB.rules.toDateFormat(dateResult, {\n            format: \"YYYY-MM-DD\",\n         });\n         // values[this.columnName] = moment(dateResult).format(\"YYYY-MM-DD\");\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data[this.columnName]) {\n         let value = data[this.columnName];\n\n         if (!(value instanceof Date)) {\n            value = this.AB.rules.toDate(value);\n            // value = new Date(this.convertToMoment(value));\n         }\n\n         // verify we didn't end up with an InValid Date result.\n         if (\n            Object.prototype.toString.call(value) === \"[object Date]\" &&\n            isFinite(value)\n         ) {\n            let isValid = true;\n\n            // Custom vaildate is here\n            if (this.settings && this.settings.validateCondition) {\n               const startDate = this.settings.validateStartDate\n                     ? new Date(this.settings.validateStartDate)\n                     : null,\n                  endDate = this.settings.validateEndDate\n                     ? new Date(this.settings.validateEndDate)\n                     : null,\n                  startDateDisplay = this.getDateDisplay(startDate),\n                  endDateDisplay = this.getDateDisplay(endDate);\n               const minDate = this.AB.rules.subtractDate(\n                  new Date(),\n                  this.settings.validateRangeBefore,\n                  this.settings.validateRangeUnit\n               );\n               const maxDate = this.AB.rules.addDate(\n                  new Date(),\n                  this.settings.validateRangeAfter,\n                  this.settings.validateRangeUnit\n               );\n               switch (this.settings.validateCondition) {\n                  case \"dateRange\":\n                     if (minDate < value && value < maxDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              this.getDateDisplay(minDate),\n                              this.getDateDisplay(maxDate),\n                           ])\n                        );\n                     }\n\n                     break;\n                  case \"between\":\n                     if (startDate < value && value < endDate) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"notBetween\":\n                     if (value < startDate && endDate < value) isValid = true;\n                     else {\n                        isValid = false;\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not be in between {0} and {1}\", [\n                              startDateDisplay,\n                              endDateDisplay,\n                           ])\n                        );\n                     }\n                     break;\n                  case \"=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() == startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<>\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() != startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should not equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() > startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() < startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \">=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() >= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should after or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n                  case \"<=\":\n                     isValid =\n                        value.getTime &&\n                        startDate.getTime &&\n                        value.getTime() <= startDate.getTime();\n                     if (!isValid)\n                        validator.addError(\n                           this.columnName,\n                           L(\"Should before or equal {0}\", [startDateDisplay])\n                        );\n                     break;\n               }\n            }\n\n            if (isValid) {\n               // Reformat value to DB\n               // NOTE: should we update here?\n               data[this.columnName] = this.exportValue(value);\n            }\n         } else {\n            // return a validation error\n            validator.addError(this.columnName, \"Should be a Date!\");\n         }\n      }\n   }\n\n   format(rowData) {\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      // pull format from settings.\n      const dateObj = this.AB.rules.toDate(d);\n      return this.getDateDisplay(dateObj);\n\n      // const momentObj = this.convertToMoment(d);\n      // return this.getDateDisplay(new Date(momentObj));\n   }\n\n   getFormat() {\n      let dateFormatString = \"\";\n\n      const dateFormat =\n         this.settings && this.settings.dateFormat\n            ? this.settings.dateFormat\n            : \"\";\n\n      switch (dateFormat) {\n         //Ignore Date\n         case (1, 2):\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n         //mm/dd/yyyy\n         case 3:\n            {\n               dateFormatString = \"%m/%d/%Y\";\n            }\n            break;\n         //M D, yyyy\n         case 4:\n            {\n               dateFormatString = \"%M %d, %Y\";\n            }\n            break;\n         //D M, yyyy\n         case 5:\n            {\n               dateFormatString = \"%d %M, %Y\";\n            }\n            break;\n         default:\n            {\n               dateFormatString = \"%d/%m/%Y\";\n            }\n            break;\n      }\n\n      return dateFormatString;\n   }\n\n   getDateDisplay(dateData) {\n      const dateFormat = this.getFormat();\n\n      return this.dateToString(dateFormat, dateData);\n   }\n\n   // convertToMoment(string) {\n   //    const result = moment(string);\n\n   //    const supportFormats = [\n   //       \"DD/MM/YYYY\",\n   //       \"MM/DD/YYYY\",\n   //       \"DD-MM-YYYY\",\n   //       \"MM-DD-YYYY\"\n   //    ];\n\n   //    supportFormats.forEach((format) => {\n   //       if (!result || !result.isValid()) result = moment(string, format);\n   //    });\n\n   //    return result;\n   // }\n\n   exportValue(value) {\n      return value\n         ? this.AB.rules.toDateFormat(value, {\n              format: \"YYYY-MM-DD\",\n           })\n         : \"\";\n      // return this.convertToMoment(value).format(\"YYYY-MM-DD\");\n   }\n\n   dateToString(dateFormat, dateData) {\n      if (dateData && dateData.toString) return dateData.toString();\n      else return \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2}$\";\n","/*\n * ABFieldDateTime\n *\n * An ABFieldDateTime defines a datetime field type.\n *\n */\n\nconst ABFieldDateCore = require(\"./ABFieldDateCore\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldDateDefaults = {\n   key: \"datetime\",\n   // unique key to reference this specific DataField\n\n   description: \"Pick one from date & time.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"clock-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'clock-o'  to\n   // reference 'clock-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Date & Time\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"datetime\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"datetime\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   timeFormat: 2, // 1 (Ignore time), 2, 3\n   defaultTime: 1, // 1 (None), 2 (Current Time), 3 (Specific Time)\n   defaultTimeValue: null, // {Date}\n};\n\nmodule.exports = class ABFieldDateTimeCore extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object, ABFieldDateDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldDateDefaults;\n   }\n\n   static defaultValues() {\n      const baseDefault = super.defaultValues();\n      return Object.assign(baseDefault, defaultValues);\n   }\n\n   // TODO: current webpack install fails here without babel-loader,\n   // so swtich this to old JS method of Static Values (see bottom)\n   // static RegEx = \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.timeFormat = parseInt(this.settings.timeFormat);\n      this.settings.defaultTime = parseInt(this.settings.defaultTime);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] != null) return;\n\n      super.defaultValue(values);\n\n      let dateResult;\n\n      // From default value of ABFieldDateCore\n      if (values[this.columnName]) {\n         dateResult = this.AB.rules.toDate(values[this.columnName]);\n         // const momentVal = this.convertToMoment(values[this.columnName]);\n         // if (momentVal.isValid()) {\n         //    dateResult = new Date(momentVal);\n         // }\n      }\n\n      // Set current time as default\n      if (this.settings.defaultTime == 2) {\n         const currDate = new Date();\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(currDate.getHours());\n         dateResult.setMinutes(currDate.getMinutes());\n         dateResult.setSeconds(currDate.getSeconds());\n         dateResult.setMilliseconds(currDate.getMilliseconds());\n      }\n      // Set specific time as default\n      else if (\n         this.settings.defaultTime == 3 &&\n         this.settings.defaultTimeValue\n      ) {\n         const defaultTime = new Date(this.settings.defaultTimeValue);\n\n         if (dateResult == null) dateResult = new Date();\n\n         dateResult.setHours(defaultTime.getHours());\n         dateResult.setMinutes(defaultTime.getMinutes());\n         dateResult.setSeconds(defaultTime.getSeconds());\n         dateResult.setMilliseconds(defaultTime.getMilliseconds());\n      }\n\n      // if no default value is set, then don't insert a value.\n      if (dateResult != null)\n         values[this.columnName] = dateResult.toISOString();\n   }\n\n   getFormat() {\n      const timeFormat = this.getTimeFormat();\n\n      this.settings = this.settings || {};\n\n      if (this.settings.dateFormat == 1) {\n         return timeFormat;\n      }\n\n      const dateFormat = super.getFormat();\n\n      return `${dateFormat} ${timeFormat}`;\n   }\n\n   format(rowData) {\n      const datetimeFormat = this.getFormat();\n      const d = this.dataValue(rowData);\n      const dateObj = this.AB.rules.toDate(d);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n\n      return webix.Date.dateToStr(datetimeFormat)(dateObj);\n   }\n\n   getTimeFormat() {\n      this.settings = this.settings || {};\n      switch (this.settings.timeFormat) {\n         case 2:\n            return \" %h:%i %A\";\n         case 3:\n            return \" %H:%i\";\n         default:\n            return \"\";\n      }\n   }\n\n   /**\n    * @method exportValue\n    * @param {Date} date\n    * @return {string}\n    */\n   exportValue(date) {\n      return date?.toISOString?.() ?? \"\";\n   }\n};\n\n// Transition Code:\n// revert to static RegEx once babel-loader is working locally.\nmodule.exports.RegEx =\n   \"^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}$\";\n","/*\n * ABFieldEmail\n *\n * An ABFieldEmail defines a boolean field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldEmailDefaults = {\n   key: \"email\",\n   // unique key to reference this specific DataField\n\n   description: \"Email fields are used to store email addresses.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"envelope\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'envelope'  to\n   // reference 'fa-envelope'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Email\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   default: \"\",\n   defaultCheckbox: 0,\n};\n\nmodule.exports = class ABFieldEmailCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldEmailDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldEmailDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            values[this.columnName] = this.settings.default;\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      if (data[this.columnName]) {\n         const Reg =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n         let value = data[this.columnName];\n         value = String(value).toLowerCase();\n         if (!Reg.test(value)) {\n            validator.addError(this.columnName, \"Invalid email\");\n         }\n      }\n   }\n};\n","/*\n * ABFieldFile\n *\n * An ABFieldFile defines a File field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldFileDefaults = {\n   key: \"file\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach a File to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file'  to\n   // reference 'fa-file'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"File Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   removeExistingData: 0,\n   fileSize: 0,\n   fileType: \"\",\n};\n\nmodule.exports = class ABFieldFileCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFileDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFileDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.fileSize = parseInt(this.settings.fileSize);\n      this.settings.limitFileSize = parseInt(this.settings.limitFileSize);\n      this.settings.limitFileType = parseInt(this.settings.limitFileType);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method dataValue\n    * return the file data stored as part of this field.\n    *\n    * An ABFieldFile column contains a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * This will return the json object.\n    * @param {obj} values a key=>value hash of the current values.\n    * @return {obj} { uuid, filename }, or {} if empty.\n    */\n   dataValue(rowData) {\n      const propName = `${this.alias || this.object.name}.${this.columnName}`;\n\n      let result = rowData[this.columnName] || rowData[propName] || {};\n      if (typeof result == \"string\") {\n         try {\n            result = JSON.parse(result);\n         } catch (err) {\n            // ignore error\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    *\n    * An ABFieldFile expects a json structure that contains\n    *  .uuid : {string} a file uuid reference\n    *  .filename : {string} the name of the file that was uploaded.\n    *\n    * For a default value, we return an empty json object: \"{}\"\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      values[this.columnName] = \"{}\";\n   }\n\n   format(rowData) {\n      let result = this.dataValue(rowData);\n      if (result) {\n         if (typeof result == \"string\") {\n            try {\n               result = JSON.parse(result);\n            } catch (err) {\n               // ignore error.\n            }\n         }\n\n         // return file name\n         return result ? result.filename || \"\" : \"\";\n      } else {\n         return \"\";\n      }\n   }\n\n   /**\n    * @method requestParam\n    * return the entry in the given input that relates to this field.\n    * @param {obj} allParameters  a key=>value hash of the inputs to parse.\n    * @return {obj} or undefined\n    */\n   requestParam(allParameters) {\n      const myParameter = super.requestParam(allParameters);\n\n      // if we have our default empty object, then remove the entry\n      // and let the DB insert a null value.\n      let val = myParameter?.[this.columnName];\n      if (val == \"{}\" || val == \"\") {\n         delete myParameter[this.columnName];\n      }\n      if (\"string\" === typeof val) {\n         try {\n            myParameter[this.columnName] = JSON.parse(val);\n         } catch (e) {\n            /* ignore */\n         }\n      }\n\n      return myParameter;\n   }\n};\n","/*\n * ABFieldFormula\n *\n * An ABFieldFormula are used to run calculations on connected (child) records\n * and store the total of that calculation in the parent.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldFormulaDefaults = {\n   key: \"formula\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Perform a calculation by a formula type based upon existing values\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"circle-o-notch\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'circle-o-notch'  to\n   // reference 'fa-circle-o-notch'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportQuery: (field) => {\n      const fieldLink = field.fieldLink;\n      if (fieldLink == null) return false;\n\n      // Not support calculate field in query\n      return fieldLink.key !== \"calculate\";\n   },\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   field: \"\", // id of ABField : NOTE - store our connect field to support when there are multi - linked columns\n   objectLink: \"\", // id of ABObject\n   fieldLink: \"\", // id of ABField\n   type: \"sum\", // \"sum\", \"average\", \"max\", \"min\", \"count\"\n   where: \"\",\n};\n\nmodule.exports = class ABFieldFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldFormulaDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // this field is read only\n      delete values[this.columnName];\n   }\n\n   /**\n    * @method format\n    * both calculate and format the data input based of user settings\n    * for this field.\n    * @param {obj} rowData\n    *        a key=>value hash of the current values.\n    * @param {boolean} reCalculate\n    *        a boolean that signals if we should force recalculation of values\n    */\n   format(rowData, reCalculate = false, isGrouped = false) {\n      const fieldLink = this.fieldLink;\n\n      const reformat = (numData) => {\n         // ABFieldCalculate does not need to .format again\n         if (!fieldLink || fieldLink.key == \"calculate\") {\n            return numData;\n         } else {\n            const rowDataFormat = {};\n            rowDataFormat[fieldLink.columnName] = numData;\n            return fieldLink.format(rowDataFormat);\n         }\n      };\n\n      // if data exists, then will not calculate on client side\n      // unless we pass reCalculate=true to force the recalculation\n      if (rowData[this.columnName] != null && !reCalculate && !isGrouped) {\n         // reformat data\n         return reformat(rowData[this.columnName]);\n      } else if (\n         rowData[this.columnName] != null &&\n         !reCalculate &&\n         isGrouped\n      ) {\n         return rowData[this.columnName];\n      }\n\n      if (!fieldLink) return 0;\n\n      const fieldBase = this.fieldBase();\n      if (!fieldBase) return 0;\n\n      let data =\n         rowData[fieldBase.relationName()] ||\n         rowData[fieldBase.columnName] ||\n         [];\n      if (!Array.isArray(data)) data = [data];\n\n      // Filter\n      if (\n         data &&\n         data.length &&\n         this.settings &&\n         this.settings.where &&\n         this.settings.where.rules &&\n         this.settings.where.rules.length\n      ) {\n         this.filterHelper.setValue(this.settings.where);\n         data = data.filter((item) => this.filterHelper.isValid(item));\n      }\n\n      let numberList = [];\n\n      // pull number from data\n      switch (fieldLink.key) {\n         case \"calculate\":\n            data.forEach((d) => {\n               numberList.push(parseFloat(fieldLink.format(d) || 0));\n            });\n            break;\n         case \"number\":\n            numberList = data.map((d) => d[fieldLink.columnName] || 0);\n            break;\n      }\n\n      let result = 0;\n\n      // get the decimal size of the numbers being calculated\n      const decimalSize = fieldLink.getDecimalSize();\n\n      // calculate\n      switch (this.settings.type) {\n         case \"sum\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               result = sum / multiplier;\n            }\n            break;\n\n         case \"average\":\n            if (numberList.length > 0) {\n               // get power of 10 to the number of decimal places this number\n               // is formated to require\n               const multiplier = Math.pow(10, decimalSize);\n               // multiply values by muliplyier and add them to pervious value\n               // because in javascript adding number with decimals can cause issues\n               // ex: 9.11 + 222.11 = 231.22000000000003\n               let sum = 0;\n               numberList.forEach((val) => {\n                  sum += val * multiplier || 0;\n               });\n               // divide result by multiplier to get actual value\n               // and divide by length to get the average\n               result = sum / multiplier / numberList.length;\n            }\n            break;\n\n         case \"max\":\n            result = Math.max(...numberList) || 0;\n            break;\n         case \"min\":\n            result = Math.min(...numberList) || 0;\n            break;\n         case \"count\":\n            result = numberList.length;\n            break;\n      }\n\n      rowData[this.columnName] = result;\n\n      // ABFieldCalculate does not need to .format again\n      if (fieldLink.key == \"calculate\") {\n         return result;\n      } else {\n         return reformat(result);\n      }\n   }\n\n   fieldBase() {\n      return this.object.fieldByID(this.settings.field);\n   }\n\n   get fieldLink() {\n      const obj = this.AB.objectByID(this.settings.object);\n      if (!obj) return null;\n\n      const field = obj.fieldByID(this.settings.fieldLink);\n      if (!field) return null;\n\n      return field;\n   }\n\n   get filterHelper() {\n      if (this._rowFilter == null) {\n         this._rowFilter = this.AB.filterComplexNew(`${this.id}_filterComplex`);\n\n         if (this.fieldLink && this.fieldLink.object) {\n            this._rowFilter.fieldsLoad(this.fieldLink.object.fields());\n            this._rowFilter.setValue(this.settings.where);\n         }\n      }\n\n      return this._rowFilter;\n   }\n};\n","/*\n * ABFieldImageCore\n *\n * An ABFieldImage defines a Image field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldImageDefaults = {\n   key: \"image\",\n   // unique key to reference this specific DataField\n\n   description: \"Attach an image to this object.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"file-image-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'file-image-o'  to\n   // reference 'fa-file-image-o'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Image Attachment\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   useWidth: 0,\n   imageWidth: \"\",\n   useHeight: 0,\n   imageHeight: \"\",\n   removeExistingData: 0,\n   useDefaultImage: false,\n   defaultImageUrl: \"\",\n};\n\nmodule.exports = class ABFieldImageCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldImageDefaults);\n\n      // NOTE: our Labels are ready here:\n      // if (\n      //    ABFieldImageDefaults.menuName == \"*Image Attachment\" &&\n      //    this.AB.Label\n      // ) {\n      //    const L = this.AB.Label();\n      //    ABFieldImageDefaults.menuName = L(\"Image Attachment\");\n      //    ABFieldImageDefaults.description = L(\"Attach an image to this object.\");\n      // }\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'useWidth':0,\n\t\t\t\t'imageWidth':'',\n\t\t\t\t'useHeight': 0,\n\t\t\t\t'imageHeight': '',\n\t\t\t\t'removeExistingData': 0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldImageDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      this.settings.useWidth = parseInt(this.settings.useWidth);\n      this.settings.useHeight = parseInt(this.settings.useHeight);\n      this.settings.imageWidth = parseInt(this.settings.imageWidth);\n      this.settings.imageHeight = parseInt(this.settings.imageHeight);\n      this.settings.useDefaultImage = parseInt(this.settings.useDefaultImage);\n      this.settings.removeExistingData = parseInt(\n         this.settings.removeExistingData\n      );\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldJson\n *\n * An ABFieldJson defines a JSON field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldJsonDefaults = {\n   key: \"json\",\n   // unique key to reference this specific DataField\n\n   description: \"JSON value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"JSON\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"json\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"json\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {};\n\nmodule.exports = class ABFieldJsonCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldJsonDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldJsonDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // in the case of a JSON data type, we should NOT insert a \"\"\n      //\n      // values[this.columnName] = \"\";\n   }\n};\n","/*\n * ABFieldListCore\n *\n * An ABFieldList defines a select list field type.\n *\n */\n\n// const ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldListDefaults = {\n   key: \"list\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Select list allows you to select predefined options below from a dropdown.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"th-list\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'th-list'  to\n   // reference 'fa-th-list'\n\n   isFilterable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Select list\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"char\",\n      \"varchar\",\n      \"tinytext\" /* \"text\", \"mediumtext\" */,\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   hasColors: (field) => {\n      if (field.settings.hasColors) {\n         return true;\n      } else {\n         return false;\n      }\n   },\n};\n\nconst defaultValues = {\n   isMultiple: 0,\n   // {bool}\n   // can multiple values be selected?\n\n   hasColors: 0,\n   // {bool}\n   // are we to display our values in colors?\n\n   options: [],\n   // {array}\n   // The options defined for this list:\n   // [ { id, text, hex, translations },...]\n   //    .id {string} a unique id for this value\n   //    .text {string} the displayed text of this value\n   //    .hex {string} a color hex definition for this value\n   //    .translations {obj} the multilingual definitions for this value.\n\n   default: \"none\",\n   multipleDefault: [],\n};\n\nmodule.exports = class ABFieldListCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldListDefaults);\n\n      this.pendingDeletions = [];\n      // {array}\n      // a list of pending option deletions that need to be processed\n      // when this is saved.\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldListDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.hasColors = parseInt(this.settings.hasColors);\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      obj.settings.options.forEach((opt) => {\n         this.unTranslate(opt, opt, [\"text\"]);\n      });\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // Multiple select list\n      if (this.settings.isMultiple == true) {\n         let defaultVals = [];\n         this.settings.multipleDefault.forEach((def) => {\n            this.settings.options.forEach((opt) => {\n               if (opt.id == def.text) {\n                  defaultVals.push(opt);\n               }\n            });\n         });\n         values[this.columnName] = defaultVals || [];\n      }\n      // Single select list\n      else if (this.settings.default && this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n\n   /**\n    * @method options\n    * Return an array of [{ id, text }] options defined by this field.\n    * @return {array}\n    */\n   options() {\n      return this.settings.options.map((opt) => {\n         return {\n            id: opt.id,\n            text: opt.text,\n            hex: opt.hex ? opt.hex : \"\",\n            translations: opt.translations ? opt.translations : \"\",\n         };\n      });\n   }\n\n   format(rowData, options = {}) {\n      let val = this.dataValue(rowData) || [];\n\n      if (typeof val == \"string\") {\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // continue regardless of error\n         }\n      }\n\n      // Convert to array\n      if (!Array.isArray(val)) val = [val];\n\n      const displayOpts = this.settings.options\n         .filter((opt) => val.filter((v) => (v.id || v) == opt.id).length > 0)\n         .map((opt) => {\n            let text = opt.text;\n            const languageCode = options.languageCode || \"en\";\n\n            // Pull text of option with specify language code\n            const optTran = (opt.translations || []).filter(\n               (o) => o.language_code == languageCode\n            )[0];\n            if (optTran) text = optTran.text;\n\n            return text;\n         });\n\n      return displayOpts.join(\", \");\n   }\n};\n","/*\n * ABFieldLongText\n *\n * An ABFieldLongText defines a LongText field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 5000;\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldLongTextDefaults = {\n   key: \"LongText\", // unique key to reference this specific DataField\n\n   description: \"Multiple lines of text\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"align-right\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'align-right'  to\n   // reference 'fa-align-right'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Long text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"longtext\", \"mediumtext\", \"text\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldLongText can be.\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldLongText extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldLongTextDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n    \t*/\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldLongTextDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.default = values.settings.default || \"\";\n\n      // we're responsible for setting up our specific settings:\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         if (this.object)\n            this.object.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual)\n         if (this.object)\n            this.object.unTranslate(obj.settings, obj.settings, [\"default\"]);\n         else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (values[this.columnName] == null) {\n         if (typeof this.settings.default == \"string\") {\n            values[this.columnName] = this.settings.default;\n         } else {\n            values[this.columnName] = \"\";\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (\n         data &&\n         data[this.columnName] &&\n         data[this.columnName].length > MAX_CHAR_LENGTH\n      ) {\n         validator.addError(\n            this.columnName,\n            `should NOT be longer than ${MAX_CHAR_LENGTH} characters`\n         );\n      }\n   }\n};\n","/*\n * ABFieldNumber\n *\n * An ABFieldNumber defines a Number field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst ABFieldNumberDefaults = {\n   key: \"number\",\n   // unique key to reference this specific DataField\n\n   description: \"A Float or Integer Value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"hashtag\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'hashtag'  to\n   // reference 'fa-hashtag'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Number\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: true,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"number\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\n      \"tinyint\",\n      \"smallint\",\n      \"mediumint\",\n      \"int\",\n      \"integer\",\n      \"bigint\",\n      \"decimal\",\n      \"dec\",\n      \"numeric\",\n      \"fixed\",\n      \"float\",\n      \"real\",\n   ],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   // 'allowRequired': 0,\n   default: \"\",\n   typeFormat: \"none\",\n   typeDecimals: \"none\",\n   typeDecimalPlaces: 0,\n   typeRounding: \"none\",\n   typeThousands: \"none\",\n   validation: 0,\n   validateMinimum: \"\",\n   validateMaximum: \"\",\n};\n\nlet L = null; //AB.Label();\n\nmodule.exports = class ABFieldNumberCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldNumberDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\t'allowRequired':0,\n\t\t\t\t'default':null,\n\t\t\t\t'typeFormat': 'none',\n\t\t\t\t'typeDecimals': 'none',\n\t\t\t\t'typeDecimalPlaces': 'none',\n\t\t\t\t'typeRounding' : 'none',\n\t\t\t\t'typeThousands': 'none',\n\t\t\t\t'validation':0,\n\t\t\t\t'validateMinimum':null,\n\t\t\t\t'validateMaximum':null\n\t\t\t}\n    \t}\n    \t*/\n      if (!L) {\n         L = this.AB.Label();\n      }\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldNumberDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static formatList(iL) {\n      if (iL && !L) L = iL;\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"dollar\",\n            value: L(\"$\"),\n            sign: \"$\",\n            position: \"prefix\",\n         },\n         {\n            id: \"yen\",\n            value: L(\"¥\"),\n            sign: \"¥\",\n            position: \"prefix\",\n         },\n         {\n            id: \"pound\",\n            value: L(\"£\"),\n            sign: \"£\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroBefore\",\n            value: L(\"€ (before)\"),\n            sign: \"€\",\n            position: \"prefix\",\n         },\n         {\n            id: \"euroAfter\",\n            value: L(\"€ (after)\"),\n            sign: \"€\",\n            position: \"postfix\",\n         },\n         {\n            id: \"percent\",\n            value: L(\"%\"),\n            sign: \"%\",\n            position: \"postfix\",\n         },\n      ];\n   }\n\n   static delimiterList() {\n      return [\n         { id: \"none\", value: L(\"None\") },\n         {\n            id: \"comma\",\n            value: L(\"Comma\"),\n            sign: \",\",\n         },\n         {\n            id: \"period\",\n            value: L(\"Period\"),\n            sign: \".\",\n         },\n         {\n            id: \"space\",\n            value: L(\"Space\"),\n            sign: \" \",\n         },\n      ];\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // text to Int:\n      // this.settings.allowRequired = parseInt(this.settings.allowRequired);\n      this.settings.validation = parseInt(this.settings.validation);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (this.settings.default != \"\") {\n         values[this.columnName] = this.settings.default;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      // const L = this.AB.Label();\n\n      if (data[this.columnName] != null && data[this.columnName] != \"\") {\n         let value = data[this.columnName];\n\n         // if this is an integer:\n         if (this.settings.typeDecimals == \"none\") {\n            value = parseInt(value);\n         } else {\n            const places = parseInt(this.settings.typeDecimalPlaces) || 2;\n            value = parseFloat(parseFloat(value).toFixed(places));\n         }\n\n         const isNumeric = (n) => {\n            return !Number.isNaN(parseFloat(n)) && Number.isFinite(n);\n         };\n         if (!isNumeric(value)) {\n            validator.addError(this.columnName, L(\"invalid number\"));\n         }\n\n         // validate Minimum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMinimum != null &&\n            this.settings.validateMinimum > value\n         ) {\n            const errMessage = L(\"should be greater than {0}\", [\n               this.settings.validateMinimum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n\n         // validate Maximum\n         if (\n            this.settings.validation == true &&\n            this.settings.validateMaximum != null &&\n            this.settings.validateMaximum < value\n         ) {\n            const errMessage = L(\"should be less than {0}\", [\n               this.settings.validateMaximum,\n            ]);\n\n            validator.addError(this.columnName, errMessage);\n         }\n      }\n   }\n\n   format(rowData) {\n      if (\n         rowData?.[this.columnName] == null ||\n         (rowData[this.columnName] != 0 && rowData[this.columnName] == \"\")\n      )\n         return \"\";\n\n      let data = rowData[this.columnName] || 0;\n\n      if (typeof data == \"string\") {\n         data = data.replace(/,/g, \"\");\n      }\n\n      // Validate number\n      if (isNaN(parseFloat(data))) data = 0;\n\n      const formatSign = this.constructor\n         .formatList()\n         .filter((item) => item.id == this.settings.typeFormat)[0];\n      const decimalPlaces =\n         this.settings.typeDecimalPlaces != \"none\"\n            ? parseInt(this.settings.typeDecimalPlaces)\n            : 0;\n\n      let thousandsSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeThousands)[0];\n      let decimalSign = this.constructor\n         .delimiterList()\n         .filter((item) => item.id == this.settings.typeDecimals)[0];\n      let prefix = \"\";\n      let postfix = \"\";\n\n      if (formatSign && formatSign.sign) {\n         switch (formatSign.position) {\n            case \"prefix\":\n               prefix = formatSign.sign;\n               break;\n            case \"postfix\":\n               postfix = formatSign.sign;\n               break;\n         }\n      }\n\n      decimalSign = decimalSign.sign || \"\";\n      thousandsSign = thousandsSign.sign || \"\";\n\n      // round number\n      if (this.settings.typeRounding == \"roundDown\") {\n         const digit = Math.pow(10, decimalPlaces);\n         data = Math.floor(data * digit) / digit;\n      }\n\n      const number = this.formatNumber(data, {\n         groupDelimiter: thousandsSign,\n         groupSize: 3,\n         decimalDelimiter: decimalSign,\n         decimalSize: decimalPlaces,\n      });\n\n      return `${prefix} ${number} ${postfix}`;\n   }\n\n   formatNumber(data, options = {}) {\n      if (data === \"\" || data == null) return data;\n\n      data = parseFloat(data);\n      const negativeSign = data < 0 ? \"-\" : \"\";\n      data = Math.abs(data);\n\n      const dataStr = data.toString();\n      const integerStr = dataStr.split(\".\")[0];\n      const decimalStr = dataStr.split(\".\")[1];\n\n      let integerValue = \"\";\n\n      // Thousands digit sign\n      if (options.groupDelimiter) {\n         const step = 3;\n         let i = integerStr.length;\n\n         do {\n            i -= step;\n            const chunk =\n               i > 0\n                  ? integerStr.substr(i, step)\n                  : integerStr.substr(0, step + i);\n            integerValue = `${chunk}${\n               integerValue ? options.groupDelimiter + integerValue : \"\"\n            }`;\n         } while (i > 0);\n      } else {\n         integerValue = integerStr;\n      }\n\n      // Integer\n      let result = `${negativeSign}${integerValue}`;\n\n      // Decimal\n      if (decimalStr && options.decimalDelimiter && options.decimalSize) {\n         const decimalVal = data.toFixed(options.decimalSize).split(\".\")[1];\n         result += `${options.decimalDelimiter}${decimalVal}`;\n      }\n\n      return result;\n   }\n\n   getDecimalSize() {\n      if (this.settings.typeDecimalPlaces != \"none\") {\n         return parseInt(this.settings.typeDecimalPlaces);\n      } else {\n         return 0;\n      }\n   }\n};\n","/*\n * ABFieldString\n *\n * An ABFieldString defines a string field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nconst MAX_CHAR_LENGTH = 255;\n\nconst ABFieldStringDefaults = {\n   key: \"string\",\n   // unique key to reference this specific DataField\n\n   description: \"short string value\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"font\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'font'  to\n   // reference 'fa-font'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Single line text\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: true,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   MAX_CHAR_LENGTH,\n   // {integer}\n   // The maximum length our ABFieldString can be.\n};\n\nconst defaultValues = {\n   default: \"\",\n   supportMultilingual: 0,\n};\n\nmodule.exports = class ABFieldStringCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldStringDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n    \t}\n        */\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldStringDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // we're responsible for setting up our specific settings:\n      this.settings.default = values.settings.default || defaultValues.default;\n      this.settings.supportMultilingual =\n         values.settings.supportMultilingual + \"\" ||\n         defaultValues.supportMultilingual;\n\n      // text to Int:\n      this.settings.supportMultilingual = parseInt(\n         this.settings.supportMultilingual\n      );\n\n      if (this.settings.supportMultilingual) {\n         this.translate(this.settings, this.settings, [\"default\"]);\n      } else this.settings.default = values.settings.default || \"\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.settings.supportMultilingual) {\n         this.unTranslate(obj.settings, obj.settings, [\"default\"]);\n      } else obj.settings.default = this.settings.default;\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n\n      if (data?.[this.columnName]?.length > MAX_CHAR_LENGTH) {\n         const L = this.AB.Label();\n         validator.addError(\n            this.columnName,\n            L(\"should NOT be longer than {0} characters\", [MAX_CHAR_LENGTH])\n         );\n      }\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      return this.settings.supportMultilingual == 1;\n   }\n};\n","/*\n * ABFieldTextFormula\n *\n * An ABFieldTextFormula defines a TextFormula field type.\n *\n */\n\nconst ABField = require(\"../../platform/dataFields/ABField\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTextFormulaDefaults = {\n   key: \"TextFormula\",\n   // unique key to reference this specific DataField\n\n   description: \"Text Formula\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"question\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'question'  to\n   // reference 'fa-question'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Text Formula\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\n// defaultValues: the keys must match a .name of your elements to set it's default value.\nconst defaultValues = {\n   textFormula: \"\",\n   // {string} \"some text or text with formula ...\"\n   // This tells us what the formula we need to do with text included text string.\n   // if we don't have this, the old value which we filled out won't be cleared when we do \"Add field\" this type again.\n\n   // 'imageWidth':'',\n   // 'useHeight': 0,\n   // 'imageHeight': ''\n};\n\n/** Private methods */\n\n/**\n * @method setValueToFormula\n *\n * @param {ABOBject} object\n * @param {string} formulaString\n * @param {object} rowData\n */\n\nfunction setValueToFormula(object, formulaString, rowData) {\n   if (!formulaString) return;\n\n   const fieldRegExp = /{[^{}]+}/gm;\n   const matches_field_array = formulaString.match(fieldRegExp);\n   matches_field_array.forEach((element) => {\n      const columnName = element.replace(/{|}|\"/g, \"\");\n      object.fields().forEach((field) => {\n         if (field.columnName == columnName) {\n            if (field.key == \"AutoIndex\") {\n               //Check AutoIndex Field\n               const autoIndexVal = field.format(rowData) || 0;\n               formulaString = formulaString.replace(element, autoIndexVal);\n            } else if (field.key == \"calculate\") {\n               //Calculate Field\n               const calVal = `(${field.format(rowData) || 0})`;\n               formulaString = formulaString.replace(element, eval(calVal));\n            } else if (field.key == \"date\") {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName]\n                     ? field.exportValue(rowData[columnName])\n                     : \"\"\n               );\n            } else {\n               formulaString = formulaString.replace(\n                  element,\n                  rowData[columnName] ? field.format(rowData) : \"\"\n               );\n            }\n         }\n      });\n   });\n\n   return formulaString;\n}\n\n/**\n * @method setBuildinValueToFormula\n *\n * @param {ABFactory} AB\n * @param {string} formulaString\n */\n\nfunction setBuildinValueToFormula(AB, formulaString) {\n   const buildInRegExp = /\\w+\\(.*?\\)/gm;\n   const matches_buildin_array = formulaString.match(buildInRegExp);\n   if (matches_buildin_array) {\n      const buildinList = getBuildInFunction();\n      matches_buildin_array.forEach((element) => {\n         const formula_array = element.split(/\\(|\\)/);\n         const isBracketInBracket =\n            formula_array.length > 2 && formula_array[2] != \"\";\n         const functionName = formula_array[0];\n         const parameters_array = formula_array[1].split(\",\");\n         let isMatch = false;\n         for (let i = 0; i < buildinList.length; i++) {\n            let resultParameters = element;\n            if (functionName == buildinList[i].id) {\n               if (parameters_array.length == buildinList[i].parameter_size) {\n                  switch (functionName) {\n                     case \"left\":\n                        resultParameters = getLeft(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"right\":\n                        resultParameters = getRight(\n                           parameters_array[0],\n                           parameters_array[1]\n                        );\n                        break;\n                     case \"mid\":\n                        resultParameters = getMid(\n                           parameters_array[0],\n                           parameters_array[1],\n                           parameters_array[2]\n                        );\n                        break;\n                     case \"trim\":\n                        resultParameters = getTrim(parameters_array[0]);\n                        break;\n                     case \"trimLeft\":\n                        resultParameters = getTrimLeft(parameters_array[0]);\n                        break;\n                     case \"trimRight\":\n                        resultParameters = getTrimRight(parameters_array[0]);\n                        break;\n                     case \"length\":\n                        resultParameters = getLength(parameters_array[0]);\n                        break;\n                     case \"regexReplace\":\n                        resultParameters = getRegExpReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"extractRegex\":\n                        resultParameters = getExtractRegex(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     case \"replace\":\n                        resultParameters = getReplace(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft(),\n                           parameters_array[2].trimLeft()\n                        );\n                        break;\n                     case \"lower\":\n                        resultParameters = getLower(parameters_array[0]);\n                        break;\n                     case \"upper\":\n                        resultParameters = getUpper(parameters_array[0]);\n                        break;\n                     case \"capitalize\":\n                        resultParameters = getCapitalize(parameters_array[0]);\n                        break;\n                     case \"random\":\n                        resultParameters = getRandom(parameters_array[0]);\n                        break;\n                     case \"numberToWords\":\n                        resultParameters = getNumberToWords(\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateDayOfWeekName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateDayOfWeekName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"getDateMonthOfYearName\":\n                        if (isBracketInBracket) {\n                           element = element + \")\";\n                        }\n                        resultParameters = getDateMonthOfYearName(\n                           AB,\n                           parameters_array[0]\n                        );\n                        break;\n                     case \"formatDate\":\n                        resultParameters = getFormatDate(\n                           parameters_array[0],\n                           parameters_array[1].trimLeft()\n                        );\n                        break;\n                     default:\n                        break;\n                  }\n                  isMatch = true;\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n                  return;\n               } else {\n                  resultParameters = functionName + \"(Bad Parameter)\";\n                  formulaString = formulaString.replace(\n                     element,\n                     resultParameters\n                  );\n               }\n            }\n         }\n      });\n   }\n   return formulaString;\n}\n\nfunction getBuildInFunction() {\n   const functionList = [\n      {\n         id: \"left\",\n         value: \"left({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"right\",\n         value: \"right({COLUMN_NAME}, 1)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"mid\",\n         value: \"mid({COLUMN_NAME}, 1, 1)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"trim\",\n         value: \"trim({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimLeft\",\n         value: \"trimLeft({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"trimRight\",\n         value: \"trimRight({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"length\",\n         value: \"length({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"regexReplace\",\n         value: \"regexReplace({COLUMN_NAME}, [*], REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"extractRegex\",\n         value: \"extractRegex({COLUMN_NAME}, [*])\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n      {\n         id: \"replace\",\n         value: \"replace({COLUMN_NAME}, SEARCH_VALUE, REPLACE_VALUE)\",\n         type: \"build-in\",\n         parameter_size: 3,\n      },\n      {\n         id: \"lower\",\n         value: \"lower({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"upper\",\n         value: \"upper({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"capitalize\",\n         value: \"capitalize({COLUMN_NAME})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      { id: \"random\", value: \"random(1)\", type: \"build-in\", parameter_size: 1 },\n      {\n         id: \"numberToWords\",\n         value: \"numberToWords({NUMBER_COLUMN} or 012...)\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateDayOfWeekName\",\n         value: \"getDateDayOfWeekName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"getDateMonthOfYearName\",\n         value: \"getDateMonthOfYearName({DATE_COLUMN})\",\n         type: \"build-in\",\n         parameter_size: 1,\n      },\n      {\n         id: \"formatDate\",\n         value: \"formatDate({DATE_COLUMN}, OUTPUT_FORMAT)\",\n         type: \"build-in\",\n         parameter_size: 2,\n      },\n   ];\n   return functionList;\n}\n\nfunction getLeft(string, endPosition) {\n   return string.substring(0, parseInt(endPosition));\n}\n\nfunction getRight(string, endposition) {\n   const reverseStr = reverseString(string).substring(0, parseInt(endposition));\n   return reverseString(reverseStr);\n}\n\nfunction reverseString(string) {\n   return string.split(\" \").reverse().join(\" \");\n}\n\nfunction getMid(string, startPosition, length) {\n   if (string.length < startPosition) return \"mid(Bad Parameter)\";\n   return string.substring(\n      parseInt(startPosition),\n      parseInt(startPosition) + parseInt(length)\n   );\n}\n\nfunction getTrim(string) {\n   return string.trim();\n}\n\nfunction getTrimLeft(string) {\n   return string.trimLeft();\n}\n\nfunction getTrimRight(string) {\n   return string.trimRight();\n}\n\nfunction getLength(string) {\n   return string.length;\n}\n\nfunction getRegExpReplace(string, regexp, replaceString) {\n   return string.replace(regexp, replaceString);\n}\n\nfunction getExtractRegex(string, regexp) {\n   const extractResult = string.match(regexp);\n   if (Array.isArray(extractResult)) {\n      return extractResult[0];\n   }\n   return extractResult;\n}\n\nfunction getReplace(string, searchValue, replaceValue) {\n   return string.replace(searchValue, replaceValue);\n}\n\nfunction getLower(string) {\n   return string.toLowerCase();\n}\n\nfunction getUpper(string) {\n   return string.toUpperCase();\n}\n\nfunction getCapitalize(string) {\n   return string\n      .toLowerCase()\n      .split(\" \")\n      .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n      .join(\" \");\n}\n\nfunction getRandom(max) {\n   return Math.floor(Math.random() * (max + 1));\n}\n\nfunction getNumberToWords(number) {\n   const string = number.trim(\",\").toString();\n\n   let units,\n      tens,\n      scales,\n      start,\n      end,\n      chunks,\n      chunksLen,\n      chunk,\n      ints,\n      i,\n      word,\n      words;\n\n   const and = \"\";\n\n   /* Is number zero? */\n   if (parseInt(string) === 0) {\n      return \"zero\";\n   }\n\n   /* Array of units as words */\n   units = [\n      \"\",\n      \"one\",\n      \"two\",\n      \"three\",\n      \"four\",\n      \"five\",\n      \"six\",\n      \"seven\",\n      \"eight\",\n      \"nine\",\n      \"ten\",\n      \"eleven\",\n      \"twelve\",\n      \"thirteen\",\n      \"fourteen\",\n      \"fifteen\",\n      \"sixteen\",\n      \"seventeen\",\n      \"eighteen\",\n      \"nineteen\",\n   ];\n\n   /* Array of tens as words */\n   tens = [\n      \"\",\n      \"\",\n      \"twenty\",\n      \"thirty\",\n      \"forty\",\n      \"fifty\",\n      \"sixty\",\n      \"seventy\",\n      \"eighty\",\n      \"ninety\",\n   ];\n\n   /* Array of scales as words */\n   scales = [\n      \"\",\n      \"thousand\",\n      \"million\",\n      \"billion\",\n      \"trillion\",\n      \"quadrillion\",\n      \"quintillion\",\n      \"sextillion\",\n      \"septillion\",\n      \"octillion\",\n      \"nonillion\",\n      \"decillion\",\n      \"undecillion\",\n      \"duodecillion\",\n      \"tredecillion\",\n      \"quatttuor-decillion\",\n      \"quindecillion\",\n      \"sexdecillion\",\n      \"septen-decillion\",\n      \"octodecillion\",\n      \"novemdecillion\",\n      \"vigintillion\",\n      \"centillion\",\n   ];\n\n   /* Split user arguemnt into 3 digit chunks from right to left */\n   start = string.length;\n   chunks = [];\n   while (start > 0) {\n      end = start;\n      chunks.push(string.slice((start = Math.max(0, start - 3)), end));\n   }\n\n   /* Check if function has enough scale words to be able to stringify the user argument */\n   chunksLen = chunks.length;\n   if (chunksLen > scales.length) {\n      return \"\";\n   }\n\n   /* Stringify each integer in each chunk */\n   words = [];\n   for (i = 0; i < chunksLen; i++) {\n      chunk = parseInt(chunks[i]);\n\n      if (chunk) {\n         /* Split chunk into array of individual integers */\n         ints = chunks[i].split(\"\").reverse().map(parseFloat);\n\n         /* If tens integer is 1, i.e. 10, then add 10 to units integer */\n         if (ints[1] === 1) {\n            ints[0] += 10;\n         }\n\n         /* Add scale word if chunk is not zero and array item exists */\n         if ((word = scales[i])) {\n            words.push(word);\n         }\n\n         /* Add unit word if array item exists */\n         if ((word = units[ints[0]])) {\n            words.push(word);\n         }\n\n         /* Add tens word if array item exists */\n         if ((word = tens[ints[1]])) {\n            words.push(word);\n         }\n\n         /* Add 'and' string after units or tens integer if: */\n         if (ints[0] || ints[1]) {\n            /* Chunk has a hundreds integer or chunk is the first of multiple chunks */\n            if (ints[2] || (!i && chunksLen)) {\n               words.push(and);\n            }\n         }\n\n         /* Add hundreds word if array item exists */\n         if ((word = units[ints[2]])) {\n            words.push(word + \" hundred\");\n         }\n      }\n   }\n\n   return words.reverse().join(\" \");\n}\n\nfunction getDateDayOfWeekName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"dddd\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"dddd\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getDateMonthOfYearName(AB, date) {\n   // const localizeDT = moment(date);\n   // localizeDT.locale(AD.lang.currentLanguage);\n   // return localizeDT.format(\"MMMM\");\n\n   return AB.rules.toDateFormat(date, {\n      format: \"MMMM\",\n      localeCode: AB.Account.language(),\n   });\n}\n\nfunction getFormatDate(date, format) {\n   const dt = new Date(date);\n   return dt.toString(format);\n}\n\nmodule.exports = class ABFieldTextFormulaCore extends ABField {\n   constructor(values, object) {\n      super(values, object, ABFieldTextFormulaDefaults);\n\n      /*\n    \t{\n\t\t\tsettings: {\n\t\t\t\ttextDefault: 'string',\n\t\t\t\tsupportMultilingual: true/false\n\t\t\t}\n    \t}\n    \t*/\n\n      // // text to Int:\n      // this.settings.supportMultilingual = parseInt(this.settings.supportMultilingual);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTextFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   static getBuildInFunction() {\n      return getBuildInFunction();\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default value\n         // values[this.columnName] = this.settings.DEFAULT_VALUE;\n      }\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      validator = super.isValid();\n\n      // validator.addError(this.columnName, L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /*\n    * @property isMultilingual\n    * does this field represent multilingual data?\n    * @return {bool}\n    */\n   get isMultilingual() {\n      // return this.settings.supportMultilingual == 1;\n      return false;\n   }\n\n   format(rowData) {\n      try {\n         if (!this.settings.textFormula) return \"\";\n\n         let resultFormula = this.settings.textFormula;\n\n         //Set Field value first\n         resultFormula = setValueToFormula(this.object, resultFormula, rowData);\n\n         //then Check Build-in Function\n         resultFormula = setBuildinValueToFormula(this.AB, resultFormula);\n\n         return resultFormula;\n      } catch (err) {\n         return \"\";\n      }\n   }\n};\n\n//// NOTE: if you need a unique [edit_type] by your returned config.editor above:\n// webix.editors = {\n//   \"[edit_type]\": {\n//     focus: function () {...}\n//     getValue: function () {...},\n//     setValue: function (value) {...},\n//     render: function () {...}\n//   }\n// };\n\n//// NOTE: if you need a unique [sort_type] by your returned config.sort above:\n// webix.DataStore.prototype.sorting.as.[sort_type] = function(a,b){\n//     return a > b ? 1 : -1;\n// }\n","/*\n * ABFieldTreeCore\n *\n * An ABFieldTree defines a select list field type.\n *\n */\n\nconst ABFieldSelectivity = require(\"../../platform/dataFields/ABFieldSelectivity\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldTreeDefaults = {\n   key: \"tree\",\n   // unique key to reference this specific DataField\n\n   description:\n      \"Data tree allows you to build a hierarchical set of selectable data. (ex: Categories and sub-categories)\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"sitemap\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'sitemap'  to\n   // reference 'fa-sitemap'\n\n   isFilterable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: false,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"Data Tree\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: false,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"text\", \"mediumtext\", \"longtext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n};\n\nconst defaultValues = {\n   options: [],\n};\n\nmodule.exports = class ABFieldTreeCore extends ABFieldSelectivity {\n   constructor(values, object) {\n      super(values, object, ABFieldTreeDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldTreeDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // translate options list\n      if (this.settings.options && this.settings.options.length > 0) {\n         this.settings.options.forEach((opt) => {\n            this.translate(opt, opt, [\"text\"]);\n         });\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      const obj = super.toObj();\n\n      // Un-translate options list\n      if (obj.settings.options && obj.settings.options.length > 0) {\n         obj.settings.options.forEach((opt) => {\n            this.unTranslate(opt, opt, [\"text\"]);\n         });\n      }\n\n      return obj;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {}\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n   }\n};\n","/*\n * ABFieldUser\n *\n * An ABFieldUser defines a user field type.\n *\n */\n\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\n\nfunction L(key, altText) {\n   // TODO:\n   return altText; // AD.lang.label.getLabel(key) || altText;\n}\n\nconst ABFieldUserDefaults = {\n   key: \"user\",\n   // unique key to reference this specific DataField\n\n   description: \"Add users to a record.\",\n   // description: what gets displayed in the Editor description.\n   // NOTE: this will be displayed using a Label: L(description)\n\n   icon: \"user-o\",\n   // font-awesome icon reference.  (without the 'fa-').  so 'user-o'  to\n   // reference 'fa-user-o'\n\n   isFilterable: true,\n   // {bool} / {fn}\n   // determines if the current ABField can be used to filter (FilterComplex\n   // or Query) data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => field.setting.something == true\n\n   isSortable: (field) => {\n      if (field.settings.isMultiple) {\n         return false;\n      } else {\n         return true;\n      }\n   },\n   // {bool} / {fn}\n   // determines if the current ABField can be used to Sort data.\n   // if a {fn} is provided, it will be called with the ABField as a parameter:\n   //  (field) => true/false\n\n   menuName: \"User\",\n   // menuName: what gets displayed in the Editor drop list\n   // NOTE: this will be displayed using a Label: L(menuName)\n\n   supportRequire: false,\n   // {bool}\n   // does this ABField support the Required setting?\n\n   supportUnique: false,\n   // {bool}\n   // does this ABField support the Unique setting?\n\n   useAsLabel: true,\n   // {bool} / {fn}\n   // determines if this ABField can be used in the display of an ABObject's\n   // label.\n\n   compatibleOrmTypes: [\"string\"],\n   // {array}\n   // what types of Sails ORM attributes can be imported into this data type?\n   // http://sailsjs.org/documentation/concepts/models-and-orm/attributes#?attribute-options\n\n   compatibleMysqlTypes: [\"char\", \"varchar\", \"tinytext\"],\n   // {array}\n   // what types of MySql column types can be imported into this data type?\n   // https://www.techonthenet.com/mysql/datatypes.php\n\n   USERNAME_FIELD_ID: \"5760560b-c078-47ca-98bf-e18ac492a561\",\n   // {string} .uuid\n   // the ABField.id of the SiteUser.username field.  This is what other\n   // objects will link to in their ABFieldUser connections.\n};\n\nconst defaultValues = {\n   editable: 1,\n   isMultiple: 0,\n   isCurrentUser: 0,\n   isShowProfileImage: 0,\n   isShowUsername: 1,\n};\n\nmodule.exports = class ABFieldUserCore extends ABFieldConnect {\n   constructor(values, object) {\n      super(values, object, ABFieldUserDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABFieldUserDefaults;\n   }\n\n   static defaultValues() {\n      return defaultValues;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.editable = parseInt(this.settings.editable);\n      this.settings.isMultiple = parseInt(this.settings.isMultiple);\n      this.settings.isCurrentUser = parseInt(this.settings.isCurrentUser);\n      this.settings.isShowProfileImage = parseInt(\n         this.settings.isShowProfileImage\n      );\n      this.settings.isShowUsername = parseInt(this.settings.isShowUsername);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   format(rowData) {\n      let val = this.dataValue(rowData) || [];\n\n      if (val && !Array.isArray(val)) val = [val];\n      if (!val) val = [];\n\n      return val.map((v) => v.username || v).join(\", \");\n   }\n};\n","/*\n * ABMobilePageCore\n *\n * An view that represents a \"Page\" on the Mobile Device.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABMobilePageDefaults = {\n   key: \"mobile-page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-'  )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\",\n   // {string}\n   // What type of \"Page\" this is: ['page', 'popup', 'reportPage']\n\n   defaultPage: 0,\n   // {bool} 1|0\n   // is this the default page for the Mobile App? If so, this is the initial\n   // Page that is displayed when the App is loaded.\n   // NOTE: there can be only 1 page defined in the app as .defaultPage\n\n   hideTitle: 0,\n   // {bool} 1|0\n   // By default we will display this.label as our Title. Set this to 1 to not\n   // show the tile on the page.\n\n   hideTabs: 0,\n   // {bool} 1|0\n   // By default, pages will show any Tab options on their display.  Set this\n   // to 1 to not show the tab options for this Page. (good for pages that\n   // are linkedPages with forms )\n};\n\nmodule.exports = class ABMobilePageCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMobilePageDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABMobilePage, but has\n      // different implications ... so we default an ABMobilePage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABMobilePageDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABMobilePage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n      obj.route = this.route;\n\n      obj.myAppID = this.myAppID;\n\n      obj.menuType = this.menuType;\n\n      obj.defaultPage = this.defaultPage;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const DV = ABPropertyComponentDefaults;\n\n      this.route =\n         values.route || (this.name || this.label).replaceAll(\" \", \"_\");\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      this.menuType = values.menuType || \"menu\";\n      // {string}  [\"menu\", \"tab\"]\n      // indicates if this Page was added as a Mobile App's \"menu\" or \"Tab\"\n\n      this.defaultPage = values.defaultPage || 0;\n      // {bool}  1|0\n      // indicates if this is the default page that is loaded when the mobile app\n      // is started.\n      // NOTE: only 1 Page in a Mobile App can have this setting = 1.\n\n      this.settings.hideTitle = parseInt(\n         values.settings.hideTitle ?? DV.hideTitle\n      );\n      // {bool} 1|0\n      // By default an ABMobilePage will display it's this.label for a title\n      // on the page.  Setting this to TRUE (1) will hide the title.\n\n      this.settings.hideTabs = parseInt(\n         values.settings.hideTabs ?? DV.hideTabs\n      );\n      // {bool} 1|0\n      // By default, pages will show any Tab options on their display.  Set this\n      // to 1 to not show the tab options for this Page. (good for pages that\n      // are linkedPages with forms )\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.emit(\n               \"warning\",\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`,\n               {\n                  appID: this.application.id,\n                  pageID: this.id,\n                  missingPageID: id,\n               }\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      // this.settings.columns = this.settings.columns || 1;\n      // this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABMobilePage\n            // be sure to remove any of it's ABMobilePage as well\n            // This cleans out any dangling ABDefinitions\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABMobilePage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            // make sure .defaultPage is properly set\n            if (this.defaultPage) {\n               return this.application.setPageDefault(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABMobilePage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABMobilePages for this ABMobilePage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABMobilePages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABMobilePages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         // if (this._pages && this._pages.length > 0) {\n         //    result = this._pages.filter(filter);\n\n         //    if (result.length < 1) {\n         //       this._pages.forEach((p) => {\n         //          var subPages = p.pages(filter, deep);\n         //          if (subPages && subPages.length > 0) {\n         //             result = subPages;\n         //          }\n         //       });\n         //    }\n         // }\n         result = this.application._searchDeep(this, \"_pages\", filter);\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABMobilePage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABMobilePage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABMobilePage that is tied to this\n    * ABMobilePage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABMobilePage}\n    */\n   pageNew(values) {\n      // make sure this is an ABMobilePage description\n      values.key = ABMobilePageDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABMobilePage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABMobilePage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages((p) => p.id != page.id);\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABMobilePageDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABMobilePage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABMobilePage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABMobileViewDefaults = {\n   key: \"mobile-view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABMobileViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABMobileViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABMobileViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || this.viewKey(),\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         // accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || this.viewKey();\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      // this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label =\n               this.parent.label +\n               \".\" +\n               (this.field?.()?.columnName ?? this.defaults.key);\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   // isAccessibleForRoles(roles) {\n   //    var foundRole = false;\n\n   //    var accessibleRoles = Object.keys(this.accessLevels) || [];\n   //    (roles || []).forEach((r) => {\n   //       if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n   //          foundRole = true;\n   //       }\n   //    });\n\n   //    return foundRole;\n   // }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   // getUserAccess() {\n   //    // by default everyone has no access\n   //    var accessLevel = 0;\n\n   //    if (this.application.isAccessManaged) {\n   //       // check to see if the current users is the access manager\n   //       var isAccessManager = false;\n   //       // first check if manager is defined by their role\n   //       if (parseInt(this.application.accessManagers.useRole) == 1) {\n   //          // if so check if any of the user's role match the managers\n   //          this.AB.Account.roles().forEach((role) => {\n   //             if (\n   //                this.application.accessManagers.role.indexOf(\n   //                   role.id || role.uuid\n   //                ) > -1\n   //             ) {\n   //                // if so set the access level to full access\n   //                isAccessManager = true;\n   //                accessLevel = 2;\n   //             }\n   //          });\n   //       }\n   //       // if the user isn't already set as the manager and the manager is defined by their account\n   //       if (\n   //          !isAccessManager &&\n   //          parseInt(this.application.accessManagers.useAccount) == 1\n   //       ) {\n   //          // check if the user's account matches the managers\n   //          if (\n   //             this.application.accessManagers.account.indexOf(\n   //                this.AB.Account.uuid() + \"\"\n   //             ) > -1\n   //          ) {\n   //             // if so set the access level to full access\n   //             isAccessManager = true;\n   //             accessLevel = 2;\n   //          }\n   //       }\n\n   //       // if the user is not the manager check if the page has access levels defined for roles\n   //       if (\n   //          this.accessLevels &&\n   //          Object.keys(this.accessLevels).length > 0 &&\n   //          !isAccessManager\n   //       ) {\n   //          // check to see if the user's roles matches one of the roles defined\n   //          this.AB.Account.roles().forEach((role) => {\n   //             var currentRole = this.accessLevels[role.id || role.uuid];\n   //             if (currentRole && parseInt(currentRole) > accessLevel)\n   //                // if the access level is higher than a previous role set to the new level\n   //                accessLevel = parseInt(currentRole);\n   //          });\n   //       }\n   //    } else {\n   //       accessLevel = 2;\n   //    }\n\n   //    return accessLevel;\n   // }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"mobile-detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"mobile-detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"mobile-page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\n               \"mobile-form\",\n               \"grid\",\n               \"line\",\n               \"area\",\n               \"bar\",\n               \"gantt\",\n               \"kanban\",\n            ].indexOf(this.key) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"mobile-form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\n                  \"button\",\n                  \"label\",\n                  \"mobile-page\",\n                  \"tab\",\n                  \"viewcontainer\",\n               ].indexOf(this.key) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `MobileView[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   // updateAccessLevels(roleId, accessLevel) {\n   //    if (parseInt(accessLevel) == 0) {\n   //       if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n   //    } else {\n   //       this.accessLevels[roleId] = accessLevel;\n   //    }\n\n   //    return this.save(false, false);\n   // }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         // result = result.concat(this._views.filter(filter));\n\n         // this._views.forEach((v) => {\n         //    var subViews = v.views(filter, deep);\n         //    if (subViews && subViews.length > 0) {\n         //       result = result.concat(subViews);\n         //    }\n         // });\n         result = this.application._searchDeep(this, \"_views\", filter);\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewByID()\n    *\n    * return the specific View referenced by the given ID.\n    *\n    * @param {uuid} ID\n    *        the {ABMobileView}.id of the child view we are requesting\n    *\n    * @return {ABMobileView || undefined}\n    */\n   viewByID(ID) {\n      return this.views((v) => v.id == ID, true)[0];\n   }\n\n   /**\n    * @method viewNew()\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   // viewDestroy(view) {\n   //    console.error(\"DEPRECIATED: where is this called?\");\n   //    return this.viewRemove(view);\n   // }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // the default widget doesn't.\n      // only those that actually do, should override this.\n      return false;\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"mobile-page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"mobile-button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormButtonCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      Object.keys(ABViewFormButtonPropertyComponentDefaults).forEach((k) => {\n         let val =\n            this.settings[k] ?? ABViewFormButtonPropertyComponentDefaults[k];\n         try {\n            val = JSON.parse(val);\n         } catch (e) {\n            // just ignore the error and save val\n         }\n         this.settings[k] = val;\n      });\n\n      // this.settings.includeSave = JSON.parse(\n      //    this.settings.includeSave ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeSave\n      // );\n      // this.settings.includeCancel = JSON.parse(\n      //    this.settings.includeCancel ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeCancel\n      // );\n      // this.settings.includeReset = JSON.parse(\n      //    this.settings.includeReset ||\n      //       ABViewFormButtonPropertyComponentDefaults.includeReset\n      // );\n\n      // this.settings.isDefault = JSON.parse(\n      //    this.settings.isDefault ||\n      //       ABViewFormButtonPropertyComponentDefaults.isDefault\n      // );\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABMobileViewFormCheckboxDefaults = {\n   key: \"mobile-checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCheckboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormCheckboxPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABMobileViewFormConnectDefaults = {\n   key: \"mobile-connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormConnectCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABMobileViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"mobile-form\", // unique key identifier for this ABMobileViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABMobileViewFormCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"mobile-label\", \"mobile-button\", \"mobile-text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    * return an array of all the ABViewFormField children\n    * @param {fn} filter\n    *        a filter fn to return a set of ABViewFormField that this fn\n    *\t       returns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) =>\n               comp instanceof this.AB.Class.ABMobileViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * @method addFieldToForm()\n    * Create a New Form Item on this Form from a given ABFieldXXX object.\n    * @param {ABFieldXXX} field\n    * @param {int} yPosition\n    * @return {ABMobileViewFormXXX}\n    */\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      // TODO: figure out how to decode the Data Field and return a form\n      // element.\n\n      var fieldComponent = field.formComponentMobile();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"mobile-fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormCustomCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatepickerDefaults = {\n   key: \"mobile-date\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatepickerCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormDatetimePropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormDatetimeDefaults = {\n   key: \"mobile-datetime\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"Date and Time\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormDatetimeCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormDatetimeDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormDatetimeDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormDatetimePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormEmailPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABMobileViewFormEmailDefaults = {\n   key: \"mobile-email\", // {string} unique key for this view\n   icon: \"envelope\", // {string} fa-[icon] reference for this view\n   labelKey: \"Email\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormEmailCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormEmailDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormEmailDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormEmailPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFilePropertyComponentDefaults = {};\n\nconst ABViewFormFileDefaults = {\n   key: \"mobile-file\",\n   // {string} unique key for this view\n   icon: \"file\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"file\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFileCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFilePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormFormulaPropertyComponentDefaults = {};\n\nconst ABViewFormFormulaDefaults = {\n   key: \"mobile-formula\",\n   // {string} unique key for this view\n   icon: \"circle-o-notch\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Formula\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormFormulaCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormFormulaDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormFormulaDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormFormulaPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormFile = require(\"../../platform/mobile/ABMobileViewFormFile\");\n\nconst ABViewFormImagePropertyComponentDefaults = {};\n\nconst ABViewImageFileDefaults = {\n   key: \"mobile-image\",\n   // {string} unique key for this view\n   icon: \"file-image-o\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"Image\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormImageCore extends ABMobileViewFormFile {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewImageFileDefaults\n      );\n   }\n\n   static common() {\n      return ABViewImageFileDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormImagePropertyComponentDefaults;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABMobileViewFormItemCore extends ABMobileView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABMobileViewFormNumberDefaults = {\n   key: \"mobile-numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormNumberCore extends ABMobileViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABMobileViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n};\n","const ABMobileViewFormCustom = require(\"../../platform/mobile/ABMobileViewFormCustom\");\n\nconst ABMobileViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABMobileViewFormReadonlyDefaults = {\n   key: \"mobile-fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormReadonly extends ABMobileViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormReadonlyPropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormSelectSingle = require(\"../../platform/mobile/ABMobileViewFormSelectSingle\");\n\nconst ABMobileViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectMultipleDefaults = {\n   key: \"mobile-selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectMultipleCore extends (\n   ABMobileViewFormSelectSingle\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectMultiplePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABMobileViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABMobileViewFormSelectSingleDefaults = {\n   key: \"mobile-selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormSelectSingleCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABMobileViewFormSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABMobileViewFormSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABMobileViewFormSelectSinglePropertyComponentDefaults;\n   }\n};\n","const ABMobileViewFormItem = require(\"../../platform/mobile/ABMobileViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n   placeholder: \"\", // default placeholder text\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"mobile-textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewFormTextboxCore extends (\n   ABMobileViewFormItem\n) {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   toObj() {\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n\n      return super.toObj();\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // placeholder is a multilingual value:\n      this.unTranslate(this.settings, this.settings, [\"placeholder\"]);\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABMobileViewLabelCore extends ABMobileView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABMobileView = require(\"../../platform/mobile/ABMobileView\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n   hideTitle: 0,\n   hideTabs: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"mobile-list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABMobileView {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n\n   /**\n    * @method wantsAdd()\n    * Some widgets can indicate to their containing ABMobilePage that\n    * it wants to provide an [Add] feature.\n    * @return {bool}\n    */\n   get wantsAdd() {\n      // we do if we have a setting for linkPageAdd\n      return this.settings.linkPageAdd != \"\";\n   }\n};\n","/**\n * ABProcessLane\n * manages the lanes in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABProcessParticipant = require(\"../../platform/process/ABProcessParticipant\");\n\nconst ABProcessLaneDefaults = {\n   type: \"process.lane\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\"\n   // {string} .icon\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessLaneCore extends ABProcessParticipant {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessLaneDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.type = attributes.type || ABProcessLaneDefaults.type;\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   // toObj() {\n   //     // default label value\n   //     if (!this.label && this.name && this.name != \"\") {\n   //         this.label = this.name;\n   //     }\n\n   //     // untranslate this object:\n   //     var data = super.toObj();\n\n   //     var fieldsToSave = [\n   //         \"id\",\n   //         \"name\",\n   //         \"type\",\n   //         \"processID\",\n   //         \"diagramID\",\n   //         \"where\"\n   //     ];\n   //     fieldsToSave.forEach((f) => {\n   //         data[f] = this[f];\n   //     });\n\n   //     return data;\n   // }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system, and provide a way to lookup a SiteUser.\n */\nconst ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABProcessParticipantDefaults = {\n   type: \"process.participant\",\n   // {string} .type\n   // unique key to reference this specific object\n\n   // icon: \"key\" // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n};\n\nmodule.exports = class ABProcessParticipantCore extends ABMLClass {\n   constructor(attributes, process, AB) {\n      super([\"label\"], AB);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n\n      this.fromValues(attributes);\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n   }\n\n   static defaults() {\n      return ABProcessParticipantDefaults;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // These Values are needed By ABDefinition:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || ABProcessParticipantDefaults.type;\n      this.key = attributes.key || ABProcessParticipantDefaults.type;\n\n      // Process Values:\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneIDs = attributes.laneIDs || [];\n      this.stashed = false;\n      if (attributes.stashed && attributes.stashed != \"\") {\n         this.stashed = attributes.stashed;\n      }\n\n      function validChecker(attribute) {\n         return typeof attribute != \"undefined\" && attribute != null;\n      }\n\n      this.useRole = 0;\n      if (validChecker(attributes.useRole)) {\n         this.useRole = parseInt(attributes.useRole);\n      }\n\n      this.role = 0;\n      if (validChecker(attributes.role)) {\n         this.role = attributes.role;\n      }\n\n      this.useAccount = 0;\n      if (validChecker(attributes.useAccount)) {\n         this.useAccount = parseInt(attributes.useAccount);\n      }\n\n      this.account = 0;\n      if (validChecker(attributes.account)) {\n         this.account = attributes.account;\n      }\n\n      this.useField = 0;\n      if (validChecker(attributes.useField)) {\n         this.useField = parseInt(attributes.useField);\n      }\n\n      this.userField = [];\n      if (validChecker(attributes.userField)) {\n         this.userField = attributes.userField;\n      }\n\n      // depreciated\n      this.fields = [];\n      if (validChecker(attributes.fields)) {\n         this.fields = attributes.fields;\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneIDs\",\n         \"where\",\n         \"useRole\",\n         \"role\",\n         \"useAccount\",\n         \"account\",\n         \"useField\",\n         \"userField\",\n         \"fields\",\n         \"stashed\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   /**\n    * @method onProcessReady()\n    * perform any tasks/checks necessary after the parent Process is\n    * setup and ready.\n    */\n   onProcessReady() {}\n};\n","/*\n * ABProcessTaskManager\n *\n * An interface for managing the different ABProcessTasks in AppBuilder.\n *\n */\n\n/*\n * Tasks\n * A name => ABProcessElement hash of the different ABProcessElements available.\n */\nvar Tasks = {};\n\n/*\n * DEFINITIONTYPES\n * a hash of BPMN:Element.type to Default values\n * for each of our Process Objects.\n *\n * NOTE: For Tasks, the key should be target.type,\n * for Triggers or End elements, the key should be\n * the target.eventDefinitionType\n */\nvar DEFINITIONTYPES = {};\n\nvar AllProcessElements = [\n   require(\"../../platform/process/tasks/ABProcessEnd\"),\n   require(\"../../platform/process/tasks/ABProcessGatewayExclusive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskEmail\"),\n   require(\"../../platform/process/tasks/ABProcessTaskService\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingBatchProcessing\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingFPYearClose\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceAccountingJEArchive\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceCalculate\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceInsertRecord\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceQuery\"),\n   require(\"../../platform/process/tasks/ABProcessTaskServiceGetResetPasswordUrl\"),\n   require(\"../../platform/process/tasks/ABProcessTaskSubProcess\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUser\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserApproval\"),\n   require(\"../../platform/process/tasks/ABProcessTaskUserExternal\"),\n   require(\"../../platform/process/tasks/ABProcessTrigger\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerLifecycle\"),\n   require(\"../../platform/process/tasks/ABProcessTriggerTimer\"),\n];\n\nAllProcessElements.forEach((ELEMENT) => {\n   Tasks[ELEMENT.defaults().key] = ELEMENT;\n\n   switch (ELEMENT.defaults().category) {\n      case \"start\":\n      case \"end\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.eventDefinitionType] =\n            ELEMENT.defaults();\n         break;\n\n      case \"gateway\":\n      case \"task\":\n         DEFINITIONTYPES[ELEMENT.DiagramReplace().target.type] =\n            ELEMENT.defaults();\n         break;\n   }\n});\n\nmodule.exports = {\n   /*\n    * @function allTasks\n    * return all the currently defined ABProcessTasks in an array.\n    * @return [{ABProcessTask},...]\n    */\n   allTasks: function () {\n      var tasks = [];\n      for (var t in Tasks) {\n         tasks.push(Tasks[t]);\n      }\n      return tasks;\n   },\n\n   /*\n    * @function newTask\n    * return an instance of an ABProcessTask based upon the values.type value.\n    * @return {ABProcessTask}\n    */\n   newTask: function (values, process, AB) {\n      if (values.key) {\n         return new Tasks[values.key](values, process, AB);\n      } else {\n         //// TODO: what to do here?\n      }\n   },\n\n   DiagramReplaceDefinitionsForType: function (type) {\n      var definitions = AllProcessElements.filter((e) => {\n         return e.defaults().category == type;\n      }).map((e) => {\n         return e.DiagramReplace();\n      });\n      return definitions;\n   },\n\n   StartEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"start\");\n   },\n\n   Gateways: function () {\n      return this.DiagramReplaceDefinitionsForType(\"gateway\");\n   },\n\n   Tasks: function () {\n      return this.DiagramReplaceDefinitionsForType(\"task\");\n   },\n\n   EndEvents: function () {\n      return this.DiagramReplaceDefinitionsForType(\"end\");\n   },\n\n   definitionForElement: function (element) {\n      // pull the key from the embedded .eventDefinition\n      // if there is one\n      var key = null;\n      if (element.businessObject.eventDefinitions) {\n         var def = element.businessObject.eventDefinitions[0];\n         if (def) {\n            key = def.$type;\n         }\n      }\n\n      // if not, then just use the base .type\n      if (!key) {\n         key = element.type;\n      }\n\n      return DEFINITIONTYPES[key];\n   },\n};\n","var ABMLClass = require(\"../../../platform/ABMLClass\");\n\nmodule.exports = class ABProcessTaskCore extends ABMLClass {\n   constructor(attributes, process, AB, defaultValues) {\n      super([\"label\"], AB);\n\n      this.defaults = defaultValues || { key: \"core\", icon: \"core\" };\n      // {obj} .defaults\n      // a value hash of default values for an ABProcessTask\n      // NOTE: needs to be set before .fromValues()\n\n      this.fromValues(attributes);\n\n      this.process = process;\n      if (!this.processID) {\n         this.processID = process.id;\n      }\n      // {ABProcess} .process\n      // The parent ABProcess this process element is a part of.\n\n      //// Runtime Values\n      //// these are not stored in the Definition, but rather\n      //// loaded and used from a running process instance.\n      this.state = null;\n   }\n\n   ///\n   /// Static Methods\n   ///\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      // ABDefinition Related fields:\n      this.id = attributes.id;\n      this.name = attributes.name || \"\";\n      this.type = attributes.type || \"process.task.unknown\";\n\n      // ABProcess related fields:\n      this.key = attributes.key || this.defaults.key || \"?key?\";\n      this.processID = attributes.processID || null;\n      this.diagramID = attributes.diagramID || \"?diagramID?\";\n      this.laneDiagramID = attributes.laneDiagramID || \"?laneID?\";\n      // laneDiagramID : connects to the parent object that defines any\n      //      default User information for the Task.  In our case, it\n      //      might be a {ABProcessParticipant} object, or a {ABProcessLane}\n      //      object.  by default, a diagram's Participant obj doesn't define\n      //      any lanes, and therefore can provide that info.  Once a lane\n      //      is added, however, an object is assigned to it, and the\n      //      Lane will provide that info.\n\n      // initialize any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            if (typeof attributes[s] == \"undefined\") this[s] = null;\n            else this[s] = attributes[s];\n         });\n      }\n\n      super.fromValues(attributes); // perform translation on this object.\n      // NOTE: keep this at the end of .fromValues();\n\n      if (!this.label) {\n         this.label = this.name;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // default label value\n      if (!this.label && this.name && this.name != \"\") {\n         this.label = this.name;\n      }\n\n      // untranslate this object:\n      var data = super.toObj();\n\n      var fieldsToSave = [\n         \"id\",\n         \"name\",\n         \"type\",\n         \"processID\",\n         \"diagramID\",\n         \"laneDiagramID\",\n         \"key\",\n      ];\n      fieldsToSave.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      // save any defined settings\n      if (this.defaults && this.defaults.settings) {\n         this.defaults.settings.forEach((s) => {\n            data[s] = this[s];\n         });\n      }\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * errorConfig()\n    * Respond with an error when expected configuration parameters do not\n    * pull data.\n    * @param {obj} instance\n    *        the instance data of this task\n    * @param {string} msg\n    *        the display message for this error.\n    * @param {array[string]} fields\n    *        an array of parameter keys that should be included in the error\n    *        for additional information.\n    * @return {Promise.reject(error)}\n    */\n   errorConfig(instance, msg, fields = []) {\n      this.log(instance, msg);\n      var error = new Error(`${this.type}: ${msg}`);\n      var info = { task: this };\n      if (!Array.isArray(fields)) fields = [fields];\n      fields.forEach((field) => {\n         info[field] = this[field];\n      });\n      this.AB.notify.builder(error, info);\n      return Promise.reject(error);\n   }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context\n    *        the context data of the process instance\n    * @param {obj} defaults\n    *        any values to include from our child classes\n    * @param {obj} val\n    *        any values to override the default state\n    */\n   initState(context, defaults, val) {\n      defaults = defaults || {};\n      if (!val) {\n         val = defaults;\n         defaults = {};\n\n         // in this case, then auto initi blank instanceValues:\n         if (this.defaults && this.defaults.instanceValues) {\n            this.defaults.instanceValues.forEach((v) => {\n               defaults[v] = null;\n            });\n         }\n      }\n\n      context.taskState = context.taskState || {};\n\n      // don't overwrite your settings if they already exist:\n      if (!context.taskState[this.diagramID]) {\n         context.taskState[this.diagramID] = {\n            initialized: true,\n            status: \"initialized\",\n         };\n         for (var d in defaults) {\n            context.taskState[this.diagramID][d] = defaults[d];\n         }\n         for (var v in val) {\n            context.taskState[this.diagramID][v] = val[v];\n         }\n      }\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return false;\n   }\n\n   /**\n    * log()\n    * enter a log in the current process instance\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {...} ...allArgs the remaining parameters sent to the log\n    */\n   log(instance, ...allArgs) {\n      var text = `${this.diagramID} : ${\n         this.name ? this.name : this.key\n      } : ${allArgs.join(\" \")}`;\n      instance.log.push(text);\n   }\n\n   /**\n    * myLane()\n    * return the ABProcessParticipant | ABProcessLane element we are\n    * in.\n    * @return {ABProcessParticipant|ABProcessLane}\n    */\n   myLane() {\n      return this.process.elementForDiagramID(this.laneDiagramID);\n   }\n\n   /**\n    * myState()\n    * return the current state values for this ABProcessTask\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {obj}\n    */\n   myState(instance) {\n      return instance.context.taskState[this.diagramID];\n   }\n\n   /**\n    * nextTasks()\n    * follow the current instance diagram and return the next task(s)\n    * after this task.\n    * @param {obj} instance  the current ABProcessInstance\n    * @return {array}  [ABProcessTask, ...] or {null} if an error\n    */\n   nextTasks(instance) {\n      var nextTasks = [];\n\n      var myDiagramObj = instance.hashDiagramObjects[this.diagramID];\n      if (!myDiagramObj) {\n         let error = new Error(\n            `Configuration Error: Did not find my definition for dID[${this.diagramID}]`\n         );\n         this.onError(instance, error);\n         return null;\n      }\n\n      // myDiagramObj :\n      // {\n      //     \"bpmn2:outgoing\": [{\"_text\": \"SequenceFlow_00fbxm3\"} ...],\n      //     \"_attributes\": {id: \"StartEvent_1\"},\n      //     \"_type\": \"start\"\n      // }\n\n      // find my possible exits:\n      var exitFlows = myDiagramObj[\"bpmn2:outgoing\"];\n      if (!exitFlows) {\n         let error = new Error(\n            `Configuration Error: Did not find any outgoing flows for dID[${this.diagramID}]`\n         );\n         this.AB.notify.builder(error, { task: this });\n         this.onError(instance, error);\n         return null;\n      }\n\n      if (!Array.isArray(exitFlows)) {\n         exitFlows = [exitFlows];\n      }\n\n      var tasksFromFlow = (flow) => {\n         // follow a flow and grab each of it's exit tasks\n         // place them into nextTasks[];\n\n         var flowObj = instance.hashDiagramObjects[flow[\"_text\"]];\n         if (!flowObj) return;\n\n         var targetIDs = flowObj[\"_attributes\"][\"targetRef\"];\n         if (!targetIDs) return;\n\n         if (!Array.isArray(targetIDs)) {\n            targetIDs = [targetIDs];\n         }\n\n         targetIDs.forEach((tid) => {\n            var targetTask = this.process.elementForDiagramID(tid);\n            if (targetTask) {\n               if (nextTasks) {\n                  nextTasks.push(targetTask);\n               }\n            } else {\n               let error = new Error(\n                  `Configuration Error: No ProcessTask instance for diagramID[${tid}]`\n               );\n               this.AB.notify.builder(error, { task: this });\n               this.onError(instance, error);\n               nextTasks = null;\n            }\n         });\n      };\n\n      exitFlows.forEach((f) => {\n         tasksFromFlow(f);\n      });\n\n      return nextTasks;\n   }\n\n   /**\n    * onError()\n    * perform the following actions (log it) on an error.\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {Error} error\n    */\n   onError(instance, error) {\n      if (error) {\n         var text = `${error.toString()}`;\n         this.log(instance, text);\n      }\n      var myState = this.myState(instance);\n      myState.status = \"error\";\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can request from other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return null;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      return null;\n   }\n\n   /**\n    * hashProcessDataValues()\n    * return a hash of live Process Data Values\n    * @param {obj} instance\n    * @return {array} | null\n    */\n   hashProcessDataValues(instance) {\n      var listDataFields = this.process.processDataFields(this);\n      var currentProcessValues = {};\n      listDataFields.forEach((f) => {\n         currentProcessValues[f.key] = this.process.processData(this, [\n            instance,\n            f.key,\n         ]);\n      });\n      return currentProcessValues;\n   }\n\n   /**\n    * reset()\n    * prepare this task to run again if it was already completed.\n    *\n    * This might happen in a process where a loop is formed and tasks\n    * are repeated until a certain outcome.\n    *\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   reset(instance) {\n      // a task wants to run me.  Possibly again.\n      var myState = this.myState(instance);\n\n      // if I haven't setup my state (why?) then just\n      // do that again:\n      if (!myState) {\n         this.initState(instance.context);\n      } else {\n         // if I have already \"completed\" and we are being\n         // asked to run again (it's possible)\n         if (myState.status == \"completed\" || myState.status == \"error\") {\n            // remove my current state\n            delete instance.context.taskState[this.diagramID];\n\n            // store a new state in the context\n            this.initState(instance.context);\n\n            // remember our previous state\n            var newState = this.myState(instance);\n            newState._prevState = myState;\n            this.log(instance, \" Reset() called. Running again. \");\n         }\n      }\n   }\n\n   /**\n    * stateCompleted()\n    * mark this task has having completed.\n    * @param {obj} instance  the current ABProcessInstance\n    */\n   stateCompleted(instance) {\n      var myState = this.myState(instance);\n      myState.status = \"completed\";\n   }\n\n   /**\n    * stateUpdate()\n    * update my state values with the given values data\n    * @param {obj} instance  the current ABProcessInstance\n    * @param {obj} values    the new state values\n    */\n   stateUpdate(instance, values) {\n      values = values || {};\n      var myState = this.myState(instance);\n      for (var v in values) {\n         myState[v] = values[v];\n      }\n   }\n\n   /**\n    * wantToDoSomething()\n    * determine if this task still has something to do.\n    * @param {obj} instance  the instance data of the process we are working on\n    * @return {bool} true if there is still pending actions\n    */\n   wantToDoSomething(instance) {\n      var state = this.myState(instance);\n      if (state) {\n         return state.status != \"completed\" && state.status != \"error\";\n      } else {\n         // my state wasn't defined?\n         console.warn(\n            \"ABProcessTaskCore:wantToDoSomething(): called without having initialized our state first.\",\n            instance\n         );\n         // initialize our state and try again\n         this.initState(instance.context);\n         return this.wantToDoSomething(instance);\n      }\n   }\n\n   /**\n    * @method onProcessReady()\n    * Perform any setup actions after the parent process has indicated it is \"ready\"\n    */\n   onProcessReady() {}\n\n   get startElements() {\n      let startElems =\n         this.process.elements(\n            (elem) =>\n               elem && elem.defaults && elem.defaults.category === \"start\"\n         ) || [];\n      return startElems;\n   }\n\n   get previousElements() {\n      return this.process.connectionPreviousTask(this);\n   }\n\n   get objectOfStartElement() {\n      const startElem = this.startElements[0];\n      if (!startElem) return null;\n\n      return this.AB.objectByID(startElem.objectID);\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElements[0];\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEndDefaults = {\n   category: \"end\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"stop\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   key: \"End\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEndCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.end\";\n      super(attributes, process, AB, ABProcessTaskEndDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEndDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Terminate End Event\",\n         actionName: \"replace-with-terminate-end\",\n         className: \"bpmn-icon-end-event-terminate\",\n         target: {\n            type: \"bpmn:EndEvent\",\n            eventDefinitionType: \"bpmn:TerminateEventDefinition\",\n         },\n      };\n   }\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         triggered: false,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n\n   /*\n    * @function isEndTask\n    * return true if the current type of task is an End task. False otherwise.\n    * @return {bool}\n    */\n   isEndTask() {\n      return true;\n   }\n\n   /**\n    * nextTasks()\n    * return the next tasks to be run after this task is complete.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve([])\n    */\n   nextTasks(instance) {\n      // I'm an End Event.  There are no nextTasks()\n      return [];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessGatewayExclusiveDefaults = {\n   category: \"gateway\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to\n   // reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GatewayExclusive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"conditions\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessGatewayExclusiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.gateway.exclusive\";\n      super(attributes, process, AB, ABProcessGatewayExclusiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessGatewayExclusiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Exclusive Gateway\",\n         actionName: \"replace-with-exclusive-gateway\",\n         className: \"bpmn-icon-gateway-xor\",\n         target: {\n            type: \"bpmn:ExclusiveGateway\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      this.conditions = this.conditions || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessGatewayExclusiveDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskEmailDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"to\",\n      \"from\",\n      \"subject\",\n      \"message\",\n      \"toCustom\",\n      \"fromCustom\",\n      \"toUsers\",\n      \"fromUsers\",\n      \"toCustomFields\",\n      \"fromCustomFields\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"email\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Email\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTaskEmailCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.email\";\n      super(attributes, process, AB, ABProcessTaskEmailDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskEmailDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Send Task\",\n         actionName: \"replace-with-send-task\",\n         className: \"bpmn-icon-send\",\n         target: {\n            type: \"bpmn:SendTask\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         this[f] = attributes[f];\n      });\n   }\n\n   /**\n    * onProcessReady()\n    * Perform our warnings checks once the parent Process is ready\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      ABProcessTaskEmailDefaults.fields.forEach((f) => {\n         data[f] = this[f];\n      });\n\n      return data;\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         to: [],\n         from: [],\n         subject: this.subject,\n         message: this.message,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingBatchProcessingDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingBatchProcessing\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectBatch\",\n      \"processBatchValue\",\n      \"fieldBatchEntries\",\n      \"fieldBatchFinancialPeriod\",\n      \"objectJE\",\n      \"fieldJEAccount\",\n      \"fieldJERC\",\n      \"fieldJEStatus\",\n      \"fieldJEStatusComplete\",\n      \"objectBR\",\n      \"fieldBRFinancialPeriod\",\n      \"fieldBRAccount\",\n      \"fieldBRRC\",\n      \"fieldBREntries\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingBatchProcessingCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.batchProcessing\";\n      super(attributes, process, AB, AccountingBatchProcessingDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingBatchProcessingDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPValue\",\n      \"objectFP\",\n      \"objectGL\",\n      \"objectAcc\",\n      \"fieldFPStart\",\n      \"fieldFPOpen\",\n      \"fieldFPStatus\",\n      \"fieldFPActive\",\n      \"fieldGLStarting\",\n      \"fieldGLRunning\",\n      \"fieldGLAccount\",\n      \"fieldGLRc\",\n      \"fieldGLDebit\",\n      \"fieldGLCredit\",\n      \"fieldAccType\",\n      \"fieldAccAsset\",\n      \"fieldAccExpense\",\n      \"fieldAccLiabilities\",\n      \"fieldAccEquity\",\n      \"fieldAccIncome\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpClose\";\n      super(attributes, process, AB, AccountingFPCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar AccountingFPYearCloseDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingFPYearClose\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processFPYearValue\",\n      \"objectFPYear\",\n      \"objectFPMonth\",\n      \"objectGL\",\n      \"objectAccount\",\n      \"valueFundBalances\",\n      \"valueNetIncome\",\n      \"fieldFPYearStart\",\n      \"fieldFPYearEnd\",\n      \"fieldFPYearStatus\",\n      \"fieldFPYearActive\",\n      \"fieldFPMonthStart\",\n      \"fieldFPMonthEnd\",\n      \"fieldGLStartBalance\",\n      \"fieldGLRunningBalance\",\n      \"fieldGLrc\",\n      \"fieldAccNumber\",\n      \"fieldAccType\",\n      \"fieldAccTypeIncome\",\n      \"fieldAccTypeExpense\",\n      \"fieldAccTypeEquity\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingFPYearCloseCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.fpYearClose\";\n      super(attributes, process, AB, AccountingFPYearCloseDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingFPYearCloseDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingFPCloseDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet AccountingJEArchiveDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"archive\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"AccountingJEArchive\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"processBatchValue\",\n      \"objectBatch\",\n      \"objectBalance\",\n      \"objectJE\",\n      \"objectJEArchive\",\n\n      \"fieldBatchFiscalMonth\",\n      \"fieldJeAccount\",\n      \"fieldJeRC\",\n      \"fieldJeArchiveBalance\",\n      \"fieldBrFiscalMonth\",\n      \"fieldBrAccount\",\n      \"fieldBrRC\",\n      \"fieldsMatch\",\n   ],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class AccountingJEArchiveCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.accounting.jeArchive\";\n      super(attributes, process, AB, AccountingJEArchiveDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return AccountingJEArchiveDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        AccountingBatchProcessingDefaults.settings.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.[someInstanceVariableHere]`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet CalculateDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"calculator\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Calculate\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"formulaText\"],\n};\n\nmodule.exports = class CalculateTaskCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.calculate\";\n      super(attributes, process, AB, CalculateDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return CalculateDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      const label = `${this.label}->Value`;\n      // this is a calculate task, so let's include a fake ABFieldNumber\n      // for the .field value, so other tasks that limit their operations\n      // to fields can use this as a number\n      if (!this._fakeNum) {\n         this._fakeObj = this.AB.objectNew({});\n         this._fakeNum = this.AB.fieldNew(\n            { key: \"number\", name: label, label },\n            this._fakeObj\n         );\n      }\n      return {\n         key: `${this.id}.value`,\n         label,\n         field: this._fakeNum,\n      };\n   }\n};\n","/**\n * ABProcessTaskServiceCore\n *\n * This defines the base Service Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a ServiceTask performs a dedicated operation on the server.\n *  - performing a query, looking up data, etc...\n *\n */\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskServiceDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskService\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service\";\n      super(attributes, process, AB, ABProcessTaskServiceDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Service Task\",\n         actionName: \"replace-with-service-task\",\n         className: \"bpmn-icon-service\",\n         target: {\n            type: \"bpmn:ServiceTask\",\n         },\n      };\n   }\n\n   /*\n    fromValues(attributes) {\n        /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        * /\n        super.fromValues(attributes);\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            this[f] = attributes[f];\n        });\n    }\n    */\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskServiceDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n    */\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {\n            userFormID: null,\n            userFormResponse: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   /*\n    processDataFields() {\n        // in this Task, we can return the Response to the UserForm\n        return [\n            {\n                key: `${this.id}.userFormResponse`,\n                label: `${this.label}->Response`\n            }\n        ];\n    }\n    */\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   /*\n    processData(instance, key) {\n        var parts = key.split(\".\");\n        if (parts[0] == this.id) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n        }\n        return null;\n    }\n    */\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskGetResetPasswordUrlDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"GetResetPasswordUrl\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"email\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskGetResetPasswordUrlCore extends (\n   ABProcessElement\n) {\n   constructor(attributes, process, AB) {\n      attributes.type =\n         attributes.type || \"process.task.service.getResetPasswordUrl\";\n      super(attributes, process, AB, ABProcessTaskGetResetPasswordUrlDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskGetResetPasswordUrlDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return {\n         key: `${this.id}.url`,\n         label: `${this.label}->URL`,\n      };\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet InsertRecordDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"InsertRecord\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"objectID\",\n      \"fieldValues\",\n      \"isRepeat\",\n      \"repeatMode\",\n      \"repeatColumn\",\n   ],\n};\n\nmodule.exports = class InsertRecordCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.insertRecord\";\n      super(attributes, process, AB, InsertRecordDefaults);\n\n      this.results = [];\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return InsertRecordDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.isRepeat = JSON.parse(attributes.isRepeat || false);\n   }\n\n   get startElement() {\n      let startElem = null;\n      let currProcess = this.process;\n\n      // Find the start (trigger) task\n      while (!startElem && currProcess) {\n         startElem = currProcess.elements(\n            (elem) => elem?.defaults?.category == \"start\"\n         )[0];\n\n         // If .currProcess is a sub task, then go to the parent process for get the start task\n         currProcess = currProcess.process;\n      }\n\n      return startElem;\n   }\n\n   get previousElement() {\n      return this.process.connectionPreviousTask(this)[0];\n   }\n\n   get objectOfStartElement() {\n      let startElem = this.startElement;\n      if (!startElem) return null;\n\n      let startElemObj = this.AB.objectByID(startElem.objectID);\n      return startElemObj;\n   }\n\n   get objectOfPrevElement() {\n      let prevElem = this.previousElement;\n      if (!prevElem) return null;\n\n      let objectID;\n      switch (prevElem.type) {\n         case \"process.task.service.query\":\n            objectID = prevElem.qlObj ? prevElem.qlObj.objectID : null;\n            break;\n         case \"process.task.service.insertRecord\":\n         default:\n            objectID = prevElem.objectID;\n            break;\n      }\n\n      return this.AB.objectByID(objectID);\n   }\n\n   get fieldRepeat() {\n      let obj = this.objectOfStartElement;\n      if (!obj) return null;\n\n      return obj.fields((f) => f.id == this.repeatColumn)[0];\n   }\n\n   /**\n    * processDataFields()\n    * return a single available data field from this element\n    * this will be the record inserted by this task\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.[PK]`,\n            label: `${this.label}-> Inserted record [PK]`,\n            field: {\n               id: this.id,\n               object: { id: this.objectID },\n               key: \"InsertedRecord\",\n               columnName: \"uuid\",\n            },\n            object: this.objectID,\n            set: true,\n         },\n      ];\n   }\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   /*\n     toObj() {\n         var data = super.toObj();\n \n         AccountingBatchProcessingDefaults.settings.forEach((f) => {\n             data[f] = this[f];\n         });\n \n         return data;\n     }\n     */\n\n   ////\n   //// Process Instance Methods\n   ////\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABQLManager = require(\"../../../platform/ql/ABQLManager.js\");\n\nconst ABProcessTaskServiceQueryDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskServiceQuery\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"qlObj\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskServiceQueryCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.query\";\n      super(attributes, process, AB, ABProcessTaskServiceQueryDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskServiceQueryDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Before we make instances of qlObj:\n      this._datasources = [];\n\n      // comvert our qlObj into an ABQLxxx instance.\n      if (this.qlObj) {\n         this.qlObj = ABQLManager.fromAttributes(this.qlObj, this, this.AB);\n      }\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const data = super.toObj();\n\n      // convert qlObj into obj format:\n      if (this.qlObj) data.qlObj = this.qlObj.toObj();\n\n      return data;\n   }\n\n   registerDatasource(obj) {\n      this._datasources.push(obj);\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        const myDefaults = {\n            instanceVariable1: null,\n            instanceVariable2: null\n        };\n\n        super.initState(context, myDefaults, val);\n    }\n    */\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // in this Task, we can return the Response to the UserForm\n      let fields = null;\n\n      if (this._datasources.length > 0) {\n         fields = [];\n\n         this._datasources.forEach((s) => {\n            const param = s.processDataField(this.id, this.label);\n\n            if (param) {\n               fields.push(param);\n            }\n         });\n      }\n\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      const parts = key.split(\".\");\n\n      if (parts[0] === this.id) {\n         const myState = this.myState(instance);\n\n         return myState[parts[1]];\n      }\n\n      return null;\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nlet SubProcessDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"object-group\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"SubProcess\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\n      \"isEnable\",\n      \"parameterId\",\n      \"connectionAttrs\",\n      \"elementIDs\",\n      \"loopType\",\n   ],\n};\n\nconst NOSPAM = {\n   /*message : bool */\n};\n// prevent sending the same message over and over.\n\nmodule.exports = class SubProcessCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.service.subProcess\";\n      super(attributes, process, AB, SubProcessDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return SubProcessDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"Sub Process\",\n         actionName: \"replace-with-subprocess\",\n         className: \"bpmn-icon-subprocess-expanded\",\n         target: {\n            type: \"bpmn:SubProcess\",\n            isExpanded: true,\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      // Convert string to boolean\n      this.isEnable = this.isEnable == null ? true : JSON.parse(this.isEnable);\n\n      let currElements = this._elements || {};\n      this._unknownElementIDs = [];\n      this._elements = {};\n      (attributes.elementIDs || []).forEach((eID) => {\n         let ele = this.AB.processElementNew(eID, this);\n         if (ele) {\n            this._elements[eID] = ele;\n         } else {\n            // current eID isn't one of our definitions yet, so might be\n            // a temporary .diagramID from an unsaved task:\n            if (currElements[eID]) {\n               this._elements[eID] = currElements[eID];\n            } else {\n               this._unknownElementIDs.push(eID);\n            }\n         }\n      });\n\n      this._unknownElementIDs.forEach((eID) => {\n         let key = `Process[${this.processID}] Task[${this.label}] is referencing an unknown element id:[${eID}]`;\n         if (!NOSPAM[key]) {\n            let err = new Error(key);\n            this.AB.notify.builder(err, { processTask: this.id, eID });\n            NOSPAM[key] = true;\n         }\n      });\n\n      this._connections = attributes.connectionAttrs || {};\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      let data = super.toObj();\n\n      data.elementIDs = [];\n      for (let e in this._elements) {\n         data.elementIDs.push(this._elements[e].id);\n      }\n\n      data.connectionAttrs = this._connections;\n\n      return data;\n   }\n\n   /**\n    * @method processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processDataFields(currElement) {\n      if (this.parameterId == null) return [];\n\n      // only call processDataFields once, filter it to get the different queries\n      let dataFieldsAll = this.process.processDataFields(this) || [];\n\n      // get the subtask data\n      let dataFieldOpt = dataFieldsAll.filter(\n         (opt) => opt.key === this.parameterId\n      )[0];\n\n      // get data from insert tasks\n      let dataFieldsAllInserted = dataFieldsAll.filter(\n         (opt) => (opt?.field?.key ?? opt?.field) === \"InsertedRecord\"\n      );\n\n      if (dataFieldOpt == null) return [];\n\n      let result = [];\n\n      // Connect field type\n      if (\n         dataFieldOpt.field &&\n         dataFieldOpt.field.key == \"connectObject\" &&\n         dataFieldOpt.field.datasourceLink &&\n         dataFieldOpt.field.datasourceLink.fields\n      ) {\n         result.push({\n            key: `${this.id}.uuid`,\n            label: `${this.label}->Repeat Data.ID`,\n            object: dataFieldOpt.field.datasourceLink,\n         });\n\n         dataFieldOpt.field.datasourceLink.fields().forEach((f) => {\n            result.push({\n               key: `${this.id}.${f.id}`,\n               label: `${this.label}->Repeat Data.${f.label}`,\n               field: f,\n               object: f.object,\n            });\n         });\n      }\n      // Other field types\n      else {\n         result.push({\n            key: dataFieldOpt.field\n               ? `${this.id}.${dataFieldOpt.field.id}`\n               : `${this.id}.subProcess`,\n            label: `${this.label}->Repeat Data`,\n            field: dataFieldOpt.field,\n            object: dataFieldOpt.object,\n         });\n      }\n\n      dataFieldsAllInserted.forEach((opt) => {\n         result.push({\n            key: `${opt.key || opt.id}`,\n            label: `Parent Process Data->${opt.label}`,\n            field: opt.field,\n            object: opt.object,\n         });\n      });\n\n      // Get any tasks that exist inside the subprocess\n      let previousFields = this.process.processDataFields.call(\n         this,\n         currElement\n      );\n      if (previousFields && previousFields.length > 0) {\n         result = result.concat(previousFields);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method processData()\n    * return an array of avaiable ABObjects that are represented\n    * by the data previous ProcessElements are working with.\n    * @param {ABProcessElement} currElement\n    *        the ABProcessElement that is requesting the data.\n    * @return {array} | null\n    */\n   processData(currElement, params) {\n      let instance = params[0];\n      let key = params[1];\n      let data;\n\n      if (instance && key?.startsWith?.(this.id)) {\n         let fieldId = key.split(\".\")[1];\n         let myState = this.myState(instance);\n         let stateData = myState ? myState.data : null;\n         data = stateData;\n\n         if (stateData && fieldId) {\n            let dataFieldOpt = (\n               this.process.processDataFields(this) || []\n            ).filter((opt) => opt.key == this.parameterId)[0];\n\n            if (dataFieldOpt?.field?.key == \"connectObject\") {\n               if (!Array.isArray(stateData)) stateData = [stateData];\n\n               // Extract data\n               data = stateData.map((item) => {\n                  if (fieldId == \"uuid\" || fieldId == \"id\") {\n                     return item.uuid || item.id || item;\n                  } else if (dataFieldOpt.field.datasourceLink) {\n                     let returnField = dataFieldOpt.field.datasourceLink.fields(\n                        (f) => f.id == fieldId\n                     )[0];\n                     if (returnField) return item[returnField.columnName];\n                     else return item;\n                  }\n               });\n            }\n         }\n      }\n\n      // Filter none data items\n      if (Array.isArray(data)) data = data.filter((d) => d != null);\n\n      if (data == null || !data.length)\n         data = this.process.processData.call(this, currElement, params);\n\n      if (data == null || !data.length)\n         data = this.process.processData(this, params);\n\n      return data;\n   }\n\n   allPreviousTasks(...params) {\n      return this.process.allPreviousTasks.call(this, ...params);\n   }\n\n   allPreviousConnectionsForElement(...params) {\n      return this.process.allPreviousConnectionsForElement.call(\n         this,\n         ...params\n      );\n   }\n\n   allPreviousConnectionsForConnection(...params) {\n      return this.process.allPreviousConnectionsForConnection.call(\n         this,\n         ...params\n      );\n   }\n\n   //\n   // Diagram Elements\n   //\n\n   /**\n    * @method connections()\n    * return an array of connections that describe the relationships between\n    * our process elements.\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return [{SimpleConnectionObj}]\n    */\n   connections(fn) {\n      return this.process.connections.call(this, fn);\n   }\n\n   /**\n    * @method connectionForDiagramID()\n    * return the connection for the given diagram id\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionForDiagramID(dID) {\n      if (!dID) return;\n\n      return this.process.connectionForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method connectionsIncoming()\n    * return the connections that are entering this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsIncoming(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsIncoming.call(this, dID);\n   }\n\n   /**\n    * @method connectionsOutgoing()\n    * return the connections that are leaving this Element\n    * @param {string} dID\n    *        the bpmn:Element diagram id\n    */\n   connectionsOutgoing(dID) {\n      if (!dID) return;\n\n      return this.process.connectionsOutgoing.call(this, dID);\n   }\n\n   /**\n    * @method connectionRemove()\n    * remove the connection info for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionRemove(element) {\n      if (!element) return;\n\n      this.process.connectionRemove.call(this, element);\n   }\n\n   /**\n    * @method connectionSimplyElement()\n    * given a BPMN diagram element, return a simplified object that describes\n    * the connection between two elements.\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    * @return {SimpleConnectionObj}\n    *        .id : {string} diagram id of the connection element\n    *        .type : {string} the type of connection\n    *        .from : {string} the diagram id of the source element\n    *        .to : {string} the diagram id of the dest element\n    */\n   connectionSimplyElement(element) {\n      if (!element) return;\n\n      return this.process.connectionSimplyElement.call(this, element);\n   }\n\n   /**\n    * @method connectionUpsert()\n    * add or update the connection information for the given bpmn:element\n    * @param {BMPNDiagramOBJ} element\n    *        the {element} returned from the BPMN.io modeling library event.\n    */\n   connectionUpsert(element) {\n      if (!element) return;\n\n      this.process.connectionUpsert.call(this, element);\n   }\n\n   /**\n    * @method connectionPreviousTask()\n    * return the ABProcessElement(s) that was a previous Element\n    * (eg connects to) this element.\n    * @param {ABProcessElement} currElement\n    * @return {array}\n    */\n   connectionPreviousTask(currElement) {\n      if (!currElement) return;\n\n      return this.process.connectionPreviousTask.call(this, currElement);\n   }\n\n   /**\n    * @method elements()\n    * return an array of elements that match the given filter (or all elements\n    * if no filter is provided).\n    * @param {fn} fn an iterator that returns true if the provided element\n    *                should be returned.\n    * @return {[ABProcessTask, ABProcessParticipant, etc...]}\n    */\n   elements(fn = () => true) {\n      return this.process.elements.call(this, fn);\n   }\n\n   /**\n    * @method elementAdd()\n    * insert an element to be tracked by this process.\n    * @param {ABProcessElement} element\n    *        the full instance of an ABProcessElement to track.\n    */\n   elementAdd(element) {\n      if (!element) return;\n\n      this.process.elementAdd.call(this, element);\n   }\n\n   /**\n    * @method elementForDiagramID()\n    * return the object that is tied to the given xml diagram ID.\n    * @param {string} dID the diagram ID\n    * @return {ABProcess[OBJ]}\n    */\n   elementForDiagramID(dID) {\n      if (!dID) return null;\n\n      return this.process.elementForDiagramID.call(this, dID);\n   }\n\n   /**\n    * @method elementRemove()\n    * remove an element from being tracked by this process.\n    * @param {obj|ABProcessElement} def\n    *        a definition of, or full Object instance of the ABProcessElement\n    *        to remove.\n    */\n   elementRemove(def) {\n      if (!def) return;\n\n      this.process.elementRemove.call(this, def);\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABFieldList = require(\"../../../platform/dataFields/ABFieldList.js\");\n\nvar ABProcessTaskApprovalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"check-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"Approval\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"formBuilder\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserApprovalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user.approval\";\n      super(attributes, process, AB, ABProcessTaskApprovalDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskApprovalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   fromValues(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n      super.fromValues(attributes);\n\n      function fixBoolean(obj) {\n         if (obj) {\n            Object.keys(obj).forEach((k) => {\n               if (obj[k] == \"false\") {\n                  obj[k] = false;\n               } else if (obj[k] == \"true\") {\n                  obj[k] = true;\n               } else if (typeof obj[k] == \"object\") {\n                  fixBoolean(obj[k]);\n               }\n            });\n         }\n      }\n      fixBoolean(this.formBuilder);\n   }\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this object instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   /*     \n    toObj() {\n        var data = super.toObj();\n\n        ABProcessTaskApprovalDefaults.fields.forEach((f) => {\n            data[f] = this[f];\n        });\n\n        return data;\n    }\n*/\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   /*\n    initState(context, val) {\n        var myDefaults = {};\n        ABProcessTaskApprovalDefaults.instanceValues.forEach((v) => {\n            myDefaults[v] = null;\n        });\n\n        super.initState(context, myDefaults, val);\n    }\n*/\n\n   /*\n    * preProcessFormIOComponents()\n    * we need to parse the form.io components to ensure the proper columnName\n    * and labels are being used. We also will translate the columnNames at this\n    * point in the code\n    */\n   preProcessFormIOComponents() {\n      var fields = this.process.processDataFields(this);\n      if (fields && this.formBuilder && this.formBuilder.components) {\n         this.formBuilder.components.forEach((c) => {\n            if (c.abFieldID) {\n               fields.filter((entry) => {\n                  if (entry.field?.id == c.abFieldID) {\n                     c.label = entry.field.label;\n                     c.key = entry.key;\n                     if (c.data?.values && entry.field.settings.options) {\n                        var vals = [];\n                        entry.field.settings.options.forEach((opt) => {\n                           vals.push({\n                              label: opt.text,\n                              value: opt.id,\n                           });\n                        });\n                        c.data.values = vals;\n                     }\n                  }\n               });\n            } else if (c.components && c.components.length) {\n               c.key = c.path;\n               c.components.forEach((o) => {\n                  if (o.abFieldID) {\n                     // these are plucked conneted values\n                     // gather up all their fields to be used\n                     var pluck = fields.filter((f) => {\n                        return f.key == c.path;\n                     })[0];\n                     if (!pluck) return;\n                     pluck.object.fields().filter((entry) => {\n                        if (entry?.id == o.abFieldID) {\n                           o.label = entry.label;\n                           o.key = entry.columnName;\n                           if (o.data?.values && entry.settings.options) {\n                              var vals = [];\n                              entry.settings.options.forEach((opt) => {\n                                 vals.push({\n                                    label: opt.text,\n                                    value: opt.id,\n                                 });\n                              });\n                              o.data.values = vals;\n                           }\n                        }\n                     });\n                  }\n               });\n            }\n         });\n      }\n      return this.formBuilder;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      // we need to get the button events defined by the form.io formBuilder\n      var options = [];\n      this.formBuilder.components.forEach((comp) => {\n         if (comp.type == \"button\" && comp.action == \"event\" && comp.event) {\n            options.push({\n               id: comp.event,\n               text: comp.label,\n            });\n         }\n      });\n      // in this Task, we can return the Response to the UserForm\n      // The Response can be in the form of a List Field, with one or more\n      // return options.\n\n      var myID = this.diagramID;\n\n      // create an ABFieldList object:\n      // make sure the options follow what is currently defined for our\n      // responses:\n      var myObj = this.AB.objectNew({});\n      var listField = new ABFieldList(\n         {\n            id: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            columnName: `${myID}.userFormResponse`,\n            settings: {\n               options: options,\n            },\n         },\n         myObj\n      );\n\n      // NOTE: We are pretending our response is a type of ABFieldList. But our\n      // ABField objects no longer allow \".\" in our columnNames:\n      //    ( https://github.com/digi-serve/appbuilder_class_core/blob/212cf5fa1c1d5c959aa246c730582ed50809ee0f/dataFields/ABFieldCore.js#L262 )\n      // But our Process tasks really will be expecting it there so lets put\n      // it back:\n      listField.columnName = `${myID}.userFormResponse`;\n\n      return [\n         {\n            key: `${myID}.userFormResponse`,\n            label: `${this.label}->Response`,\n            field: listField,\n            object: null,\n         },\n      ];\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      if (key) {\n         var parts = key.split(\".\");\n         if (parts[0] == this.diagramID) {\n            var myState = this.myState(instance);\n            return myState[parts[1]];\n         }\n      }\n      return null;\n   }\n};\n","/**\n * ABProcessTaskUserCore\n *\n * This defines the base User Task element that can be placed on a BPMN\n * diagram.  In our system, we will let the designer choose a sub class\n * to make active for this element.\n *\n * Currently a UserTask expects a human user to perform an action.  These\n * actions are in the possible forms:\n *  - confirm offline action\n *  - approve data\n *  - fill out a form\n *\n */\n\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTaskUserDefaults = {\n   category: \"task\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"user\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"TaskUser\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nmodule.exports = class ABProcessTaskUserCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"process.task.user\";\n      super(attributes, process, AB, ABProcessTaskUserDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserDefaults;\n   }\n\n   static DiagramReplace() {\n      // taken from \"bpmn-js/lib/features/replace/ReplaceOptions\"\n      return {\n         label: \"User Task\",\n         actionName: \"replace-with-user-task\",\n         className: \"bpmn-icon-user\",\n         target: {\n            type: \"bpmn:UserTask\",\n         },\n      };\n   }\n\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // for testing:\n   //         var myState = this.myState(instance);\n   //         myState.status = \"completed\";\n   //         this.log(instance, \"Email Sent successfully\");\n   //         resolve(true);\n   //     });\n   // }\n\n   /**\n    * initState()\n    * setup this task's initial state variables\n    * @param {obj} context  the context data of the process instance\n    * @param {obj} val  any values to override the default state\n    */\n   initState(context, val) {\n      var myDefaults = {\n         roles: [],\n         ui: null,\n      };\n\n      super.initState(context, myDefaults, val);\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nconst ABProcessTaskUserExternalDefaults = {\n   category: null,\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   icon: \"plus-circle\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   instanceValues: [\"userFormID\", \"userFormResponse\"],\n   // instanceValues: {array}\n   // a list of values this element tracks as it is operating in a process.\n\n   key: \"External\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   settings: [\"who\", \"toUsers\", \"url\"],\n   // settings: {array}\n   // a list of internal setting values this Element tracks. These are the\n   // values set by the platform .propertiesStash()\n};\n\nconst settings = {\n   who: 0,\n   toUsers: null,\n   url: \"\",\n};\n\nmodule.exports = class ABProcessTaskUserExternalCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      for (const key in settings)\n         attributes[key] = attributes[key] ?? settings[key];\n      super(\n         Object.assign(\n            {\n               type: \"process.task.service.external\",\n            },\n            attributes\n         ),\n         process,\n         AB,\n         ABProcessTaskUserExternalDefaults\n      );\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskUserExternalDefaults;\n   }\n\n   static DiagramReplace() {\n      return null;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      return [\n         {\n            key: `${this.id}.userFormResponse`,\n            label: `${this.label}->Response`,\n         },\n      ];\n   }\n};\n","const ABProcessElement = require(\"../../../platform/process/tasks/ABProcessElement.js\");\n\nvar ABProcessTriggerDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"Trigger\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerCore extends ABProcessElement {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTriggerDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTriggerDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Signal Start Event\",\n         actionName: \"replace-with-signal-start\",\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"bpmn:SignalEventDefinition\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.triggerKey = attributes.triggerKey || \"triggerKey.??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.triggerKey = this.triggerKey;\n\n      return data;\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"objectID\",\n      \"lifecycleKey\" /* , \"triggerKey\" is tracked in ABProcessTrigger */,\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"key\",\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TriggerLifecycle\",\n   // key: {string}\n   // unique key to reference this specific Task\n};\n\nmodule.exports = class ABProcessTriggerLifecycle extends ABProcessTrigger {\n   constructor(attributes, process, AB) {\n      attributes.type = attributes.type || \"trigger\";\n      super(attributes, process, AB, ABProcessTaskTriggerLifecycleDefaults);\n\n      // listen\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Object Lifecycle Trigger\",\n         actionName: \"replace-with-signal-lifecycle-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-signal\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalLifecycle\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.objectID = attributes.objectID || \"objID.??\";\n      this.lifecycleKey = attributes.lifecycleKey || \"lifecycle.key??\";\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.objectID = this.objectID;\n      data.lifecycleKey = this.lifecycleKey;\n      return data;\n   }\n\n   /**\n    * processDataFields()\n    * return an array of avaiable data fields that this element\n    * can provide to other ProcessElements.\n    * Different Process Elements can make data available to other\n    * process Elements.\n    * @return {array} | null\n    */\n   processDataFields() {\n      var fields = null;\n      if (this.objectID) {\n         fields = [];\n         var object = this.AB.objectByID(this.objectID);\n         if (object) {\n            var myID = this.diagramID;\n            object.fields().forEach((field) => {\n               fields.push({\n                  key: `${myID}.${field.id}`,\n                  label: `${this.label}->${object.label}->${field.label}`,\n                  field,\n                  object,\n               });\n            });\n            fields.push({\n               key: `${myID}.uuid`,\n               label: `${this.label}->${object.label}`,\n               field: null,\n               object,\n            });\n         } else {\n            // OK, so we have an this.objectID defined, but we can't find it.\n            // that's something we need to alert:\n            var error = new Error(\n               `ABProcessTriggerLifecycleCore.processDataFields():TaskID[${this.id}]: could not find referenced object by ID [${this.objectID}]`\n            );\n            this.AB.notify.builder(error, {\n               task: this.id,\n               objID: this.objectID,\n            });\n         }\n      }\n      return fields;\n   }\n\n   /**\n    * processData()\n    * return the current value requested for the given data key.\n    * @param {obj} instance\n    * @return {mixed} | null\n    */\n   processData(instance, key) {\n      var parts = key.split(\".\");\n      if (parts[0] == this.diagramID) {\n         var myState = this.myState(instance);\n         if (myState[\"data\"]) {\n            var object = this.AB.objectByID(this.objectID);\n            var field = object.fields((f) => {\n               return f.id == parts[1];\n            })[0];\n            if (field) {\n               if (parts[2]) {\n                  return field[parts[2]].call(field, myState[\"data\"]);\n               } else {\n                  // instance.context.data[field.column_name];\n                  // if field is \"calculate\" or \"TextFormula\" data is not stored\n                  // in data base and we need to run format method\n                  if ([\"calculate\", \"TextFormula\"].indexOf(field.key) != -1) {\n                     return field.format(myState[\"data\"]);\n                  } else if (\n                     field.key == \"connectObject\" ||\n                     field.key == \"user\"\n                  ) {\n                     return (\n                        myState[\"data\"][field.relationName()] ||\n                        myState[\"data\"][field.columnName]\n                     );\n                  } else {\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n            } else if (parts[1] == \"uuid\") {\n               return myState[\"data\"][\"uuid\"];\n            } else {\n               ///\n               /// Questioning the validity of this section of code.\n               /// In order to get here, we tried to find field, and it\n               /// didn't exist.\n               /// then we turn around and REPEAT the same attempt\n               /// and check for field again.\n               /*\n               // parts[1] should be a field.id\n               object = this.AB.objectByID(this.objectID);\n               field = object.fields((f) => {\n                  return f.id == parts[1];\n               })[0];\n               if (field) {\n                  if (parts[2]) {\n                     return field[parts[2]].call(field, myState[\"data\"]);\n                  } else {\n                     // instance.context.data[field.column_name];\n                     return myState[\"data\"][field.columnName];\n                  }\n               }\n               */\n            }\n         }\n      }\n      return null;\n   }\n\n   /**\n    * processDataObjects()\n    * return an array of avaiable ABObjects that this element\n    * can provide to other ProcessElements.\n    * @return {array} | null\n    */\n   processDataObjects() {\n      var objects = null;\n      if (this.objectID) {\n         objects = [this.AB.objectByID(this.objectID)];\n      }\n      return objects;\n   }\n};\n","const ABProcessTrigger = require(\"../../../platform/process/tasks/ABProcessTrigger.js\");\n\nvar ABProcessTaskTriggerLifecycleDefaults = {\n   category: \"start\",\n   // category: {string} | null\n   // if this Element should show up on one of the popup replace menus, then\n   // specify one of the categories of elements it should be an option for.\n   // Available choices: [ \"start\", \"gateway\", \"task\", \"end\" ].\n   //\n   // if it shouldn't show up under the popup menu, then leave this null\n\n   fields: [\n      \"repeatEvery\",\n      \"repeatTime\",\n      \"repeatDaily\",\n      \"repeatWeekly\",\n      \"repeatMonthly\",\n      \"isEnabled\",\n   ],\n   // fields: {array}\n   // a list of internal setting values this Element tracks\n\n   icon: \"clock-o\", // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n   // icon: {string}\n   // font-awesome icon reference.  (without the 'fa-').  so 'user'  to reference 'fa-user'\n\n   key: \"TimerStartEvent\",\n   // key: {string}\n   // unique key to reference this specific Task\n\n   repeatEvery: \"daily\",\n   repeatTime: \"01:00\",\n   repeatDaily: \"day\",\n   repeatWeekly: \"FRI\",\n   repeatMonthly: \"last\",\n   isEnabled: true,\n};\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTrigger {\n   constructor(attributes, process, application) {\n      attributes.type = attributes.type || \"trigger\";\n      super(\n         attributes,\n         process,\n         application,\n         ABProcessTaskTriggerLifecycleDefaults\n      );\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return ABProcessTaskTriggerLifecycleDefaults;\n   }\n\n   static DiagramReplace() {\n      return {\n         label: \"Timer Start Event\",\n         actionName: \"replace-with-signal-timer-start\",\n         // type: {string} a unique key to reference this element\n         className: \"bpmn-icon-start-event-timer\",\n         target: {\n            type: \"bpmn:StartEvent\",\n            // type: {string} the general bpmn category\n            //      \"StartEvent\", \"Task\", \"EndEvent\", \"ExclusiveGateway\"\n            eventDefinitionType: \"ab:SignalTriggerTimer\",\n         },\n      };\n   }\n\n   fromValues(attributes) {\n      super.fromValues(attributes);\n\n      this.repeatEvery =\n         attributes.repeatEvery ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatEvery;\n\n      this.repeatDaily =\n         attributes.repeatDaily ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatDaily;\n\n      this.repeatWeekly =\n         attributes.repeatWeekly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatWeekly;\n\n      this.repeatMonthly =\n         attributes.repeatMonthly ||\n         ABProcessTaskTriggerLifecycleDefaults.repeatMonthly;\n\n      // Convert UTC to local time\n      if (attributes.repeatTime) {\n         let timeVals = attributes.repeatTime.split(\":\");\n         let currDate = new Date();\n         currDate.setUTCHours(timeVals[0]);\n         currDate.setUTCMinutes(timeVals[1]);\n         this.repeatTime = `${currDate.getHours()}:${currDate.getMinutes()}`;\n      } else {\n         this.repeatTime = ABProcessTaskTriggerLifecycleDefaults.repeatTime;\n      }\n\n      if (typeof attributes.isEnabled != \"undefined\") {\n         this.isEnabled = JSON.parse(attributes.isEnabled);\n      } else {\n         this.isEnabled = ABProcessTaskTriggerLifecycleDefaults.isEnabled;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var data = super.toObj();\n\n      data.repeatEvery = this.repeatEvery;\n      data.repeatDaily = this.repeatDaily;\n      data.repeatWeekly = this.repeatWeekly;\n      data.repeatMonthly = this.repeatMonthly;\n\n      // Convert local time to UTC\n      data.repeatTime = this.repeatTime;\n      if (data.repeatTime && data.repeatTime instanceof Date) {\n         data.repeatTime = `${data.repeatTime.getUTCHours()}:${data.repeatTime.getMinutes()}`;\n      }\n\n      data.isEnabled = this.isEnabled;\n\n      return data;\n   }\n\n   getCronExpression() {\n      let timeVals = this.repeatTime.split(\":\");\n      let second = \"*\";\n      let minute = timeVals[1];\n      let hour = timeVals[0];\n      let day;\n      let month;\n      let dayWeek;\n      let year = \"*\";\n\n      switch (this.repeatEvery) {\n         case \"daily\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatDaily == \"weekday\" ? \"1-5\" : \"*\";\n            break;\n         case \"weekly\":\n            day = \"*\";\n            month = \"*\";\n            dayWeek = this.repeatWeekly;\n            break;\n         case \"monthly\":\n            day = this.repeatMonthly;\n            month = \"*\";\n            dayWeek = \"*\";\n            break;\n      }\n\n      return `${second} ${minute} ${hour} ${day} ${month} ${dayWeek} ${year}`;\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nvar ABEmitter = require(\"../../platform/ABEmitter\");\nclass ABQLCore extends ABEmitter {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super();\n\n      // manage the incoming Parameter Definitions\n      if (!Array.isArray(parameterDefinitions)) {\n         parameterDefinitions = [parameterDefinitions];\n      }\n\n      this.parameterDefinitions = parameterDefinitions;\n\n      this.object = prevOP ? prevOP.object : null;\n      // {ABObject}\n      // The current {ABObject} the current Query Language Operation is associated\n      // with.\n\n      // if the previous Operation defined an .objectOut then our .object is THAT\n      // one.\n      if (prevOP && prevOP.objectOut) this.object = prevOP.objectOut;\n\n      this.prevOP = prevOP;\n      this.task = task;\n      // {ABProcessTaskxxx}\n      // This is running under a specific ABProcessTaskServiceQuery.  When\n      // searching for data from the Process, we must go through this.task\n      // to do so.\n\n      this.AB = AB;\n      this.next = null;\n\n      this.fromAttributes(attributes);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(attributes) {}\n\n   fromAttributes(attributes) {\n      /*\n        {\n            id: uuid(),\n            name: 'name',\n            type: 'xxxxx',\n            json: \"{json}\"\n        }\n        */\n\n      // super.fromValues(attributes);\n      this.key = this.constructor.key ?? null;\n\n      // this.entryComplete = attributes.entryComplete || false;\n      this.params = attributes.params ?? {};\n      // {hash}\n      // The configuration values entered by the AppBuilder UI for this\n      // operation.\n\n      this.objectID = attributes.objectID || null;\n\n      // be sure to do a hard lookup if an objectID was saved:\n      if (this.objectID) this.object = this.objectLookup(this.objectID);\n\n      this.initObject(attributes);\n\n      // at least dump a warning here:\n      if (this.objectID && !this.object)\n         this.AB.notify.developer(\n            new Error(\n               `ABQLCore.fromAttributes(): unable to initialize ABObject [${this.objectID}]`\n            ),\n            {\n               attributes,\n               objectID: this.objectID,\n            }\n         );\n\n      if (attributes.next) {\n         let nextOP = null;\n\n         (this.NextQLOps ?? this.constructor.NextQLOps).forEach((OP) => {\n            if (OP.key === attributes.next.key) nextOP = OP;\n         });\n\n         if (nextOP) {\n            // exact match, so add next:\n            const qlOP = new nextOP(attributes.next, this, this.task, this.AB);\n\n            this.next = qlOP;\n         }\n      }\n   }\n\n   /**\n    * @method objectLookup()\n    * return a matching {ABObject} that is represented by the given id.\n    * NOTE: we will try to match on: our initial .objectID first, then\n    * the given objID.\n    * NOTE: this will match an object.id as well as object.label\n    * @param {string} objID\n    */\n   objectLookup(objID) {\n      return this.AB.objects((o) => {\n         const quotedLabel = `\"${o.label}\"`;\n\n         return (\n            // o.id === this.objectID ||\n            o.id === objID || quotedLabel.indexOf(objID) === 0\n         );\n      })[0];\n   }\n\n   /**\n    * @method availableProcessDataFieldsHash()\n    * return a { \"field.key\" => {processFieldDef} } hash of the currently\n    * available fields in the process.\n    * @return {obj}\n    */\n   availableProcessDataFieldsHash() {\n      const availableProcessDataFields =\n         this.task.process.processDataFields(this.task) ?? [];\n      const hashFieldIDs = {};\n\n      availableProcessDataFields.forEach((f) => {\n         if (f.field) {\n            hashFieldIDs[f.field.id] = f;\n         } else {\n            hashFieldIDs[f.key] = f;\n         }\n      });\n\n      return hashFieldIDs;\n   }\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {}\n\n   /**\n    * @method toObj()\n    * properly compile the current state of this ABQL instance\n    * into the values needed for saving to the DB.\n    * @return {json}\n    */\n   toObj() {\n      const obj = {\n         key: this.constructor.key,\n         // entryComplete: this.entryComplete,\n         params: this.params,\n         // currQuery: this.currQuery,\n         // queryValid: this.queryValid,\n         objectID: this.object?.id ?? null,\n      };\n\n      if (this.next) {\n         obj.next = this.next.toObj();\n      }\n\n      return obj;\n   }\n}\n\nmodule.exports = ABQLCore;\n","/*\n * ABQLFindCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst NextQLOps = require(\"./ABQLSet.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLFind task is complete.  In this case the {ABQLSet} operations come\n// next.  {ABQLSet} operations work on a Set|{Array} or data results.\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectConditions\",\n      name: \"cond\",\n   },\n];\n\nclass ABQLFindCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLFindCore.key = \"find\";\nABQLFindCore.label = \"find\";\nABQLFindCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLFindCore;\n","/*\n * ABQLManagerCore\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst QLObject = require(\"../../platform/ql/ABQLRootObject.js\");\nconst QLOps = [QLObject];\n\nconst ABQLManagerCore = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current ABFactory we are operating under.\n    * @return {ABQL} | null\n    */\n   fromAttributes: function (attributes, task, AB) {\n      if (!attributes) return null;\n\n      const matchingOPs = [];\n\n      ABQLManagerCore.QLOps.forEach((Op) => {\n         if (Op.key === attributes.key) matchingOPs.push(Op);\n      });\n\n      if (matchingOPs.length === 1) {\n         // let this Operation initialize and return the last OP\n         // in the chain\n         const qlOP = new matchingOPs[0](attributes, task, AB);\n\n         return qlOP;\n      } else return null;\n   },\n\n   /**\n    * @array QLOps\n    * An array of the root QL Operations.\n    */\n   QLOps: QLOps,\n};\nmodule.exports = ABQLManagerCore;\n","/*\n * ABQLRootObjectCore\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\n// Define the Operations that can be performed off of a RootObject.\n// Each Root Object might have a different set of Operations, so we\n// define them here.\nconst QLFind = require(\"../../platform/ql/ABQLFind.js\");\nconst NextQLOps = [QLFind];\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectName\",\n      name: \"name\",\n   },\n];\n\nclass ABQLObjectCore extends ABQL {\n   constructor(attributes, task, AB) {\n      // NOTE: keep this so we can insert the prevOp == null\n      super(attributes, ParameterDefinitions, null, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n   initObject(/* attributes */) {\n      if (!this.object && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) {\n            this.objectID = this.params[objNameDef.name];\n            this.object = this.objectLookup(this.objectID);\n         }\n\n         if (!this.object) {\n            // This function exists on platform_web but not platform_service\n            this.warningMessage?.(\"has no object set.\", {\n               objectID: this.objectID,\n            });\n         }\n      }\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      // if we don't have an objectID, but we have an objectName parameter\n      // definition then save that as our objectID\n      if (!obj.objectID && this.params) {\n         const objNameDef = this.parameterDefinitions.find((pDef) => {\n            return pDef.type === \"objectName\";\n         });\n\n         if (objNameDef) obj.objectID = this.params[objNameDef.name];\n      }\n\n      return obj;\n   }\n}\n\nABQLObjectCore.key = \"object\";\nABQLObjectCore.label = \"object\";\nABQLObjectCore.NextQLOps = NextQLOps;\n\nmodule.exports = ABQLObjectCore;\n","/*\n * ABQLRow\n *\n * Defines all the QL operations that can be performed on a Row of data. This is a\n * Single row/instance of an object.\n *\n */\n\nconst QLUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst QLSave = require(\"../../platform/ql/ABQLRowSave\");\nconst QLPluck = require(\"../../platform/ql/ABQLRowPluck\");\n\nmodule.exports = [QLUpdate, QLSave, QLPluck];\n","/*\n/*\n * ABQLRowPluckCore\n *\n * An ABQLRowPluckCore can process a value of data and puck out a specified\n * field to then make an object of values that only contain that field.\n *\n */\n\n// const ABQLValue = require(\"./ABQLValue.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\nconst ABQLSetPluck = require(\"../../platform/ql/ABQLSetPluck.js\");\nconst ABQLRowUpdate = require(\"../../platform/ql/ABQLRowUpdate.js\");\nconst ABQLRowSave = require(\"../../platform/ql/ABQLRowSave.js\");\n\nclass ABQLRowPluckCore extends ABQLSetPluck {\n   // Dynamic NextQLOps\n   get NextQLOps() {\n      let nextQLOps = [];\n\n      const field = this.field ?? this.object.fieldByID(this.fieldID) ?? null;\n\n      // Update .NextQLOps WARN: update to static it affects to every ABQLRowPluck instances.\n      switch (field?.key) {\n         // M:1 M:N connect field, then set ABQLSet to next steps\n         case \"connectObject\":\n            if (field.settings.linkType === \"many\") {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // return ABQLRow.js\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key\n            );\n\n            break;\n\n         case \"user\":\n            // TODO set this up corectlys\n            if (\n               field.settings.linkType === \"many\" ||\n               field.settings.isMultiple // may be unnessicary\n            ) {\n               // NOTE: Could not require(\"./ABQLSet.js\") on the top. It returns an empty object. Why ><\n               const ABQLSet = require(\"./ABQLSet.js\");\n\n               nextQLOps = ABQLSet;\n\n               break;\n            }\n\n            // default\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) =>\n                  NextQLOp.key === this.constructor.key ||\n                  NextQLOp.key === ABQLRowUpdate.key ||\n                  NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n\n         default:\n            // Normal field and _PK\n            nextQLOps = this.prevOP.constructor.NextQLOps.filter(\n               (NextQLOp) => NextQLOp.key === ABQLRowSave.key\n            );\n\n            break;\n      }\n\n      return nextQLOps;\n   }\n}\n\nABQLRowPluckCore.key = \"row_pluck\";\nABQLRowPluckCore.label = \"Read the value from the field\";\nABQLRowPluckCore.NextQLOps = []; // Static NextQLOps\n\nmodule.exports = ABQLRowPluckCore;\n","/*\n/*\n * ABQLRowSaveCore\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSave = require(\"../../platform/ql/ABQLSetSave.js\");\n\nclass ABQLRowSaveCore extends ABQLSetSave {}\n\nABQLRowSaveCore.key = \"row_save\";\nABQLRowSaveCore.label = \"Save the value as\";\nABQLRowSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLRowSaveCore;\n","/*\n * ABQLRowUpdateCore\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLRow = require(\"./ABQLRow.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectValues\",\n      name: \"values\",\n   },\n];\n\nclass ABQLRowUpdateCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLRowUpdateCore.key = \"update\";\nABQLRowUpdateCore.label = \"Update this record\";\nABQLRowUpdateCore.NextQLOps = [];\n// NOTE: .NextQLOps => see the #Hack in the constructor\n\nmodule.exports = ABQLRowUpdateCore;\n","/*\n * ABQLSet\n *\n * Here we define the group of operations that can be performed on a SET of data.\n * A SET is an array of objects/row data.\n *\n */\n\nmodule.exports = [\n   require(\"../../platform/ql/ABQLSetFirst.js\"),\n   require(\"../../platform/ql/ABQLSetPluck.js\"),\n   require(\"../../platform/ql/ABQLSetSave.js\"),\n];\n","/*\n/*\n * ABQLSetFirstCore\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\nconst ABQLRow = require(\"./ABQLRow.js\");\n// {array} of {ABQLxxx} options\n// this is an array of what possible next Operations can come after an\n// ABQLSetFirst task is complete.  In this case the {ABQLRow} operations come\n// next.  {ABQLRow} operations work on a single row of data.\n\nclass ABQLSetFirstCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, [], prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n}\n\nABQLSetFirstCore.key = \"first\";\nABQLSetFirstCore.label = \"Select the first record\";\nABQLSetFirstCore.NextQLOps = ABQLRow;\n\nmodule.exports = ABQLSetFirstCore;\n","/*\n/*\n * ABQLSetPluckCore\n *\n * An ABQLSetPluck can process a set (array) of data and puck out a specified\n * field to then make an array of values that only contain that field.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n// const ABQLSet = require(\"./ABQLSet.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"objectFields\",\n      name: \"fieldID\",\n   },\n];\n\nclass ABQLSetPluckCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      // we need to gather our .field and .objectOut before we\n      // allow our base class to continue forward:\n\n      this.fieldID = attributes.fieldID;\n      this.field = this.object?.fieldByID(this.fieldID);\n\n      //// TODO: figure out how to dynamically update the next row of options\n      //// based upon the current choice of field.\n      // // based upon the type of field, we now configure what next steps\n      // // are available.\n      // if (this.field) {\n      //    // if connected, then we can stay with same .NextQLOps\n      //    // so we can just leave what we did above.\n\n      //    // if a discreet value, then we need to remove SetPluck\n      //    if (!this.field.isConnection) {\n      //       this.constructor.NextQLOps = [\n      //          ...this.prevOP.constructor.NextQLOps,\n      //       ].filter((o) => o.key != this.constructor.key);\n      //    }\n      // }\n\n      if (attributes.objectOutID)\n         this.objectOut = this.objectLookup(attributes.objectOutID);\n\n      super.fromAttributes(attributes);\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      if (this.fieldID) {\n         obj.fieldID = this.fieldID;\n\n         if (this.objectOut) obj.objectOutID = this.objectOut.id;\n      } else {\n         obj.fieldID = this.params.field || null;\n\n         const field = this.object.fieldByID(obj.fieldID);\n\n         if (field?.isConnection) obj.objectOutID = field.datasourceLink.id;\n      }\n\n      return obj;\n   }\n}\n\nABQLSetPluckCore.key = \"set_pluck\";\nABQLSetPluckCore.label = \"Read the value from the field\";\nABQLSetPluckCore.NextQLOps = [];\n\nmodule.exports = ABQLSetPluckCore;\n","/*\n/*\n * ABQLSetSaveCore\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQL = require(\"../../platform/ql/ABQL.js\");\n\nconst ParameterDefinitions = [\n   {\n      type: \"taskParam\",\n      name: \"task_param\",\n   },\n];\n\nclass ABQLSetSaveCore extends ABQL {\n   constructor(attributes, prevOP, task, AB) {\n      super(attributes, ParameterDefinitions, prevOP, task, AB);\n\n      // TODO: register with the task that we can provide data.\n      if (this.taskParam) {\n         task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   fromAttributes(attributes) {\n      // #Hack! : when an Operation provides the same .NextQlOps that it\n      // was defined in, we can't require it again ==> circular dependency.\n      // so we manually set it here from the operation that created us:\n      this.constructor.NextQLOps = this.prevOP.constructor.NextQLOps;\n\n      super.fromAttributes(attributes);\n\n      this.taskParam = attributes.taskParam || this.params.task_param;\n   }\n\n   toObj() {\n      const obj = super.toObj();\n\n      obj.taskParam = this.taskParam || this.params.task_param;\n\n      return obj;\n   }\n\n   processDataField(id, label) {\n      // we have to report back on:\n      // key:  id.taskParam\n      // label: label->taskParam\n      // object: ABObject\n      // field: ABField\n      // set : {bool}\n\n      let field = null;\n      // {ABField}\n      // if the value being stored is NOT a connectObject, then it is\n      // a particular field in the previous object.\n\n      // if we are saving a specific field of an Object, pass that\n      // ABField along:\n      if (this.prevOP?.field?.key !== \"connectObject\")\n         field = this?.prevOP?.field;\n\n      return {\n         key: `${id}.${this.taskParam || this.params.task_param}`,\n         label: `${label}->${this.taskParam || this.params.task_param}`,\n         field: field,\n         object: this.object,\n         set: true,\n      };\n   }\n}\n\nABQLSetSaveCore.key = \"set_save\";\nABQLSetSaveCore.label = \"Save the value as\";\nABQLSetSaveCore.NextQLOps = [];\n// NOTE: currently, this is an ending step. but it doesn't have to be...\n\nmodule.exports = ABQLSetSaveCore;\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCSVExporterDefaults = {\n   key: \"csvExporter\", // unique key identifier for this ABViewForm\n   icon: \"download\", // icon reference: (without 'fa-' )\n   labelKey: \"CSV Exporter\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewCSVExporterPropertyComponentDefaults = {\n   dataviewID: null,\n   where: null,\n   buttonLabel: \"Export CSV\",\n   filename: \"exportCSV\",\n   hasHeader: true,\n   width: 150,\n};\n\nmodule.exports = class ABViewCSVExporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVExporterDefaults\n      );\n   }\n\n   static common() {\n      return ABViewCSVExporterDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCSVExporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert to boolean\n      if (typeof values.settings.hasHeader == \"string\")\n         this.settings.hasHeader = JSON.parse(values.settings.hasHeader);\n\n      if (this.settings.hasHeader == null)\n         this.settings.hasHeader =\n            ABViewCSVExporterPropertyComponentDefaults.hasHeader;\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         values.settings.width ||\n            ABViewCSVExporterPropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n\nconst ABViewCSVImporterDefaults = {\n   key: \"csvImporter\",\n   // {string}\n   // unique key identifier for this ABViewForm\n\n   icon: \"upload\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"CSV Importer\",\n   // {string}\n   // the multilingual label key for the class label\n   // NOTE: will be used as L(labelKey)\n};\n\nconst ABViewCSVImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   availableFieldIds: [],\n   //{array}\n   // A list of ABField.ids that are allowed to be imported using this widget.\n\n   buttonLabel: \"Upload CSV\",\n   // {string}\n   // The Label(key) to display on the initial button\n\n   width: 0,\n   // {integer}\n   // Width of the Popup.\n\n   recordRules: [],\n   // {array}  [ {RecordRule}, ... ]\n   // A list of ABViewRuleListFormRecordRules that should be performed upon\n   // each row of data imported.\n   // The Array should look like:\n   // [{\n   //    action: {string},\n   //    when: [\n   //       {\n   //          fieldId: {UUID},\n   //          comparer: {string},\n   //          value: {string}\n   //       }\n   //    ],\n   //    values: [\n   //       {\n   //          fieldId: {UUID},\n   //          value: {object}\n   //       }\n   //    ]\n   // }]\n};\n\nmodule.exports = class ABViewCSVImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewCSVImporterDefaults\n      );\n   }\n\n   /**\n    * @method common()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * @return {json}\n    */\n   static common() {\n      return ABViewCSVImporterDefaults;\n   }\n\n   /**\n    * @method defaultValues()\n    * Provides the default settings for an instance of an ABViewCSVImporter\n    * Component that is displayed on the UI.\n    * @return {json}\n    */\n   static defaultValues() {\n      return ABViewCSVImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewCSVImporterPropertyComponentDefaults.width\n      );\n   }\n\n   get RecordRule() {\n      let object = this.datacollection?.datasource;\n      if (!object) return null;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      rowDatas.forEach((row) => {\n         this.RecordRule?.processPre({ data: row.data || row, form: this });\n      });\n   }\n\n   doRecordRules(rowDatas) {\n      if (rowDatas && !Array.isArray(rowDatas)) {\n         rowDatas = [rowDatas];\n      }\n\n      if (!this.RecordRule) return Promise.resolve();\n\n      let tasks = [];\n\n      rowDatas.forEach((row) => {\n         tasks.push(\n            this.RecordRule.process({ data: row.data || row, form: this })\n         );\n      });\n\n      return Promise.all(tasks);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCarouselPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n\n   width: 460,\n   height: 275,\n   showLabel: true,\n   hideItem: false,\n   hideButton: false,\n   navigationType: \"corner\", // \"corner\" || \"side\"\n   filterByCursor: false,\n\n   detailsPage: null, // uuid\n   detailsTab: null, // uuid\n   editPage: null, // uuid\n   editTab: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"carousel\", // {string} unique key for this view\n   icon: \"clone\", // {string} fa-[icon] reference for this view\n   labelKey: \"Carousel\", // {string} the multilingual label key for the class label\n};\n\nfunction parseIntOrDefault(_this, key) {\n   if (typeof _this.settings[key] != \"undefined\") {\n      _this.settings[key] = parseInt(_this.settings[key]);\n   } else {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nfunction parseOrDefault(_this, key) {\n   try {\n      _this.settings[key] = JSON.parse(_this.settings[key]);\n   } catch (e) {\n      _this.settings[key] = ABViewCarouselPropertyComponentDefaults[key];\n   }\n}\n\nmodule.exports = class ABViewCarouselCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCarouselPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      parseIntOrDefault(this, \"width\");\n      parseIntOrDefault(this, \"height\");\n\n      // json\n      parseOrDefault(this, \"showLabel\");\n      parseOrDefault(this, \"hideItem\");\n      parseOrDefault(this, \"hideButton\");\n\n      this.settings.navigationType =\n         this.settings.navigationType ||\n         ABViewCarouselPropertyComponentDefaults.navigationType;\n\n      parseOrDefault(this, \"filterByCursor\");\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   get imageField() {\n      let dc = this.datacollection;\n      if (!dc) return null;\n\n      let obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.field);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartAreaPropertyComponentDefaults = {\n   areaType: \"area\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"area\", // {string} unique key for this view\n   icon: \"area-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Area\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartAreaCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartAreaPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.areaType =\n         this.settings.areaType ||\n         ABViewChartAreaPropertyComponentDefaults.areaType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartAreaPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartAreaPropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartAreaPropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartAreaPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartAreaPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartAreaPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"areaLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartBarPropertyComponentDefaults = {\n   barType: \"bar\",\n   barPreset: \"column\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"bar\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Bar\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartBarCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartBarPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.barType =\n         this.settings.barType ||\n         ABViewChartBarPropertyComponentDefaults.barType;\n\n      this.settings.barPreset =\n         this.settings.barPreset ||\n         ABViewChartBarPropertyComponentDefaults.barPreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartBarPropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartBarPropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartBarPropertyComponentDefaults.height\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartBarPropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartBarPropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartBarPropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"barLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewChartPropertyComponentDefaults = {\n   dataviewID: \"\",\n   columnValue: \"\",\n   columnLabel: \"\",\n   columnValue2: \"\",\n   isPercentage: 1,\n   showLabel: 1,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   multipleSeries: 0,\n};\n\nconst ABViewChartDefaults = {\n   key: \"chart\", // {string} unique key for this view\n   icon: \"bar-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Chart\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewChartDefaults);\n   }\n\n   static common() {\n      return ABViewChartDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewChartPropertyComponentDefaults.dataviewID;\n\n      this.settings.columnValue =\n         this.settings.columnValue ??\n         ABViewChartPropertyComponentDefaults.columnValue;\n\n      this.settings.columnLabel =\n         this.settings.columnLabel ??\n         ABViewChartPropertyComponentDefaults.columnLabel;\n\n      this.settings.columnValue2 =\n         this.settings.columnValue2 ??\n         ABViewChartPropertyComponentDefaults.columnValue2;\n\n      this.settings.isPercentage = parseInt(\n         this.settings.isPercentage ??\n            ABViewChartPropertyComponentDefaults.isPercentage\n      );\n\n      this.settings.showLabel = parseInt(\n         this.settings.showLabel ??\n            ABViewChartPropertyComponentDefaults.showLabel\n      );\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewChartPropertyComponentDefaults.labelPosition;\n\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ??\n            ABViewChartPropertyComponentDefaults.labelWidth\n      );\n\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPropertyComponentDefaults.height\n      );\n\n      this.settings.multipleSeries = parseInt(\n         this.settings.multipleSeries ??\n            ABViewChartPropertyComponentDefaults.multipleSeries\n      );\n\n      this.translate(this, this, [\"chartLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      const viewsToAllow = [\"label\", \"pie\", \"bar\", \"line\", \"area\"];\n      return this.application.viewAll((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   labelField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnLabel);\n   }\n\n   valueField() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue);\n   }\n\n   valueField2() {\n      const dc = this.datacollection;\n      if (!dc) return null;\n\n      const obj = dc.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnValue2);\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartLinePropertyComponentDefaults = {\n   lineType: \"line\",\n   linePreset: \"plot\",\n   isLegend: 1,\n   // chartWidth: 600,\n   chartHeight: 200,\n   labelFontSize: 12,\n   stepValue: 20,\n   maxValue: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"line\", // {string} unique key for this view\n   icon: \"line-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Line\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartLineCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartLinePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.lineType =\n         this.settings.lineType ||\n         ABViewChartLinePropertyComponentDefaults.lineType;\n\n      this.settings.linePreset =\n         this.settings.linePreset ||\n         ABViewChartLinePropertyComponentDefaults.linePreset;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartLinePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartLinePropertyComponentDefaults.chartWidth);\n      this.settings.chartHeight = parseInt(\n         this.settings.chartHeight ??\n            ABViewChartLinePropertyComponentDefaults.chartHeight\n      );\n\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartLinePropertyComponentDefaults.labelFontSize\n      );\n      this.settings.stepValue = parseInt(\n         this.settings.stepValue ??\n            ABViewChartLinePropertyComponentDefaults.stepValue\n      );\n      this.settings.maxValue = parseInt(\n         this.settings.maxValue ??\n            ABViewChartLinePropertyComponentDefaults.maxValue\n      );\n\n      this.translate(this, this, [\"lineLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewChartContainer = require(\"../../platform/views/ABViewChartContainer\");\n\nconst ABViewChartPiePropertyComponentDefaults = {\n   pieType: \"pie\",\n   isLegend: 1,\n   // chartWidth: 600,\n   height: 200,\n   innerFontSize: 12,\n   labelFontSize: 12,\n};\n\nconst ABViewDefaults = {\n   key: \"pie\", // {string} unique key for this view\n   icon: \"pie-chart\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pie\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewChartPieCore extends ABViewChartContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewChartPiePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.pieType =\n         this.settings.pieType ||\n         ABViewChartPiePropertyComponentDefaults.pieType;\n\n      this.settings.isLegend = parseInt(\n         this.settings.isLegend ??\n            ABViewChartPiePropertyComponentDefaults.isLegend\n      );\n\n      // this.settings.chartWidth = parseInt(this.settings.chartWidth || ABViewChartPiePropertyComponentDefaults.chartWidth);\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewChartPiePropertyComponentDefaults.height\n      );\n\n      this.settings.innerFontSize = parseInt(\n         this.settings.innerFontSize ??\n            ABViewChartPiePropertyComponentDefaults.innerFontSize\n      );\n      this.settings.labelFontSize = parseInt(\n         this.settings.labelFontSize ??\n            ABViewChartPiePropertyComponentDefaults.labelFontSize\n      );\n\n      this.translate(this, this, [\"pieLabel\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewCommentPropertyComponentDefaults = {\n   dataviewID: null,\n   columnUser: null,\n   columnComment: null,\n   columnDate: null,\n   height: 300,\n   label: \"\", // label is required and you can add more if the component needs them\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n};\n\nconst ABViewDefaults = {\n   key: \"comment\", // {string} unique key for this view\n   icon: \"comments\", // {string} fa-[icon] reference for this view\n   labelKey: \"Comment\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewCommentCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewCommentPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      // this.settings.format = parseInt(this.settings.format);\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.height = parseInt(this.settings.height || 0);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   getCurrentUserId() {\n      const userObject = this.getUsers();\n      const currentUser = this.AB.Account.username();\n      //Anonymous User = 0\n\n      if (!userObject) return;\n\n      return userObject.findIndex((e) => e.value === currentUser) + 1;\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((e) => {\n         return {\n            id: e.username,\n            value: e.username,\n            image: e.image_id,\n         };\n      });\n   }\n\n   getUserField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnUser);\n   }\n\n   getCommentField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnComment);\n   }\n\n   getDateField() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var obj = dv.datasource;\n      if (!obj) return null;\n\n      return obj.fieldByID(this.settings.columnDate);\n   }\n\n   getUserData() {\n      let UserImageField = this.AB.objectUser().fieldByID(\n         \"6383ce19-b344-44ee-87e6-decced7361f8\"\n      );\n\n      var userObject = this.getUsers();\n      var userList = [];\n\n      if (!userObject) return;\n\n      userObject.forEach((item, index) => {\n         var imageURL = \"\";\n         if (item.image) {\n            imageURL = UserImageField.urlImage(item.image);\n         }\n         var user = { id: index + 1, value: item.value, image: imageURL };\n         userList.push(user);\n      });\n      return userList;\n   }\n\n   model() {\n      let dv = this.datacollection;\n      if (!dv) return null; // TODO: refactor in v2\n\n      // get ABModel\n      let model = dv.model; // already notified\n      if (!model) return null;\n\n      return model;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewPropertyDefaults = {\n   dataviewID: null,\n   filterConditions: {},\n};\n\nconst ABViewDefaults = {\n   key: \"conditionalcontainer\", // unique key identifier for this ABView\n   icon: \"shield\", // icon reference: (without 'fa-' )\n   labelKey: \"Conditional Container\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConditionalContainerCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      const L = (...params) => this.AB.Multilingual.label(...params);\n\n      // the conditional container always has 'If' and 'Else' panels\n      if (this.views((v) => v instanceof ABViewContainer).length < 2) {\n         this._views = [];\n\n         // 'If' panel\n         const ifPanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"If\"),\n               name: \"If\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(ifPanel);\n\n         // 'Else' panel\n         const elsePanel = application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: L(\"Else\"),\n               name: \"Else\",\n               settings: {\n                  removable: false,\n               },\n            },\n            application,\n            this\n         );\n\n         this._views.push(elsePanel);\n      }\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * For a Conditional Container, we don't allow any other items to be placed on it.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewConnectDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid\n};\n\nconst ABViewDefaults = {\n   key: \"connect-data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connected Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewConnectDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewConnectDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","/*\n * ABViewContainerCore\n *\n * An ABViewContainerCore defines a UI display component.\n *\n * A container might have multiple columns of display info.\n *\n */\n\nconst ABView = require(\"../../platform/views/ABView\");\n\n// function L(key, altText) {\n// \treturn AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"viewcontainer\", // {string} unique key for this view\n   icon: \"braille\", // {string} fa-[icon] reference for this view\n   labelKey: \"Container\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columns: 1,\n   gravity: 1,\n   movable: true,\n   removable: true,\n};\n\nmodule.exports = class ABViewContainerCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columns = parseInt(\n         this.settings.columns || ABPropertyComponentDefaults.columns\n      );\n\n      if (typeof this.settings.gravity != \"undefined\") {\n         this.settings.gravity.map(function (gravity) {\n            return parseInt(gravity);\n         });\n      }\n\n      if (this.settings.removable != null) {\n         this.settings.removable = JSON.parse(this.settings.removable); // convert to boolean\n      } else {\n         this.settings.removable = ABPropertyComponentDefaults.removable;\n      }\n\n      if (this.settings.movable != null) {\n         this.settings.movable = JSON.parse(this.settings.movable); // convert to boolean\n      } else {\n         this.settings.movable = ABPropertyComponentDefaults.movable;\n      }\n   }\n\n   viewsSortByPosition() {\n      // Sort views from y, x positions\n      return this.views().sort((a, b) => {\n         if (a.position.y == b.position.y) return a.position.x - b.position.x;\n         else return a.position.y - b.position.y;\n      });\n   }\n\n   // saveReorder() {\n   //    return this.application.viewReorder(this);\n   // }\n};\n","/*\n * ABViewCore\n *\n * ABViewCore defines the common ABView structure that is shared between\n * the client and the server.  Mostly how it manages it's internal data, and\n * how it is related to the ABView classes.\n *\n */\n\nvar ABMLClass = require(\"../../platform/ABMLClass\");\n\nconst ABViewDefaults = {\n   key: \"view\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.view\", // {string} the multilingual label key for the class label\n   tabicon: \"\", // no default tab icons\n};\n\nconst ABViewPropertyComponentDefaults = {\n   label: \"\",\n};\n\nmodule.exports = class ABViewCore extends ABMLClass {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super([\"label\"], application.AB);\n\n      this.__events = [];\n      // keep track of any event listeners attached to this ABView object\n\n      this.defaults = defaultValues || ABViewDefaults;\n\n      this.application = application;\n\n      this.parent = parent || null;\n\n      this.warningsSilent = false;\n      // {bool}\n      // Should we suppress our configuration warnings?\n\n      this.__missingViews = [];\n      // {array}\n      // Any ABView.id we have stored that we can't find.\n\n      this.fromValues(values);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPropertyComponentDefaults;\n   }\n\n   /**\n    * @method newInstance()\n    * return a new instance of this ABView.  Most likely called from interfaces\n    * that create new UI elements like the ABDesigner.\n    * @param {ABApplication} application  \t: the root ABApplication this view is under\n    * @param {ABView/ABApplication} parent\t: the parent object of this ABView.\n    * @return {ABView}\n    */\n   static newInstance(application, parent) {\n      // return a new instance from ABViewManager:\n      return application.viewNew(\n         { key: this.common().key },\n         application,\n         parent\n      );\n   }\n\n   viewKey() {\n      return this.defaults.key;\n   }\n\n   viewIcon() {\n      return this.defaults.icon;\n   }\n\n   tabIcon() {\n      return this.defaults.tabicon;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABView instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // // NOTE: ensure we have a uuid() set:\n      // if (!this.id) {\n      //    this.id = this.application.uuid();\n      // }\n\n      // this.application.unTranslate(this, this, [\"label\"]);\n\n      // MLClass translation\n      var obj = super.toObj();\n\n      var result = {\n         id: this.id,\n         type: this.type || \"view\",\n         key: this.key,\n         icon: this.icon,\n         tabicon: this.tabicon,\n         name: this.name,\n         settings: this.AB.cloneDeep(this.settings || {}),\n         accessLevels: this.accessLevels,\n         translations: obj.translations,\n      };\n\n      // encode our child view references\n      result.viewIDs = (this._views || []).map((v) => v.id).filter((id) => id);\n      result.viewIDs = result.viewIDs.concat(this.__missingViews);\n\n      if (this.position) result.position = this.position;\n\n      // encode our .isRoot() reference.\n      // (NOTE: this is set so our server side code can distinguish) between a .view\n      // and a root page:\n      // NOTE: we intentionally do NOT pull this out in .fromValues()\n      result.isRoot = this.isRoot();\n\n      return result;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      this.id = values.id; // NOTE: only exists after .save()\n      // {string} .id\n      // the uuid of this ABObject Definition.\n\n      this.type = values.type || \"view\";\n      // {string} .type\n      // the type of ABDefinition this is.\n\n      this.key = values.key || this.viewKey();\n      // {string} .key\n      // the unique lookup key for our ABViewManager to create new\n      // instances of this object.\n\n      this.icon = values.icon || this.viewIcon();\n      // {string} .icon\n      // the font awesome icon reference for showing an icon for this\n      // view in the AppBuilder interface builder.\n\n      this.tabicon = values.tabicon || this.tabIcon();\n\n      this.name = values.name;\n      // {string} .name\n      // A name reference for this ABView. This is a reference that isn't\n      // translateable and will be used for lookups across languages.\n\n      // if this is being instantiated on a read from the Property UI,\n      // .label is coming in under .settings.label\n      values.settings = values.settings || {};\n      this.label = values.label || values.settings.label || \"?label?\";\n\n      this.settings = values.settings || {};\n      // {obj} .settings\n      // the property settings for this ABView\n\n      // make sure .settings.height is an int and not a string\n      this.settings.height = parseInt(this.settings.height || 0);\n\n      this.accessLevels = values.accessLevels || {};\n      // {obj} .accessLevels\n      // Hash: { ABRole.id : accessLevel }\n      // tracks the Role -> AccessLevel settings of this particular\n      // view.\n      // accessLevel: 0 : no access, 1 : view only, 2: full access\n\n      // let the MLClass now process the translations:\n      super.fromValues(values);\n\n      // If the View / DataCollection does not have a .name already,\n      // use the English label translation as the .name instead.\n      if (!this.name && Array.isArray(this.translations)) {\n         for (var i = 0; i < this.translations.length; i++) {\n            if (i == 0) {\n               // Use the first label found, in case there is no 'en'\n               this.name = this.translations[i].label;\n            }\n            if (this.translations[i].language_code == \"en\") {\n               // But the 'en' label will have final priority\n               this.name = this.translations[i].label;\n               break;\n            }\n         }\n      }\n\n      // default value for our label\n      if (this.label == \"?label?\") {\n         if (this.parent) {\n            this.label = this.parent.label + \".\" + this.defaults.key;\n         }\n      }\n\n      var views = [];\n      this.__missingViews = this.__missingViews || [];\n      (values.viewIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            views.push(this.application.viewNew(def, this.application, this));\n         } else {\n            this.__missingViews.push(id);\n         }\n      });\n      this._views = views;\n\n      // convert from \"0\" => 0\n      this.position = values.position || {};\n\n      if (this.position.x != null) this.position.x = parseInt(this.position.x);\n      if (this.position.y != null) this.position.y = parseInt(this.position.y);\n\n      this.position.dx = parseInt(this.position.dx || 1);\n      this.position.dy = parseInt(this.position.dy || 1);\n   }\n\n   isRoot() {\n      return this.parent == null || this.parent == this.application;\n   }\n\n   /**\n    * @method allParents()\n    * return a flattened array of all the ABViews parents\n    * @return {array}      array of ABViews\n    */\n   allParents() {\n      var parents = [];\n      var curView = this;\n\n      // add current view to array\n      parents.unshift(curView);\n\n      while (!curView.isRoot() && curView.parent) {\n         parents.unshift(curView.parent);\n\n         curView = curView.parent;\n      }\n\n      return parents;\n   }\n\n   /**\n    * @method isAccessibleForRoles()\n    * return true/false if this ABViewPage is accessible for one of the\n    * passed in ABRoles.\n    * @param {array[ABRole]} roles\n    *        an array of {ABRole} instances.\n    * @return {bool}\n    */\n   isAccessibleForRoles(roles) {\n      var foundRole = false;\n\n      var accessibleRoles = Object.keys(this.accessLevels) || [];\n      (roles || []).forEach((r) => {\n         if (accessibleRoles.indexOf(r.uuid || r) > -1) {\n            foundRole = true;\n         }\n      });\n\n      return foundRole;\n   }\n\n   /**\n    * @method getUserAccess()\n    *\n    * return the access level of the current user on the current view\n    *\n    * @return {integer}  // 0 = No Access // 1 = Read Only // 2 = Full Access\n    */\n   getUserAccess() {\n      // by default everyone has no access\n      var accessLevel = 0;\n\n      if (this.application.isAccessManaged) {\n         // check to see if the current users is the access manager\n         var isAccessManager = false;\n         // first check if manager is defined by their role\n         if (parseInt(this.application.accessManagers.useRole) == 1) {\n            // if so check if any of the user's role match the managers\n            this.AB.Account.roles().forEach((role) => {\n               if (\n                  this.application.accessManagers.role.indexOf(\n                     role.id || role.uuid\n                  ) > -1\n               ) {\n                  // if so set the access level to full access\n                  isAccessManager = true;\n                  accessLevel = 2;\n               }\n            });\n         }\n         // if the user isn't already set as the manager and the manager is defined by their account\n         if (\n            !isAccessManager &&\n            parseInt(this.application.accessManagers.useAccount) == 1\n         ) {\n            // check if the user's account matches the managers\n            if (\n               this.application.accessManagers.account.indexOf(\n                  this.AB.Account.uuid() + \"\"\n               ) > -1\n            ) {\n               // if so set the access level to full access\n               isAccessManager = true;\n               accessLevel = 2;\n            }\n         }\n\n         // if the user is not the manager check if the page has access levels defined for roles\n         if (\n            this.accessLevels &&\n            Object.keys(this.accessLevels).length > 0 &&\n            !isAccessManager\n         ) {\n            // check to see if the user's roles matches one of the roles defined\n            this.AB.Account.roles().forEach((role) => {\n               var currentRole = this.accessLevels[role.id || role.uuid];\n               if (currentRole && parseInt(currentRole) > accessLevel)\n                  // if the access level is higher than a previous role set to the new level\n                  accessLevel = parseInt(currentRole);\n            });\n         }\n      } else {\n         accessLevel = 2;\n      }\n\n      return accessLevel;\n   }\n\n   /**\n    * @method parentFormComponent\n    * return the closest form object this component is on.\n    */\n   parentFormComponent() {\n      var form = null;\n\n      var curr = this;\n      while (curr.key != \"form\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"form\") {\n         form = curr;\n      }\n\n      return form;\n   }\n\n   /**\n    * @method parentDetailComponent\n    * return the closest detail object that this component is on.\n    * @returns {ABViewDetail} detail component\n    */\n   parentDetailComponent() {\n      var detail = null;\n\n      var curr = this;\n      while (curr.key != \"detail\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\") {\n         detail = curr;\n      }\n\n      return detail;\n   }\n\n   pageParent(filterFn) {\n      if (filterFn == null) filterFn = () => true;\n\n      // if current page is the root page, then return itself.\n      if (this.isRoot()) {\n         return this;\n      }\n\n      var parentPage = this.parent;\n      while (\n         parentPage &&\n         (parentPage.key != \"page\" || !filterFn(parentPage))\n      ) {\n         parentPage = parentPage.parent;\n      }\n\n      return parentPage;\n   }\n\n   pageRoot() {\n      var rootPage = this.pageParent();\n\n      while (!rootPage.isRoot()) {\n         rootPage = rootPage.pageParent();\n      }\n\n      return rootPage;\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlView() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   /**\n    * @method urlView\n    * return a string pointer to this object's views.\n    * @return {string}\n    */\n   urlView() {\n      return this.urlPointer() + \"/_views/\";\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    *\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) {\n         if (\n            [\"form\", \"grid\", \"line\", \"area\", \"bar\", \"gantt\", \"kanban\"].indexOf(\n               this.key\n            ) > -1\n         ) {\n            // NOTE: ignore kanban side forms where this is the case:\n            if (this.key == \"form\" && this._currentObject) return null;\n\n            if (this.warningsSilent) return null;\n\n            var errNoDCID = new Error(\n               `ABViewCore:get datacollection(): View[${this.key}] didn't define a dataviewID.`\n            );\n            this.AB.notify.builder(errNoDCID, {\n               view: this,\n               settings: this.settings,\n            });\n         } else {\n            // These views shouldn't matter if they don't have a datacollection.\n            if (\n               [\"button\", \"label\", \"page\", \"tab\", \"viewcontainer\"].indexOf(\n                  this.key\n               ) == -1\n            ) {\n               console.warn(\n                  `TODO: figure out which ABView* require a .dataviewID: ${this.key}?`\n               );\n            }\n         }\n         return null;\n      }\n\n      var dc = this.AB.datacollectionByID(dataviewID);\n      if (!dc) {\n         var errNoDC = new Error(\n            `View[${this.label}][${this.id}] is unable to find associated DataCollection`\n         );\n         this.AB.notify.builder(errNoDC, {\n            view: this,\n            dataviewID,\n         });\n      }\n      return dc;\n   }\n\n   ///\n   /// Update Access accessLevels\n   ///\n\n   /**\n    * @method updateAccessLevels()\n    *\n    *\n    * @param {string} roleId\n    *\n    * @param {string} accessLevel\n    *\n    * @return {Promise}\n    *\n    */\n   updateAccessLevels(roleId, accessLevel) {\n      if (parseInt(accessLevel) == 0) {\n         if (this.accessLevels[roleId]) delete this.accessLevels[roleId];\n      } else {\n         this.accessLevels[roleId] = accessLevel;\n      }\n\n      return this.save(false, false);\n   }\n\n   ///\n   /// Views\n   ///\n\n   /**\n    * @method views()\n    *\n    * return an array of all the ABViews children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViews that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\n    *\n    * @return {array} \tarray of ABViews\n    */\n   views(filter = () => true, deep = false) {\n      var result = [];\n\n      if (!this._views || this._views.length < 1) return result;\n\n      // find into recursively\n      if (filter && deep) {\n         result = result.concat(this._views.filter(filter));\n\n         this._views.forEach((v) => {\n            var subViews = v.views(filter, deep);\n            if (subViews && subViews.length > 0) {\n               result = result.concat(subViews);\n            }\n         });\n      } else {\n         result = this._views.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method viewNew()\n    *\n    *\n    * @return {ABView}\n    */\n   viewNew(values, application, parent) {\n      return this.application.viewNew(\n         values,\n         application || this.application,\n         parent || this\n      );\n   }\n\n   /**\n    * @method viewDestroy()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewDestroy(view) {\n      console.error(\"DEPRECIATED: where is this called?\");\n      return this.viewRemove(view);\n   }\n\n   /**\n    * @method viewRemove()\n    *\n    * remove the current ABView from our list of ._views.\n    *\n    * @param {ABView} view\n    * @return {Promise}\n    */\n   viewRemove(view) {\n      var origLen = this._views.length;\n      this._views = this.views(function (v) {\n         return v.id != view.id;\n      });\n\n      if (this._views.length < origLen) {\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewInsert()\n    *\n    * persist the current ABView in our list of ._views.\n    *\n    * @param {ABView} object\n    * @return {Promise}\n    */\n   viewInsert(view) {\n      var isIncluded =\n         this.views(function (v) {\n            return v.id == view.id;\n         }).length > 0;\n      if (!isIncluded) {\n         this._views.push(view);\n         return this.save();\n      }\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method viewReorder()\n    *\n    * reorder the current ABView in our list of ._views.\n    *\n    * @param {string} viewId - id of the active view\n    * @param {string} toPosition - 'to' postion\n    * @return {Promise}\n    */\n   viewReorder(viewId, toPosition) {\n      var from = this._views.findIndex((v) => v.id == viewId);\n      if (from < 0) return;\n\n      // move drag item to 'to' position\n      this._views.splice(toPosition, 0, this._views.splice(from, 1)[0]);\n\n      // save to database\n      return this.save(true);\n   }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // unsubscribe events\n      this.eventClear(true);\n\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABView\n            // be sure to remove any of it's ABViews as well\n            // This cleans out any dangling ABDefinitions\n\n            var allViewDeletes = [];\n            var allViews = this.views();\n            this._views = [];\n            // doing ._views = [] prevents any of my updates when\n            // a sub-view is .destroy()ed\n\n            allViews.forEach((v) => {\n               allViewDeletes.push(v.destroy());\n            });\n            return Promise.all(allViewDeletes);\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects\n            if (this.parent && !this.pages) {\n               return this.parent.viewRemove(this);\n            }\n         })\n         .then(() => {\n            return super.destroy();\n         })\n         .then(() => {\n            this.emit(\"destroyed\");\n         });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABView\n    * @return {Promise}\n    *\t\t.resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // NOTE: this should not happen on ABViewPage objects:\n            if (this.parent && !this.pages) {\n               // if we have a .parent, make sure we are included in our .parent's\n               // viewIDs\n               return this.parent.viewInsert(this);\n            }\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   ///\n   /// Events\n   ///\n\n   /**\n    * @method eventAdd()\n    *\n    *\n    *\n    * @param {object} evt - {\n    * \t\t\t\t\t\t\temitter: object,\n    * \t\t\t\t\t\t\teventName: string,\n    * \t\t\t\t\t\t\tlistener: function\n    * \t\t\t\t\t\t}\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      var exists = this.__events.find((e) => {\n         return e.emitter == evt.emitter && e.eventName == evt.eventName;\n         // && e.listener == evt.listener;\n      });\n\n      if (!exists || exists.length < 1) {\n         // add to array\n         this.__events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventClear()\n    * unsubscribe all events.\n    * should do it before destroy a component\n    *\n    * @param {bool} deep - clear events of child views\n    */\n   eventClear(deep) {\n      if (deep) {\n         this.views().forEach((v) => {\n            v.eventClear(deep);\n         });\n      }\n\n      if (this.__events && this.__events.length > 0) {\n         this.__events.forEach((e) => {\n            e.emitter.removeListener(e.eventName, e.listener);\n         });\n      }\n   }\n\n   /**\n    * @method clone()\n    * clone the definitions of this ABView object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    * @return {obj}\n    *        obj defs of this ABView\n    */\n   clone(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pages\", \"views\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.viewNew(config, this.application, parent);\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // copy sub pages\n      if (this.pages && !options.ignoreSubPages) {\n         result._pages = [];\n         this.pages().forEach((p) => {\n            let copiedSubPage = p.clone(lookUpIds, result, options);\n            copiedSubPage.parent = result;\n\n            result._pages.push(copiedSubPage);\n         });\n      }\n\n      // copy sub views\n      if (this.views && !options.ignoreSubViews) {\n         result._views = [];\n         this.views().forEach((v) => {\n            let copiedView = v.clone(lookUpIds, result, options);\n\n            result._views.push(copiedView);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABView object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @param {obj} options\n    *        option settings for the copy command.\n    *        options.ignoreSubPages {bool}\n    *             set to true to skip copying any sub pages of this ABView.\n    *        options.newName {string}\n    *             new user determined name for page\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options = {}) {\n      lookUpIds = lookUpIds || {};\n\n      // get settings of the target\n      let config = this.toObj();\n\n      // remove sub-elements property\n      [\"pageIDs\", \"viewIDs\"].forEach((prop) => {\n         delete config[prop];\n      });\n\n      // update id of linked components\n      if (this.copyUpdateProperyList) {\n         (this.copyUpdateProperyList() || []).forEach((prop) => {\n            if (config && config.settings)\n               config.settings[prop] = lookUpIds[config.settings[prop]];\n         });\n      }\n\n      // copy from settings\n      let result = this.application.viewNew(config, this.application, parent);\n\n      // keep the parent\n      result.parent = parent || this.parent;\n\n      // change id\n      if (parent == null) {\n         // the page is getting cloned to root: there is no parent, as parent is the application.\n         // pages with null parent ids default to getting put on root\n         result.id = null;\n      } else {\n         result.id = lookUpIds[result.id] || this.AB.uuid();\n      }\n\n      // page's name should not be duplicate\n      if (this.key == \"page\") {\n         result.name =\n            options?.newName ||\n            `${result.name}_copied_${this.AB.uuid().slice(0, 3)}`;\n\n         result.label = options?.newName || `${result.label} (copied)`;\n      }\n\n      return Promise.resolve()\n         .then(() => {\n            // copy sub pages\n            var allSaves = [];\n\n            if (this._pages && !options.ignoreSubPages) {\n               result._pages = [];\n               this.pages().forEach((p) => {\n                  // this prevents result.save() from happening on each of these\n                  // p.copy():\n                  if (p.isRoot())\n                     this.application._pages.push({ id: lookUpIds[p.id] });\n\n                  allSaves.push(\n                     p\n                        .copy(lookUpIds, result, options)\n                        .then((copiedSubPage) => {\n                           copiedSubPage.parent = result;\n                           // remove the temp {id:} entry above:\n                           this.application._pages =\n                              this.application._pages.filter(\n                                 (p2) => p2.id != lookUpIds[p.id]\n                              );\n\n                           // now add the full copiedSubPage:\n                           result._pages.push(copiedSubPage);\n                        })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // copy sub views\n            var allSaves = [];\n\n            if (this._views && !options.ignoreSubViews) {\n               result._views = [];\n               this.views().forEach((v) => {\n                  allSaves.push(\n                     // send a null for parent, so that the .save() wont trigger\n                     // a save of the parent.\n                     v.copy(lookUpIds, result, options).then((copiedView) => {\n                        // now patch up the parent connection:\n                        // copiedView.parent = result;\n                        if (\n                           result._views.filter((vi) => vi.id == copiedView.id)\n                              .length < 1\n                        ) {\n                           result._views.push(copiedView);\n                        }\n                     })\n                  );\n               });\n            }\n\n            return Promise.all(allSaves);\n         })\n         .then(() => {\n            // now we do 1 save for all the views\n            return result.save();\n         })\n         .then(() => {\n            return result;\n         });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDataFilterPropertyComponentDefaults = {\n   dataviewID: null, // uuid of ABDatacollection\n   field: null, // uuid,\n   viewType: \"advanced\",\n   showFilter: 1,\n   showSort: 1,\n};\n\nconst ABViewDefaults = {\n   key: \"data-filter\", // {string} unique key for this view\n   icon: \"filter\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data Filter\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataFilterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataFilterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewDetail = require(\"../../platform/views/ABViewDetail\");\n\nconst ABViewDataviewPropertyComponentDefaults = {\n   xCount: 1, // {int} the number of columns per row (need at least one)\n   detailsPage: \"\",\n   detailsTab: \"\",\n   editPage: \"\",\n   editTab: \"\",\n};\n\nconst ABViewDataviewDefaults = {\n   key: \"dataview\", // {string} unique key for this view\n   icon: \"th\", // {string} fa-[icon] reference for this view\n   labelKey: \"Data view\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDataviewCore extends ABViewDetail {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewDataviewDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDataviewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDataviewPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.xCount = parseInt(\n         this.settings.xCount || ABViewDataviewPropertyComponentDefaults.xCount\n      );\n      this.settings.detailsPage =\n         this.settings.detailsPage ||\n         ABViewDataviewPropertyComponentDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ||\n         ABViewDataviewPropertyComponentDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ||\n         ABViewDataviewPropertyComponentDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ||\n         ABViewDataviewPropertyComponentDefaults.editTab;\n   }\n\n   parentDetailComponent() {\n      let dataview = null;\n\n      let curr = this;\n      while (curr.key != \"dataview\" && !curr.isRoot() && curr.parent) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"dataview\") {\n         dataview = curr;\n      }\n\n      return dataview;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCheckboxPropertyComponentDefaults = {};\n\nconst ABViewDetailCheckboxDefaults = {\n   key: \"detailcheckbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCheckboxCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCheckboxPropertyComponentDefaults;\n   }\n};\n","// const ABViewDetailSelectivity = require(\"../../platform/views/ABViewDetailSelectivity\");\nconst ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n};\n\nconst ABViewDefaults = {\n   key: \"detailconnect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailConnectCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewDetailDefaults = {\n   key: \"detail\", // {string} unique key for this view\n   icon: \"file-text-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Detail\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewDetailPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 0,\n};\n\nmodule.exports = class ABViewDetailCore extends ABViewContainer {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues ?? ABViewDetailDefaults);\n   }\n\n   static common() {\n      return ABViewDetailDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewDetailPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewDetailPropertyComponentDefaults.showLabel\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth ||\n            ABViewDetailPropertyComponentDefaults.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height ?? ABViewDetailPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      let viewsToAllow = [\"label\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   addFieldToDetail(field, yPosition) {\n      if (field == null) return;\n\n      let newView = field.detailComponent().newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings ?? {};\n      newView.settings.fieldId = field.id;\n      newView.settings.labelWidth =\n         this.settings.labelWidth ||\n         ABViewDetailPropertyComponentDefaults.labelWidth;\n\n      // keep alias to support Query that contains alias name\n      // [alias].[columnName]\n      newView.settings.alias = field.alias;\n\n      // TODO : Default settings\n\n      newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailCustomPropertyComponentDefaults = {};\n\nconst ABViewDetailCustomDefaults = {\n   key: \"detailcustom\", // {string} unique key for this view\n   icon: \"dot-circle-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.custom\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailCustomCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailCustomPropertyComponentDefaults;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailImagePropertyComponentDefaults = {\n   height: 80,\n   width: 120,\n};\n\nconst ABViewDetailImageDefaults = {\n   key: \"detailimage\", // {string} unique key for this view\n   icon: \"image\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailImageCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailImageDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailImageDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailImagePropertyComponentDefaults.height\n      );\n      this.settings.width = parseInt(\n         this.settings.width ?? ABViewDetailImagePropertyComponentDefaults.width\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nmodule.exports = class ABViewDetailItemCore extends ABViewWidget {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   detailComponent() {\n      let detailView = null;\n\n      let curr = this;\n      while (\n         !curr.isRoot() &&\n         curr.parent &&\n         curr.key != \"detail\" &&\n         curr.key != \"dataview\"\n      ) {\n         curr = curr.parent;\n      }\n\n      if (curr.key == \"detail\" || curr.key == \"dataview\") {\n         detailView = curr;\n      }\n\n      return detailView;\n   }\n\n   field() {\n      let detailComponent = this.detailComponent();\n      if (detailComponent == null) return null;\n\n      let datacollection = detailComponent.datacollection;\n      if (datacollection == null) return null;\n\n      let object = datacollection.datasource;\n      if (object == null) return null;\n\n      let field = object.fields((v) => v.id == this.settings.fieldId)[0];\n\n      // set .alias to support queries that contains alias name\n      // [aliasName].[columnName]\n      if (field && this.settings.alias) {\n         field.alias = this.settings.alias;\n      }\n\n      return field;\n   }\n\n   getCurrentData() {\n      let detailCom = this.detailComponent();\n      if (!detailCom) return null;\n\n      let dv = detailCom.datacollection;\n      if (!dv) return null;\n\n      let field = this.field();\n      if (!field) return null;\n\n      let currData = dv.getCursor();\n      if (currData) return currData[field.columnName];\n      else return null;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailTextPropertyComponentDefaults = {\n   height: 0,\n};\n\nconst ABViewDetailTextDefaults = {\n   key: \"detailtext\", // {string} unique key for this view\n   icon: \"etsy\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.text\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTextDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTextDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height ||\n            ABViewDetailTextPropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewDetailItem = require(\"../../platform/views/ABViewDetailItem\");\n\nconst ABViewDetailPropertyComponentDefaults = {};\n\nconst ABViewDetailTreeDefaults = {\n   key: \"detailtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.detail.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDetailTextCore extends ABViewDetailItem {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues ?? ABViewDetailTreeDefaults\n      );\n   }\n\n   static common() {\n      return ABViewDetailTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDetailPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewDocxBuilderPropertyComponentDefaults = {\n   buttonlabel: \"Download DOCX\",\n   dataviewID: null,\n   width: 0,\n   filename: \"\", // uuid\n   filelabel: \"output.docx\",\n   language: \"en\", // en\n   toolbarBackground: \"ab-background-default\",\n   buttonPosition: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"docxBuilder\", // {string} unique key for this view\n   icon: \"file-word-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"DOCX Builder\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewDocxBuilderCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewDocxBuilderPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"filelabel\", \"buttonlabel\"]);\n\n      let obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewDocxBuilderPropertyComponentDefaults.width\n      );\n\n      this.translate(this, this, [\"filelabel\", \"buttonlabel\"]);\n   }\n\n   uploadUrl() {\n      // TODO: Convert this to use ABFactory.urlFileUpload() or a ABFieldFile\n      // to get the URL:\n\n      const object = this.datacollection.datasource;\n\n      // NOTE: file-upload API needs to have the id of ANY field.\n      const field = object ? object.fields()[0] : null;\n\n      return `/file/upload/${object?.id}/${field?.id}/1`;\n   }\n\n   downloadUrl() {\n      return `/file/${this.settings.filename}`;\n   }\n\n   get languageCode() {\n      return (\n         this.settings.language ||\n         ABViewDocxBuilderPropertyComponentDefaults.language\n      );\n   }\n\n   get datacollections() {\n      let dataviewID = (this.settings || {}).dataviewID;\n      if (!dataviewID) return [];\n\n      let dvList = dataviewID.split(\",\") || [];\n\n      return this.AB.datacollections((dv) => dvList.indexOf(dv.id) > -1) || [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormButtonPropertyComponentDefaults = {\n   includeSave: true,\n   saveLabel: \"\",\n   includeCancel: false,\n   cancelLabel: \"\",\n   includeReset: false,\n   resetLabel: \"\",\n   includeDelete: false,\n   deleteLabel: \"\",\n   afterCancel: null,\n   alignment: \"right\",\n   isDefault: false, // mark default button of form widget\n};\n\nconst ABViewFormButtonDefaults = {\n   key: \"button\",\n   // {string} unique key for this view\n\n   icon: \"square\",\n   // {string} fa-[icon] reference for this view\n\n   labelKey: \"ab.components.button\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormButtonCore extends ABView {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormButtonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormButtonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormButtonPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   toObj() {\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      let result = super.toObj();\n\n      return result;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // labels are multilingual values:\n      let labels = [];\n\n      if (this.settings.saveLabel) labels.push(\"saveLabel\");\n\n      if (this.settings.cancelLabel) labels.push(\"cancelLabel\");\n\n      if (this.settings.resetLabel) labels.push(\"resetLabel\");\n\n      if (this.settings.deleteLabel) labels.push(\"deleteLabel\");\n\n      this.unTranslate(this.settings, this.settings, labels);\n\n      this.settings.includeSave = JSON.parse(\n         (this.settings?.includeSave ?? true) &&\n            ABViewFormButtonPropertyComponentDefaults.includeSave\n      );\n      this.settings.includeCancel = JSON.parse(\n         this.settings.includeCancel ||\n            ABViewFormButtonPropertyComponentDefaults.includeCancel\n      );\n      this.settings.includeReset = JSON.parse(\n         this.settings.includeReset ||\n            ABViewFormButtonPropertyComponentDefaults.includeReset\n      );\n      this.settings.includeDelete = JSON.parse(\n         this.settings.includeDelete ||\n            ABViewFormButtonPropertyComponentDefaults.includeDelete\n      );\n\n      this.settings.isDefault = JSON.parse(\n         this.settings.isDefault ||\n            ABViewFormButtonPropertyComponentDefaults.isDefault\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCheckboxPropertyComponentDefaults = {};\n\nconst ABViewFormCheckboxDefaults = {\n   key: \"checkbox\", // {string} unique key for this view\n   icon: \"check-square-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.checkbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCheckboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCheckboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCheckboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCheckboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormConnectPropertyComponentDefaults = {\n   formView: \"\", // id of form to add new data\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n   sortFields: [],\n   // objectWorkspace: {\n   //    filterConditions: {\n   //       // array of filters to apply to the data table\n   //       glue: \"and\",\n   //       rules: [],\n   //    },\n   // },\n   popupWidth: 700,\n   popupHeight: 450,\n};\n\nconst ABViewFormConnectDefaults = {\n   key: \"connect\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"Connect\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormConnectCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormConnectDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormConnectDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormConnectPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.filterConditions =\n         this.settings.filterConditions ||\n         ABViewFormConnectPropertyComponentDefaults.filterConditions;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewFormDefaults = {\n   key: \"form\", // unique key identifier for this ABViewForm\n   icon: \"list-alt\", // icon reference: (without 'fa-' )\n   labelKey: \"Form\", // {string} the multilingual label key for the class label\n};\n\nconst ABViewFormPropertyComponentDefaults = {\n   dataviewID: null,\n   showLabel: true,\n   labelPosition: \"left\",\n   labelWidth: 120,\n   height: 200,\n   clearOnLoad: false,\n   clearOnSave: false,\n   displayRules: [],\n   editForm: \"none\", // The url pointer of ABViewForm\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalues: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tvalue: {object}\n   //\t\t\t}\n   //\t\t]\n   //\t}]\n   recordRules: [],\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nmodule.exports = class ABViewFormCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewFormDefaults);\n   }\n\n   static common() {\n      return ABViewFormDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.labelPosition =\n         this.settings.labelPosition ||\n         ABViewFormPropertyComponentDefaults.labelPosition;\n\n      // convert from \"0\" => true/false\n      this.settings.showLabel = JSON.parse(\n         this.settings.showLabel != null\n            ? this.settings.showLabel\n            : ABViewFormPropertyComponentDefaults.showLabel\n      );\n      this.settings.clearOnLoad = JSON.parse(\n         this.settings.clearOnLoad != null\n            ? this.settings.clearOnLoad\n            : ABViewFormPropertyComponentDefaults.clearOnLoad\n      );\n      this.settings.clearOnSave = JSON.parse(\n         this.settings.clearOnSave != null\n            ? this.settings.clearOnSave\n            : ABViewFormPropertyComponentDefaults.clearOnSave\n      );\n\n      // convert from \"0\" => 0\n      this.settings.labelWidth = parseInt(\n         this.settings.labelWidth == null\n            ? ABViewFormPropertyComponentDefaults.labelWidth\n            : this.settings.labelWidth\n      );\n      this.settings.height = parseInt(\n         this.settings.height == null\n            ? ABViewFormPropertyComponentDefaults.height\n            : this.settings.height\n      );\n   }\n\n   // Use this function in kanban\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      var viewsToAllow = [\"label\", \"layout\", \"button\", \"text\"],\n         allComponents = this.application.viewAll();\n\n      return allComponents.filter((c) => {\n         return viewsToAllow.indexOf(c.common().key) > -1;\n      });\n   }\n\n   /**\n    * @method fieldComponents()\n    *\n    * return an array of all the ABViewFormField children\n    *\n    * @param {fn} filter  \ta filter fn to return a set of ABViewFormField that this fn\n    *\t\t\t\t\t\treturns true for.\n    * @return {array} \tarray of ABViewFormField\n    */\n   fieldComponents(filter) {\n      const flattenComponents = (views) => {\n         let components = [];\n\n         views.forEach((v) => {\n            if (v == null) return;\n\n            components.push(v);\n\n            if (v._views?.length) {\n               components = components.concat(flattenComponents(v._views));\n            }\n         });\n\n         return components;\n      };\n\n      if (this._views?.length) {\n         const allComponents = flattenComponents(this._views);\n\n         if (filter == null) {\n            filter = (comp) => comp instanceof ABViewFormItem;\n         }\n\n         return allComponents.filter(filter);\n      } else {\n         return [];\n      }\n   }\n\n   addFieldToForm(field, yPosition) {\n      if (field == null) return;\n\n      var fieldComponent = field.formComponent();\n      if (fieldComponent == null) return;\n\n      var newView = fieldComponent.newInstance(this.application, this);\n      if (newView == null) return;\n\n      // set settings to component\n      newView.settings = newView.settings || {};\n      newView.settings.fieldId = field.id;\n      // TODO : Default settings\n\n      if (yPosition != null) newView.position.y = yPosition;\n\n      // add a new component\n      this._views.push(newView);\n\n      return newView;\n   }\n\n   get RecordRule() {\n      let object = this.datacollection.datasource;\n\n      if (this._recordRule == null) {\n         this._recordRule = new ABRecordRule();\n      }\n\n      this._recordRule.formLoad(this);\n      this._recordRule.fromSettings(this.settings.recordRules);\n      this._recordRule.objectLoad(object);\n\n      return this._recordRule;\n   }\n\n   doRecordRulesPre(rowData) {\n      return this.RecordRule.processPre({ data: rowData, form: this });\n   }\n\n   doRecordRules(rowData) {\n      // validate for record rules\n      if (rowData) {\n         let object = this.datacollection.datasource;\n         let ruleValidator = object.isValidData(rowData);\n         let isUpdatedDataValid = ruleValidator.pass();\n         if (!isUpdatedDataValid) {\n            console.error(\"Updated data is invalid.\", { rowData: rowData });\n            return Promise.reject(new Error(\"Updated data is invalid.\"));\n         }\n      }\n\n      return this.RecordRule.process({ data: rowData, form: this });\n   }\n\n   doSubmitRules(rowData) {\n      var object = this.datacollection.datasource;\n\n      var SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      return SubmitRules.process({ data: rowData, form: this });\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormCustomPropertyComponentDefaults = {};\n\nconst ABViewFormCustomDefaults = {\n   key: \"fieldcustom\",\n   // {string} unique key for this view\n   icon: \"object-group\",\n   // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.custom\",\n   // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormCustom extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormCustomDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormCustomDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormCustomPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormDatepickerPropertyComponentDefaults = {\n   timepicker: false,\n};\n\nconst ABViewFormDatepickerDefaults = {\n   key: \"datepicker\", // {string} unique key for this view\n   icon: \"calendar\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.datepicker\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormDatepickerCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormDatepickerDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormDatepickerDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormDatepickerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewFormFieldPropertyComponentDefaults = {\n   required: 0,\n   disable: 0,\n};\n\nmodule.exports = class ABViewFormComponentCore extends ABView {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static defaultValues() {\n      return ABViewFormFieldPropertyComponentDefaults;\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      let form = this.parentFormComponent();\n      if (form == null) return null;\n\n      let datacollection = form.datacollection;\n      if (datacollection == null) return null;\n\n      return datacollection;\n   }\n\n   field() {\n      if (this.settings.objectId) {\n         let object = this.AB.objectByID(this.settings.objectId);\n         if (!object) return null;\n\n         return object.fieldByID(this.settings.fieldId);\n      } else {\n         let form = this.parentFormComponent();\n         if (form == null) return null;\n\n         let object;\n         if (form._currentObject) {\n            object = form._currentObject;\n         } else {\n            let datacollection = form.datacollection;\n            if (datacollection == null) return null;\n\n            object = datacollection.datasource;\n         }\n\n         if (object == null) return null;\n\n         let field = object.fieldByID(this.settings.fieldId);\n         return field;\n      }\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormJsonPropertyComponentDefaults = {\n   type: \"string\", // 'string', 'systemObject' or 'filter'\n};\n\nconst ABViewFormJsonDefaults = {\n   key: \"json\", // {string} unique key for this view\n   icon: \"brackets-curly\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.json\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormJsonCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormJsonDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormJsonDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormJsonPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormNumberPropertyComponentDefaults = {\n   isStepper: 0,\n};\n\nconst ABViewFormNumberDefaults = {\n   key: \"numberbox\", // {string} unique key for this view\n   icon: \"hashtag\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.number\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormNumberCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormNumberDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormNumberDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormNumberPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewFormText instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"formLabel\"]);\n\n      var obj = super.toObj();\n      obj.views = []; // no subviews\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      this.settings.isStepper =\n         this.settings.isStepper ||\n         ABViewFormNumberPropertyComponentDefaults.isStepper;\n\n      // convert from \"0\" => 0\n      this.settings.isStepper = parseInt(this.settings.isStepper);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormReadonlyPropertyComponentDefaults = {};\n\nconst ABViewFormReadonlyDefaults = {\n   key: \"fieldreadonly\", // {string} unique key for this view\n   icon: \"calculator\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.readonly\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormReadonlyDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormReadonlyDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormReadonlyPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectMultiplePropertyComponentDefaults = {\n   type: \"multicombo\", // 'richselect' or 'radio'\n};\n\nconst ABSelectMultipleDefaults = {\n   key: \"selectmultiple\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectmultiple\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectMultipleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectMultipleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectMultipleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectMultiplePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormSelectSinglePropertyComponentDefaults = {\n   type: \"richselect\", // 'richselect' or 'radio'\n};\n\nconst ABSelectSingleDefaults = {\n   key: \"selectsingle\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.selectsingle\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormSelectSingleCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABSelectSingleDefaults\n      );\n   }\n\n   static common() {\n      return ABSelectSingleDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormSelectSinglePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormItem = require(\"../../platform/views/ABViewFormItem\");\n\nconst ABViewFormTextboxPropertyComponentDefaults = {\n   type: \"single\", // 'single', 'multiple' or 'rich'\n};\n\nconst ABViewFormTextboxDefaults = {\n   key: \"textbox\", // {string} unique key for this view\n   icon: \"i-cursor\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.textbox\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTextboxCore extends ABViewFormItem {\n   constructor(values, application, parent, defaultValues) {\n      super(\n         values,\n         application,\n         parent,\n         defaultValues || ABViewFormTextboxDefaults\n      );\n   }\n\n   static common() {\n      return ABViewFormTextboxDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTextboxPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewFormCustom = require(\"../../platform/views/ABViewFormCustom\");\n\nconst ABViewFormTreePropertyComponentDefaults = {};\n\nconst ABTreeDefaults = {\n   key: \"formtree\", // {string} unique key for this view\n   icon: \"sitemap\", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.tree\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewFormTreeCore extends ABViewFormCustom {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABTreeDefaults);\n   }\n\n   static common() {\n      return ABTreeDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewFormTreePropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGanttPropertyComponentDefaults = {\n   dataviewID: \"\",\n   // {string}\n   // {ABDatacollection.id} of the datacollection that contains the data for\n   // the Gantt chart.\n\n   titleFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n\n   startDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the start date\n\n   endDateFieldID: \"\",\n   // {string}\n   // {ABFieldDate.id} of the field that contains the end date\n\n   durationFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that contains the duration\n\n   progressFieldID: \"\",\n   // {string}\n   // {ABFieldNumber.id} of the field that marks the progress\n\n   notesFieldID: \"\",\n   // {string}\n   // {ABFieldXXX.id} of the field that contains the value of the title\n   // ABFieldString, ABFieldLongText\n};\n\nconst ABViewDefaults = {\n   key: \"gantt\", // {string} unique key for this view\n   icon: \"tasks\", // {string} fa-[icon] reference for this view\n   labelKey: \"Gantt\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewGanttCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGanttPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      Object.keys(ABViewGanttPropertyComponentDefaults).forEach((k) => {\n         this.settings[k] =\n            this.settings[k] || ABViewGanttPropertyComponentDefaults[k];\n      });\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewGridPropertyComponentDefaults = {\n   label: \"\",\n   // {string}\n   // label is required and you can add more if the component needs them\n\n   // format:0  \t// 0 - normal, 1 - title, 2 - description\n   dataviewID: \"\",\n   // {uuid}\n   // uuid of ABDataCollection that drives the data for our Grid\n\n   padding: 17,\n   // {int}\n   // the default padding surrounding the component\n\n   showToolbar: 1,\n   // {bool}\n   // do we show our toolbar?\n\n   isEditable: 0,\n   // {bool}\n   // do we allow editing in the grid?\n\n   massUpdate: 0,\n   // {bool}\n   // do we allow the Mass Update capability? (row checkboxes and the\n   // MassUpdate popup)\n\n   allowDelete: 0,\n   // {bool}\n   // do we allow deleting multiple rows at a time? Mass Delete.\n\n   // isFilterable:0,\n\n   isSortable: 1,\n   // {bool}\n   // do we allow the sort options.\n\n   isExportable: 0,\n   // {bool}\n   // do we enable the webix export from grid capabilities?\n\n   // linkedObject:'',\n   // linkedField:'',\n   // linkedPage:'',\n   // linkedPageView:'',\n   // linkedEditPage:'',\n   // linkedEditPageForm:'',\n\n   detailsPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the details component.\n\n   detailsTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the details component.\n   // NOTE: if your details is embedded on a TAB, we need both the\n   // .detailsPage & .detailsTab to successfully show the item.\n\n   editPage: \"\",\n   // {ABViewPage.id}\n   // the ABViewPage that has the edit component.\n\n   editTab: \"\",\n   // {ABViewTab.id}\n   // the ABViewTab component, that has the edit component.\n   // NOTE: if your editor is embedded on a TAB, we need both the\n   // .editPage & .editTab to successfully show the form.\n\n   trackView: 0,\n   // {bool}\n   // Do we offer the ability to track changes to this object/row?\n\n   frozenColumnID: \"\",\n   // {ABField.id}\n   // id of column you want to stop freezing the left hand side at.\n\n   hiddenFields: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add hidden:true to\n\n   summaryColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the SUM footer to\n\n   countColumns: [],\n   // {array}  [ ABField.id, ABField.id, ... ]\n   // array of [ids] to add the Count footer to\n\n   // TODO: get rid of objectWorkspace!\n   objectWorkspace: {\n      // sortFields:[], // array of columns with their sort configurations\n      // filterConditions:[], // array of filters to apply to the data table\n      frozenColumnID: \"\", // id of column you want to stop freezing\n      hiddenFields: [], // array of [ids] to add hidden:true to\n      summaryColumns: [],\n      countColumns: [],\n   },\n   gridFilter: {\n      filterOption: 1,\n      userFilterPosition: \"toolbar\",\n      isGlobalToolbar: 1,\n   },\n   // summaryFields: [], // array of [field ids] to add the summary column in footer\n   // countFields: [], // array of [field ids] to add the summary column in footer\n\n   height: 0,\n   // {int}\n   // The Height of our Grid.\n   // See ../views/ABViewDataview.js\n\n   hideHeader: 0,\n   labelAsField: 0,\n   hideButtons: 0,\n   groupBy: \"\", // id of field\n\n   // TODO: add to ABDesigner.interface design:\n   columnConfig: [],\n   // {array} [ {columnHeader}, {columnHeader} ... ]\n   // An array of column headers for the grid to display. These should\n   // be generated at Design time, and can allow the designer to ORDER the\n   // columns, assign column widths, fillspace, etc...\n   //    {columnHeader}\n   //    The minimum amount of information a Grid needs for it's customization\n   //    .id {string} ABField.columnName\n   //    .fieldId {string} ABField.id\n   //    .width {int}\n   //    .fillspace {bool}\n   //    .minwidth\n   //\n   //    When displaying column headers, we will ask the\n   //    CurrentObject.columnHeaders(), and then modify them with our settings\n   //    here.\n\n   saveLocal: 1,\n   // {bool}\n   // Allow saving of local changes to our grid display. This will enable\n   // a user to modify the Grid display locally.\n};\n\nconst ABViewDefaults = {\n   key: \"grid\", // {string} unique key for this view\n   icon: \"table\", // {string} fa-[icon] reference for this view\n   labelKey: \"Grid\", // {string} the multilingual label key for the class label\n};\n\n/**\n * @function settingsDefault()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that are NOT TRUTHY ... so not for numeric\n * 1 or 0.\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefault(base, field) {\n   if (typeof base[field] == \"undefined\") {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n      return;\n   }\n   base[field] = base[field] || ABViewGridPropertyComponentDefaults[field];\n}\n\n/**\n * @function settingsDefaultJSON()\n * Verifies a given field is set and if not, defaults to what we havein our\n * ABViewGridPropertyComponentDefaults.\n * NOTE: use this fn() for values that ARE TRUTHY ... so for numeric 1 or 0\n * @param {hash} base\n *        The current settings value hash.\n * @param {string} field\n *        The parameter we are checking.\n */\nfunction settingsDefaultJSON(base, field) {\n   try {\n      base[field] = JSON.parse(base[field]);\n   } catch (e) {\n      base[field] = ABViewGridPropertyComponentDefaults[field];\n   }\n}\n\nmodule.exports = class ABViewGridCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewGridPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // if this is being instantiated on a read from the Property UI,\n      settingsDefault(this.settings, \"dataviewID\");\n\n      // Convert to boolean\n      // these values are sometimes 0 (number) at this point so the JSON.parse\n      // with the || (or) statement was always falling to the default so I am\n      // trying to parse the value...if it fails we use the default value\n      settingsDefaultJSON(this.settings, \"padding\");\n      settingsDefaultJSON(this.settings, \"showToolbar\");\n      settingsDefaultJSON(this.settings, \"isEditable\");\n      settingsDefaultJSON(this.settings, \"massUpdate\");\n      settingsDefaultJSON(this.settings, \"allowDelete\");\n      // this.settings.isFilterable = JSON.parse(this.settings.isFilterable || ABViewGridPropertyComponentDefaults.isFilterable);\n      settingsDefaultJSON(this.settings, \"isSortable\");\n      settingsDefaultJSON(this.settings, \"isExportable\");\n      settingsDefaultJSON(this.settings, \"hideHeader\");\n      settingsDefaultJSON(this.settings, \"labelAsField\");\n      settingsDefaultJSON(this.settings, \"hideButtons\");\n      settingsDefaultJSON(this.settings, \"columnConfig\");\n      settingsDefaultJSON(this.settings, \"saveLocal\");\n\n      this.settings.gridFilter =\n         this.settings.gridFilter ||\n         ABViewGridPropertyComponentDefaults.gridFilter;\n\n      try {\n         this.settings.gridFilter.filterOption = JSON.parse(\n            this.settings.gridFilter.filterOption\n         );\n      } catch (e) {\n         this.settings.gridFilter.filterOption =\n            ABViewGridPropertyComponentDefaults.gridFilter.filterOption;\n      }\n\n      try {\n         this.settings.gridFilter.isGlobalToolbar = JSON.parse(\n            this.settings.gridFilter.isGlobalToolbar\n         );\n      } catch (e) {\n         this.settings.gridFilter.isGlobalToolbar =\n            ABViewGridPropertyComponentDefaults.gridFilter.isGlobalToolbar;\n      }\n\n      // this.settings.linkedObject = this.settings.linkedObject || ABViewGridPropertyComponentDefaults.linkedObject;\n      // this.settings.linkedField = this.settings.linkedField || ABViewGridPropertyComponentDefaults.linkedField;\n      // this.settings.linkedPage = this.settings.linkedPage || ABViewGridPropertyComponentDefaults.linkedPage;\n      // this.settings.linkedPageView = this.settings.linkedPageView || ABViewGridPropertyComponentDefaults.linkedPageView;\n      // this.settings.linkedEditPage = this.settings.linkedEditPage || ABViewGridPropertyComponentDefaults.linkedEditPage;\n      // this.settings.linkedEditPageForm = this.settings.linkedEditPageForm || ABViewGridPropertyComponentDefaults.linkedEditPageForm;\n\n      settingsDefault(this.settings, \"detailsPage\");\n      settingsDefault(this.settings, \"editPage\");\n      settingsDefault(this.settings, \"detailsTab\");\n      settingsDefault(this.settings, \"editTab\");\n      settingsDefaultJSON(this.settings, \"trackView\");\n\n      // TODO: remove objectworkspace!\n      // this.settings.objectWorkspace =\n      //    this.settings.objectWorkspace ||\n      //    ABViewGridPropertyComponentDefaults.objectWorkspace;\n\n      // if (typeof this.settings.objectWorkspace != \"undefined\") {\n      //    if (typeof this.settings.objectWorkspace.sortFields == \"undefined\")\n      //       this.settings.objectWorkspace.sortFields = [];\n      //    if (\n      //       typeof this.settings.objectWorkspace.filterConditions == \"undefined\"\n      //    )\n      //       this.settings.objectWorkspace.filterConditions = [];\n      //    if (typeof this.settings.objectWorkspace.frozenColumnID == \"undefined\")\n      //       this.settings.objectWorkspace.frozenColumnID = \"\";\n      //    if (typeof this.settings.objectWorkspace.hiddenFields == \"undefined\")\n      //       this.settings.objectWorkspace.hiddenFields = [];\n      //    if (typeof this.settings.objectWorkspace.summaryColumns == \"undefined\")\n      //       this.settings.objectWorkspace.summaryColumns = [];\n      //    if (typeof this.settings.objectWorkspace.countColumns == \"undefined\")\n      //       this.settings.objectWorkspace.countColumns = [];\n      // }\n\n      var owFields = [\n         \"sortFields\",\n         \"filterConditions\",\n         \"frozenColumnID\",\n         \"hiddenFields\",\n         \"summaryColumns\",\n         \"countColumns\",\n      ];\n      // Transition: if we have an .objectWorkspace, copy those values in here:\n      if (this.settings.objectWorkspace) {\n         owFields.forEach((f) => {\n            if (this.settings[f] == null)\n               this.settings[f] = this.settings.objectWorkspace[f];\n         });\n      }\n\n      // make sure they have actual default values now.\n      owFields.forEach((f) => {\n         settingsDefault(this.settings, f);\n      });\n\n      // we are not allowed to have sub views:\n      this._views = [];\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   removeField(field, cb) {\n      let shouldSave = false;\n\n      // check to see if there is a frozenColumnID and if it matches the\n      // deleted field\n      if (this.settings?.frozenColumnID == field.columnName) {\n         // remove the column name from the frozen column id\n         this.settings.frozenColumnID = \"\";\n         // flag the object to be saved later\n         shouldSave = true;\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.hiddenFields?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.hiddenFields.indexOf(field.columnName);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.hiddenFields.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are Summary fields\n      if (this.settings.summaryColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.summaryColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.summaryColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n\n      // check to see if there are hidden fields\n      if (this.settings.countColumns?.length) {\n         // find if the deleted field is in the array\n         let index = this.settings.countColumns.indexOf(field.id);\n         // if so splice it out of the array\n         if (index > -1) {\n            this.settings.countColumns.splice(index, 1);\n            // flag the object to be saved later\n            shouldSave = true;\n         }\n      }\n      // if settings were changed call the callback\n\n      cb(null, shouldSave);\n   }\n\n   copyUpdateProperyList() {\n      return [\"detailsPage\", \"detailsTab\", \"editPage\", \"editTab\"];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewImagePropertyComponentDefaults = {\n   filename: \"\",\n   width: 200,\n   height: 100,\n};\n\nconst ABViewDefaults = {\n   key: \"image\", // {string} unique key for this view\n   icon: \"picture-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"Image\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewImageCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewImagePropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.width = parseInt(\n         this.settings.width || ABViewImagePropertyComponentDefaults.width\n      );\n      this.settings.height = parseInt(\n         this.settings.height || ABViewImagePropertyComponentDefaults.height\n      );\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewKanbanPropertyComponentDefaults = {\n   dataviewID: null,\n   // {uuid}\n   // The ABDataCollection.uuid that we are using to store the data.\n   // NOTE: we actually use the DC to get the ABObject it is connected to.\n\n   editFields: [],\n   // {array}\n   // An array of {ABField.id} that determines which fields should show up\n   // in the editor.\n\n   verticalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the Vertical Grouping\n   // of the Kanban.\n\n   horizontalGroupingField: \"\",\n   // {ABField.id}\n   // the .id of the ABField instance that determines the horizontal Grouping\n   // of the Kanban.\n\n   ownerField: \"\",\n   // {ABFieldUser.id}\n   // the .id of the ABFieldUser instance that determines the owner of the\n   // entries.\n\n   template: \"\",\n   // {json}\n   // The {ABViewText} definition used to display the template for this KanBan.\n   //\n   // A display template used for displaying the information in each Card. The\n   // template is a basic string with special placeholders:  {field.id}\n   // Given a row of data, the current object will scan the template for any\n   // placeholders matching one of it's fields, and then update it with the\n   // current value.\n};\n\nconst ABViewDefaults = {\n   key: \"kanban\",\n   // {string}\n   // unique key identifier for this ABView object\n\n   icon: \"columns\",\n   // {string}\n   // font-awesome icon reference: (without 'fa-' )\n\n   labelKey: \"Kanban\",\n   // {string}\n   // the multilingual label key\n   // NOTE: will be used as L(labelKey)\n};\n\nmodule.exports = class ABViewKanbanCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n\n      // set a default .template value\n      if (!this.settings.template) {\n         this.settings.template = { id: `${this.id}_template`, key: \"text\" };\n         this.settings.template.text = this.settings.textTemplate;\n      }\n\n      this.TextTemplate = this.AB.viewNewDetatched(this.settings.template);\n   }\n\n   toObj() {\n      var obj = super.toObj();\n      obj.settings.template = this.TextTemplate.toObj();\n      // NOTE: this corrects the initial save where this.id == undefined\n      // all the rest will set the .id correctly.\n      obj.settings.template.id = `${this.id}_template`;\n      return obj;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewKanbanPropertyComponentDefaults;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewLabelPropertyComponentDefaults = {\n   text: \"\",\n   format: 0, // 0 - normal, 1 - title, 2 - description\n   alignment: \"left\",\n};\n\nconst ABViewDefaults = {\n   key: \"label\", // {string} unique key for this view\n   icon: \"font\", // {string} fa-[icon] reference for this view\n   labelKey: \"Label\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewLabelPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\"label\", \"text\"]);\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values); // <-- this performs the translations\n\n      // if this is being instantiated on a read from the Property UI,\n      // .text is coming in under .settings.label\n      this.text = values.text || values.settings.text || \"*text\";\n\n      this.settings.format =\n         this.settings.format || ABViewLabelPropertyComponentDefaults.format;\n      this.settings.alignment =\n         this.settings.alignment ||\n         ABViewLabelPropertyComponentDefaults.alignment;\n\n      // we are not allowed to have sub views:\n      this._views = [];\n\n      // convert from \"0\" => 0\n      this.settings.format = parseInt(this.settings.format);\n\n      this.translate(this, this, [\"label\", \"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   //// Allow external interface to manipulate our settings:\n\n   /**\n    * @method formatNormal\n    * display text in the normal format.\n    */\n   formatNormal() {\n      this.settings.format = 0;\n   }\n\n   /**\n    * @method formatTitle\n    * display text as a Title.\n    */\n   formatTitle() {\n      this.settings.format = 1;\n   }\n\n   /**\n    * @method formatDescription\n    * display text as a description.\n    */\n   formatDescription() {\n      this.settings.format = 2;\n   }\n};\n","const ABViewContainer = require(\"../../platform/views/ABViewContainer\");\nconst ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst PropertyComponentDefaults = {\n   label: \"\",\n   numColumns: 1, // The number of columns for this layout\n};\n\nconst ABViewDefaults = {\n   key: \"layout\", // {string} unique key for this view\n   icon: \"columns\", // {string} fa-[icon] reference for this view\n   labelKey: \"Layout\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLayoutCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return PropertyComponentDefaults;\n   }\n\n   /**\n    * @method addColumn\n    * method to actually add a new ABView as one of our columns.\n    * This is called by the static .addView() method.\n    */\n   addColumn() {\n      this._views.push(\n         this.application.viewNew(\n            {\n               key: ABViewContainer.common().key,\n            },\n            this.application,\n            this\n         )\n      );\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      if (isEdited) {\n         // if the layout component is being edited in the editor (isEdited == true)\n         // then we return [];\n         return [];\n      } else {\n         // the layout view doesn't care what components are offered, it get's\n         // the list from it's parent view.\n         // ## NOTE: layout views should not be root views.\n         if (this.parent) {\n            return this.parent.componentList(false);\n         } else {\n            return [];\n         }\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewListPropertyComponentDefaults = {\n   dataviewID: null,\n   field: null,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"list\", // {string} unique key for this view\n   icon: \"list-ul\", // {string} fa-[icon] reference for this view\n   labelKey: \"List\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewLabelCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewListPropertyComponentDefaults;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   field() {\n      var dv = this.datacollection;\n      if (!dv) return null;\n\n      var object = dv.datasource;\n      if (!object) return null;\n\n      return object.fieldByID(this.settings.field);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewMenuPropertyComponentDefaults = {\n   orientation: \"x\",\n   buttonStyle: \"ab-menu-default\",\n   menuAlignment: \"ab-menu-left\",\n   menuInToolbar: 1,\n   menuPadding: 10,\n   menuTheme: \"bg_gray\",\n   menuPosition: \"left\",\n   menuTextLeft: \"\",\n   menuTextRight: \"\",\n   menuTextCenter: \"\",\n   // [\n   // \t\t{\n   //\t\t\tpageId: uuid,\n   //\t\t\ttabId: uuid,\n   //\t\t\ttype: string, // \"page\", \"tab\"\n   //\t\t\tisChecked: bool,\n   //\t\t\taliasname: string,\n   //\t\t\ttranslations: []\n   //\t\t}\n   // ]\n   pages: [],\n   order: [],\n};\n\nconst ABMenuDefaults = {\n   key: \"menu\", // {string} unique key for this view\n   icon: \"th-large\", // {string} fa-[icon] reference for this view\n   labelKey: \"Menu\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewMenuCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABMenuDefaults);\n   }\n\n   static common() {\n      return ABMenuDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewMenuPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewMenu instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      this.unTranslate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n      if (this.settings.pages) {\n         this.settings.pages.forEach((page) => {\n            this.unTranslate(page, page, [\"aliasname\"]);\n         });\n      }\n\n      var obj = super.toObj();\n      obj.viewIDs = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.translate(this, this, [\n         \"menuTextLeft\",\n         \"menuTextCenter\",\n         \"menuTextRight\",\n      ]);\n\n      this.settings.pages =\n         this.settings.pages || ABViewMenuPropertyComponentDefaults.pages;\n\n      for (var i = 0; i < this.settings.pages.length; i++) {\n         var page = this.settings.pages[i];\n         if (page instanceof Object) {\n            page.isChecked = JSON.parse(page.isChecked || false);\n\n            this.translate(page, page, [\"aliasname\"]);\n         }\n         // Compatible with old data\n         else if (typeof page == \"string\") {\n            this.settings.pages[i] = {\n               pageId: page,\n               isChecked: true,\n            };\n         }\n      }\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   ClearPagesInView(view) {\n      // clear menu items\n      if (view && view.count() > 1) {\n         view.find({}).forEach((item) => {\n            view.remove(item.id);\n         });\n      }\n   }\n\n   /**\n    * @property datacollection\n    * return data source\n    * NOTE: this view doesn't track a DataCollection.\n    * @return {ABDataCollection}\n    */\n   get datacollection() {\n      return null;\n   }\n\n   AddPagesToView(view, pages) {\n      if (!view || !pages) return;\n\n      (pages || []).forEach((displayPage) => {\n         if (displayPage.isChecked) {\n            let existsPage = this.application.pages(\n               (p) => p.id == displayPage.pageId,\n               true\n            )[0];\n            if (!existsPage) return;\n\n            var pageAccessLevel = existsPage.getUserAccess();\n            if (pageAccessLevel == 0) return;\n\n            if (displayPage.tabId) {\n               let existsTab = this.application.views(\n                  (v) => v.id == displayPage.tabId,\n                  true\n               )[0];\n               if (!existsTab) return;\n\n               var tabAccessLevel = existsTab.getUserAccess();\n               if (tabAccessLevel == 0) return;\n            }\n\n            let label = this.getAliasname(displayPage);\n            // create a temporaty store for the menu item\n            var menuItem;\n            // check if page has a parent or not\n            if (displayPage.parent && displayPage.parent != \"0\") {\n               // if page has a parent attempt to grab its submenu\n               menuItem = view.getSubMenu(displayPage.parent);\n            } else {\n               // if the page doesn't have parent use the current menu\n               menuItem = view;\n            }\n            // if the menu item doesn't have a menu selected find it\n            if (menuItem == null) {\n               // get the menu item\n               var curMenu = view.getMenuItem(displayPage.parent);\n               // create a submenu placeholder\n               curMenu.submenu = [];\n               // update the menu with the new submenu included\n               view.refresh(displayPage.parent);\n               // get the submenu we just created\n               menuItem = view.getSubMenu(displayPage.parent);\n            }\n            if (menuItem.exists(displayPage.tabId || displayPage.pageId))\n               return;\n            // add a new item to the menu/submenu\n            menuItem.add(\n               {\n                  id: displayPage.tabId || displayPage.pageId,\n                  value: label,\n                  type: displayPage.type,\n                  pageId: displayPage.pageId,\n                  icon: displayPage.icon\n                     ? \"fa fa-fw fa-\" + displayPage.icon\n                     : \"\",\n               },\n               displayPage.position ? parseInt(displayPage.position) : 0\n            );\n         }\n      });\n   }\n\n   /**\n    * @method getAliasname\n    * @param pageInfo - an object in settings\n    * {\n    * \tpageId: uuid,\n    * \ttabId: uuid,\n    * \ttype: string, - \"page\" or \"tab\"\n    * \tisChecked: bool,\n    * \taliasname: string,\n    *\ttranslations: []\n    *}\n    *\n    * @return {string}\n    */\n   getAliasname(pageInfo) {\n      var lang = this.AB.Multilingual.currentLanguage();\n      var translation = pageInfo.translations.filter((t) => {\n         return t.language_code == lang;\n      });\n\n      var label = \"\";\n\n      if (translation.length) {\n         if (translation[0].aliasname) {\n            label = translation[0].aliasname;\n         } else if (translation[0].label) {\n            label = translation[0].label;\n         }\n      }\n\n      // Just in case there isn't one stored in the translations yet\n      if (!label && pageInfo.aliasname) {\n         label = pageInfo.aliasname;\n      }\n\n      // if alias is empty, then find label of page or tab\n      if (\n         !label ||\n         // remove [en] or [th] etc.\n         !label.replace(/\\[.{2,}\\]/g, \"\")\n      ) {\n         // first check to see if we are actually on a page\n         // if not recursivly look up for the nearest parent page\n         var pageId;\n         if (pageInfo.pageId) {\n            pageId = pageInfo.pageId;\n         } else {\n            pageId = this.getParentPageId(pageInfo);\n         }\n         // find label of the actual page\n         var page = this.application.pages((p) => p.id == pageId, true)[0];\n         if (page) {\n            // find label of the tab view\n            if (pageInfo.type == \"tab\" || pageInfo.key == \"viewcontainer\") {\n               var tabView = page.views(\n                  (v) => v.id == pageInfo.tabId || v.id == pageInfo.id,\n                  true\n               )[0];\n               if (tabView) {\n                  label = tabView.label;\n               }\n            } else {\n               label = page.label;\n            }\n         }\n      }\n\n      return label;\n   }\n\n   getParentPageId(currentView) {\n      if (currentView.key != \"page\") {\n         return this.getParentPageId(currentView.parent);\n      } else {\n         return currentView.id;\n      }\n   }\n\n   copy(lookUpIds, parent) {\n      return super.copy(lookUpIds, parent).then((result) => {\n         // update ids of page's settings\n         (result.settings.pages || []).forEach((p, i) => {\n            let page = result.settings.pages[i];\n\n            // Compatible with old data\n            if (typeof page == \"string\") {\n               result.settings.pages[i] = lookUpIds[page];\n            } else {\n               page.pageId = lookUpIds[page.pageId];\n               page.tabId = lookUpIds[page.tabId];\n            }\n         });\n\n         return result.save().then(() => {\n            return result;\n         });\n      });\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\nconst ABViewPDFImporterPropertyComponentDefaults = {\n   dataviewID: null,\n   fieldID: null,\n\n   //\t[{\n   //\t\taction: {string},\n   //\t\twhen: [\n   //\t\t\t{\n   //\t\t\t\tfieldId: {UUID},\n   //\t\t\t\tcomparer: {string},\n   //\t\t\t\tvalue: {string}\n   //\t\t\t}\n   //\t\t],\n   //\t\tvalue: {string}\n   //\t}]\n   submitRules: [],\n};\n\nconst ABViewDefaults = {\n   key: \"pdfImporter\", // {string} unique key for this view\n   icon: \"file-pdf-o\", // {string} fa-[icon] reference for this view\n   labelKey: \"PDF Importer\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPDFImporterCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPDFImporterPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.dataviewID =\n         this.settings.dataviewID ??\n         ABViewPDFImporterPropertyComponentDefaults.dataviewID;\n\n      this.settings.fieldID =\n         this.settings.fieldID ??\n         ABViewPDFImporterPropertyComponentDefaults.fieldID;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings ?? {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   doSubmitRules(rowDatas) {\n      const object = this.datacollection.datasource;\n\n      const SubmitRules = new ABSubmitRule();\n      SubmitRules.formLoad(this);\n      SubmitRules.fromSettings(this.settings.submitRules);\n      SubmitRules.objectLoad(object);\n\n      if (rowDatas && !Array.isArray(rowDatas)) rowDatas = [rowDatas];\n\n      rowDatas?.forEach((rowData) => {\n         SubmitRules.process({ data: rowData, form: this });\n      });\n   }\n};\n","/*\n * ABViewPage\n *\n * An ABView that represents a \"Page\" in the system.\n *\n * Pages are\n *\t- allowed to be displayed in the interface list\n *\t- return a full list of components that can be added to the view editor\n *\n *\n */\n\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n// var ABViewManager = require(\"../ABViewManager\");\n\n// function L(key, altText) {\n//     return AD.lang.label.getLabel(key) || altText;\n// }\n\nconst ABViewDefaults = {\n   key: \"page\", // unique key identifier for this ABView\n   icon: \"file\", // icon reference: (without 'fa-' )\n};\n\nconst ABPropertyComponentDefaults = {\n   type: \"page\", // 'page', 'popup' or 'reportPage'\n   popupWidth: 700,\n   popupHeight: 450,\n   pageWidth: null,\n   fixedPageWidth: 0,\n   pageBackground: \"ab-background-default\",\n};\n\nmodule.exports = class ABViewPageCore extends ABViewContainer {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'viewKey',\t\t\t\t// unique key for this View Type\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this View Type\n\n      //\t\tname: '',\t\t\t\t\t// unique page name\n\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      //\t\t},\n\n      //\t\ttranslations:[]\n      // \t}\n\n      this.parent = null; // will be set by the pageNew() that creates this obj.\n      // {obj} .parent\n      // this points to the ABView object that manages this object as a child.\n      // this param is shared across ABViews as well as ABViewPage, but has\n      // different implications ... so we default an ABViewPage.parent = null\n      // and the place that Creates the Page must assign the .parent externally.\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   static getPageActionKey(view) {\n      return [\n         \"opstools\",\n         \"AB_\" + String(view.application.name).replace(/[^a-z0-9]/gi, \"\"),\n         String(view.name)\n            .replace(/[^a-z0-9]/gi, \"\")\n            .toLowerCase(),\n         \"view\",\n      ].join(\".\");\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewPage instance\n    * into the values needed for saving to the DB.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.name = this.name;\n\n      obj.myAppID = this.myAppID;\n\n      // icon of popup page\n      if (this.settings.type == \"popup\") obj.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") obj.label = obj.name;\n\n      // compile our pages\n      obj.pageIDs = (this._pages || []).map((p) => p.id);\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // icon of popup page\n      if (values.settings.type == \"popup\") this.icon = \"clone\";\n\n      // set label of the page\n      if (!this.label || this.label == \"?label?\") this.label = this.name;\n\n      // track which application this Page belongs to:\n      this.myAppID = values.myAppID;\n      if (!this.myAppID && this.application) {\n         this.myAppID = this.application.id;\n      }\n\n      // now properly handle our sub pages.\n      var pages = [];\n      (values.pageIDs || []).forEach((id) => {\n         var def = this.AB.definitionByID(id);\n         if (def) {\n            pages.push(this.pageNew(def));\n         } else {\n            this.AB.error(\n               `App[${this.application.name}][${this.application.id}]->Page[${this.name}][${this.id}] referenced an unknown Page[${id}]`\n            );\n         }\n      });\n      this._pages = pages;\n\n      // the default columns of ABView is 1\n      this.settings.columns = this.settings.columns || 1;\n      this.settings.gravity = this.settings.gravity || [1];\n\n      // convert from \"0\" => 0\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      return Promise.resolve()\n         .then(() => {\n            // When deleting an ABViewPage\n            // be sure to remove any of it's ABViewPages as well\n            // This cleans out any dangling ABDefinitions and cleans up the\n            // OpsPortal Permissions:\n\n            var allPageDeletes = [];\n            var allPages = this.pages();\n            this._pages = [];\n            // doing ._pages = [] prevents any of my updates when\n            // a sub-page is .destroy()ed\n\n            allPages.forEach((p) => {\n               allPageDeletes.push(p.destroy());\n            });\n            return Promise.all(allPageDeletes);\n         })\n         .then(() => {\n            var parent = this.parent || this.application;\n\n            return parent.pageRemove(this);\n         })\n         .then(() => {\n            return super.destroy();\n         });\n\n      // return new Promise((resolve, reject) => {\n      //    // verify we have been .save() before:\n      //    if (this.id) {\n      //       this.application\n      //          .viewDestroy(this)\n      //          .then(() => {\n      //             // remove the page in list\n      //             var parent = this.parent || this.application;\n      //             var remainingPages = parent.pages((p) => {\n      //                return p.id != this.id;\n      //             });\n      //             parent._pages = remainingPages;\n\n      //             resolve();\n      //          })\n      //          .catch(reject);\n      //    } else {\n      //       resolve(); // nothing to do really\n      //    }\n      // });\n   }\n\n   /**\n    * @method save()\n    * persist this instance of ABViewPage\n    * @return {Promise}\n    *         .resolve( {this} )\n    */\n   save() {\n      return Promise.resolve()\n         .then(() => {\n            // this creates our .id\n            return super.save();\n         })\n         .then(() => {\n            // now we can persist ourself in our parent\n            var parent = this.parent || this.application;\n\n            return parent.pageInsert(this);\n         })\n         .then(() => {\n            return this;\n         });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABViewPage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance() {\n      console.warn(\n         \"This version of ABViewPage hasn't updated it's refreshInstance()\",\n         this\n      );\n      return this;\n   }\n\n   ///\n   /// Pages\n   ///\n\n   /**\n    * @method pages()\n    *\n    * return an array of all the ABViewPages for this ABViewPage.\n    *\n    * @param {fn} filter\t\ta filter fn to return a set of ABViewPages that this fn\n    *\t\t\t\t\t\t\treturns true for.\n    * @param {boolean} deep\tflag to find in sub pages\n    *\n    * @return {array}\t\t\tarray of ABViewPages\n    */\n   pages(filter = () => true, deep = false) {\n      var result = [];\n\n      // find into sub-pages recursively\n      if (filter && deep) {\n         if (this._pages && this._pages.length > 0) {\n            result = this._pages.filter(filter);\n\n            if (result.length < 1) {\n               this._pages.forEach((p) => {\n                  var subPages = p.pages(filter, deep);\n                  if (subPages && subPages.length > 0) {\n                     result = subPages;\n                  }\n               });\n            }\n         }\n      }\n      // find root pages\n      else {\n         result = this._pages.filter(filter);\n      }\n\n      return result;\n   }\n\n   /**\n    * @method pageInsert()\n    *\n    * save the given ABViewPage in our ._pages array and persist the current\n    * values if they changed.\n    *\n    * @param {ABViewPage} page The instance of the page to save.\n    * @return {Promise}\n    */\n   pageInsert(page) {\n      var isIncluded = this.pages((o) => o.id === page.id).length > 0;\n      if (!isIncluded) {\n         // if not already included, then add and save the Obj definition:\n         this._pages.push(page);\n         return this.save();\n      }\n\n      // Nothing was required so return\n      return Promise.resolve();\n   }\n\n   /**\n    * @method pageNew()\n    *\n    * return an instance of a new (unsaved) ABViewPage that is tied to this\n    * ABViewPage.\n    *\n    * NOTE: this new page is not included in our this.pages until a .save()\n    * is performed on the page.\n    *\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      // make sure this is an ABViewPage description\n      values.key = ABViewDefaults.key;\n\n      // NOTE: this returns a new ABView component.\n      // when creating a new page, the 3rd param should be null, to signify\n      // the top level component.\n      var page = this.application.viewNew(values, this.application, null);\n      page.parent = this;\n      return page;\n   }\n\n   /**\n    * @method pageRemove()\n    *\n    * remove the given ABViewPage from our ._pages array and persist the current\n    * values.\n    *\n    * @param {ABViewPage} page The instance of the page to remove.\n    * @return {Promise}\n    */\n   pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n      return Promise.resolve();\n   }\n\n   /**\n    * @method urlView()\n    * return the url pointer for views in this application.\n    * @return {string}\n    */\n   urlPage() {\n      return this.urlPointer() + \"/_pages/\";\n   }\n\n   /**\n    * @method urlPointer()\n    * return the url pointer that references this view.  This url pointer\n    * should be able to be used by this.application.urlResolve() to return\n    * this view object.\n    * @return {string}\n    */\n   urlPointer() {\n      if (this.parent) {\n         return this.parent.urlPage() + this.id;\n      } else {\n         return this.application.urlPage() + this.id;\n      }\n   }\n\n   updateIcon(obj) {\n      // icon of page\n      if (obj.settings.type == \"popup\") {\n         obj.icon = \"clone\";\n      } else {\n         obj.icon = ABViewDefaults.icon;\n      }\n      return obj;\n   }\n\n   /**\n    * @method clone()\n    * clone the defintions of this ABViewPage object.\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {obj}\n    *        defs of the copied ABView\n    */\n   clone(lookUpIds, parent) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // copy\n      let result = super.clone(lookUpIds, parent);\n\n      // page's name should not be duplicate\n      result.name = null;\n\n      return result;\n   }\n\n   /**\n    * @method copy()\n    * create a new copy of this ABViewPage object. The resulting ABView should\n    * be identical in settings and all sub pages/views, but each new object\n    * is a unique view (different ids).\n    * @param {obj} lookUpIds\n    *        an { oldID : newID } lookup hash for converting ABView objects\n    *        and their setting pointers.\n    * @param {ABView*} parent\n    *        Which ABView should be connected as the parent object of this\n    *        copy.\n    * @return {Promise}\n    *        .resolved with the instance of the copied ABView\n    */\n   copy(lookUpIds, parent, options) {\n      // initial new ids of pages and components\n      if (lookUpIds == null) {\n         // create a hash of { oldID : newID } of any sub Pages and Views.\n         lookUpIds = {};\n\n         let mapNewIdFn = (currView) => {\n            if (!lookUpIds[currView.id])\n               lookUpIds[currView.id] = this.AB.uuid();\n\n            if (currView.pages) {\n               currView.pages().forEach((p) => mapNewIdFn(p));\n            }\n\n            if (currView.views) {\n               currView.views().forEach((v) => mapNewIdFn(v));\n            }\n         };\n\n         // start map new ids\n         mapNewIdFn(this);\n      }\n\n      // now continue with the default .copy()\n      return super.copy(lookUpIds, parent, options);\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewPivotPropertyComponentDefaults = {\n   dataviewID: null,\n   removeMissed: 0,\n   totalColumn: 0,\n   separateLabel: 0,\n   min: 0,\n   max: 0,\n   height: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"pivot\", // {string} unique key for this view\n   icon: \"cube\", // {string} fa-[icon] reference for this view\n   labelKey: \"Pivot\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewPivotCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewPivotPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Convert to boolean\n      this.settings.removeMissed = JSON.parse(\n         this.settings.removeMissed ||\n            ABViewPivotPropertyComponentDefaults.removeMissed\n      );\n      this.settings.totalColumn = JSON.parse(\n         this.settings.totalColumn ||\n            ABViewPivotPropertyComponentDefaults.totalColumn\n      );\n      this.settings.separateLabel = JSON.parse(\n         this.settings.separateLabel ||\n            ABViewPivotPropertyComponentDefaults.separateLabel\n      );\n      this.settings.min = JSON.parse(\n         this.settings.min || ABViewPivotPropertyComponentDefaults.min\n      );\n      this.settings.max = JSON.parse(\n         this.settings.max || ABViewPivotPropertyComponentDefaults.max\n      );\n\n      if (this.settings.structure && typeof this.settings.structure == \"string\")\n         this.settings.structure = JSON.parse(this.settings.structure);\n\n      // \"0\" -> 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewPivotPropertyComponentDefaults.height\n      );\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.views = [];\n      obj.settings = obj.settings || {};\n\n      if (this.settings.structure)\n         obj.settings.structure = JSON.stringify(this.settings.structure);\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewReportManagerPropertyComponentDefaults = {\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      text: \"\", // id of a LongText field\n      queries: \"\", // id of a json field\n   },\n   datacollectionIDs: [],\n   editMode: 0,\n   hideCommonTab: 0,\n   hideDataTab: 0,\n   hideViewTab: 0,\n};\n\nconst ABViewDefaults = {\n   key: \"reportsManager\", // {string} unique key for this view\n   icon: \"wpforms\", // {string} fa-[icon] reference for this view\n   labelKey: \"Reports Manager\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewReportsManagerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewReportManagerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewReportManagerPropertyComponentDefaults).forEach(\n         (key1) => {\n            if (\n               typeof ABViewReportManagerPropertyComponentDefaults[key1] ===\n                  \"object\" &&\n               !Array.isArray(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               )\n            ) {\n               parsedSettings[key1] = {};\n\n               Object.keys(\n                  ABViewReportManagerPropertyComponentDefaults[key1]\n               ).forEach((key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1]?.[key2] ??\n                     ABViewReportManagerPropertyComponentDefaults[key1][key2];\n               });\n\n               return;\n            }\n\n            parsedSettings[key1] =\n               this.settings[key1] ??\n               ABViewReportManagerPropertyComponentDefaults[key1];\n         }\n      );\n\n      this.settings = parsedSettings;\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var obj = super.toObj();\n\n      obj.settings = obj.settings || {};\n\n      return obj;\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewSchedulerPropertyComponentDefaults = {\n   readonly: 0,\n   dataviewID: \"\",\n   dataviewFields: {\n      name: \"\", // id of a String field\n      start: \"\", // id of a DateTime field\n      end: \"\", // id of a DateTime field\n      allDay: \"\", // id of a Checkbox field\n      repeat: \"\", // id of a String field\n      calendar: \"\", // id of a String field\n      color: \"\", // id of a String field\n      sectionID: \"\", // id of a String field\n      unitID: \"\", // id of a String field\n      notes: \"\", // id of a LongText field\n      originID: \"\", // id of a LongText field\n   },\n   calendarDataviewID: \"\",\n   calendarDataviewFields: {\n      title: \"\", // id of a String field\n      color: \"\", // id of a String field\n      active: \"\", // id of a Checkbox field\n   },\n   timeline: {\n      day: 1,\n      week: 1,\n      month: 1,\n      year: 1,\n      agenda: 1,\n      timeline: 1,\n      units: 1,\n   },\n   timelineSectionList: \"\",\n   unitList: \"\",\n   export: {\n      excel: 0,\n      csv: 0,\n      pdf: 0,\n   },\n};\n\nconst ABViewDefaults = {\n   key: \"scheduler\",\n   // {string}\n   // unique key for this view\n\n   icon: \"calendar\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Scheduler\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewSchedulerCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewSchedulerPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"scheduler\"]);\n\n      const obj = super.toObj();\n\n      obj.views = [];\n\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n      this.settings.dataviewFields = this.settings.dataviewFields || {};\n      this.settings.calendarDataviewFields =\n         this.settings.calendarDataviewFields || {};\n      this.settings.timeline = this.settings.timeline || {};\n      this.settings.export = this.settings.export || {};\n\n      const parsedSettings = {};\n\n      Object.keys(ABViewSchedulerPropertyComponentDefaults).forEach((key1) => {\n         if (\n            typeof ABViewSchedulerPropertyComponentDefaults[key1] === \"object\"\n         ) {\n            parsedSettings[key1] = {};\n\n            Object.keys(ABViewSchedulerPropertyComponentDefaults[key1]).forEach(\n               (key2) => {\n                  parsedSettings[key1][key2] =\n                     this.settings[key1][key2] ??\n                     ABViewSchedulerPropertyComponentDefaults[key1][key2];\n               }\n            );\n\n            return;\n         }\n\n         parsedSettings[key1] =\n            this.settings[key1] ??\n            ABViewSchedulerPropertyComponentDefaults[key1];\n      });\n\n      this.settings = parsedSettings;\n\n      // if this is being instantiated on a read from the Property UI,\n      this.scheduler =\n         values.scheduler || ABViewSchedulerPropertyComponentDefaults.scheduler;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"scheduler\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\nconst ABViewContainer = require(\"../../platform/views/ABViewContainer\");\n\nconst ABViewTabPropertyComponentDefaults = {\n   height: 0,\n   minWidth: 0,\n   stackTabs: 0, // use sidebar view instead of tabview\n   darkTheme: 0, // set dark theme css or not\n   sidebarWidth: 200, // width of sidebar menu when stacking tabs\n   sidebarPos: \"left\", // the default position of sidebar\n   iconOnTop: 0, // do you want to put the icon above the text label?\n   hintID: null, // store the ID of a webix hint tutorial for this view\n};\n\nconst ABViewTabDefaults = {\n   key: \"tab\", // {string} unique key for this view\n   icon: \"window-maximize\", // {string} fa-[icon] reference for this view\n   labelKey: \"Tab\", // {string} the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTabCore extends ABViewWidget {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewTabDefaults);\n   }\n\n   static common() {\n      return ABViewTabDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTabPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(this.settings.height);\n      this.settings.minWidth = parseInt(this.settings.minWidth || 0);\n      this.settings.stackTabs = parseInt(this.settings.stackTabs);\n      this.settings.darkTheme = parseInt(this.settings.darkTheme);\n      this.settings.sidebarWidth = parseInt(this.settings.sidebarWidth);\n      // this.settings.sidebarPos = this.settings.sidebarPos;\n      this.settings.iconOnTop = parseInt(this.settings.iconOnTop);\n   }\n\n   addTab(tabName, tabIcon) {\n      return this.application\n         .viewNew(\n            {\n               key: ABViewContainer.common().key,\n               label: tabName,\n               tabicon: tabIcon,\n            },\n            this.application,\n            this\n         )\n         .save();\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n};\n","const ABViewWidget = require(\"../../platform/views/ABViewWidget\");\n\nconst ABViewTextPropertyComponentDefaults = {\n   text: \"\",\n   // {string}\n   // A multilingual text template that is used to display a given set of\n   // values.\n\n   height: 0,\n   // {integer}\n   // The default height of this widget.\n\n   dataviewID: null,\n   // {uuid}\n   // The {ABDataCollection.id} of the datacollection this ABViewText is\n   // pulling data from.\n   // In most usage situations this ABView is tied to the data in an\n   // ABDataCollection.  However, it is possible for an ABObject to be\n   // directly assigned to the ABView, and that will be used instead.\n};\n\nconst ABViewDefaults = {\n   key: \"text\",\n   // {string}\n   // unique key for this view\n\n   icon: \"font\",\n   // {string}\n   // fa-[icon] reference for this view\n\n   labelKey: \"Text\",\n   // {string}\n   // the multilingual label key for the class label\n};\n\nmodule.exports = class ABViewTextCore extends ABViewWidget {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n\n      this._object = null;\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABViewTextPropertyComponentDefaults;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABViewLabel instance\n    * into the values needed for saving.\n    *\n    * @return {json}\n    */\n   toObj() {\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.unTranslate(this, this, [\"text\"]);\n\n      var obj = super.toObj();\n      obj.views = [];\n      return obj;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings = this.settings || {};\n\n      // convert from \"0\" => 0\n      this.settings.height = parseInt(\n         this.settings.height || ABViewTextPropertyComponentDefaults.height\n      );\n\n      // if this is being instantiated on a read from the Property UI,\n      this.text = values.text || ABViewTextPropertyComponentDefaults.text;\n\n      // NOTE: ABView auto translates/untranslates \"label\"\n      // add in any additional fields here:\n      this.translate(this, this, [\"text\"]);\n   }\n\n   /**\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    */\n   componentList() {\n      return [];\n   }\n\n   /**\n    * @property datacollection\n    * return ABDatacollection of this form\n    *\n    * @return {ABDatacollection}\n    */\n   get datacollection() {\n      if (this.parent?.key == \"dataview\") {\n         return this.AB.datacollectionByID(this.parent.settings.dataviewID);\n      } else {\n         return this.AB.datacollectionByID(this.settings.dataviewID);\n      }\n   }\n\n   fieldKey(field) {\n      let label = field.label || \"\";\n      label = label.replace(/\\(/g, \"\\\\(\");\n      label = label.replace(/\\)/g, \"\\\\)\");\n      return label;\n   }\n\n   displayText(val, componentID) {\n      var result = this.text;\n\n      let clearTemplateValue = (result) => {\n         return result.replace(/{(.*?)}/g, \"\");\n      };\n\n      var dv = this.datacollection;\n      // if (!dv) return clearTemplateValue(result);\n\n      var object = dv?.datasource ?? this._object;\n      if (!object) return clearTemplateValue(result);\n\n      const rowData = val || dv.getCursor() || {};\n\n      object.fields().forEach((f) => {\n         // add \\\\ in front of the regular expression special charactors\n         // let label = f.label || \"\";\n         // label = label.replace(/\\(/g, \"\\\\(\");\n         // label = label.replace(/\\)/g, \"\\\\)\");\n         let label = this.fieldKey(f);\n\n         var template = new RegExp(\"{\" + label + \"}\", \"g\");\n\n         // IDEA: I'd like to keep all the image url logic INSIDE the ABFieldImage\n         // object.  Is there some way we can simply call: f.imageTemplate(rowData)\n         // and parse the results for the url to display here?\n\n         var data = f.format(rowData);\n         if (f.key == \"image\") {\n            var fData = data;\n            data = f.urlImage(fData);\n\n            // Question: should we change f.urlImage() to return the defaultImageUrl\n            // if fData is \"\" and .useDefaultImage = true?\n\n            if (\n               !fData &&\n               f.settings.defaultImageUrl &&\n               f.settings.useDefaultImage\n            ) {\n               data = f.urlImage(f.settings.defaultImageUrl);\n\n               ////\n               //// James:  Revisit this and make sure we are handling things ok now.\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n               // } else if (\n               //    fData != \"\" &&\n               //    result.indexOf(\"onload\") == -1 &&\n               //    componentID\n               // ) {\n               // result = result.replace(\n               //    \"img\",\n               //    'img onload=\\'AD.comm.hub.publish(\"component.adjust\", {\"containerID\": \"' +\n               //       componentID +\n               //       \"\\\"});' \"\n               // );\n            } else {\n               ////\n               //// James: It looks like this routine assumes the this.text template will\n               //// only have 1 <img> tag in it.  Is that necessarilly true?\n               ////\n               //// If NOT, then we need to rethink this next line:\n\n               result = result.replace(\n                  \"img\",\n                  \"img onerror='this.parentNode.removeChild(this);' \"\n               );\n            }\n         }\n\n         result = result.replace(template, data);\n      });\n\n      // Support {uuid} tag in tempalte\n      result = result.replace(/{PK}/g, rowData[object.PK()]);\n\n      return result;\n   }\n\n   objectLoad(object) {\n      this._object = object;\n   }\n};\n","const ABView = require(\"../../platform/views/ABView\");\n\nconst ABViewDefaults = {\n   key: \"viewwidget\", // {string} unique key for this view\n   icon: \"circle-o-notch \", // {string} fa-[icon] reference for this view\n   labelKey: \"ab.components.widget\", // {string} the multilingual label key for the class label\n};\n\nconst ABPropertyComponentDefaults = {\n   columnSpan: 1,\n   rowSpan: 1,\n};\n\nmodule.exports = class ABViewWidgetCore extends ABView {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    * @param {obj} defaultValues special sub class defined default values.\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues || ABViewDefaults);\n   }\n\n   static common() {\n      return ABViewDefaults;\n   }\n\n   static defaultValues() {\n      return ABPropertyComponentDefaults;\n   }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // convert from \"0\" => 0\n      this.settings.columnSpan = parseInt(\n         this.settings.columnSpan || ABPropertyComponentDefaults.columnSpan\n      );\n      this.settings.rowSpan = parseInt(\n         this.settings.rowSpan || ABPropertyComponentDefaults.rowSpan\n      );\n   }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationCore = require(\"../core/ABApplicationCore.js\");\n\nconst ABViewPage = require(\"./views/ABViewPage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplication extends ABApplicationCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // now listen for any updates to our managed objects\n      this._handler_page_updated = (definition) => {\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === definition.id) {\n               newPages.push(pg.refreshInstance(this));\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         // var currPage = this._pages.find((p) => p.id === definition.id);\n         // if (currPage) {\n         //    this._pages = this._pages.filter((p) => p.id != currPage.id);\n         //    this._pages.push(currPage.refreshInstance());\n         // }\n      };\n      this._pages.forEach((p) => {\n         p.on(\"definition.updated\", this._handler_page_updated);\n      });\n   }\n\n   static applications(/*fn = () => true*/) {\n      console.error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      return null;\n   }\n   static applicationForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.applicationForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   static definitionForID(/*id*/) {\n      var errDepreciated = new Error(\n         \"ABApplication.definitionForID(): Depreciated. Who is doing this?\"\n      );\n      console.error(errDepreciated);\n      return null;\n   }\n\n   areaKey() {\n      return this.AB.kebabCase(`ab-${this.name}`);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABApplication.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.applicationByID(this.id);\n\n      // remove my listeners\n      this._pages.forEach((p) => {\n         p.removeListener(\"definition.updated\", this._handler_page_updated);\n      });\n\n      return newObj;\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method _listInsert()\n    * save the given entity into our desired list:\n    * @param {varid} entity\n    * @param {string} key\n    *        the key of the list we are managing\n    * @return {Promise}\n    */\n   async _listInsert(entity, key) {\n      var isIncluded = this[key].indexOf(entity.id) != -1;\n      if (!isIncluded) {\n         this[key].push(entity.id);\n         await this.save();\n      }\n   }\n\n   async _listRemove(entity, key) {\n      var begLen = this[key].length;\n      this[key] = this[key].filter((id) => {\n         return id != entity.id;\n      });\n      // if there was a change then save this.\n      if (begLen != this[key].length) {\n         await this.save();\n      }\n   }\n\n   /**\n    * @method datacollectionInsert()\n    * persist the current ABDataCollection in our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionInsert(dc) {\n      return this._listInsert(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method datacollectionRemove()\n    * remove the given ABDataCollection from our list of .datacollectionIDs.\n    * @param {ABDataCollection} dc\n    * @return {Promise}\n    */\n   datacollectionRemove(dc) {\n      return this._listRemove(dc, \"datacollectionIDs\");\n   }\n\n   /**\n    * @method objectInsert()\n    * persist the current ABObject in our list of .objectIDs.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectInsert(object) {\n      return this._listInsert(object, \"objectIDs\");\n   }\n\n   /**\n    * @method objectRemove()\n    * remove the current ABObject from our list of .objectIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObject} object\n    * @return {Promise}\n    */\n   objectRemove(object) {\n      return this._listRemove(object, \"objectIDs\");\n   }\n\n   /**\n    * @method processInsert()\n    * persist the current ABProcess in our list of .processIDs.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processInsert(process) {\n      return this._listInsert(process, \"processIDs\");\n   }\n\n   /**\n    * @method processRemove()\n    * remove the current ABProcess from our list of .processIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABProcess} process\n    * @return {Promise}\n    */\n   processRemove(process) {\n      return this._listRemove(process, \"processIDs\");\n   }\n\n   /**\n    * @method queryInsert()\n    * persist the current ABObjectQuery in our list of .queryIDs.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryInsert(query) {\n      return this._listInsert(query, \"queryIDs\");\n   }\n\n   /**\n    * @method queryRemove()\n    * remove the current ABObjectQuery from our list of .queryIDs.\n    * NOTE: this method persists the changes to the server.\n    * @param {ABObjectQuery} query\n    * @return {Promise}\n    */\n   queryRemove(query) {\n      return this._listRemove(query, \"queryIDs\");\n   }\n\n   /**\n    * @method exportIDs()\n    * export any relevant .ids for the necessary operation of this application.\n    * @param {array} ids\n    *         the array of ids to insert any relevant .ids into\n    */\n   exportIDs(ids) {\n      // make sure we don't get into an infinite loop:\n      if (ids.indexOf(this.id) > -1) return;\n\n      ids.push(this.id);\n\n      // start with Objects:\n      this.objectsIncluded().forEach((o) => {\n         o.exportIDs(ids);\n      });\n\n      // get all Hints\n      this.hintsIncluded().forEach((h) => {\n         h.exportIDs(ids);\n      });\n\n      // Queries\n      this.queriesIncluded().forEach((q) => {\n         q.exportIDs(ids);\n      });\n\n      // Datacollections\n      // NOTE: currently the server doesn't make instances of DataCollections\n      // so we manually parse the related info here:\n      this.datacollectionIDs.forEach((dID) => {\n         if (ids.indexOf(dID) > -1) return;\n\n         var def = this.AB.definitionByID(dID);\n         if (def) {\n            ids.push(dID);\n            if (def.settings.datasourceID) {\n               var object = this.AB.objectByID(def.settings.datasourceID);\n               if (object) {\n                  object.exportIDs(ids);\n               }\n            }\n         }\n      });\n\n      // Processes\n      this.processes().forEach((p) => {\n         p.exportIDs(ids);\n      });\n\n      // Pages\n      // NOTE: currently the server doesn't make instances of ABViews\n      // so we manually parse the object data here:\n      var parseView = (view) => {\n         if (ids.indexOf(view.id) > -1) return;\n         ids.push(view.id);\n         (view.pageIDs || []).forEach((pid) => {\n            var pdef = this.AB.definitionByID(pid);\n            if (pdef) {\n               parseView(pdef);\n            }\n         });\n\n         (view.viewIDs || []).forEach((vid) => {\n            var vdef = this.AB.definitionByID(vid);\n            if (vdef) {\n               parseView(vdef);\n            }\n         });\n      };\n\n      var pageIDs = this._pages.map((p) => p.id);\n      (pageIDs || []).forEach((pid) => {\n         var pdef = this.AB.definitionByID(pid);\n         if (pdef) {\n            parseView(pdef);\n         }\n      });\n\n      // return only unique entries:\n      ids = this.AB.uniq(ids);\n   }\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPage\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPage}\n    */\n   pageNew(values) {\n      return new ABViewPage(values, this);\n   }\n\n   /**\n    * @method pageInsert()\n    * Insert a new ABViewPage into this Application.\n    * @param {ABViewPage} page\n    *        The instance of the page to save.\n    * @return {Promise}\n    */\n   async pageInsert(page) {\n      // var isIncluded = this.pageByID(page.id);\n      var isIncluded = this._pages.filter((p) => p.id == page.id)[0];\n      if (!isIncluded) {\n         this._pages.push(page);\n         // Save our own Info:\n         return this.save();\n      }\n   }\n\n   /**\n    * @method pageRemove()\n    * remove the current ABViewPage from our list of pages.\n    * @param {ABViewPage} page\n    * @return {Promise}\n    */\n   async pageRemove(page) {\n      var origLen = this._pages.length;\n      this._pages = this.pages(function (p) {\n         return p.id != page.id;\n      });\n\n      if (this._pages.length < origLen) {\n         return this.save();\n      }\n\n      // if we get here, then nothing changed so nothing to do.\n   }\n\n   save() {\n      // if someone just changed the name of our ABApplication, reflect that\n      // in our Def.Name\n      if (this.name != this.label) {\n         this.name = this.label;\n      }\n      return super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      //\n      // check for valid object references:\n      //\n      var checks = {\n         objectIDs: \"object\",\n         queryIDs: \"query\",\n         datacollectionIDs: \"datacollection\",\n      };\n\n      Object.keys(checks).forEach((k) => {\n         this[k].forEach((id) => {\n            var def = this.AB.definitionByID(id);\n            if (!def) {\n               this.warningsMessage(` is referencing a missing ${checks[k]}`, {\n                  appID: this.id,\n                  id,\n               });\n            }\n         });\n      });\n\n      //\n      // Make sure there is some way to access this Application:\n      //\n      if (this.roleAccess.length == 0 && !this.isAccessManaged) {\n         this.warningsMessage(\" has no Role assigned, and is unaccessible.\");\n      }\n\n      // do our Role references exist?\n      var allRoles = this.AB.Account.rolesAll().map((r) => r.id);\n      this.roleAccess.forEach((r) => {\n         if (allRoles.indexOf(r) == -1) {\n            this.warningsMessage(\n               `Specified Role Access [${r}] does not exist in this system`,\n               { role: r }\n            );\n         }\n      });\n\n      // Make sure all our Pages perform a new warningsEval();\n      this.pages().forEach((p) => {\n         p.warningsEval();\n      });\n   }\n\n   warningsAll() {\n      var warnings = [].concat(this._warnings);\n      [\n         \"objectsIncluded\",\n         \"queriesIncluded\",\n         \"datacollectionsIncluded\",\n         \"processes\",\n         \"pages\",\n         // \"views\", // <-- these are gathered in \"pages\"\n      ].forEach((k) => {\n         this[k]().forEach((o) => {\n            warnings = warnings.concat(o.warningsAll());\n         });\n      });\n\n      return warnings;\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Application[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   /**\n    * @method mobileAppNew()\n    *\n    * return an instance of a new (unsaved) ABMobileApp that is tied to this\n    * ABApplication.\n    *\n    * @return {ABMobileApp}\n    */\n   // mobileAppNew(values) {\n   //    return new ABMobileApp(values, this);\n   // }\n};\n","const _ = require(\"lodash\");\n\n// prettier-ignore\nconst ABApplicationMobileCore = require(\"../core/ABApplicationMobileCore.js\");\n\nconst ABViewPageMobile = require(\"./mobile/ABMobilePage\");\nconst ABViewManager = require(\"./ABViewManager\");\n\nmodule.exports = class ABClassApplicationMobile extends (\n   ABApplicationMobileCore\n) {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   ///\n   /// Definition\n   ///\n\n   /**\n    * @method pageNew()\n    * return a new instance of an ABViewPageMobile\n    * @param values\n    *        The initial settings for the page.\n    * @return {ABViewPageMobile}\n    */\n   pageNew(values) {\n      const newPage = new ABViewPageMobile(values, this);\n      newPage.parent = this;\n      return newPage;\n   }\n\n   async setPageDefault(page) {\n      if (this.pageDefault != page.id) {\n         let oldPage = this.pageByID(this.pageDefault, true);\n         if (oldPage) {\n            oldPage.defaultPage = 0;\n            await oldPage.save();\n         }\n\n         this.pageDefault = page.id;\n         await this.save();\n      }\n   }\n};\n","const ABEmitter = require(\"./ABEmitter\");\n\nconst CustomComponentManager = require(\"../../webix_custom_components/customComponentManager\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABComponent extends ABEmitter {\n   /**\n    * @param {object} App ?what is this?\n    * @param {string} idBase Identifier for this component\n    * @param {import(\"../ABFactory\").default} AB ABFactory instance\n    */\n   constructor(App, idBase, AB) {\n      super();\n\n      this.AB = AB;\n      // Transition Code:\n      // make sure we have an this.AB\n      if (!AB && App?.AB) {\n         this.AB = App.AB;\n      }\n\n      if (!App) {\n         if (this.AB._App) {\n            App = this.AB._App;\n         } else {\n            App = {\n               uuid: this.AB.Webix.uid(),\n\n               /*\n                * AB\n                * the {ABFactory} for our interface.\n                */\n               AB: this.AB,\n\n               /*\n                * actions:\n                * a hash of exposed application methods that are shared among our\n                * components, so one component can invoke an action that updates\n                * another component.\n                */\n               actions: {},\n\n               /*\n                * config\n                * webix configuration settings for our current browser\n                */\n               config: this.AB.UISettings.config(),\n\n               /*\n                * custom\n                * a collection of custom components for this App Instance.\n                */\n               custom: null,\n\n               /*\n                * Icons\n                * this will provide you with the list of avaialbe font awesome 4.7.0 icons to use in interface building\n                */\n               icons: this.AB.UISettings.icons,\n\n               Label: L,\n\n               /*\n                * labels\n                * a collection of labels that are common for the Application.\n                */\n               labels: {\n                  add: L(\"Add\"),\n                  create: L(\"Create\"),\n                  delete: L(\"Delete\"),\n                  edit: L(\"Edit\"),\n                  export: L(\"Export\"),\n                  formName: L(\"Name\"),\n                  import: L(\"Import\"),\n                  rename: L(\"Rename\"),\n                  ok: L(\"Ok\"),\n\n                  cancel: L(\"Cancel\"),\n                  save: L(\"Save\"),\n\n                  yes: L(\"Yes\"),\n                  no: L(\"No\"),\n\n                  none: L(\"None\"),\n                  close: L(\"Close\"),\n\n                  default: L(\"Default\"),\n                  defaultPlaceholder: L(\"Enter default value\"),\n\n                  disable: L(\"Disable\"),\n\n                  required: L(\"Required\"),\n                  unique: L(\"Unique\"),\n\n                  invalidMessage: {\n                     required: L(\"This field is required\"),\n                  },\n\n                  createErrorMessage: L(\"System could not create <b>{0}</b>.\"),\n                  createSuccessMessage: L(\"<b>{0}</b> is created.\"),\n\n                  updateErrorMessage: L(\"System could not update <b>{0}</b>.\"),\n                  updateSucessMessage: L(\"<b>{0}</b> is updated.\"),\n\n                  deleteErrorMessage: L(\"System could not delete <b>{0}</b>.\"),\n                  deleteSuccessMessage: L(\"<b>{0}</b> is deleted.\"),\n\n                  renameErrorMessage: L(\"System could not rename <b>{0}</b>.\"),\n                  renameSuccessMessage: L(\"<b>{0}</b> is renamed.\"),\n\n                  // Data Field  common Property labels:\n                  dataFieldHeaderLabel: L(\"Section Title\"),\n                  dataFieldHeaderLabelPlaceholder: L(\"Section Name\"),\n\n                  dataFieldLabel: L(\"Label\"),\n                  dataFieldLabelPlaceholder: L(\"Label\"),\n\n                  dataFieldColumnName: L(\"Field Name\"),\n                  dataFieldColumnNamePlaceholder: L(\"Database field name\"),\n\n                  dataFieldShowIcon: L(\"show icon?\"),\n\n                  componentDropZone: L(\"add widgets here\"),\n               },\n\n               /*\n                * unique()\n                * A function that returns a globally unique Key.\n                * @param {string} key   The key to modify and return.\n                * @return {string}\n                */\n               unique: function (key) {\n                  return `${key}${this.uuid}`;\n               },\n            };\n            this.AB._App = App;\n         }\n      }\n\n      if (!App.custom) {\n         if (!this.AB.custom) {\n            var componentManager = new CustomComponentManager();\n            componentManager.initComponents(App);\n         } else {\n            App.custom = this.AB.custom;\n         }\n      }\n\n      this.App = App;\n\n      this.idBase = idBase || \"?idbase?\";\n   }\n\n   actions(_actions) {\n      console.error(\"!!! REFACTOR out .actions()\");\n      if (_actions) {\n         for (var a in _actions) {\n            this.App.actions[a] = _actions[a];\n         }\n      }\n   }\n\n   Label() {\n      return (...params) => {\n         // console.error(\"!! App.label() depreciated.\");\n         return this.AB.Multilingual.label(...params);\n      };\n   }\n\n   unique(key) {\n      return this.App.unique(`${this.idBase}_${key}`);\n   }\n};\n","const ABObjectQuery = require(\"./ABObjectQuery\");\nconst ABDataCollectionCore = require(\"../core/ABDataCollectionCore\");\n\nmodule.exports = class ABDataCollection extends ABDataCollectionCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n      this.setMaxListeners(0);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABDataCollection with it's parent\n    *\n    *\n    * @return {Promise}\n    *       .resolve( {this} )\n    */\n   async save() {\n      if (!this.id) {\n         this.label = this.label || this.name;\n      }\n      await super.save();\n      this.AB.emit(\"ab.datacollection.update\", {\n         datacollectionId: this.id,\n      });\n      return this;\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n      var L = this.AB.Label();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.datacollections((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Cursor\n   ///\n\n   /**\n    * currentUserUsername\n    * must return the proper value for the current user that would match a \"user\" field\n    * in an object.\n    * This is platform dependent, so must be implemented by a child object.\n    * @return {string}\n    */\n   currentUserUsername() {\n      return this.AB.Account.username();\n   }\n\n   ///\n   /// Data\n   ///\n\n   init() {\n      // prevent initialize many times\n      if (this.initialized) return;\n      // this.initialized = true;  // <<---- DO NOT SET THIS HERE\n\n      super.init();\n\n      //// Now connect our platform hub to our Object Triggers:\n\n      // events\n      [\n         \"ab.datacollection.create\",\n         \"ab.datacollection.update\",\n         \"ab.datacollection.stale\",\n         \"ab.datacollection.delete\",\n      ].forEach((key) => {\n         this.AB.on(key, (data) => {\n            this.emit(key, data);\n         });\n      });\n\n      this.bindParentDc();\n   }\n\n   bindParentDc() {\n      // if we pass the master datacollection and the field it is linked to\n      // we want to bind it with that field as second param so dataFeed is\n      // used on the slave datacollection\n      let dataCollectionLink = this.datacollectionLink;\n      let fieldLink = this.fieldLink;\n      if (!this.settings.loadAll && dataCollectionLink && fieldLink) {\n         let dc = this.__dataCollection;\n         // the second param is the field id we bind the data to the master with\n         dc.bind(dataCollectionLink.__dataCollection, fieldLink.id);\n         // defining dataFeed allows us to query the database when the table is scrolled\n         dc.define(\"dataFeed\", (value, params) => {\n            let cursorUpdated = false;\n            // check if the current cursor was updated\n            if (dc.__prevLinkDcCursor != value) {\n               cursorUpdated = true;\n            }\n\n            dc.__prevLinkDcCursor = this?.datacollectionLink?.getCursor()?.id;\n\n            // NOTE: If no cursor of the parent DC, then show empty list\n            if (\n               this.datacollectionLink &&\n               value == null &&\n               dc.__prevLinkDcCursor == null\n            ) {\n               this.clearAll();\n            }\n            // this is the same item that was already bound...don't reload data\n            else if (cursorUpdated) {\n               // now that we have the modified wheres the dataCollections wheres\n               // need to be modified for subsequent loads on scroll so lets set them\n               // this.reloadWheres(wheres);\n\n               // reload data\n               this.reloadData(0, 20);\n            }\n         });\n      }\n   }\n\n   loadData(start, limit = 20) {\n      return super.loadData(start, limit).catch((err) => {\n         // hideProgressOfComponents() is a platform specific action.\n         this.hideProgressOfComponents();\n         this.emit(\"loadData\", {});\n\n         // propagate the error here:\n         if (err) {\n            throw err;\n         }\n      });\n   }\n\n   /**\n    * processIncomingData()\n    * is called from loadData() once the data is returned.  This method\n    * allows the platform to make adjustments to the data based upon any\n    * platform defined criteria.\n    * @param {obj} data  the data as it was returned from the Server\n    *        which should be in following format:\n    *        {\n    *          status: \"success\", // or \"error\"\n    *          data:[ {ABObjectData}, {ABObjectData}, ...]\n    *        }\n    */\n   processIncomingData(data) {\n      // Web Platform:\n\n      // data check:\n      if (data.data && !Array.isArray(data.data)) {\n         data.data = [data.data];\n      }\n\n      // standardize the heights\n\n      /*\n       // In v2: we move the row height calculation into the Interface designer.\n       //\n\n      // calculate default value of $height of rows\n      let obj = this.datasource;\n      let defaultHeight = 0;\n      let minHeight = 0;\n      let imageFields = obj.fields((f) => f.key == \"image\");\n      let hiddenFields = obj.objectWorkspace.hiddenFields;\n      imageFields.forEach(function (f) {\n         if (hiddenFields.indexOf(f.columnName) == -1) {\n            if (\n               parseInt(f.settings.useHeight) == 1 &&\n               parseInt(f.settings.imageHeight) > minHeight\n            ) {\n               minHeight = parseInt(f.settings.imageHeight) + 20;\n            } else {\n               minHeight = 100;\n            }\n         }\n      });\n      if (minHeight > 0) {\n         defaultHeight = minHeight;\n      }\n\n      (data.data || []).forEach((d) => {\n         // define $height of rows to render in webix elements\n         if (\n            d.properties != null &&\n            d.properties.height != \"undefined\" &&\n            parseInt(d.properties.height) > 0\n         ) {\n            d.$height = parseInt(d.properties.height);\n         } else if (defaultHeight > 0) {\n            d.$height = defaultHeight;\n         }\n      });\n      */\n\n      return super.processIncomingData(data).then(() => {\n         // Web Platform:\n         // when that is done:\n         this.hideProgressOfComponents();\n      });\n   }\n\n   ///\n   /// Components\n   ///\n\n   /**\n    * @method attachFlexlayout\n    *\n    *\n    * @param {Object} component - a webix flexlayout element instance\n    */\n   attachFlexlayout(component) {\n      var dc = this.__dataCollection;\n\n      // prevent attach many times\n      if (this.__flexComponentIds.indexOf(component.config.id) > -1) {\n         return;\n      } else {\n         // keep component id to an array\n         this.__flexComponentIds.push(component.config.id);\n      }\n   }\n\n   /**\n    * @method bind\n    *\n    *\n    * @param {Object} component - a webix element instance\n    */\n   bind(component) {\n      var dc = this.__dataCollection;\n\n      // prevent bind many times\n      // keep component id to an array\n      if (this.__bindComponentIds.indexOf(component.config.id) === -1)\n         this.__bindComponentIds.push(component.config.id);\n\n      if ($$(component.config.id).data?.find?.({}).length > 0) return;\n\n      if (\n         component.config.view == \"datatable\" ||\n         component.config.view == \"dataview\" ||\n         component.config.view == \"treetable\" ||\n         component.config.view == \"kanban\"\n      ) {\n         if (dc) {\n            var items = dc.count();\n            if (\n               items == 0 &&\n               (this._dataStatus == this.dataStatusFlag.notInitial ||\n                  this._dataStatus == this.dataStatusFlag.initializing) &&\n               component.showProgress\n            ) {\n               component.showProgress({ type: \"icon\" });\n            }\n\n            component.define(\"datafetch\", 20);\n            component.define(\"datathrottle\", 500);\n\n            // initial data of treetable\n            if (component.config.view == \"treetable\") {\n               if (\n                  this.datasource &&\n                  this.datasource.isGroup &&\n                  this.__treeCollection\n               ) {\n                  component.define(\"data\", this.__treeCollection);\n                  component.refresh();\n               } else {\n                  // NOTE: tree data does not support dynamic loading when scrolling\n                  // https://forum.webix.com/discussion/3078/dynamic-loading-in-treetable\n                  component.define(\"data\", []);\n                  component.parse(dc.find({}));\n               }\n            } else {\n               component.data.sync(dc);\n            }\n\n            // Implement .onDataRequest for paging loading\n            if (!this.settings.loadAll) {\n               component.___AD = component.___AD || {};\n               // if (component.___AD.onDataRequestEvent) component.detachEvent(component.___AD.onDataRequestEvent);\n               if (!component.___AD.onDataRequestEvent) {\n                  component.___AD.onDataRequestEvent = component.attachEvent(\n                     \"onDataRequest\",\n                     (start, count) => {\n                        if (component.showProgress)\n                           component.showProgress({ type: \"icon\" });\n\n                        // load more data to the data collection\n                        dc.loadNext(count, start);\n\n                        return false; // <-- prevent the default \"onDataRequest\"\n                     }\n                  );\n               }\n\n               // // NOTE : treetable should use .parse or TreeCollection\n               // // https://forum.webix.com/discussion/1694/tree-and-treetable-using-data-from-datacollection\n               // if (\n               //    component.config.view == \"treetable\" &&\n               //    !this.datasource.isGroup\n               // ) {\n               //    component.___AD = component.___AD || {};\n               //    if (!component.___AD.onDcLoadData) {\n               //       component.___AD.onDcLoadData = () => {\n               //          component.parse(dc.find({}));\n               //       };\n\n               //       this.on(\"loadData\", component.___AD.onDcLoadData);\n               //    }\n               // }\n            }\n         } else {\n            component.data.unsync();\n         }\n      } else if (component.bind) {\n         if (dc) {\n            // Do I need to check if there is any data in the collection before binding?\n            component.bind(dc);\n         } else {\n            component.unbind();\n         }\n\n         if (component.refresh) component.refresh();\n      }\n   }\n\n   unbind(component) {\n      if (!component) return;\n\n      component.detachEvent(\"onDataRequest\");\n      if (component.___AD) {\n         if (component.___AD.onDataRequestEvent)\n            delete component.___AD.onDataRequestEvent;\n\n         if (component.___AD.onDcLoadData) {\n            if (this.off) this.off(\"loadData\", component.___AD.onDcLoadData);\n            delete component.___AD.onDcLoadData;\n         }\n      }\n\n      if (component.data && component.data.unsync) {\n         component.data.unsync();\n         component.define(\"data\", []);\n      }\n\n      if (component.unbind) component.unbind();\n\n      if (component.refresh) component.refresh();\n\n      // remove from array\n      this.__bindComponentIds = (this.__bindComponentIds || []).filter(\n         (id) => id != component.config.id\n      );\n   }\n\n   hideProgressOfComponents() {\n      this.__bindComponentIds.forEach((comId) => {\n         if ($$(comId) && $$(comId).hideProgress) $$(comId).hideProgress();\n      });\n   }\n\n   /** Private methods */\n\n   /**\n    * @method _dataCollectionNew\n    * Get webix.DataCollection\n    *\n    * @return {webix.DataCollection}\n    *\n    * @param {Array} data - initial data\n    */\n   _dataCollectionNew(data) {\n      // get a webix data collection\n      let dc = new webix.DataCollection({\n         data: data || [],\n      });\n\n      this._extendCollection(dc);\n\n      return dc;\n   }\n\n   /**\n    * @method _treeCollectionNew\n    * Get webix.TreeCollection\n    *\n    * @return {webix.TreeCollection}\n    *\n    */\n   _treeCollectionNew() {\n      // get a webix data collection\n      let treeStore = new webix.TreeCollection();\n\n      this._extendCollection(treeStore);\n\n      return treeStore;\n   }\n\n   _extendCollection(dataStore) {\n      // Apply this data collection to support multi-selection\n      // https://docs.webix.com/api__refs__selectionmodel.html\n      webix.extend(dataStore, webix.SelectionModel);\n\n      dataStore.___AD = dataStore.___AD || {};\n\n      // Implement .onDataRequest for paging loading\n      if (!this.settings.loadAll) {\n         if (!dataStore.___AD.onDataRequestEvent) {\n            dataStore.___AD.onDataRequestEvent = dataStore.attachEvent(\n               \"onDataRequest\",\n               (start, count) => {\n                  if (start < 0) start = 0;\n\n                  // load more data to the data collection\n                  this.loadData(start, count);\n\n                  return false; // <-- prevent the default \"onDataRequest\"\n               }\n            );\n         }\n\n         if (!dataStore.___AD.onAfterLoadEvent) {\n            dataStore.___AD.onAfterLoadEvent = dataStore.attachEvent(\n               \"onAfterLoad\",\n               () => {\n                  this.emit(\"loadData\", {});\n               }\n            );\n         }\n      }\n\n      // override unused functions of selection model\n      dataStore.addCss = function () {};\n      dataStore.removeCss = function () {};\n      dataStore.render = function () {};\n\n      if (!dataStore.___AD.onAfterLoad) {\n         dataStore.___AD.onAfterLoad = dataStore.attachEvent(\n            \"onAfterLoad\",\n            () => {\n               this.hideProgressOfComponents();\n            }\n         );\n      }\n   }\n\n   parseTreeCollection(data = {}) {\n      if (\n         !(this.__datasource instanceof ABObjectQuery) ||\n         !this.__datasource.isGroup ||\n         !this.__treeCollection\n      )\n         return;\n\n      let addRowToTree = (join = {}, parentAlias = null) => {\n         let alias = join.alias;\n\n         (data.data || []).forEach((row) => {\n            let dataId = row[`${alias}.uuid`] || row[`${alias}.id`];\n            if (!dataId) return;\n\n            // find parent nodes\n            let parentItemIds = [];\n            let parentId =\n               row[`${parentAlias}.uuid`] || row[`${parentAlias}.id`];\n            if (parentId) {\n               parentItemIds = this.__treeCollection\n                  .find(\n                     (item) =>\n                        item._alias == parentAlias && item._dataId == parentId\n                  )\n                  .map((item) => item.id);\n            }\n\n            // check exists\n            let exists = this.__treeCollection.find((item) => {\n               return (\n                  item._alias == alias &&\n                  item._dataId == dataId &&\n                  (parentItemIds.length == 0 ||\n                     parentItemIds.indexOf(item.$parent) > -1)\n               );\n            }, true);\n            if (exists) return;\n\n            let treeNode = {};\n            treeNode._alias = alias;\n            treeNode._dataId = dataId;\n            treeNode._itemId = row.id; // Keep row id for set cursor to data collection\n\n            Object.keys(row).forEach((propName) => {\n               // Pull value from alias\n               if (propName.indexOf(`${alias}.`) == 0) {\n                  treeNode[propName] = row[propName];\n               }\n            });\n\n            if (row.translations) treeNode.translations = row.translations;\n\n            // child nodes\n            if (parentItemIds.length > 0)\n               parentItemIds.forEach((parentItemId) => {\n                  this.__treeCollection.add(treeNode, null, parentItemId);\n               });\n            // root node\n            else this.__treeCollection.add(treeNode, null);\n         });\n\n         // Sub-joins\n         (join.links || []).forEach((link) => {\n            addRowToTree(link, alias);\n         });\n      };\n\n      // Show loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         //// Webix Command here:\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.showProgress)\n            boundComp.showProgress({ type: \"icon\" });\n\n         if (boundComp.data && boundComp.data.unsync) boundComp.data.unsync();\n      });\n\n      addRowToTree(this.__datasource.joins());\n\n      // Hide loading cursor\n      (this.__bindComponentIds || []).forEach((comId) => {\n         let boundComp = $$(comId);\n         if (boundComp && boundComp.hideProgress) boundComp.hideProgress();\n         boundComp.define(\"data\", this.__treeCollection);\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.datasource) {\n         this.warningsMessage(`doesn't have a datasource.`);\n      } else if (this.linkDatacollectionID) {\n         const linkDC = this.AB.datacollectionById(this.linkDatacollectionID);\n\n         if (!linkDC)\n            this.warningsMessage(\n               `can't resolve linkDatacollectionID[${this.linkDatacollectionID}]`\n            );\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Datacollection[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   get userScopes() {\n      return this.AB.Account.scopes();\n   }\n};\n","var ABDefinitionCore = require(\"../core/ABDefinitionCore\");\n\nmodule.exports = class ABDefinition extends ABDefinitionCore {\n   // constructor(attributes, AB) {\n   //    super(attributes, AB);\n   // }\n};\n","/**\n * ABEmitter\n *\n * This is the platform dependent implementation of an Emitter object.\n *\n */\n\nvar EventEmitter = require(\"events\").EventEmitter;\n\nmodule.exports = class ABEmitter extends EventEmitter {\n   constructor() {\n      super(/*{ maxListeners: 0 }*/);\n   }\n};\n","const ABHintCore = require(\"../core/ABHintCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABHint extends ABHintCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy(App) {\n      // debugger;\n      // remove all my Elements\n      var allSteps = this.steps();\n      var allDestroy = [];\n      allSteps.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n      // remove reference on App and View\n      let hintIndex = App.hintIDs.indexOf(this.id);\n      if (hintIndex > -1) {\n         App.hintIDs.splice(hintIndex, 1);\n         App.save();\n      }\n\n      let view = App.views((v) => {\n         return v.id == this.settings.view;\n      })[0];\n\n      if (view) {\n         delete view.settings.hintID;\n         view.save();\n      }\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  webix.message({\n                     text: L(\"Tutorial Deleted\"),\n                     type: \"success\",\n                     expire: 3000,\n                  });\n                  resolve();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n\n   createHintUI() {\n      // if already loaded skip\n      if ($$(this.id)) return;\n\n      let steps = [];\n      let next = 0;\n      let display = webix.storage.cookie.get(this.id);\n      if (display?.hide) return;\n      let dontShow = `<label class=\"dontShow\">\n                        <input onclick=\"webix.storage.cookie.put(this.dataset.hintId, {'hide': this.checked});\" data-hint-id=\"${\n                           this.id\n                        }\" type=\"checkbox\">\n                        ${L(\"Don't show this again.\")}\n                     </label>`;\n      this.stepIDs.forEach((step) => {\n         next++;\n         let newStep = {};\n         newStep.id = this._steps[step].id;\n         newStep.el = this._steps[step].settings.el;\n         newStep.event = this._steps[step].settings.event;\n         newStep.title = this._steps[step].name;\n         newStep.text = this._steps[step].text + dontShow;\n         if (this.stepIDs[next]) {\n            newStep.nextEl = this._steps[this.stepIDs[next]].settings.el;\n            if (newStep.nextEl) {\n               newStep.hintId = this.id;\n               newStep.eventEl = \"button\"; // added this so we do not trigger a second advance on the hint when triggering the click below\n               newStep.next = function (event) {\n                  let nextEl = this.nextEl;\n                  let theNextEl = document.querySelector(nextEl);\n                  if (theNextEl && theNextEl.checkVisibility()) {\n                     return false;\n                  } else {\n                     document.querySelector(this.el).click();\n                     return false;\n                  }\n               };\n            }\n         }\n         if (newStep.el) steps.push(newStep);\n      });\n\n      let ui = {\n         view: \"hint\",\n         id: this.id,\n         steps: steps,\n         on: {\n            onNext: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n            onPrevious: (step) => {\n               setTimeout(() => {\n                  const boxes = document.querySelectorAll(\n                     \"input[data-hint-id='\" + this.id + \"']\"\n                  );\n                  let display = webix.storage.cookie.get(this.id);\n                  boxes.forEach((b) => {\n                     b.checked = display?.hide || false;\n                  });\n               }, 100);\n            },\n         },\n      };\n\n      webix.delay(\n         () => {\n            try {\n               webix.ui(ui).start();\n            } catch (err) {\n               this.AB.notify.developer(err, {\n                  context:\n                     \"ABHint.createUIHint() error calling webix.ui(ui).start()\",\n                  ui,\n               });\n            }\n         },\n         null,\n         null,\n         2000\n      );\n\n      // $$(this.id);\n   }\n};\n","const ABIndexCore = require(\"../core/ABIndexCore\");\n\nmodule.exports = class ABIndex extends ABIndexCore {\n   // constructor(attributes, object) {\n   //    super(attributes, object);\n   // }\n\n   /**\n    * @method save()\n    * persist this instance of ABIndex with it's parent ABObject\n    * @return {Promise}\n    */\n   save() {\n      return super\n         .save()\n         .then(() => this.object.indexSave(this))\n         .then(() => this.migrateCreate());\n   }\n\n   /**\n    * @method destroy()\n    * destroy the current instance of ABIndex\n    * also remove it from our parent ABObject\n    * @return {Promise}\n    */\n   destroy() {\n      return new Promise((resolve, reject) => {\n         if (this.id) {\n            this.migrateDrop()\n               .then(() => {\n                  return super.destroy();\n               })\n               .then(() => this.object.indexRemove(this))\n               .then(resolve)\n               .catch(reject);\n         } else {\n            resolve();\n         }\n      });\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      if (this.fields.length == 0) {\n         this.warningsMessage(`is not referencing any fields`);\n      }\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `Index[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n         // data: this.toObj(),\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/index/${this.id}`,\n      });\n   }\n};\n","/**\n * ABMLClass\n * manage the multilingual information of an instance of a AB Defined Class.\n *\n * these classes have certain fields (\"label\", \"description\"), that can be\n * represented in different language options as defined by our platform.\n *\n * This platform ABMLClass will define 2 methods that allow for the translation\n * untranslation of this data.\n */\nvar ABMLClassCore = require(\"../core/ABMLClassCore\");\n\nmodule.exports = class ABMLClass extends ABMLClassCore {\n   constructor(fieldList, AB) {\n      super(fieldList, AB);\n\n      this._warnings = [];\n      // {array}\n      // an array of warning messages for this object.\n      // each warning entry should be in the format:\n      // WarningMessage: {\n      //    message: {string} \"message to display\"\n      //    data: {json} additional debugging information\n      // }\n   }\n\n   // fromValues(attributes) {\n   //    super.fromValues(attributes);\n   // }\n\n   /**\n    * @method warnings()\n    * returns the stored warnings for this ONE object.\n    * @return {array} WarningMessage\n    */\n   warnings() {\n      return this._warnings;\n   }\n\n   /**\n    * @method warningsEval()\n    * This method causes an object to re-evaluate it's settings to see if there\n    * are any potential errors.\n    */\n   warningsEval() {\n      this._warnings = [];\n   }\n\n   /**\n    * @method warningsAll()\n    * returns all relevant warnings for the current Object. This includes any\n    * sub fields, links, views, etc...\n    * @return {array} warning structures\n    *          [ {WarningMessage}, ... ]\n    */\n   warningsAll() {\n      return this.warnings();\n   }\n\n   /**\n    * @method languageDefault\n    * return a default language code.\n    * @return {string}\n    */\n   languageDefault() {\n      return this.AB.Account.language() || \"en\";\n   }\n\n   /**\n    * @method destroy()\n    * remove this definition.\n    * @return {Promise}\n    */\n   async destroy() {\n      var def = this.toDefinition();\n      if (def.id) {\n         return def.destroy().catch((err) => {\n            if (err.toString().indexOf(\"No record found\") > -1) {\n               // this is weird, but not breaking:\n               console.log(\n                  `ABMLClass.destroy(): could not find record for id[${def.id}]`\n               );\n               console.log(def);\n               return;\n            }\n            throw err;\n         });\n      }\n      return Promise.resolve();\n   }\n\n   /**\n    * @method save()\n    * persist this definition of our {ABxxx} Object\n    * @return {Promise}\n    */\n   async save() {\n      var def = this.toDefinition();\n      // if not name, try to use our label as the name\n      def.name = def.name || this.name || this.label || \"name\";\n      var data = await def.save();\n      if (!this.id) {\n         this.id = data.id;\n      }\n   }\n};\n","const ABModelCore = require(\"../core/ABModelCore\");\n\n//\n// ABModel\n//\n// Represents the Data interface for an ABObject data.\n//\n// 2 ways to use an ABModel to load a DataTable:\n// \tMethod 1:\n// \tgather all the data externally and send to the DataTable\n//\t\tModel.findAll()\n//\t\t.then((data)=>{\n//\t\t\tDataTable.parse(data);\n//\t\t})\n//\n// \tMethod 2:\n// \tSet the Model object with a condition / skip / limit, then\n// \tuse it to load the DataTable:\n//\t\tModel.where({})\n//\t\t.skip(XX)\n//\t\t.limit(XX)\n//\t\t.loadInto(DataTable);\n\nfunction errorPopup(error) {\n   // Show the pop up\n   if (error && error.data && error.data.error == \"READONLY\") {\n      webix.alert({\n         title: \"Your action is blocked\",\n         ok: \"Ok\",\n         text: error.data.message || \"\",\n         type: \"alert-warning\",\n      });\n   }\n}\n\n/*\n * @function no_socket_trigger()\n * a common routine to trigger an update.\n * In the case where our AB.Network.type() isn't a socket implementation\n * we need to manually trigger the expected socket events ourselves.\n * This fn() attempts to simulate the socket responses in such a case.\n * @param {ABModel} model\n *        The ABModel currently processing the network transaction.\n * @param {string} key\n *        The socket update trigger we are simulating.\n * @param {json} data\n *        The relevant response from our network transaction.\n */\nfunction no_socket_trigger(model, key, data) {\n   // If we do not have socket updates available, then trigger an\n   // update event with this data.\n   if (model.AB.Network.type() != \"socket\") {\n      model.AB.emit(key, {\n         objectId: model.object.id,\n         data,\n      });\n   }\n}\n\nmodule.exports = class ABModel extends ABModelCore {\n   constructor(object) {\n      super(object);\n\n      this.handler_create = (...params) => {\n         this.handler_common(\"ab.datacollection.create\", ...params);\n      };\n\n      this.handler_delete = (...params) => {\n         this.handler_common(\"ab.datacollection.delete\", ...params);\n      };\n\n      this.handler_findAll = (...params) => {\n         this.handler_common(null, ...params);\n      };\n\n      this.handler_logs = (context, err, data) => {\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n         context.resolve?.(data);\n      };\n\n      this.handler_update = (...params) => {\n         this.handler_common(\"ab.datacollection.update\", ...params);\n      };\n\n      this.handler_common = (key, context, err, data) => {\n         // key: {string} the relevant socket event key\n         //      can be null if not relevant.\n         // context : {obj} any provided context data provided on the\n         //           this.AB.Network.get() call.\n         // err: {Error} any returned error message from api\n         // data: {obj} returned data from the model-get api in format:\n         //       {data: [], total_count: 1, pos: 0, offset: 0, limit: 0}\n         if (err) {\n            context.reject?.(err);\n            return;\n         }\n\n         // let jobID = this.AB.jobID();\n         // console.log(`${jobID} : normalization begin`);\n         // let timeFrom = performance.now();\n         if (key) {\n            // on \"update\" & \"create\" we want to normalizeData()\n            if (key.indexOf(\"delete\") == -1) {\n               this.normalizeData(data);\n            }\n         } else {\n            // on a findAll we normalize data.data\n            this.normalizeData(data.data);\n         }\n         // let timeTo = performance.now();\n         // console.log(`${jobID} : normalization end:  ${timeTo - timeFrom}ms`);\n\n         context.resolve?.(data);\n\n         // if (key) {\n         //    no_socket_trigger(this, key, data);\n         // }\n      };\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   // Prepare multilingual fields to be untranslated\n   // Before untranslating we need to ensure that values.translations is set.\n   prepareMultilingualData(values) {\n      // if this object has some multilingual fields, translate the data:\n      var mlFields = this.object.multilingualFields();\n      // if mlFields are inside of the values saved we want to translate otherwise do not because it will reset the translation field and you may loose unchanged translations\n      var shouldTranslate = false;\n      if (mlFields.length) {\n         mlFields.forEach(function (field) {\n            if (values[field] != null) {\n               shouldTranslate = true;\n            }\n         });\n      }\n      if (shouldTranslate) {\n         if (\n            values.translations == null ||\n            typeof values.translations == \"undefined\" ||\n            values.translations == \"\"\n         ) {\n            values.translations = [];\n         }\n         this.object.unTranslate(values, values, mlFields);\n      }\n   }\n\n   request(method, params) {\n      return this.AB.Network[method](params);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      values.batch.map((vals) => {\n         return this.prepareMultilingualData(vals.data);\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err, data) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            this.normalizeData(data);\n            resolve(data);\n            // FIX: now with sockets, the triggers are fired from socket updates.\n            // trigger a create event\n            // triggerEvent('create', this.object, data);\n         });\n\n         this.AB.Network.post(\n            {\n               url: this.object.urlRestBatch(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: {},\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // FIX: now with sockets, the triggers are fired from socket updates.\n            //    // trigger a create event\n            //    // triggerEvent('create', this.object, data);\n            // })\n            .catch(reject);\n      });\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      this.prepareMultilingualData(values);\n\n      // add default values record if no value is passed for column\n      this.object.fields().forEach((f) => {\n         if (values[f.columnName] === undefined) {\n            f.defaultValue(values);\n         }\n      });\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_create);\n         this.AB.Network.post(\n            {\n               url: this.object.urlRest(),\n               params: values,\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            .then((newVal) => {})\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         no_socket_trigger(this, \"ab.datacollection.create\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_delete);\n         this.AB.Network[\"delete\"](\n            {\n               url: this.object.urlRestItem(id),\n            },\n            {\n               key: jobID,\n               id,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            errorPopup(err);\n            reject(err);\n         });\n      }).then((res) => {\n         // properly issue the delete\n         no_socket_trigger(this, \"ab.datacollection.delete\", id);\n         return res;\n      });\n   }\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond) {\n      cond = cond || {};\n\n      // \t\t// prepare our condition:\n      // \t\tvar newCond = {};\n\n      // \t\t// if the provided cond looks like our { where:{}, skip:xx, limit:xx } format,\n      // \t\t// just use this one.\n      // \t\tif (cond.where) {\n      // \t\t\tnewCond = cond;\n      // \t\t} else {\n\n      // \t\t\t// else, assume the provided condition is the .where clause.\n      // \t\t\tnewCond.where = cond;\n      // \t\t}\n\n      // /// if this is our depreciated format:\n      // if (newCond.where.where) {\n      // \tOP.Error.log('Depreciated Embedded .where condition.');\n      // }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_findAll);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRest(),\n               params: cond,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data.data);\n\n            //    resolve(data);\n            // })\n            .catch((err) => {\n               if (err && err.code) {\n                  switch (err.code) {\n                     case \"ER_PARSE_ERROR\":\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Parse Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n\n                     default:\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"AppBuilder:ABModel:findAll(): Unknown Error with provided condition\",\n                           condition: cond,\n                        });\n                        break;\n                  }\n               }\n               reject(err);\n            });\n      });\n   }\n\n   /**\n    * @method loadInto\n    * loads the current values into the provided Webix DataTable\n    * @param {DataTable} DT  A Webix component that can dynamically load data.\n    */\n   loadInto(DT) {\n      // if a limit was applied, then this component should be loading dynamically\n      if (this._limit) {\n         DT.define(\"datafetch\", this._limit);\n         DT.define(\"datathrottle\", 250); // 250ms???\n\n         // catch the event where data is requested:\n         // here we will do our own findAll() so we can persist\n         // the provided .where condition.\n\n         // oh yeah, and make sure to remove any existing event handler when we\n         // perform a new .loadInto()\n         DT.___AD = DT.___AD || {};\n         if (DT.___AD.onDataRequestEvent) {\n            DT.detachEvent(DT.___AD.onDataRequestEvent);\n         }\n         DT.___AD.onDataRequestEvent = DT.attachEvent(\n            \"onDataRequest\",\n            (start, count) => {\n               var cond = {\n                  where: this._where,\n                  sort: this._sort,\n                  limit: count,\n                  skip: start,\n               };\n\n               if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n               this.findAll(cond).then((data) => {\n                  /*\n                   // In V2: we move the row height processing into \n                   // the interface designer \n\n                  data.data.forEach((item) => {\n                     if (\n                        item.properties != null &&\n                        item.properties.height != \"undefined\" &&\n                        parseInt(item.properties.height) > 0\n                     ) {\n                        item.$height = parseInt(item.properties.height);\n                     } else if (parseInt(this._where.height) > 0) {\n                        item.$height = parseInt(this._where.height);\n                     }\n                  });\n                  */\n                  DT.parse(data);\n\n                  if (DT.hideProgress) DT.hideProgress();\n               });\n\n               return false; // <-- prevent the default \"onDataRequest\"\n            }\n         );\n\n         DT.refresh();\n      }\n\n      // else just load it all at once:\n      var cond = {};\n      if (this._where) cond.where = this._where;\n      if (this._sort) cond.sort = this._sort;\n      if (this._limit != null) cond.limit = this._limit;\n      if (this._skip != null) cond.skip = this._skip;\n\n      if (DT.showProgress) DT.showProgress({ type: \"icon\" });\n\n      this.findAll(cond)\n         .then((data) => {\n            // v2: we no longer process item $height\n            /*\n            data.data.forEach((item) => {\n               if (\n                  item.properties != null &&\n                  item.properties.height != \"undefined\" &&\n                  parseInt(item.properties.height) > 0\n               ) {\n                  item.$height = parseInt(item.properties.height);\n               } else if (parseInt(this._where.height) > 0) {\n                  item.$height = parseInt(this._where.height);\n               }\n            });\n            */\n\n            DT.parse(data);\n\n            if (DT.hideProgress) DT.hideProgress();\n         })\n         .catch((err) => {\n            console.error(\"!!!!!\", err);\n         });\n   }\n\n   /**\n    * @method logs()\n    * return the log history related to this model's ABObject.\n    * @param {hash} options\n    *        a key=>value hash of optional search criteria\n    *        .rowId {string} the uuid of the individual entry we are querying\n    *        .levelName {string} the type of entry [\"insert\", \"update\", \"delete\"]\n    *        .username {string} the entries associated with the given user\n    *        .startDate {date} entries that happened ON or AFTER this date\n    *        .endDate {date} entries that happened ON or BEFORE this date\n    *        .start {integer} paging control: how many entries to skip\n    *        .limit {integer} paging control: only return this # entries\n    * @return {Promise}\n    */\n   logs(options) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_logs);\n         this.AB.Network.get(\n            {\n               url: this.object.urlRestLog(),\n               params: options,\n               // params: newCond\n            },\n            {\n               key: jobID,\n               context: { resolve, reject },\n            }\n         ).catch((err) => {\n            if (err && err.code) {\n               this.AB.notify.developer(err, {\n                  context: \"AppBuilder:ABModel:logs(): Error\",\n                  options,\n               });\n            }\n            reject(err);\n         });\n      });\n   }\n\n   /**\n    * @method limit\n    * set the limit value for this set of data\n    * @param {integer} limit  the number or elements to return in this call\n    * @return {ABModel} this object that is chainable.\n    */\n   limit(limit) {\n      this._limit = limit;\n      return this;\n   }\n\n   /**\n    * @method skip\n    * set the skip value for this set of data\n    * @param {integer} skip  the number or elements to skip\n    * @return {ABModel} this object that is chainable.\n    */\n   skip(skip) {\n      this._skip = skip;\n      return this;\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      this.prepareMultilingualData(values);\n\n      // remove empty properties\n      for (var key in values) {\n         if (values[key] == null) delete values[key];\n      }\n\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, this.handler_update);\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestItem(id),\n               params: values,\n            },\n            { key: jobID, context: { resolve, reject } }\n         )\n            // .then((data) => {\n            //    this.normalizeData(data);\n\n            //    resolve(data);\n\n            //    // If we do not have socket updates available, then trigger an\n            //    // update event with this data.\n            //    if (this.AB.Network.type() != \"socket\") {\n            //       this.AB.emit(\"ab.datacollection.update\", {\n            //          objectId: this.object.id,\n            //          data,\n            //       });\n            //    }\n            // })\n            .catch((err) => {\n               errorPopup(err);\n               reject(err);\n            });\n      }).then((newVal) => {\n         // properly issue the update\n         no_socket_trigger(this, \"ab.datacollection.update\", newVal);\n         return newVal;\n      });\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      return new Promise((resolve, reject) => {\n         var jobID = this.AB.jobID();\n         this.AB.Network.once(jobID, (context, err /*, data */) => {\n            if (err) {\n               reject(err);\n               return;\n            }\n            // this.normalizeData(data);\n            resolve(true);\n            // what about checking for socket updates?\n         });\n         this.AB.Network.put(\n            {\n               url: this.object.urlRestBatch(),\n               params: {\n                  rowIds,\n                  values,\n               },\n            },\n            { key: jobID, context: {} }\n         )\n            // .then(() => {\n            //    resolve(true);\n            // })\n            .catch(reject);\n      });\n   }\n};\n","//\n// ABModelAPI\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelAPI extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method findAll\n    * performs a data find with the provided condition.\n    */\n   async findAll(cond = {}) {\n      cond.isAPI = true;\n      cond.url = this.object?.request?.url;\n\n      return super.findAll(cond);\n   }\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchCreate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   async create(values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.create() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.delete() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.update() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      const error = new Error(\n         \"ABObjectApi.ABModelAPI.batchUpdate() does not be implemented.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","//\n// ABModelQuery\n//\n// Represents the Data interface for an ABObjectQuery data.\n\nconst ABModel = require(\"./ABModel\");\n\nmodule.exports = class ABModelQuery extends ABModel {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method batchCreate\n    * update model values on the server.\n    */\n   batchCreate(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchCreate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method create\n    * update model values on the server.\n    */\n   create(values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.create() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method delete\n    * remove this model instance from the server\n    * @param {integer|UUID} id  the .id of the instance to remove.\n    * @return {Promise}\n    */\n   delete(id) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.delete() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method update\n    * update model values on the server.\n    */\n   update(id, values) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.update() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n\n   /**\n    * @method batchUpdate\n    * update value to many rows on the server.\n    */\n   batchUpdate({ rowIds, values }) {\n      var error = new Error(\n         \"ABObjectQuery.ABModelQuery.batchUpdate() should not be called.\"\n      );\n      return Promise.reject(error);\n   }\n};\n","const ABObjectCore = require(\"../core/ABObjectCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n// NOTE: this has been moved to NetworkRestSocket:\n//\n// // Start listening for server events for object updates and call triggerEvent as the callback\n// if (typeof io != \"undefined\") {\n//    io.socket.on(\"ab.object.update\", function (msg) {\n//       AB.emit(\"ab.object.update\", {\n//          objectId: msg.objectId,\n//          data: msg.data,\n//       });\n//    });\n// } else {\n//    console.error(\"TODO: ABObject: configure Socket.io\");\n// }\n\n// io.socket.on(\"ab.object.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObject extends ABObjectCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen for our ABFields.\"definition.updated\"\n      this.fields().forEach((f) => {\n         f.on(\"definition.updated\", (field) => {\n            // create a new Field with the updated def\n            var def = this.AB.definitionByID(field.id);\n            if (!def) return;\n\n            var newField = this.AB.fieldNew(def, this);\n\n            // we want to keep the same fieldID order:\n            var newFields = [];\n            this.fields().forEach((f) => {\n               if (f.id === field.id) {\n                  newFields.push(newField);\n                  return;\n               }\n               newFields.push(f);\n            });\n\n            this._fields = newFields;\n         });\n      });\n\n      // listen\n      // this.AB.on(\"ab.object.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n\n      this._pendingNetworkRequests = {};\n      // {hash}   uuid : {Promise}\n      // convert our migrateXXXX() operations to be Relay/offline compatible.\n      // if a queued operation is sent after a web browser refresh, then\n      // we will NOT have a pending promise to .resolve()/.reject()\n\n      this._handler_object_migrate = (context, err, response) => {\n         // NOTE:\n         var pending = this._pendingNetworkRequests?.[context.uuid];\n         if (err) {\n            pending?.reject(err);\n            return;\n         }\n         pending?.resolve(response);\n      };\n      this.AB.Network.on(\"object.migrate\", this._handler_object_migrate);\n   }\n\n   /**\n    * @method refreshInstance()\n    * Used when a definition.updated message is detected on this ABObject.\n    * This method will return a new instance based upon the current definition\n    * and properly resolve any handlers and pending network Requests.\n    * @return {ABObject}\n    */\n   refreshInstance() {\n      var newObj = this.AB.objectByID(this.id);\n\n      // prevent doing this multiple times:\n      if (this._pendingNetworkRequests) {\n         // remove object.migrate listener\n         this.AB.Network.removeListener(\n            \"object.migrate\",\n            this._handler_object_migrate\n         );\n\n         // transfer the pending network requests\n         newObj._pendingNetworkRequests = this._pendingNetworkRequests;\n         this._pendingNetworkRequests = null;\n      }\n\n      return newObj;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   fromValues(attributes) {\n      /*\n\t\t{\n\t\t\tid: uuid(),\n\t\t\tname: 'name',\n\t\t\tlabelFormat: 'xxxxx',\n\t\t\tisImported: 1/0,\n\t\t\tisExternal: 1/0,\n\t\t\turlPath:'string',\n\t\t\timportFromObject: 'string', // JSON Schema style reference:  '#[ABApplication.id]/objects/[ABObject.id]'\n\t\t\t\t\t\t\t\t\t\t// to get other object:  ABApplication.objectFromRef(obj.importFromObject);\n\t\t\ttranslations:[\n\t\t\t\t{}\n\t\t\t],\n\t\t\tfields:[\n\t\t\t\t{ABDataField}\n\t\t\t]\n\t\t}\n\t\t*/\n\n      super.fromValues(attributes);\n\n      if (this.workspaceViews) this.workspaceViews.fromObj(attributes);\n   }\n\n   //// TODO: Refactor isValid() to ignore op and not error if duplicateName is own .id\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.objects((o) => {\n            return (\n               o.id != this.id &&\n               o.name.toLowerCase() == this.name.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L('Object name must be unique (\"{0}\" already in use)', [this.name])\n         );\n      }\n\n      // Check the common validations:\n      // TODO:\n      // if (!inputValidator.validate(values.label)) {\n      // \t_logic.buttonSaveEnable();\n      // \treturn false;\n      // }\n\n      return validator;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an array of any invalid\n    * value errors.\n    * @param {obj} data a key=>value hash of the inputs to parse.\n    * @return {array}\n    */\n   isValidData(data) {\n      var validator = this.AB.Validation.validator();\n      this.fields().forEach((f) => {\n         // check if value was passed, if so validate it\n         if (Object.prototype.hasOwnProperty.call(data, f.columnName))\n            f.isValidData(data, validator);\n      });\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fieldNew()\n    *\n    * return an instance of a new (unsaved) ABField that is tied to this\n    * ABObject.\n    *\n    * NOTE: this new field is not included in our this.fields until a .save()\n    * is performed on the field.\n    *\n    * @param {obj} values  the initial values for this field.\n    *\t\t\t\t\t\t{ key:'{string}'} is required\n    * @return {ABField}\n    */\n   // fieldNew ( values ) {\n   // \t// NOTE: ABFieldManager returns the proper ABFieldXXXX instance.\n   // \treturn ABFieldManager.newField( values, this );\n   // }\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      /*\n        return new Promise((resolve, reject) => {\n            // Remove the import object, then its model will not be destroyed\n            if (this.isImported) {\n                this.application\n                    .objectDestroy(this)\n                    .catch(reject)\n                    .then(() => {\n                        resolve();\n                    });\n\n                return;\n            }\n\n            // OK, some of our Fields have special follow up actions that need to be\n            // considered when they no longer exist, so before we simply drop this\n            // object/table, drop each of our fields and give them a chance to clean up\n            // what needs cleaning up.\n\n            // ==> More work, but safer.\n            var fieldDrops = [];\n            this.fields().forEach((f) => {\n                fieldDrops.push(f.destroy());\n            });\n\n            Promise.all(fieldDrops)\n                .then(() => {\n                    return new Promise((next, err) => {\n                        // now drop our table\n                        // NOTE: our .migrateXXX() routines expect the object to currently exist\n                        // in the DB before we perform the DB operations.  So we need to\n                        // .migrateDrop()  before we actually .objectDestroy() this.\n                        this.migrateDrop()\n                            .then(() => {\n                                // finally remove us from the application storage\n                                return this.application.objectDestroy(this);\n                            })\n                            .then(next)\n                            .catch(err);\n                    });\n                })\n\n                // flag .disable to queries who contains this removed object\n                .then(() => {\n                    return new Promise((next, err) => {\n                        this.application\n                            .queries(\n                                (q) =>\n                                    q.objects((o) => o.id == this.id).length > 0\n                            )\n                            .forEach((q) => {\n                                q._objects = q.objects((o) => o.id != this.id);\n\n                                q.disabled = true;\n                            });\n\n                        next();\n                    });\n                })\n                .then(resolve)\n                .catch(reject);\n        });\n */\n\n      var removeFromApplications = () => {\n         var allRemoves = [];\n         this.AB.applications().forEach((app) => {\n            allRemoves.push(app.objectRemove(this));\n         });\n         return Promise.all(allRemoves);\n      };\n\n      var disableRelatedQueries = () => {\n         return new Promise((next /*, err */) => {\n            this.AB.queries(\n               (q) => q.objects((o) => o.id == this.id).length > 0\n            ).forEach((q) => {\n               // q._objects = q.objects((o) => o.id != this.id);\n\n               q.disabled = true;\n            });\n\n            next();\n         });\n      };\n\n      try {\n         // 1) remove us from all Application:\n         await removeFromApplications();\n\n         // 2) disable any connected Queries\n         await disableRelatedQueries();\n\n         // if an imported Object (FederatedTable, Existing Table, etc...)\n         // then skip this step\n         if (this.isImported) {\n            return Promise.resolve();\n         }\n\n         // time to remove my table:\n         // NOTE: our .migrateXXX() routines expect the object to currently exist\n         // in the DB before we perform the DB operations.  So we need to\n         // .migrateDrop()  before we actually .destroy() this.\n         await this.migrateDrop();\n\n         // now remove my definition\n\n         // start with my fields:\n         var fieldDrops = [];\n\n         // Only ABObjects should attempt any fieldDrops.\n         // ABObjectQueries can safely skip this step:\n         if (this.type == \"object\") {\n            var allFields = this.fields();\n            this._fields = []; // clear our field counter so we don't retrigger\n            // this.save() on each field.destroy();\n\n            allFields.forEach((f) => {\n               fieldDrops.push(f.destroy());\n            });\n         }\n         await Promise.all(fieldDrops);\n\n         await super.destroy();\n         this.emit(\"destroyed\");\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.destroy(): error destroying object.\",\n         });\n      }\n\n      // return Promise.resolve()\n      //    .then(() => {\n      //       // 1) remove us from all Application:\n      //       return removeFromApplications();\n      //    })\n      //    .then(() => {\n      //       // 2) disable any connected Queries\n      //       return disableRelatedQueries();\n      //    })\n      //    .then(() => {\n      //       // if an imported Object (FederatedTable, Existing Table, etc...)\n      //       // then skip this step\n      //       if (this.isImported) {\n      //          return Promise.resolve();\n      //       }\n\n      //       // time to remove my table:\n      //       // NOTE: our .migrateXXX() routines expect the object to currently exist\n      //       // in the DB before we perform the DB operations.  So we need to\n      //       // .migrateDrop()  before we actually .destroy() this.\n      //       return this.migrateDrop();\n      //    })\n      //    .then(() => {\n      //       // now remove my definition\n\n      //       // start with my fields:\n      //       var fieldDrops = [];\n\n      //       // Only ABObjects should attempt any fieldDrops.\n      //       // ABObjectQueries can safely skip this step:\n      //       if (this.type == \"object\") {\n      //          var allFields = this.fields();\n      //          this._fields = []; // clear our field counter so we don't retrigger\n      //          // this.save() on each field.destroy();\n\n      //          allFields.forEach((f) => {\n      //             fieldDrops.push(f.destroy());\n      //          });\n      //       }\n\n      //       return Promise.all(fieldDrops)\n      //          .then(() => {\n      //             // now me.\n      //             return super.destroy();\n      //          })\n      //          .then(() => {\n      //             this.emit(\"destroyed\");\n      //          });\n      //    });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      var isAdd = false;\n\n      // if this is our initial save()\n      if (!this.id) {\n         this.label = this.label || this.name;\n         isAdd = true;\n      }\n\n      try {\n         await super.save();\n         if (isAdd && !skipMigrate) {\n            await this.migrateCreate();\n         }\n         return this;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABObject.save()\",\n            obj: this.toObj(),\n         });\n         throw err;\n      }\n   }\n\n   /**\n    * @method toObj()\n    *\n    * properly compile the current state of this ABApplication instance\n    * into the values needed for saving to the DB.\n    *\n    * Most of the instance data is stored in .json field, so be sure to\n    * update that from all the current values of our child fields.\n    *\n    * @return {json}\n    */\n   toObj() {\n      var result = super.toObj();\n\n      result.objectWorkspaceViews = this.workspaceViews?.toObj();\n\n      return result;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network.post(\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   migrateDrop() {\n      return new Promise((resolve, reject) => {\n         var uuid = this.AB.uuid();\n         this._pendingNetworkRequests[uuid] = { resolve, reject };\n         var jobResponse = {\n            key: \"object.migrate\",\n            context: { uuid, id: this.id },\n         };\n         this.AB.Network[\"delete\"](\n            {\n               url: `/definition/migrate/object/${this.id}`,\n            },\n            jobResponse\n         );\n      });\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth /*, oldWidth */) {\n      var fieldID = null;\n      for (var i = 0; i < this._fields.length; i++) {\n         if (this._fields[i].columnName == columnName) {\n            fieldID = this._fields[i].id;\n            break;\n            // this._fields[i].settings.width = newWidth;\n         }\n      }\n\n      // Johnny: This is better but still not right.  the ABObject should not be\n      // storing sizes for field widths.  That is a function of the UI and which\n      // Grid is being displayed.  THAT GRID should be storing a column width\n      // locally.\n      // TODO: once we have v2 in place.\n\n      var fieldSettings = this.AB.localSettings(fieldID);\n      fieldSettings = fieldSettings || {};\n      fieldSettings.width = newWidth;\n\n      return this.AB.localSettings(fieldID, fieldSettings);\n      // return this.save();\n   }\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      summaryColumns = summaryColumns || [];\n      countColumns = countColumns || [];\n\n      var headers = [];\n      // var columnNameLookup = {};\n\n      // get the header for each of our fields:\n      this.fields().forEach((f) => {\n         var header = f.columnHeader({\n            isObjectWorkspace: isObjectWorkspace,\n            editable: isEditable,\n         });\n\n         if (isEditable) {\n            header.validationRules = f.settings.validationRules;\n         }\n\n         header.alias = f.alias || undefined; // query type\n         header.fieldID = f.id;\n         // header.fieldURL = f.urlPointer();\n\n         // if the field specifies a width\n         if (f.settings.width != 0) {\n            header.width = f.settings.width;\n         }\n\n         // if the User has already updated a local width for this\n         var fieldSettings = this.AB.localSettings(f.id);\n         if (fieldSettings && fieldSettings.width) {\n            if (!header.width || fieldSettings.width > header.width) {\n               // set column width to the customized width\n               header.width = fieldSettings.width;\n            }\n         }\n\n         if (!header.width) {\n            // set column width to adjust:true by default;\n            header.adjust = true;\n         }\n\n         // add the summary footer\n         if (summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\") {\n               header.footer = { content: \"totalColumn\", field: f };\n            } else {\n               header.footer = { content: \"summColumn\" };\n            }\n         }\n         // add the count footer\n         else if (countColumns.indexOf(f.id) > -1)\n            header.footer = { content: \"countColumn\" };\n\n         headers.push(header);\n         // columnNameLookup[header.id] = f.columnName; // name => id\n      });\n\n      // update our headers with any settings applied in the Object Workspace\n      /*\n      // In v2: this is handled by the ABDesigner\n      //\n      if (isObjectWorkspace) {\n         let hiddenFieldList = [];\n\n         if (hiddenFieldNames && hiddenFieldNames.length > 0)\n            hiddenFieldList = hiddenFieldNames;\n         // else if (this.workspaceHiddenFields)\n         //    hiddenFieldList = this.workspaceHiddenFields;\n\n         if (hiddenFieldList.length > 0) {\n            hiddenFieldList.forEach((hfID) => {\n               headers.forEach((h) => {\n                  if (columnNameLookup[h.id] == hfID) {\n                     h.hidden = true;\n                  }\n               });\n            });\n         }\n      }\n      */\n\n      return headers;\n   }\n\n   // after a component has rendered, tell each of our fields to perform\n   // any custom display operations\n   // @param {Webix.DataStore} data a webix datastore of all the rows effected\n   //        by the render.\n   customDisplays(data, App, DataTable, rowIds, isEditable) {\n      if (!data || !data.getFirstId) return;\n\n      // var fields = this.fields(f => this.workspaceHiddenFields.indexOf(f.columnName) < 0);\n      let fields = [];\n      DataTable.eachColumn((columnName) => {\n         let field = this.fields((f) => f.columnName == columnName)[0];\n         if (field) fields.push(field);\n      });\n\n      if (rowIds != null) {\n         rowIds.forEach((id) => {\n            let row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  let node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n         });\n      } else {\n         let id = data.getFirstId();\n         while (id) {\n            var row = data.getItem(id);\n            if (row) {\n               fields.forEach((f) => {\n                  var node = DataTable.getItemNode({\n                     row: row.id,\n                     column: f.columnName,\n                  });\n                  f.customDisplay(row, App, node, {\n                     editable: isEditable,\n                  });\n               });\n            }\n            id = data.getNextId(id);\n         }\n      }\n   }\n\n   // Display data with label format of object\n   displayData(rowData) {\n      if (rowData == null) return \"\";\n\n      // translate multilingual\n      //// TODO: isn't this a MLObject??  use this.translate()\n      var mlFields = this.multilingualFields();\n      this.translate(rowData, rowData, mlFields);\n\n      var labelData = this.labelFormat || \"\";\n\n      // default label\n      if (!labelData && this.fields().length > 0) {\n         var defaultField = this.fields((f) => f.fieldUseAsLabel())[0];\n         if (defaultField) labelData = `{${defaultField.id}}`;\n         else\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`; // show id of row\n      }\n\n      // get column ids in {colId} template\n      // ['{colId1}', ..., '{colIdN}']\n      var colIds = labelData.match(/\\{[^}]+\\}/g);\n\n      if (colIds && colIds.forEach) {\n         colIds.forEach((colId) => {\n            var colIdNoBracket = colId.replace(\"{\", \"\").replace(\"}\", \"\");\n\n            var field = this.fieldByID(colIdNoBracket);\n            if (field == null) return;\n\n            labelData = labelData.replace(colId, field.format(rowData) || \"\");\n         });\n      }\n\n      // if label is empty, then show .id\n      if (!labelData.trim()) {\n         let labelSettings = this.labelSettings || {};\n         if (labelSettings && labelSettings.isNoLabelDisplay) {\n            labelData = L(labelSettings.noLabelText || \"[No Label]\");\n         } else {\n            // show id of row\n            labelData = `${this.AB.isUUID(rowData.id) ? \"ID: \" : \"\"}${\n               rowData.id\n            }`;\n         }\n      }\n\n      return labelData;\n   }\n\n   currentView() {\n      return this.workspaceViews.getCurrentView();\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.fields().forEach((f) => {\n         if (!f) return;\n         allWarnings = allWarnings.concat(f?.warnings());\n      });\n\n      this.indexes().forEach((i) => {\n         if (!i) return;\n         allWarnings = allWarnings.concat(i?.warnings());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allFields = this.fields();\n\n      if (allFields.length == 0) {\n         this.warningsMessage(\"has no fields\");\n      }\n\n      (this._unknownFieldIDs || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown field id[${id}]`);\n      });\n\n      (this._unknownIndex || []).forEach((id) => {\n         this.warningsMessage(`is referencing an unknown index id[${id}]`);\n      });\n\n      allFields.forEach((f) => {\n         f?.warningsEval();\n      });\n\n      this.indexes().forEach((i) => {\n         i?.warningsEval();\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Object[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n      // this.emit(\"warning\", warnMsg, data);\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanValues()\n    * perform a final review of the data a form will try to submit for\n    * this object.  The lets individual fields have a chance to update or\n    * remove values before they are sent.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanValues(rowData) {\n      this.fields().forEach((f) => {\n         f.formCleanData(rowData);\n      });\n   }\n};\n","const atomicjs = require(\"atomicjs\");\nconst ABObjectApiCore = require(\"../core/ABObjectApiCore\");\n\nmodule.exports = class ABObjectApi extends ABObjectApiCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n   }\n\n   async fetchData(insertDataMax = 20) {\n      if (this.isFetched) return;\n\n      const headers = this.headers;\n\n      const response = await atomicjs(this.request.url, {\n         method: this.request.verb,\n         headers,\n         data: {},\n         timeout: null,\n         withCredentials: false,\n      });\n\n      let parsedResponse = this.dataFromKey(response);\n\n      const model = this.model();\n\n      if (parsedResponse.length == null || parsedResponse.length === 0) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[f.columnName];\n         });\n\n         await model.create(data);\n\n         return;\n      }\n\n      let pendingModelCreate = [];\n\n      for (let i = 0; i < parsedResponse.length; i++) {\n         const data = {};\n\n         this.response.fields.forEach((f) => {\n            data[f.columnName] = parsedResponse[i][f.columnName];\n         });\n\n         pendingModelCreate.push(model.create(data));\n\n         if (pendingModelCreate.length % insertDataMax === 0)\n            await Promise.all(pendingModelCreate);\n      }\n\n      if (pendingModelCreate.length > 0) await Promise.all(pendingModelCreate);\n\n      this.isFetched = true;\n\n      await this.save();\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save() {\n      return await super.save(true);\n   }\n};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectExternal\n * These are ABObjects that ... (might need to be refactored out?)\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectExternal extends ABObject {};\n","const ABObject = require(\"./ABObject\");\n\n/**\n * ABObjectImport\n * These are ABObjects that were Imported from existing Tables in the\n * system.\n *\n * NOTE: on the web client, these should function just like ABObjects\n */\nmodule.exports = class ABObjectImport extends ABObject {};\n","//\n// ABObjectQuery\n//\n// A type of Object in our system that is based upon a complex relationship of multiple\n// existing Objects.\n//\n// In the QueryBuilder section of App Builder, a new Query Object can be created.\n// An initial Object can be chosen from our current list of Objects. After that, additional Objects\n// and a specified join type can be specified.\n//\n// A list of fields from each specified Object can also be included as the data to be returned.\n//\n// A where statement is also part of the definition.\n//\n\nconst ABObjectQueryCore = require(\"../core/ABObjectQueryCore\");\n\nvar ABFactory = null;\nif (typeof io != \"undefined\") {\n   io.socket.on(\"ab.query.update\", function (msg) {\n      if (ABFactory) {\n         ABFactory.emit(\"ab.query.update\", {\n            queryId: msg.queryId,\n            data: msg.data,\n         });\n      } else {\n         console.error(\n            \"ABObjectQuery:: received io.socket msg before ABFactory is defined\"\n         );\n         console.error(\"TODO: move this to ABFactory!\");\n      }\n   });\n} else {\n   console.error(\"TODO: install socket.io client for sails updates.\");\n}\n\n// io.socket.on(\"ab.query.delete\", function (msg) {\n// });\n\nmodule.exports = class ABObjectQuery extends ABObjectQueryCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      if (!ABFactory) {\n         ABFactory = AB;\n      }\n      // listen\n      this.AB.on(\"ab.query.update\", (data) => {\n         if (this.id == data.queryId) this.fromValues(data.data);\n      });\n\n      // .fromValues() should already have been called in super()\n      // so now add in our conditionScan()\n      // NOTE: this can be folded into the Core once filterComplex\n      // is fully implemented and not on Platform only.\n\n      // now scan our conditions to make sure they are\n      // 1) reference fields that exist in our Query\n      // 2) completely filled out conditions.\n      this.conditionScan(this.where);\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObjectQuery\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   // destroy() {\n   //    return super.destroy().then(() => {\n   //       console.error(\"Move .queryRemove() to Appbuilder Designer.\");\n   //       // return this.AB.queryRemove(this);\n   //    });\n   // }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObjectQuery with it's parent ABApplication\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   // async save() {\n   //    try {\n   //       await super.save();\n   //       return this;\n   //    } catch (err) {\n   //       this.AB.notify.developer(err, {\n   //          context: \"ABObjectQuery.save()\",\n   //          query: this.toObj(),\n   //       });\n   //       throw err;\n   //    }\n   // }\n\n   ///\n   /// Fields\n   ///\n\n   /**\n    * @method importFields\n    * instantiate a set of fields from the given attributes.\n    * Our attributes are a set of field URLs That should already be created in their respective\n    * ABObjects.\n    * @param {array} fieldSettings The different field urls for each field\n    *             { }\n    * @param {bool} shouldAliasColumn\n    *        should we add the object alias to the columnNames?\n    *        this is primarily used on the web client\n    */\n   importFields(fieldSettings) {\n      super.importFields(fieldSettings);\n\n      this._fields.forEach((fieldEntry) => {\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         fieldEntry.field.columnName = `${fieldEntry.alias}.${fieldEntry.field.columnName}`;\n      });\n   }\n\n   /**\n    * @method columnResize()\n    *\n    * save the new width of a column\n    *\n    * @param {} id The instance of the field to save.\n    * @param {int} newWidth the new width of the field\n    * @param {int} oldWidth the old width of the field\n    * @return {Promise}\n    */\n   columnResize(columnName, newWidth, oldWidth) {\n      let field = this.fields((f) => f.columnName == columnName)[0];\n      if (field) {\n         field.settings.width = newWidth;\n\n         return this.save();\n      } else {\n         return Promise.resolve();\n      }\n   }\n\n   ///\n   /// Working with Client Components:\n   ///\n\n   // return the column headers for this object\n   // @param {bool} isObjectWorkspace  return the settings saved for the object workspace\n   columnHeaders(\n      isObjectWorkspace,\n      isEditable,\n      summaryColumns,\n      countColumns,\n      hiddenFieldNames\n   ) {\n      var headers = super.columnHeaders(\n         isObjectWorkspace,\n         isEditable,\n         summaryColumns,\n         countColumns,\n         hiddenFieldNames\n      );\n\n      headers.forEach((h) => {\n         // pull object by alias\n         let object = this.objectByAlias(h.alias);\n         if (!object) return;\n\n         let field = object.fieldByID(h.fieldID);\n         if (!field) return;\n\n         // NOTE: query v1\n         let alias = \"\";\n         if (Array.isArray(this.joins())) {\n            alias = field.object.name;\n         } else {\n            alias = h.alias;\n         }\n\n         // include object name {aliasName}.{columnName}\n         // to use it in grid headers & hidden fields\n         h.id = `${alias}.${field.columnName}`;\n\n         // label\n         if (this.settings && this.settings.hidePrefix) {\n            h.header = `${field.label || \"\"}`;\n         } else {\n            h.header = `${field.object.label || \"\"}.${field.label || \"\"}`;\n         }\n\n         // icon\n         if (field.settings && field.settings.showIcon) {\n            h.header = `<span class=\"webix_icon fa fa-${field.fieldIcon()}\"></span>${\n               h.header\n            }`;\n         }\n\n         // If this query supports grouping, then add folder icon to display in grid\n         if (this.isGroup) {\n            let originTemplate = h.template;\n\n            h.template = (item, common) => {\n               if (item[h.id])\n                  return (\n                     common.icon(item, common) +\n                     (originTemplate\n                        ? originTemplate(item, common, item[h.id])\n                        : item[h.id])\n                  );\n               else return \"\";\n            };\n         }\n\n         h.adjust = true;\n         h.minWidth = 220;\n      });\n\n      return headers;\n   }\n\n   /**\n    * @method conditionScan()\n    * Scan the provided condition object and determine if there are any\n    * configuration issues.\n    * @param {obj} rule\n    *        the QueryBuilder rule that we are scanning.\n    * @param {array} listWarnings\n    *        An array of warnings that we should add our notices to.\n    */\n   conditionScan(rule) {\n      if (!rule) {\n         return;\n      }\n\n      if (rule.glue) {\n         (rule.rules || []).forEach((r) => {\n            this.conditionScan(r);\n         });\n         return;\n      }\n\n      // 1) we need to have any key as one of our fields.\n      let field = this.fieldByID(rule.key);\n      if (!field && rule.key != \"this_object\") {\n         this.warningsMessage(\n            \"condition does not reference one of our fields\",\n            {\n               rule,\n            }\n         );\n      }\n\n      // 2) completely filled out conditions.\n      if (!this._conditionCheck) {\n         this._conditionCheck = this.AB.filterComplexNew(\n            `${this.id}_conditionCheck`\n         );\n         // {FilterComplex} ._conditionCheck\n         // has our .isConditionComplete() method.\n      }\n      if (!this._conditionCheck.isConditionComplete(rule)) {\n         this.warningsMessage(\"incomplete condition definition\", {\n            rule,\n         });\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      this.conditionScan(this.where);\n\n      /// include importFields() warnings:\n      this.__missingObject.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: could not resolve object[${\n               f.objectID\n            }] for fieldSetting ${JSON.stringify(f)}`,\n            {\n               fieldInfo: f,\n            }\n         );\n      });\n\n      this.__missingFields.forEach((f) => {\n         this.warningsMessage(\n            `IMPORT FIELDS: Object[${f.objID}] could not find field[${\n               f.fieldID\n            }] for fieldSetting ${JSON.stringify(f.fieldInfo)}`,\n            {\n               object: f.objID,\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__cantFilter.forEach((f) => {\n         this.warningsMessage(\n            `Field[${f.field.id}] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] did not pass .canFilterField`,\n            {\n               field: f.field.toObj(),\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__duplicateFields.forEach((f) => {\n         this.warningsMessage(\n            `Field[${\n               f.fieldInfo.fieldID\n            }] referenced in fieldSetting[${JSON.stringify(\n               f.fieldInfo\n            )}] is a duplicate`,\n            {\n               fieldInfo: f.fieldInfo,\n            }\n         );\n      });\n\n      this.__linkProblems.forEach((f) => {\n         this.warningsMessage(f.message, f.data);\n      });\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `Query[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   isUuid(text) {\n      console.error(\n         \"ABObject.isUuid(): is depreciated.  directly reference AB.Rules.isUUID() instead.\"\n      );\n      return this.AB.isUUID(text);\n   }\n};\n","const ABProcessCore = require(\"../core/ABProcessCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcess extends ABProcessCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      this._unknownShapes = [];\n      // {array} [ BPMN:Shape, ... ]\n      // Generic Shapes that are added to the Process are registered here.\n      // We will list these as warnings to the ABDesigner.\n\n      // listen\n      this.AB.on(\"ab.abprocess.update\", (data) => {\n         if (this.id == data.objectId) this.fromValues(data.data);\n      });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // remove all my Elements\n      var allElements = this.elements();\n      var allDestroy = [];\n      allElements.forEach((e) => {\n         allDestroy.push(e.destroy());\n      });\n\n      return Promise.all(allDestroy).then(() => {\n         // now remove myself\n         return new Promise((resolve, reject) => {\n            this.toDefinition()\n               .destroy()\n               .then(() => {\n                  // allow normal processing to contine now:\n                  resolve();\n               })\n               .then(() => {\n                  // in the background\n                  // remove this reference from ALL Applications that link\n                  // to me:\n                  console.error(\n                     \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n                  );\n                  var appsWithProcess = this.AB.applications().find((a) => {\n                     return a.hasProcess(this);\n                  });\n                  if (appsWithProcess.length > 0) {\n                     appsWithProcess.forEach((a) => {\n                        a.processRemove(this);\n                     });\n                  }\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n      });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // if this is an update:\n      // if (this.id) {\n      // \treturn ABDefinition.update(this.id, this.toDefinition());\n      // } else {\n\n      // \treturn ABDefinition.create(this.toDefinition());\n      // }\n\n      // make sure all our tasks have save()ed.\n      var allSaves = [];\n      var allTasks = this.elements();\n      allTasks.forEach((t) => {\n         allSaves.push(t.save());\n      });\n      return Promise.all(allSaves).then(() => {\n         // now we can save our Process definition\n         return this.toDefinition()\n            .save()\n            .then((data) => {\n               // if I didn't have an .id then this was a create()\n               // and I need to update my data with the generated .id\n\n               if (!this.id) {\n                  this.id = data.id;\n               }\n\n               // Also, our embedded elements now all have .ids\n               // where they might not have before.  So now\n               // rebuild our this._elements hash with all id\n               var _new = {};\n               let _old = this._elements;\n               Object.keys(this._elements).forEach((k) => {\n                  _new[this._elements[k].id] = this._elements[k];\n               });\n               this._elements = _new;\n\n               // check to see if an update happened and then make\n               // sure we have that saved.\n               let needSave = false;\n               Object.keys(_new).forEach((k) => {\n                  if (!_old[k]) {\n                     needSave = true;\n                  }\n               });\n\n               if (needSave) {\n                  return this.save();\n               }\n            });\n      });\n   }\n\n   isValid() {\n      var validator = this.AB.Validation.validator();\n\n      // label/name must be unique:\n      var isNameUnique =\n         this.AB.processes((o) => {\n            return o.name.toLowerCase() == this.name.toLowerCase();\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"name\",\n            L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n         );\n      }\n\n      return validator;\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcess[OBJ]}\n    */\n   elementNewForModelDefinition(element) {\n      var task = this.AB.processElementNewForModelDefinition(element, this);\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   /**\n    * @method unknownShape()\n    * store a reference to a BPMN Shape that is in our XML diagram,\n    * but we don't have an element for.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShape(shape) {\n      this.unknownShapeRemove(shape);\n      this._unknownShapes.push(shape);\n   }\n\n   /**\n    * @method unknownShapeRemove()\n    * make sure we no longer track the provided BPMN Shape as an unknown shape.\n    * @param {BPMN:Shape} shape\n    */\n   unknownShapeRemove(shape) {\n      this._unknownShapes = this._unknownShapes.filter((s) => s.id != shape.id);\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = [].concat(this._warnings);\n      this.elements().forEach((e) => {\n         e.warningsEval();\n         allWarnings = allWarnings.concat(e.warnings());\n      });\n\n      if (this.elements().length == 0) {\n         allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      }\n\n      // perform a check of our xml document to see if we have any unknown\n      // shapes\n      if (!this._DOMParser) {\n         if (window.DOMParser) {\n            // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n            this._DOMParser = function (xmlStr) {\n               return new window.DOMParser().parseFromString(\n                  xmlStr,\n                  \"text/xml\"\n               );\n            };\n         } else if (\n            typeof window.ActiveXObject != \"undefined\" &&\n            new window.ActiveXObject(\"Microsoft.XMLDOM\")\n         ) {\n            this._DOMParser = function (xmlStr) {\n               var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n               xmlDoc.async = \"false\";\n               xmlDoc.loadXML(xmlStr);\n               return xmlDoc;\n            };\n         } else {\n            throw new Error(\"No XML parser found\");\n         }\n      }\n\n      // find any references to our generic shapes\n      let xml = this._DOMParser(this.xmlDefinition);\n      const genericShapes = [\n         \"bpmn2:startEvent\",\n         \"bpmn2:task\",\n         \"bpmn2:endEvent\",\n      ];\n      genericShapes.forEach((s) => {\n         let allElements = xml.getElementsByTagName(s);\n         for (let x = 0; x < allElements.length; x++) {\n            // if we don't know about this shape\n            let ele = allElements[x];\n            let myEle = this.elementForDiagramID(allElements[x].id);\n            if (!myEle) {\n               this.unknownShape(allElements[x]);\n            }\n         }\n      });\n\n      // if any unknown shapes have been reported:\n      if (this._unknownShapes.length) {\n         allWarnings.push({\n            message: \"Generic Tasks still undefined.\",\n            data: {},\n         });\n      }\n\n      return allWarnings;\n   }\n};\n","const ABStepCore = require(\"../core/ABStepCore\");\n\n// let L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABStep extends ABStepCore {\n   constructor(attributes, AB) {\n      super(attributes, AB);\n\n      // listen\n      // this.AB.on(\"ab.abprocess.update\", (data) => {\n      //    if (this.id == data.objectId) this.fromValues(data.data);\n      // });\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABObject\n    *\n    * also remove it from our parent application\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // debugger;\n\n      return new Promise((resolve, reject) => {\n         this.toDefinition()\n            .destroy()\n            .then(() => {\n               resolve();\n            })\n            .catch((err) => {\n               reject(err);\n            });\n      });\n\n      // remove all my Elements\n      // var allElements = this.elements();\n      // var allDestroy = [];\n      // allElements.forEach((e) => {\n      //    allDestroy.push(e.destroy());\n      // });\n\n      // return Promise.all(allDestroy).then(() => {\n      //    // now remove myself\n      //    return new Promise((resolve, reject) => {\n      //       this.toDefinition()\n      //          .destroy()\n      //          .then(() => {\n      //             // allow normal processing to contine now:\n      //             resolve();\n      //          })\n      //          .then(() => {\n      //             // in the background\n      //             // remove this reference from ALL Applications that link\n      //             // to me:\n      //             console.error(\n      //                \"TODO: ABProcess.destroy(): refactor to .emit('destroyed') and let containing Apps self remove.\"\n      //             );\n      //             var appsWithProcess = this.AB.applications().find((a) => {\n      //                return a.hasProcess(this);\n      //             });\n      //             if (appsWithProcess.length > 0) {\n      //                appsWithProcess.forEach((a) => {\n      //                   a.processRemove(this);\n      //                });\n      //             }\n      //          })\n      //          .catch((err) => {\n      //             reject(err);\n      //          });\n      //    });\n      // });\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABObject with it's parent ABApplication\n    *\n    *\n    * @return {Promise}\n    *                .resolve( {this} )\n    */\n   save() {\n      // debugger;\n      return this.toDefinition()\n         .save()\n         .then((data) => {\n            // if I didn't have an .id then this was a create()\n            // and I need to update my data with the generated .id\n\n            if (!this.id) {\n               this.id = data.id;\n            }\n            return this;\n         });\n   }\n\n   isValid() {\n      // debugger;\n      return true;\n      // var validator = this.AB.Validation.validator();\n\n      // // label/name must be unique:\n      // var isNameUnique =\n      //    this.AB.processes((o) => {\n      //       return o.name.toLowerCase() == this.name.toLowerCase();\n      //    }).length == 0;\n      // if (!isNameUnique) {\n      //    validator.addError(\n      //       \"name\",\n      //       L(`Process name must be unique (\"{0}\" already in use)`, [this.name])\n      //    );\n      // }\n\n      // return validator;\n   }\n\n   /**\n    * @method warningsAll()\n    * Return an array of mis configuration warnings for our object or any\n    * of our sub elements.\n    * @return {array} [ { message: \"warning message\", data:{} } ]\n    */\n   warningsAll() {\n      // debugger;\n      // report both OUR warnings, and any warnings from any of our fields\n      // var allWarnings = [].concat(this._warnings);\n      // this.elements().forEach((e) => {\n      //    e.warningsEval();\n      //    allWarnings = allWarnings.concat(e.warnings());\n      // });\n      // if (this.elements().length == 0) {\n      //    allWarnings.push({ message: \"No process Tasks defined.\", data: {} });\n      // }\n      // // perform a check of our xml document to see if we have any unknown\n      // // shapes\n      // if (!this._DOMParser) {\n      //    if (window.DOMParser) {\n      //       // Handy snippet from https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n      //       this._DOMParser = function (xmlStr) {\n      //          return new window.DOMParser().parseFromString(\n      //             xmlStr,\n      //             \"text/xml\"\n      //          );\n      //       };\n      //    } else if (\n      //       typeof window.ActiveXObject != \"undefined\" &&\n      //       new window.ActiveXObject(\"Microsoft.XMLDOM\")\n      //    ) {\n      //       this._DOMParser = function (xmlStr) {\n      //          var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      //          xmlDoc.async = \"false\";\n      //          xmlDoc.loadXML(xmlStr);\n      //          return xmlDoc;\n      //       };\n      //    } else {\n      //       throw new Error(\"No XML parser found\");\n      //    }\n      // }\n      // // find any references to our generic shapes\n      // let xml = this._DOMParser(this.xmlDefinition);\n      // const genericShapes = [\n      //    \"bpmn2:startEvent\",\n      //    \"bpmn2:task\",\n      //    \"bpmn2:endEvent\",\n      // ];\n      // genericShapes.forEach((s) => {\n      //    let allElements = xml.getElementsByTagName(s);\n      //    for (let x = 0; x < allElements.length; x++) {\n      //       // if we don't know about this shape\n      //       let ele = allElements[x];\n      //       let myEle = this.elementForDiagramID(allElements[x].id);\n      //       if (!myEle) {\n      //          this.unknownShape(allElements[x]);\n      //       }\n      //    }\n      // });\n      // // if any unknown shapes have been reported:\n      // if (this._unknownShapes.length) {\n      //    allWarnings.push({\n      //       message: \"Generic Tasks still undefined.\",\n      //       data: {},\n      //    });\n      // }\n      //\n      // return allWarnings;\n   }\n};\n","const ABViewManagerCore = require(\"../core/ABViewManagerCore\");\n\nmodule.exports = class ABViewManager extends ABViewManagerCore {};\n","const ABViewManagerMobileCore = require(\"../core/ABViewManagerMobileCore\");\n\nmodule.exports = class ABViewManagerMobile extends ABViewManagerMobileCore {};\n","var L = null;\n// multilingual Label fn()\n\nmodule.exports = class CSVImporter {\n   constructor(Label) {\n      // {ABMultilingual.label()} function.\n      //\n      if (!L) {\n         L = Label;\n\n         // if this was a v1: App param:\n         if (Label.Label) {\n            L = Label.Label;\n         }\n      }\n   }\n\n   /**\n    * @method getSeparateItems()\n    * Return the options of how the CSV values are separated.\n    * @return {array}  [ {id, value} ... ]\n    */\n   getSeparateItems() {\n      return [\n         { id: \",\", value: L(\"Comma (,)\") },\n         { id: \"\\t\", value: L(\"Tab (&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)\") },\n         { id: \";\", value: L(\"Semicolon (;)\") },\n         { id: \"s\", value: L(\"Space ( )\") },\n      ];\n   }\n\n   /**\n    * @method validateFile\n    * Validate file extension\n    * @param {*} fileInfo\n    *        https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @return {boolean}\n    */\n   validateFile(fileInfo) {\n      if (!fileInfo || !fileInfo.file || !fileInfo.file.type) return false;\n\n      // validate file type\n      let extensionType = fileInfo.file.type.toLowerCase();\n      if (\n         extensionType == \"text/csv\" ||\n         extensionType == \"application/vnd.ms-excel\"\n      ) {\n         return true;\n      } else {\n         return false;\n      }\n   }\n\n   /**\n    * @method getDataRows\n    * Pull data rows from the CSV file\n    *\n    * @param {Object} fileInfo - https://docs.webix.com/api__ui.uploader_onbeforefileadd_event.html\n    * @param {string} separatedBy\n    *\n    * @return {Promise} -[\n    * \t\t\t\t\t\t[\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    * \t\t\t\t\t\t[\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t\t\t\t]\n    */\n   getDataRows(fileInfo, separatedBy) {\n      if (!this.validateFile(fileInfo)) return Promise.reject();\n\n      return new Promise((resolve, reject) => {\n         // read CSV file\n         let reader = new window.FileReader();\n         reader.onload = (e) => {\n            let result = [];\n\n            // split lines\n            let dataRows = reader.result\n               .split(/\\r\\n|\\n|\\r/) // CRLF = \\r\\n; LF = \\n; CR = \\r;\n               .filter((row) => row && row.length > 0);\n\n            // split columns\n            (dataRows || []).forEach((row) => {\n               let dataCols = [];\n               if (separatedBy == \",\") {\n                  // NOTE: if the file contains ,, .match() can not reconize this empty string\n                  row = row.replace(/,,/g, \", ,\");\n\n                  // https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript#answer-11457952\n                  dataCols = row.match(/(\".*?\"|[^\",]+)(?=\\s*,|\\s*$)/g);\n               } else {\n                  dataCols = row.split(separatedBy);\n               }\n\n               result.push(dataCols.map((dCol) => this.reformat(dCol)));\n            });\n\n            resolve(result);\n         };\n         reader.readAsText(fileInfo.file);\n      });\n   }\n\n   /**\n    * @method getGuessDataType\n    * return our best guess of what type of data for the requested column.\n    * @param {array} dataRows\n    *        The data we are evaluating:\n    *        [\n    *           [\"Value 1.1\", \"Value 1.2\", \"Value 1.3\"],\n    *           [\"Value 2.1\", \"Value 2.2\", \"Value 2.3\"],\n    * \t\t ]\n    * @param colIndex {Number}\n    * @return {string}\n    */\n   getGuessDataType(dataRows, colIndex) {\n      var data,\n         // {various} the data pulled from the requested row/column\n         repeatNum = 10;\n      // {integer} how many rows do we want to scan trying to find a value\n\n      // Loop to find a value\n      for (var i = 1; i <= repeatNum; i++) {\n         var line = dataRows[i];\n         if (!line) break;\n\n         data = line[colIndex];\n\n         if (data != null && data.length > 0) break;\n      }\n\n      if (data == null || data == \"\") {\n         return \"string\";\n      } else if (\n         data == 0 ||\n         data == 1 ||\n         data == true ||\n         data == false ||\n         data == \"checked\" ||\n         data == \"unchecked\"\n      ) {\n         return \"boolean\";\n      } else if (!isNaN(data)) {\n         return \"number\";\n      } else if (Date.parse(data)) {\n         return \"date\";\n      } else {\n         // determine which type of string this might be:\n         if (data.length > 100) return \"LongText\";\n         else return \"string\";\n      }\n   }\n\n   /**\n    * @method reformat\n    * @param {string} str\n    */\n   reformat(str) {\n      if (!str) return \"\";\n\n      return str.trim().replace(/\"/g, \"\").replace(/'/g, \"\");\n   }\n};\n","const FilterComplexCore = require(\"../core/FilterComplexCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\n/**\n * @function _toInternal()\n * translate our external QB conditions into our internal format that\n * makes the cond.rule unique by adding the field.id to the rule.\n * @param {obj} cond - {\n *                         rules: [\n *                            {\n *                               alias: string || undefined,\n *                               key: uuid,\n *                               rule: string,\n *                               value: object,\n *                            }\n *                         ]\n *                      }\n *        the QB condition format we use exernally in our AB system.\n */\nfunction _toInternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.key) {\n      // Convert to format\n      // {\n      //    glue: \"and\",\n      //    rules: [\n      //       {\n      //          field: \"test_col\",\n      //          condition: { type: \"greater\", filter: 100 },\n      //       },\n      //    ],\n      // }\n      const field = fields.filter((f) => f.id == cond.key)[0];\n      cond.field = field?.id;\n\n      cond.condition = {\n         type: cond.rule,\n         filter: cond.value,\n      };\n\n      if (Array.isArray(cond.value)) cond.includes = cond.value;\n      else cond.includes = cond.value?.split?.(\",\") ?? [];\n\n      if (field?.key == \"date\" || field?.key == \"datetime\") {\n         cond.condition.filter = cond.condition.filter\n            ? AB.rules.toDate(cond.condition.filter)\n            : null;\n\n         cond.includes = cond.includes.map((v) => AB.rules.toDate(v));\n      }\n\n      delete cond.key;\n      delete cond.rule;\n      delete cond.value;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toInternal(r, fields);\n      });\n   }\n}\n\n/**\n * @function _toExternal()\n * translate our internal QB conditions into our external format that\n * where the cond.rule no longer has the field.id.\n * @param {obj} cond - {\n *                         glue: \"and\",\n *                         rules: [\n *                            {\n *                               field: \"test_col\",\n *                               condition: { type: \"greater\", filter: 100 },\n *                            },\n *                         ],\n *                      }\n *        the QB condition format we use internally\n */\nfunction _toExternal(cond, fields = []) {\n   if (!cond) return;\n   if (cond.field) {\n      let field = fields.filter((f) => f.id == cond.field)[0];\n      // cond.alias = alias || undefined;\n      cond.key = field?.id ?? cond.field;\n      cond.condition = cond.condition ?? {};\n      cond.rule = cond.condition.type;\n\n      let values =\n         cond.includes.map((v) => (v instanceof Date ? v.toISOString() : v)) ??\n         [];\n\n      // Convert multi-values to a string\n      if (cond.condition.filter) {\n         if (cond.condition.filter instanceof Date) {\n            if (values.indexOf(cond.condition.filter.toISOString()) < 0) {\n               values.push(cond.condition.filter);\n            }\n         } else if (values.indexOf(cond.condition.filter) < 0)\n            values.push(cond.condition.filter);\n      }\n\n      if (cond.rule === \"is_current_date\") {\n         let now = new Date();\n         let year = now.getFullYear();\n         let month = now.getMonth();\n         let date = now.getDate();\n\n         let startOfDay = new Date(year, month, date, 0, 0, 0);\n         let endOfDay = new Date(year, month, date, 23, 59, 59);\n\n         // Convert to UTC by subtracting the timezone offset\n         let startOfDayUTC = new Date(\n            startOfDay.getTime() + startOfDay.getTimezoneOffset() * 60000\n         );\n         let endOfDayUTC = new Date(\n            endOfDay.getTime() + endOfDay.getTimezoneOffset() * 60000\n         );\n         let formatDate = (date) => {\n            let isoString = date.toISOString();\n            return `${isoString.slice(0, 10)} ${isoString.slice(11, 19)}`;\n         };\n         cond.value = formatDate(startOfDayUTC).concat(\n            \"|\",\n            formatDate(endOfDayUTC)\n         );\n      } else {\n         cond.value = values\n            .map((v) => {\n               // Convert date format\n               if (field && (field.key === \"date\" || field.key === \"datetime\"))\n                  return field.exportValue(new Date(v));\n               return v;\n            })\n            .join(\",\");\n      }\n\n      delete cond.field;\n      delete cond.type;\n      delete cond.includes;\n      delete cond.condition;\n   }\n\n   if (cond.rules && cond.rules.length) {\n      (cond.rules ?? []).forEach((r) => {\n         _toExternal(r, fields);\n      });\n   }\n}\n\nmodule.exports = class FilterComplex extends FilterComplexCore {\n   constructor(idBase, AB, options = {}) {\n      idBase = idBase ?? \"ab_filterComplex\";\n\n      super(idBase, AB);\n\n      this._options = options ?? {};\n\n      this._initComplete = false;\n      // {bool}\n      // trying to prevent multiple .init() from being called due to\n      // various ways of initializing the component.\n\n      this.observing = false;\n      // {bool}\n      // try to prevent multiple observers generating >1 \"changed\"\n      // event.\n\n      let labels = (this.labels = {\n         common: (AB._App ?? {}).labels,\n         component: {\n            and: L(\"And\"),\n            or: L(\"Or\"),\n\n            thisObject: L(\"This Object\"),\n            inQuery: L(\"In Query\"),\n            notInQuery: L(\"Not In Query\"),\n            inQueryField: L(\"By Query Field\"),\n            notInQueryField: L(\"Not By Query Field\"),\n\n            inQueryFieldQueryPlaceholder: L(\"Choose a Query\"),\n            inQueryFieldFieldPlaceholder: L(\"Choose a Field\"),\n\n            sameAsUser: L(\"Same As User\"),\n            notSameAsUser: L(\"Not Same As User\"),\n\n            sameAsField: L(\"Same As Field\"),\n            notSameAsField: L(\"Not Field\"),\n\n            inDataCollection: L(\"In Data Collection\"),\n            notInDataCollection: L(\"Not In Data Collection\"),\n\n            containsCondition: L(\"contains\"),\n            notContainsCondition: L(\"doesn't contain\"),\n            isCondition: L(\"is\"),\n            isNotCondition: L(\"is not\"),\n            isEmpty: L(\"is empty\"),\n            isNotEmpty: L(\"is not empty\"),\n            isCurrentDateCondition: L(\"is current date\"),\n            beforeCondition: L(\"is before\"),\n            afterCondition: L(\"is after\"),\n            onOrBeforeCondition: L(\"is on or before\"),\n            onOrAfterCondition: L(\"is on or after\"),\n            beforeCurrentCondition: L(\"is before current date\"),\n            afterCurrentCondition: L(\"is after current date\"),\n            onOrBeforeCurrentCondition: L(\"is on or before current date\"),\n            onOrAfterCurrentCondition: L(\"is on or after current date\"),\n            onLastDaysCondition: L(\"last ... days\"),\n            onNextDaysCondition: L(\"next ... days\"),\n\n            equalCondition: L(\":\"),\n            notEqualCondition: L(\"≠\"),\n            lessThanCondition: L(\"<\"),\n            moreThanCondition: L(\">\"),\n            lessThanOrEqualCondition: L(\"≤\"),\n            moreThanOrEqualCondition: L(\"≥\"),\n\n            equalListCondition: L(\"equals\"),\n            notEqualListCondition: L(\"does not equal\"),\n\n            checkedCondition: L(\"is checked\"),\n            notCheckedCondition: L(\"is unchecked\"),\n\n            isCurrentUserCondition: L(\"is current user\"),\n            isNotCurrentUserCondition: L(\"is not current user\"),\n            containsCurrentUserCondition: L(\"contains current user\"),\n            notContainsCurrentUserCondition: L(\"does not contain current user\"),\n\n            contextDefaultOption: L(\"choose option\"),\n            equalsProcessValue: L(\"equals process value\"),\n            notEqualsProcessValueCondition: L(\"not equals process value\"),\n            inProcessValueCondition: L(\"in process value\"),\n            notInProcessValueCondition: L(\"not in process value\"),\n         },\n      });\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         popup: this.unique(`${idBase}_popup`),\n         querybuilder: this.unique(`${idBase}_querybuilder`),\n         save: this.unique(`${idBase}_save`),\n      });\n\n      // Set current username\n      this.Account.username = this.AB.Account.username();\n\n      this._settings.recordRuleFieldOptions = [];\n\n      // webix UI definition:\n      this.ui = {\n         rows: [\n            {\n               view: \"layout\",\n               type: \"clean\",\n               borderless: this._options.borderless ?? true,\n               rows: [\n                  {\n                     id: ids.querybuilder,\n                     view: \"query\",\n                     data: () => [],\n                     // data: async (field) => await this.pullOptions(field),\n                     fields: [],\n                     disabled: true,\n                     height: this._options.height,\n                  },\n               ],\n            },\n            {\n               id: ids.save,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Save\"),\n               hidden: this._options.isSaveHidden ?? false,\n               click: () => {\n                  if (this.myPopup) this.myPopup.hide();\n                  this.emit(\"save\", this.getValue());\n               },\n            },\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options) {\n      if (this._initComplete) return;\n\n      super.init(options);\n\n      const el = $$(this.ids.querybuilder);\n\n      if (el) {\n         if (!this.observing) {\n            this.__blockOnChange = true;\n            el.getState().$observe(\"value\", (v) => {\n               if (this.__blockOnChange) return false;\n\n               this.emit(\"changed\", this.getValue());\n            });\n            this.__blockOnChange = false;\n\n            // HACK!! The process of setting the $observe() is actually\n            // calling the cb() when set.  This is clearing our .condition\n            // if we call init() after we have setValues(). which can happen\n            // when using the popUp() method.\n            let _cond = this.condition;\n            this.condition = _cond;\n            this.observing = true;\n         }\n         this._initComplete = true;\n      }\n   }\n\n   /**\n    * @method isValid\n    * validate the row data is valid filter condition\n    *\n    * @param rowData {Object} - data row\n    * @param condition {Object} - [Optional] {\n    *                                           glue: \"and\" | \"or\",\n    *                                           rules: []\n    *                                        }\n    */\n   isValid(rowData, condition = this.condition) {\n      let helper = () => true;\n\n      let $query = $$(this.ids.querybuilder);\n      if ($query) {\n         helper = $query.getFilterFunction();\n         return helper(rowData);\n      } else {\n         return super.isValid(rowData, condition);\n      }\n   }\n\n   /**\n    * @method isConditionComplete()\n    * Check a given condition entry and indicate if it is fully\n    * filled out.\n    * @param {obj} cond\n    *        The Condition object we are checking.  If a Macro\n    *        condition if provided: { glue:\"and\", rules:[] } then\n    *        this method will return True/False if All rules are\n    *        complete.\n    *        If an individual rule is provided, then it evaluates\n    *        the completness of that rule. { key, rule, value }\n    * @return {bool}\n    */\n   isConditionComplete(cond) {\n      if (!cond) return false;\n\n      let isComplete = true;\n      // start optimistically.\n\n      if (cond?.glue) {\n         (cond.rules ?? []).forEach((r) => {\n            isComplete = isComplete && this.isConditionComplete(r);\n         });\n      } else {\n         // every condition needs a .key & .rule\n         if (!cond.key || cond.key == \"\") {\n            isComplete = false;\n         }\n\n         if (!cond.rule || cond.rule == \"\") {\n            isComplete = false;\n         }\n\n         if (isComplete) {\n            switch (cond.rule) {\n               case \"is_current_user\":\n               case \"is_not_current_user\":\n               case \"contain_current_user\":\n               case \"not_contain_current_user\":\n               case \"same_as_user\":\n               case \"not_same_as_user\":\n               case \"less_current\":\n               case \"greater_current\":\n               case \"less_or_equal_current\":\n               case \"greater_or_equal_current\":\n               case \"is_empty\":\n               case \"is_not_empty\":\n               case \"checked\":\n               case \"unchecked\":\n               case \"is_current_date\":\n                  // There are only a few rules that don't need a\n                  // value\n                  break;\n\n               default:\n                  // The rest do need a .value\n                  if (!cond.value || cond.value == \"\") {\n                     isComplete = false;\n                  }\n                  break;\n            }\n         }\n      }\n\n      return isComplete;\n   }\n\n   setValue(settings) {\n      super.setValue(settings);\n      this.condition = settings;\n\n      const el = $$(this.ids.querybuilder);\n      if (el) {\n         if (!settings) {\n            // Clear settings value of webix.query\n            el.define(\"value\", {\n               glue: \"and\",\n               rules: [],\n            });\n            return;\n         }\n\n         let qbSettings = this.AB.cloneDeep(settings);\n\n         // Settings should match a condition built upon our QB format:\n         // {\n         //    glue:\"and\",\n         //    rules:[\n         //       {\n         //          key:\"uuid\",\n         //          rule:\"\",\n         //          value:\"\"\n         //       }\n         //    ]\n         // }\n         // externally our key should be the field.id and the rules should be\n         // the \"contains\", \"not_contains\", \"equal\" ... keywords.\n         // However, internally, we convert these rules into .ids that are\n         // unique for each field (see uiInit()).  So when we bring in settings\n         // we need to translate them into our internal format:\n\n         _toInternal(qbSettings, this._Fields);\n\n         this.__blockOnChange = true;\n         el.define(\"value\", qbSettings);\n         this.__blockOnChange = false;\n      }\n   }\n\n   getValue() {\n      if ($$(this.ids.querybuilder)) {\n         let settings = this.AB.cloneDeep(\n            $$(this.ids.querybuilder).getState().value ?? {}\n         );\n\n         // what we pull out of the QB will have .rules in our internal format:\n         // {field.id}_{rule}  (see uiInit() )\n         // But we need to store them in our generic QB format for use outside\n         // our FilterComplex widget.\n         _toExternal(settings, this._Fields);\n         this.condition = settings;\n      }\n\n      return super.getValue();\n   }\n\n   fieldsLoad(fields = [], object = null) {\n      super.fieldsLoad(fields, object);\n      this.uiInit();\n   }\n\n   toShortHand() {\n      return \"Add Filters\";\n   }\n\n   uiInit() {\n      this.uiQueryCustomValue();\n\n      let el = $$(this.ids.querybuilder);\n      if (el) {\n         // Clear fields\n         while (el.config.fields.length > 0) {\n            el.config.fields.pop();\n         }\n         // Set fields\n         (this.fieldsToQB() ?? []).forEach((f) => {\n            el.config.fields.push(f);\n         });\n         if (el.config.fields.length) {\n            el.enable();\n         } else {\n            this.setValue(\"\");\n            el.disable();\n         }\n      }\n   }\n\n   // HACK: have to overwrite Webix Query's function to support our custom input requirement.\n   // HooWoo\n   uiQueryCustomValue() {\n      const $el = $$(this.ids.querybuilder);\n      if (!$el) return;\n\n      // window.query.views.filter.prototype.CreateFilter = (\n      $el.$app.require(\"jet-views\", \"filter\").prototype.CreateFilter = (\n         field,\n         type,\n         format,\n         conditions,\n         place\n      ) => {\n         let inputs = this.uiValue(field);\n\n         let ui = {\n            id: place.config.id,\n            view: \"filter\",\n            localId: \"filter\",\n            conditions: conditions,\n            field: field,\n            mode: type,\n            template: function (o) {\n               let str = o[field];\n               let parser =\n                  format ?? (type == \"date\" ? webix.i18n.dateFormatStr : null);\n               if (parser) str = parser(str);\n               return str;\n            },\n            inputs: inputs,\n            margin: 6,\n         };\n\n         let filter = webix.ui(ui, place);\n\n         // let data = [];\n         // const $query = $$(this.ids.querybuilder);\n         // if ($query) {\n         //    data = $query.app.getService(\"backend\").data(field);\n         // }\n         // filter.parse(data);\n\n         return filter;\n      };\n   }\n\n   uiValue(fieldColumnName) {\n      let result;\n\n      // Special case: this_object\n      if (fieldColumnName == \"this_object\") {\n         return []\n            .concat(this.uiQueryValue(\"this_object\"))\n            .concat(this.uiDataCollectionValue(\"this_object\"))\n            .concat(this.uiCustomValue(\"this_object\"))\n            .concat(this.uiContextValue(\"this_object\", \"uuid\"));\n      }\n\n      let field = (this._Fields ?? []).filter(\n         (f) => f.id == fieldColumnName\n      )[0];\n\n      switch (field?.key) {\n         case \"boolean\":\n            result = this.uiNoneValue(field);\n            break;\n         case \"connectObject\":\n            result = []\n               .concat(this.uiQueryValue(field))\n               .concat(this.uiUserValue(field))\n               .concat(this.uiDataCollectionValue(field))\n               .concat(this.uiContextValue(field))\n               .concat(this.uiNoneValue());\n            break;\n         case \"date\":\n         case \"datetime\":\n            result = [\"datepicker\", \"daterangepicker\"]\n               .concat(this.uiNoneValue())\n               .concat(this.uiContextValue(field));\n            break;\n         case \"list\":\n            result = this.uiListValue(field);\n            break;\n         case \"user\":\n            result = []\n               .concat(this.uiNoneValue())\n               .concat(this.uiUserValue(field));\n            break;\n         // case \"number\":\n         //    result = [\"text\"];\n         //    break;\n         case \"string\":\n         case \"LongText\":\n         case \"email\":\n            result = this.uiNoneValue();\n            break;\n      }\n\n      // Add filter options to Custom index\n      const LinkType = `${field?.settings?.linkType}:${field?.settings?.linkViaType}`;\n      if (\n         field?.settings?.isCustomFK &&\n         // 1:M\n         (LinkType == \"one:many\" ||\n            // 1:1 isSource = true\n            (LinkType == \"one:one\" && field?.settings?.isSource))\n      ) {\n         result = (result ?? []).concat(this.uiTextValue(field));\n      } else if (field?.key != \"connectObject\") {\n         result = (result ?? [])\n            .concat(this.uiTextValue(field))\n            .concat(this.uiQueryFieldValue(field))\n            .concat(this.uiContextValue(field));\n      }\n      // Special case: from Process builder\n      // .processFieldsLoad()\n      else if (fieldColumnName.indexOf(\"uuid\") > -1) {\n         result = this.uiContextValue(null, fieldColumnName);\n      }\n\n      if (this._settings.isRecordRule) {\n         result = (result ?? []).concat(this.uiRecordRuleValue(field));\n      }\n\n      result = (result ?? []).concat(this.uiCustomValue(field));\n\n      return result;\n   }\n\n   uiNoneValue() {\n      return [\n         {\n            batch: \"none\",\n            borderless: true,\n            view: \"template\",\n            template: \"\",\n         },\n      ];\n   }\n\n   uiBooleanValue(field) {\n      return [\n         {\n            batch: \"boolean\",\n            view: \"checkbox\",\n         },\n      ];\n   }\n\n   uiTextValue(field) {\n      return [\n         {\n            batch: \"text\",\n            view: \"text\",\n            on: {\n               onAfterRender: function () {\n                  // HACK: focus on webix.text and webix.textarea\n                  // Why!! If the parent layout has zIndex lower than 101,\n                  // then is not able to focus to webix.text and webix.textarea\n                  let $layout =\n                     this.queryView(function (a) {\n                        return !a.getParentView();\n                     }, \"parent\") ?? this;\n                  $layout.$view.style.zIndex = 202;\n               },\n            },\n         },\n      ];\n   }\n\n   uiQueryValue(field) {\n      let options = [];\n\n      let isQueryField =\n         this._QueryFields?.filter((f) => f.id == field.id).length > 0;\n\n      // populate the list of Queries for this_object:\n      if (field == \"this_object\" && this._Object) {\n         options = this.queries((q) => q.canFilterObject(this._Object));\n      }\n      // populate the list of Queries for a query field\n      else if (isQueryField) {\n         options = this.queries(\n            (q) =>\n               (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n               q.canFilterObject(field.datasourceLink)\n         );\n      }\n\n      options?.forEach((q) => {\n         options.push({\n            id: q.id,\n            value: q.label,\n         });\n      });\n\n      return [\n         {\n            batch: \"query\",\n            view: \"combo\",\n            options: options ?? [],\n         },\n      ];\n   }\n\n   uiListValue(field) {\n      return [\n         {\n            batch: \"list\",\n            view: \"combo\",\n            options: field?.settings?.options?.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiUserValue(field) {\n      return [\n         {\n            batch: \"user\",\n            view: \"combo\",\n            options: this.AB.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiDataCollectionValue(field) {\n      let linkObjectId;\n      if (field == \"this_object\" && this._Object) {\n         linkObjectId = this._Object.id;\n      } else {\n         linkObjectId = field?.settings?.linkObject;\n      }\n\n      return [\n         {\n            batch: \"datacollection\",\n            view: \"combo\",\n            options: linkObjectId\n               ? this.AB.datacollections(\n                    (dc) => dc?.datasource?.id == linkObjectId\n                 ).map((dc) => {\n                    return {\n                       id: dc.id,\n                       value: dc.label,\n                    };\n                 })\n               : [],\n         },\n      ];\n   }\n\n   uiQueryFieldValue(field) {\n      return [\n         {\n            batch: \"queryField\",\n            view: \"combo\",\n            placeholder: this.labels.component.inQueryFieldQueryPlaceholder,\n            options: this.queries(\n               (q) => this._Object == null || q.id != this._Object.id\n            ).map((q) => {\n               return {\n                  id: q.id,\n                  value: q.label,\n               };\n            }),\n         },\n      ];\n   }\n\n   uiRecordRuleValue(field) {\n      return [\n         {\n            batch: \"recordRule\",\n            view: \"select\",\n            options: this._settings.recordRuleFieldOptions ?? [],\n         },\n      ];\n   }\n\n   uiContextValue(field, processFieldKey = null) {\n      const processFields = (this._ProcessFields ?? [])\n         .filter((pField) => {\n            if (!pField) return false;\n\n            let result = false;\n            switch (field) {\n               case \"this_object\":\n                  result =\n                     this._Object.id === pField.object?.id && !pField.field;\n\n                  break;\n\n               default:\n                  switch (field.key) {\n                     case \"boolean\":\n                        result = [\"boolean\"].includes(pField.field?.key);\n\n                        break;\n\n                     case \"connectObject\":\n                        result =\n                           field.settings.linkObject ===\n                           (pField.field?.object.id ?? pField.object.id);\n\n                        if (!field.settings.isCustomFK) {\n                           result = result && !pField.field;\n\n                           break;\n                        }\n\n                        result =\n                           result &&\n                           (field.settings.indexField ||\n                              field.settings.indexField2) === pField.field?.id;\n\n                        break;\n\n                     case \"date\":\n                     case \"datetime\":\n                        result = [\"date\", \"datetime\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"calculate\":\n                     case \"formula\":\n                     case \"number\":\n                        result = [\"calculate\", \"formula\", \"number\"].includes(\n                           pField.field?.key\n                        );\n\n                        break;\n\n                     case \"string\":\n                     case \"LongText\":\n                     case \"email\":\n                     case \"AutoIndex\":\n                     case \"list\":\n                        result = [\n                           \"string\",\n                           \"LongText\",\n                           \"email\",\n                           \"AutoIndex\",\n                           \"list\",\n                        ].includes(pField.field?.key);\n\n                        break;\n\n                     case \"user\":\n                        result = [\"user\"].includes(pField.field?.key);\n\n                        break;\n\n                     default:\n                        if (pField.key) {\n                           // uuid\n                           const processFieldId = pField.key.split(\".\").pop();\n\n                           result =\n                              processFieldId === field.id ||\n                              processFieldId === field.key ||\n                              processFieldId === processFieldKey ||\n                              pField.key === processFieldKey;\n                        }\n\n                        break;\n                  }\n\n                  break;\n            }\n\n            return result;\n         })\n         .map((e) => {\n            return {\n               id: e.key,\n               value: L(\"context({0})\", [e.label]),\n            };\n         });\n\n      if (!processFields) return [];\n\n      return [\n         {\n            batch: \"context\",\n            view: \"select\",\n            options: [\n               {\n                  id: \"empty\",\n                  value: this.labels.component.contextDefaultOption,\n               },\n               ...processFields,\n            ],\n         },\n      ];\n   }\n\n   uiCustomValue(field) {\n      if (!field) return [];\n\n      const customOptions = this._customOptions ?? {};\n      const options = customOptions[field.id ?? field] ?? {};\n      return options.values ?? [];\n   }\n\n   popUp(...options) {\n      const condition = Object.assign({}, this.condition);\n\n      if (!this.myPopup) {\n         let ui = {\n            id: this.ids.popup,\n            view: \"popup\",\n            height: 400,\n            width: 800,\n            body: this.ui,\n         };\n\n         if (!$$(this.ids.popup)) {\n            this.myPopup = webix.ui(ui);\n            this.init(this._settings);\n            if (this._Fields) {\n               this.fieldsLoad(this._Fields, this._Object);\n            }\n\n            // NOTE: do this, before the .setValue() operation, as we need to have\n            // our fields and filters defined BEFORE a setValue() is performed.\n            // this.uiInit();\n\n            if (condition) {\n               this.setValue(condition);\n            }\n\n            this.myPopup.show(...options);\n         } else {\n            $$(this.ids.popup).show(...options);\n         }\n      } else {\n         this.myPopup.show(...options);\n      }\n   }\n\n   /**\n    * @method addCustomOption\n    *\n    * @param {string|uuid} fieldId\n    * @param {Object} options - {\n    *                               conditions: [],\n    *                               values: []\n    *                           }\n    */\n   addCustomOption(fieldId, options = {}) {\n      this._customOptions = this._customOptions ?? {};\n      this._customOptions[fieldId] = options;\n   }\n};\n","const RowFilterCore = require(\"../core/RowFilterCore\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class RowFilter extends RowFilterCore {\n   constructor(App, idBase, AB) {\n      super(App, idBase, AB);\n\n      console.error(\"TODO: Switch RowFilter => FilterComplex\");\n\n      // internal list of Webix IDs to reference our UI components.\n      let ids = (this.ids = {\n         component: this.unique(`${idBase}_rowFilter`),\n         filterForm: this.unique(`${idBase}_rowFilter_form`),\n         addNewFilter: this.unique(`${idBase}_rowFilter_addNewFilter`),\n\n         glue: this.unique(`${idBase}_rowFilter_glue`),\n         field: this.unique(`${idBase}_rowFilter_field`),\n         rule: this.unique(`${idBase}_rowFilter_rule`),\n         inputValue: this.unique(`${idBase}_rowFilter_inputValue`),\n\n         queryCombo: this.unique(`${idBase}_rowFilter_queryCombo`),\n         queryFieldCombo: this.unique(`${idBase}_rowFilter_queryFieldCombo`),\n         queryFieldComboQuery: this.unique(\n            `${idBase}_rowFilter_queryFieldComboQuery`\n         ),\n         queryFieldComboField: this.unique(\n            `${idBase}_rowFilter_queryFieldComboField`\n         ),\n         fieldMatch: this.unique(`${idBase}_rowFilter_fieldMatchCombo`),\n\n         dataCollection: this.unique(`${idBase}_rowFilter_dataCollection`),\n\n         listOptions: this.unique(`${idBase}_rowFilter_listOptions`),\n\n         datePicker: this.unique(`${idBase}_rowFilter_datePicker`),\n      });\n\n      // Set current username\n      // this.Account.username = this.AB.Account.username();\n\n      var batchName; // we need to revert to this default when switching away from a in/by query field\n\n      // Default options list to push to all fields\n      this.queryFieldOptions = [\n         {\n            value: L(\"By Query Field\"),\n            id: \"in_query_field\",\n         },\n         {\n            value: L(\"Not In Query\"),\n            id: \"not_in_query_field\",\n         },\n      ];\n\n      this.recordRuleOptions = [];\n      this.recordRuleFieldOptions = [];\n\n      let _logic = this._logic || {};\n\n      /**\n       * @method getFieldList\n       * return field list to render options\n       */\n      _logic.getFieldList = () => {\n         return (this._Fields || []).map((f) => {\n            let label = f.label;\n\n            // include object's name to options\n            if (this._settings.showObjectName && f.object) {\n               label = f.object.label + \".\" + f.label;\n            }\n\n            return {\n               id: f.id,\n               value: label,\n               alias: f.alias || undefined, // ABObjectQuery\n            };\n         });\n      };\n\n      _logic.getFilterUI = () => {\n         let instance = this;\n         let config_settings = this.config_settings || {};\n\n         return {\n            id: \"f\" + webix.uid(),\n            isolate: true,\n            cols: [\n               {\n                  // Add / Or\n                  view: \"combo\",\n                  id: ids.glue,\n                  width: 80,\n                  value: config_settings.glue || \"and\",\n                  options: [\n                     {\n                        value: L(\"And\"),\n                        id: \"and\",\n                     },\n                     {\n                        value: L(\"Or\"),\n                        id: \"or\",\n                     },\n                  ],\n                  on: {\n                     onChange: function (newVal, oldVal) {\n                        _logic.selectCombineCondition(newVal);\n                     },\n                  },\n               },\n               {\n                  // Field list\n                  view: \"combo\",\n                  id: ids.field,\n                  suggest: {\n                     on: {\n                        onBeforeShow: function () {\n                           this.define(\"width\", 400);\n                           this.resize();\n                        },\n                     },\n                     data: _logic.getFieldList(),\n                  },\n                  on: {\n                     onChange: function (columnId) {\n                        var $viewCond = this.getParentView();\n                        _logic.selectField(columnId, $viewCond);\n                     },\n                  },\n               },\n               // Comparer\n               {\n                  id: ids.rule,\n                  width: 220,\n                  cells: [\n                     {},\n                     // Query\n                     {\n                        batch: \"query\",\n                        view: \"combo\",\n                        value: \"in_query\",\n                        options: [\n                           {\n                              value: L(\"In Query\"),\n                              id: \"in_query\",\n                           },\n                           {\n                              value: L(\"Not In Query\"),\n                              id: \"not_in_query\",\n                           },\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is empty\"),\n                              id: \"is_empty\",\n                           },\n                           {\n                              value: L(\"is not empty\"),\n                              id: \"is_not_empty\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                           {\n                              value: L(\"In Data Collection\"),\n                              id: \"in_data_collection\",\n                           },\n                           {\n                              value: L(\"Not In Data Collection\"),\n                              id: \"not_in_data_collection\",\n                           },\n                        ].concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n\n                     // Date\n                     {\n                        batch: \"date\",\n                        view: \"combo\",\n                        value: \"less\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"is before\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\"is after\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"is on or before\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"is on or after\"),\n                              id: \"greater_or_equal\",\n                           },\n                           {\n                              value: L(\"is before current date\"),\n                              id: \"less_current\",\n                           },\n                           {\n                              value: L(\"is after current date\"),\n                              id: \"greater_current\",\n                           },\n                           {\n                              value: L(\"is on or before current date\"),\n                              id: \"less_or_equal_current\",\n                           },\n                           {\n                              value: L(\"is on or after current date\"),\n                              id: \"greater_or_equal_current\",\n                           },\n                           {\n                              value: L(\"last ... days\"),\n                              id: \"last_days\",\n                           },\n                           {\n                              value: L(\"next ... days\"),\n                              id: \"next_days\",\n                           },\n                           {\n                              value: L(\"is current date\"),\n                              id: \"is_current_date\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\":\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"≠\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"<\"),\n                              id: \"less\",\n                           },\n                           {\n                              value: L(\">\"),\n                              id: \"greater\",\n                           },\n                           {\n                              value: L(\"≤\"),\n                              id: \"less_or_equal\",\n                           },\n                           {\n                              value: L(\"≥\"),\n                              id: \"greater_or_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                           {\n                              value: L(\"Same As User\"),\n                              id: \"same_as_user\",\n                           },\n                           {\n                              value: L(\"Not Same As User\"),\n                              id: \"not_same_as_user\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition, oldValue) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"combo\",\n                        value: \"equals\",\n                        options: [\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        value: \"is_current_user\",\n                        options: [\n                           {\n                              value: L(\"is current user\"),\n                              id: \"is_current_user\",\n                           },\n                           {\n                              value: L(\"is not current user\"),\n                              id: \"is_not_current_user\",\n                           },\n                           {\n                              value: L(\"contains current user\"),\n                              id: \"contain_current_user\",\n                           },\n                           {\n                              value: L(\"does not contain current user\"),\n                              id: \"not_contain_current_user\",\n                           },\n                           {\n                              value: L(\"equals\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"does not equal\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"combo\",\n                        value: \"contains\",\n                        options: [\n                           {\n                              value: L(\"contains\"),\n                              id: \"contains\",\n                           },\n                           {\n                              value: L(\"doesn't contain\"),\n                              id: \"not_contains\",\n                           },\n                           {\n                              value: L(\"is\"),\n                              id: \"equals\",\n                           },\n                           {\n                              value: L(\"is not\"),\n                              id: \"not_equal\",\n                           },\n                        ]\n                           .concat(instance.queryFieldOptions)\n                           .concat(instance.recordRuleOptions),\n                        on: {\n                           onChange: function (condition) {\n                              var $viewComparer = this.getParentView();\n                              var $viewCond = $viewComparer.getParentView();\n                              _logic.onChangeRule(condition, $viewCond);\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               // Value\n               {\n                  id: ids.inputValue,\n                  isolate: true,\n                  cells: [\n                     {\n                        batch: \"empty\",\n                     },\n\n                     // Query\n                     {\n                        id: ids.queryCombo,\n\n                        batch: \"query\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Query Field\n                     {\n                        id: ids.queryFieldCombo,\n                        batch: \"queryField\",\n                        rows: [\n                           {\n                              id: ids.queryFieldComboQuery,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Query\"),\n                              on: {\n                                 onChange: function (value) {\n                                    var $viewComparer = this.getParentView();\n                                    var $viewCond = $viewComparer\n                                       .getParentView()\n                                       .getParentView();\n                                    _logic.onChangeQueryFieldCombo(\n                                       value,\n                                       $viewCond\n                                    );\n\n                                    _logic.onChange();\n                                 },\n                              },\n                           },\n                           {\n                              id: ids.queryFieldComboField,\n                              view: \"combo\",\n                              options: [],\n                              placeholder: L(\"Choose a Field\"),\n                              on: {\n                                 onChange: _logic.onChange,\n                              },\n                           },\n                        ],\n                     },\n\n                     // Field match\n                     {\n                        id: ids.fieldMatch,\n                        batch: \"fieldMatch\",\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Data collection\n                     {\n                        id: ids.dataCollection,\n                        batch: \"dataCollection\",\n                        view: \"richselect\",\n                        options: [],\n                        on: {\n                           onChange: _logic.onChange,\n                        },\n                     },\n\n                     // Date\n                     {\n                        // inputView.format = field.getDateFormat();\n                        batch: \"date\",\n                        id: ids.datePicker,\n                        view: \"datepicker\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Number\n                     {\n                        batch: \"number\",\n                        view: \"text\",\n                        validate: webix.rules.isNumber,\n                        on: {\n                           onTimedKeyPress: function () {\n                              if (this.validate()) _logic.onChange();\n                           },\n                        },\n                     },\n                     // List\n                     {\n                        batch: \"list\",\n                        id: ids.listOptions,\n                        view: \"combo\",\n                        options: [],\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Boolean\n                     {\n                        batch: \"boolean\",\n                        view: \"checkbox\",\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // User\n                     {\n                        batch: \"user\",\n                        view: \"combo\",\n                        options: this.AB.Account.userList().map((u) => {\n                           return {\n                              id: u.username,\n                              value: u.username,\n                           };\n                        }),\n                        on: {\n                           onChange: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // String\n                     {\n                        batch: \"string\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                     // Email\n                     {\n                        batch: \"email\",\n                        view: \"text\",\n                        on: {\n                           onTimedKeyPress: function () {\n                              _logic.onChange();\n                           },\n                        },\n                     },\n                  ],\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewForm = this.getFormView();\n\n                     var indexView = $viewForm.index(this.getParentView());\n\n                     _logic.addNewFilter(indexView + 1);\n                  },\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  autowidth: true,\n                  click: function () {\n                     var $viewCond = this.getParentView();\n\n                     _logic.removeNewFilter($viewCond);\n                  },\n               },\n            ],\n         };\n      };\n\n      _logic.getAddButtonUI = () => {\n         return {\n            view: \"button\",\n            id: ids.addNewFilter,\n            css: \"webix_primary\",\n            type: \"form\",\n            label: L(\"Add a filter\"),\n            click: () => {\n               _logic.addNewFilter();\n            },\n         };\n      };\n\n      _logic.addNewFilter = (index, fieldId) => {\n         var viewId;\n         var ui = _logic.getFilterUI();\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            viewId = $viewForm.addView(ui, index);\n\n            _logic.toggleAddNewButton();\n\n            // select a option of field\n            if (fieldId) _logic.selectField(fieldId, $$(viewId), true);\n         }\n\n         return viewId;\n      };\n\n      _logic.removeNewFilter = function ($viewCond) {\n         var $viewForm = $$(ids.filterForm);\n\n         $viewForm.removeView($viewCond);\n\n         _logic.toggleAddNewButton();\n\n         _logic.onChange();\n      };\n\n      _logic.toggleAddNewButton = function () {\n         if (!$$(ids.filterForm)) return;\n\n         // Show \"Add new filter\" button\n         if ($$(ids.filterForm).getChildViews().length < 1) {\n            $$(ids.filterForm).hide();\n            $$(ids.addNewFilter).show();\n         }\n         // Hide \"Add new filter\" button\n         else {\n            $$(ids.filterForm).show();\n            $$(ids.addNewFilter).hide();\n         }\n      };\n\n      _logic.selectCombineCondition = (val, ignoreNotify) => {\n         // define combine value to configuration\n         this.config_settings.glue = val;\n\n         // update value of every combine conditions\n         var $viewConds = $$(ids.filterForm).getChildViews();\n         $viewConds.forEach((v) => {\n            if (v.$$ && v.$$(ids.glue)) v.$$(ids.glue).setValue(val);\n         });\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.selectField = (columnId, $viewCond, ignoreNotify) => {\n         if (!this._Fields) return;\n\n         var field = this._Fields.filter((f) => f.id == columnId)[0];\n         if (!field) return;\n\n         // switch view\n         batchName = field.key;\n         if (field.id == \"this_object\") batchName = \"query\";\n         // Special this object query\n         else if (batchName == \"LongText\" || batchName == \"combined\")\n            batchName = \"string\";\n         else if (field.key == \"formula\") batchName = \"number\";\n         var isQueryField =\n            this._QueryFields.filter((f) => {\n               return f.id == field.id;\n            }).length > 0;\n         if (isQueryField) {\n            // we chose a connectField which is now a Query type\n            batchName = \"query\";\n         }\n         $viewCond.$$(ids.rule).showBatch(batchName);\n         $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n         let options = [];\n         let Queries = [];\n\n         // populate the list of Queries for this_object:\n         if (field.id == \"this_object\" && this._Object) {\n            Queries = this.queries((q) => q.canFilterObject(this._Object));\n         }\n         // populate the list of Queries for a query field\n         else if (isQueryField) {\n            Queries = this.queries((q) => {\n               return (\n                  (this._Object ? this._Object.id : \"\") != q.id && // Prevent filter looping\n                  q.canFilterObject(field.datasourceLink)\n               );\n            });\n         }\n\n         Queries.forEach((q) => {\n            options.push({\n               id: q.id,\n               value: q.label,\n            });\n         });\n         $viewCond\n            .$$(ids.inputValue)\n            .$$(ids.queryCombo)\n            .define(\"options\", options);\n         $viewCond.$$(ids.inputValue).$$(ids.queryCombo).refresh();\n\n         // populate options of list\n         if (field.key == \"list\") {\n            let listOptions = field.settings.options.map(function (x) {\n               return {\n                  id: x.id,\n                  value: x.text,\n               };\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.listOptions)\n               .define(\"options\", listOptions);\n            $viewCond.$$(ids.inputValue).$$(ids.listOptions).refresh();\n         }\n         // set format of datepicker\n         else if (field.key == \"date\") {\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.datePicker)\n               .define(\"format\", field.getFormat());\n            $viewCond.$$(ids.inputValue).$$(ids.datePicker).refresh();\n         }\n\n         var rule = null,\n            ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.getList) {\n            let defaultOpt = ($viewComparer.getList().config.data || [])[0];\n            if (defaultOpt) {\n               $viewComparer.setValue(defaultOpt.id);\n            }\n\n            // rule = $viewComparer.getValue();\n            // if (rule == \"in_query_field\" || rule == \"not_in_query_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n            // } else if (rule == \"same_as_field\" || rule == \"not_same_as_field\") {\n            // \t// Show the new value inputs\n            // \t$viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n            // }\n         }\n\n         if (!ignoreNotify) _logic.onChange();\n      };\n\n      _logic.onChangeRule = (rule, $viewCond, notify = false) => {\n         switch (rule) {\n            case \"contains\":\n            case \"not_contains\":\n            case \"equals\":\n            case \"not_equal\":\n               // For \"connect_fields\" search by CUSTOM index value\n               if (batchName == \"query\") {\n                  $viewCond.$$(ids.inputValue).showBatch(\"string\");\n               }\n               // If want to call notify or call .onChange(), then pass notify is true.\n               // _logic.onChange();\n               break;\n\n            case \"is_current_user\":\n            case \"is_not_current_user\":\n            case \"contain_current_user\":\n            case \"not_contain_current_user\":\n            case \"same_as_user\":\n            case \"not_same_as_user\":\n            case \"less_current\":\n            case \"greater_current\":\n            case \"less_or_equal_current\":\n            case \"greater_or_equal_current\":\n            case \"is_empty\":\n            case \"is_not_empty\":\n            case \"is_current_date\":\n               // clear and disable the value field\n               $viewCond.$$(ids.inputValue).showBatch(\"empty\");\n               _logic.onChange();\n               break;\n\n            case \"last_days\":\n            case \"next_days\":\n               // Show the number input\n               $viewCond.$$(ids.inputValue).showBatch(\"number\");\n               break;\n\n            case \"in_query_field\":\n            case \"not_in_query_field\":\n               // populate the list of Queries for this_object:\n               var options = [];\n\n               // Get all application's queries\n               this.queries(\n                  (q) => this._Object == null || q.id != this._Object.id\n               ).forEach((q) => {\n                  options.push({\n                     id: q.id,\n                     value: q.label,\n                  });\n               });\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .define(\"options\", options);\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.queryFieldComboQuery)\n                  .refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"queryField\");\n               break;\n\n            case \"same_as_field\":\n            case \"not_same_as_field\":\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.fieldMatch)\n                  .define(\"options\", this.recordRuleFieldOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.fieldMatch).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"fieldMatch\");\n               break;\n\n            case \"in_data_collection\":\n            case \"not_in_data_collection\": {\n               let dcOptions = [];\n\n               // pull data collection list\n\n               // get id of the link object\n               let linkObjectId,\n                  columnId = $viewCond.$$(ids.field).getValue();\n               if (columnId == \"this_object\" && this._Object) {\n                  linkObjectId = this._Object.id;\n               } else {\n                  let field = this._Fields.filter((f) => f.id == columnId)[0];\n                  if (field) linkObjectId = field.settings.linkObject;\n               }\n\n               if (this._Application && linkObjectId) {\n                  this._Application\n                     .datacollections(\n                        (dc) =>\n                           dc.datasource && dc.datasource.id == linkObjectId\n                     )\n                     .forEach((dc) => {\n                        dcOptions.push({\n                           id: dc.id,\n                           value: dc.label,\n                        });\n                     });\n               }\n\n               $viewCond\n                  .$$(ids.inputValue)\n                  .$$(ids.dataCollection)\n                  .define(\"options\", dcOptions);\n               $viewCond.$$(ids.inputValue).$$(ids.dataCollection).refresh();\n\n               // Show the new value inputs\n               $viewCond.$$(ids.inputValue).showBatch(\"dataCollection\");\n               break;\n            }\n\n            default:\n               // Show the default value inputs\n               $viewCond.$$(ids.inputValue).showBatch(batchName);\n\n               if (notify) _logic.onChange();\n\n               break;\n         }\n      };\n\n      _logic.onChangeQueryFieldCombo = (value, $viewCond) => {\n         // populate the list of Queries for this_object:\n         let options = [];\n         // Get all queries fields\n         let Query = this.queries((q) => {\n            return q.id == value;\n         })[0];\n         if (Query) {\n            Query.fields((f) => {\n               return !f.isConnection;\n            }).forEach((q) => {\n               options.push({\n                  id: q.id,\n                  value: q.object.label + \".\" + q.label,\n               });\n            });\n\n            $viewCond\n               .$$(ids.inputValue)\n               .$$(ids.queryFieldComboField)\n               .define(\"options\", options);\n            $viewCond.$$(ids.inputValue).$$(ids.queryFieldComboField).refresh();\n         }\n\n         // _logic.onChange();\n      };\n\n      _logic.onChange = () => {\n         if (!this.__blockOnChange) {\n            // refresh config settings before notify\n            _logic.getValue();\n\n            console.warn(\"convert RowFilter.callback.onChange() to .emit()\");\n            _logic.callbacks.onChange();\n            this.emit(\"change\");\n         }\n\n         return false;\n      };\n\n      _logic.blockOnChange = () => {\n         this.__blockOnChange = true;\n      };\n\n      _logic.unblockOnChange = () => {\n         this.__blockOnChange = false;\n      };\n\n      /**\n       * @method getValue\n       *\n       * @return {JSON} -\n       * {\n       * \t\tglue: '', // 'and', 'or'\n       *\t\trules: [\n       *\t\t\t{\n       *\t\t\t\tkey:\t'column name',\n       *\t\t\t\trule:\t'rule',\n       *\t\t\t\tvalue:\t'value'\n       *\t\t\t}\n       *\t\t]\n       * }\n       */\n      _logic.getValue = () => {\n         let config_settings = {\n            glue: \"and\",\n            rules: [],\n         };\n\n         var $viewForm = $$(ids.filterForm);\n         if ($viewForm) {\n            $viewForm.getChildViews().forEach(($viewCond, index) => {\n               if (index == 0) {\n                  config_settings.glue = $viewCond.$$(ids.glue).getValue();\n               }\n\n               var $fieldElem = $viewCond.$$(ids.field);\n               if (!$fieldElem) return;\n\n               /* field id */\n               var fieldId = $fieldElem.getValue();\n               if (!fieldId) return;\n\n               /* alias */\n               var alias;\n               var selectedOpt = $viewCond\n                  .$$(ids.field)\n                  .getPopup()\n                  .config.body.data.filter((opt) => opt.id == fieldId)[0];\n               if (selectedOpt) alias = selectedOpt.alias || undefined;\n\n               /* rule */\n               var rule = null,\n                  ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n                  $viewComparer = $viewCond\n                     .$$(ids.rule)\n                     .queryView({ id: ruleViewId });\n               if ($viewComparer && $viewComparer.getValue)\n                  rule = $viewComparer.getValue();\n\n               /* value */\n               var value = null,\n                  valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n                  $viewConditionValue = $viewCond\n                     .$$(ids.inputValue)\n                     .queryView({ id: valueViewId });\n               if ($viewConditionValue && $viewConditionValue.getValue) {\n                  value = $viewConditionValue.getValue();\n               } else if (\n                  $viewConditionValue &&\n                  $viewConditionValue.getChildViews()\n               ) {\n                  var vals = [];\n                  $viewConditionValue.getChildViews().forEach((element) => {\n                     vals.push($$(element).getValue());\n                  });\n                  value = vals.join(\":\");\n               }\n\n               // Convert date format\n               if (value instanceof Date) {\n                  let dateField = this._Fields.filter(\n                     (f) => f.id == fieldId\n                  )[0];\n                  if (dateField) {\n                     value = dateField.exportValue(value);\n                  } else {\n                     value = value.toISOString();\n                  }\n               }\n\n               config_settings.rules.push({\n                  alias: alias || undefined,\n                  key: fieldId,\n                  rule: rule,\n                  value: value,\n               });\n            });\n         }\n\n         this.config_settings = config_settings;\n\n         return this.config_settings;\n      };\n\n      // webix UI definition:\n      this.ui = {\n         id: ids.component,\n         rows: [\n            {\n               view: \"form\",\n               id: ids.filterForm,\n               hidden: true,\n               elements: [],\n            },\n            _logic.getAddButtonUI(),\n         ],\n      };\n   }\n\n   // setting up UI\n   init(options = {}) {\n      super.init(options);\n\n      // register our callbacks:\n      for (var c in this._logic.callbacks) {\n         this._logic.callbacks[c] = options[c] || this._logic.callbacks[c];\n      }\n\n      if (options.showObjectName)\n         this._settings.showObjectName = options.showObjectName;\n\n      if (options.isRecordRule) {\n         this.recordRuleOptions = [\n            {\n               value: L(\"Same As Field\"),\n               id: \"same_as_field\",\n            },\n            {\n               value: L(\"Not Field\"),\n               id: \"not_same_as_field\",\n            },\n         ];\n         this.recordRuleFieldOptions = options.fieldOptions;\n      }\n   }\n\n   setValue(settings) {\n      settings = settings || {};\n\n      super.setValue(settings);\n\n      let ids = this.ids;\n      let logic = this._logic;\n\n      // block .onChange event\n      logic.blockOnChange();\n\n      let config_settings = this.AB.cloneDeep(settings);\n      config_settings.rules = config_settings.rules || [];\n\n      // Redraw form with no elements\n      var $viewForm = $$(ids.filterForm);\n      if ($viewForm) webix.ui([], $viewForm);\n\n      // Add \"new filter\" button\n      if (config_settings.rules.length == 0) {\n         logic.toggleAddNewButton();\n      }\n\n      config_settings.rules.forEach((f) => {\n         var viewId = logic.addNewFilter(),\n            $viewCond = $$(viewId);\n\n         if ($viewCond == null) return;\n\n         var field = this._Fields.filter((col) => col.id == f.key)[0];\n\n         // \"and\" \"or\"\n         $viewCond.$$(ids.glue).define(\"value\", config_settings.glue);\n         $viewCond.$$(ids.glue).refresh();\n\n         // Select Field\n         $viewCond.$$(ids.field).define(\"value\", f.key);\n         $viewCond.$$(ids.field).refresh();\n         logic.selectField(f.key, $viewCond, true);\n\n         // Comparer\n         var ruleViewId = $viewCond.$$(ids.rule).getActiveId(),\n            $viewComparer = $viewCond\n               .$$(ids.rule)\n               .queryView({ id: ruleViewId });\n         if ($viewComparer && $viewComparer.setValue) {\n            $viewComparer.define(\"value\", f.rule);\n            $viewComparer.refresh();\n         }\n\n         // if (f.rule == \"in_query_field\" || f.rule == \"not_in_query_field\" || f.rule == \"same_as_field\" || f.rule == \"not_same_as_field\") {\n         $viewCond.blockEvent();\n         logic.onChangeRule(f.rule, $viewCond);\n         $viewCond.unblockEvent();\n         // }\n\n         // Input\n         var valueViewId = $viewCond.$$(ids.inputValue).getActiveId(),\n            $viewConditionValue = $viewCond\n               .$$(ids.inputValue)\n               .queryView({ id: valueViewId });\n         if ($viewConditionValue && $viewConditionValue.setValue) {\n            // convert to Date object\n            if (\n               field &&\n               field.key == \"date\" &&\n               f.value &&\n               (f.rule == \"less\" ||\n                  f.rule == \"greater\" ||\n                  f.rule == \"less_or_equal\" ||\n                  f.rule == \"greater_or_equal\")\n            ) {\n               $viewConditionValue.define(\"value\", new Date(f.value));\n            } else {\n               $viewConditionValue.define(\"value\", f.value);\n            }\n\n            $viewConditionValue.refresh();\n         } else if (\n            $viewConditionValue &&\n            $viewConditionValue.getChildViews()\n         ) {\n            let vals = (f.value || \"\").split(\":\");\n            let index = 0;\n            $viewConditionValue.getChildViews().forEach((element) => {\n               $$(element).blockEvent();\n               $$(element).setValue(vals[index]);\n               if (index == 0) {\n                  logic.onChangeQueryFieldCombo(vals[index], $viewCond);\n               }\n               $$(element).unblockEvent();\n               // $$(element).refresh();\n               index++;\n            });\n         }\n\n         if (field && field.key == \"user\") {\n            $viewCond.blockEvent();\n            logic.onChangeRule(f.rule, $viewCond);\n            $viewCond.blockEvent();\n         }\n      });\n\n      // unblock .onChange event\n      logic.unblockOnChange();\n   }\n\n   /**\n    * @method isComplete()\n    * returns a truthy value representing whether or not our current condition\n    * expression is fully completed.  Then externally checks can be made to\n    * verify if the data is complete.\n    * @return {bool}\n    */\n   isComplete() {\n      if (!this._completeConditions) {\n         this._completeConditions = this.AB.filterComplexNew(\n            `${this.ids.component}_iscomplete`\n         );\n      }\n\n      return this._completeConditions.isConditionComplete(this.getValue());\n   }\n};\n","// const ABComponent = require(\"./ABComponent\");\nimport ClassUI from \"../../ui/ClassUI\";\nconst ABViewForm = require(\"../platform/views/ABViewForm\");\n\nlet L = null;\n\nclass RowUpdater extends ClassUI {\n   constructor(idBase, AB) {\n      super(idBase, {\n         form: `${idBase}_rowUpdaterForm`,\n         addNew: `${idBase}_rowUpdaterAddNew`,\n         field: `${idBase}_rowUpdaterField`,\n      });\n\n      this.idBase = idBase;\n\n      this._Object = null;\n      // {ABObject}\n      // The ABObject we are building a form for.\n\n      this._mockFormWidget = null;\n      // {ABViewForm}\n      // When building our form components to display, they need a\n      // ABViewForm to be associated with.\n\n      this.AB = AB;\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   /**\n    * @method uiItem()\n    * Return the webix description of a new field/value row.\n    * @return {json}\n    */\n   uiItem() {\n      const self = this;\n\n      return {\n         rows: [\n            {\n               view: \"layout\",\n               isolate: true,\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     id: this.ids.field,\n                     options: this.getFieldList(true),\n                     on: {\n                        onChange: async function (columnId) {\n                           const $viewItem = this.getParentView();\n\n                           await self.selectField(columnId, $viewItem);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: 40,\n                     label: L(\"To\"),\n                  },\n                  {\n                     view: \"segmented\",\n                     value: \"custom\",\n                     height: 40,\n                     maxWidth: 160,\n                     options: [\n                        { id: \"custom\", value: L(\"Custom\") },\n                        { id: \"process\", value: L(\"Process\") },\n                     ],\n                     hidden:\n                        this._extendedOptions == null ||\n                        !this._extendedOptions.length,\n                     on: {\n                        onChange: function (val) {\n                           const $viewItem = this.getParentView();\n\n                           self.toggleCustomProcessOption(\n                              $viewItem,\n                              val == \"process\"\n                           );\n                        },\n                     },\n                  },\n                  // Field value\n                  {},\n                  // Extended value\n                  {\n                     hidden: true,\n                  },\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     autowidth: true,\n\n                     click: function () {\n                        const $viewCond = this.getParentView().getParentView();\n\n                        self.removeItem($viewCond);\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   /**\n    * @method ui()\n    * return the webix description of our Entry form.\n    * @return {json}\n    */\n   ui() {\n      // webix UI definition:\n      return {\n         rows: [\n            {\n               view: \"form\",\n               id: this.ids.form,\n               hidden: true,\n               borderless: true,\n               elements: [],\n            },\n            {\n               view: \"button\",\n               id: this.ids.addNew,\n               icon: \"fa fa-plus\",\n               type: \"iconButton\",\n               label: L(\"Add field to edit\"),\n               click: () => {\n                  this.addItem();\n               },\n            },\n         ],\n      };\n   }\n\n   init(AB) {\n      const $form = $$(this.ids.form);\n      if ($form) AB.Webix.extend($form, AB.Webix.ProgressBar);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method addItem()\n    * Add another field/value entry item to our form.\n    * @param {integer} index\n    *        which position in the list of form elements do we want to\n    *        insert the new row.\n    * @return {string} the webix .id of the new row we just added.\n    */\n   addItem(index) {\n      const $form = $$(this.ids.form);\n      const remainFields = this.getFieldList(true);\n\n      if (remainFields.length < 1) return;\n\n      const ui = this.uiItem();\n      const viewId = $form.addView(ui, index);\n\n      this.toggleForm();\n\n      return viewId;\n   }\n\n   /**\n    * @method getFieldList()\n    * Return an array of options in a webix.list format that represents the\n    * possible fields that can be selected on the current ABObject.\n    * @param {bool} excludeSelected\n    *        should we exclude from the list the fields that are ALREADY\n    *        displayed on the form?\n    * @return {array} [ { id, value }, ... ]\n    *         id: ABField.id\n    *         value: ABField.label\n    */\n   getFieldList(excludeSelected) {\n      let options = (this._Object.fields() || []).map((f) => {\n         return {\n            id: f.id,\n            value: f.label,\n         };\n      });\n\n      if (excludeSelected) {\n         const $form = $$(this.ids.form);\n\n         $form.getChildViews().forEach(($viewCond) => {\n            // Ignore \"Add new\" button\n            if (!$viewCond || !$viewCond.$$) return;\n\n            const $fieldElem = $viewCond.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            options = options.filter((opt) => opt.id != fieldId);\n         });\n      }\n      return options;\n   }\n\n   /**\n    * @method getValue\n    * Return an array of field:value results that have been entered on this\n    * form.\n    * @return {Array}\n    *         [\n    *            {\n    *               fieldId: {UUID}\n    *               isProcessValue: {Boolean} - If it is true, then value is from Process parameter\n    *               value: {Object}\n    *            },\n    *            ...\n    *         ]\n    */\n   getValue() {\n      const result = [];\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         $form.getChildViews().forEach(($viewContainer) => {\n            const $viewItem = $viewContainer.getChildViews()[0];\n\n            // Ignore \"Add new\" button\n            if (!$viewItem || !$viewItem.$$) return;\n\n            const $fieldElem = $viewItem.$$(this.ids.field);\n\n            if (!$fieldElem) return;\n\n            const fieldId = $fieldElem.getValue();\n\n            if (!fieldId) return;\n\n            let $customValueElem = $viewItem.getChildViews()[4];\n            $customValueElem = this._pullInputElement($customValueElem);\n\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            if (!$customValueElem && !$processValueElem) return;\n\n            const fieldInfo = this._Object.fieldByID(fieldId);\n            const val = {\n               fieldId: fieldId,\n            };\n\n            // Custom value\n            if ($customValueElem && $customValueElem.isVisible()) {\n               if (\n                  fieldInfo.key === \"connectObject\" ||\n                  fieldInfo.key === \"user\"\n               )\n                  val.value = fieldInfo.getValue($customValueElem);\n               else if (\n                  fieldInfo.key === \"date\" ||\n                  fieldInfo.key === \"datetime\"\n               ) {\n                  const currDateCheckbox =\n                     $customValueElem.getChildViews()[0] ?? $customValueElem;\n\n                  if (currDateCheckbox.getValue() == true)\n                     val.value = \"ab-current-date\";\n                  else {\n                     const datePicker =\n                        $customValueElem.getChildViews()[1] ?? $customValueElem;\n\n                     val.value = fieldInfo.getValue(datePicker);\n                  }\n               }\n               // Get value from data field manager\n               else val.value = fieldInfo.getValue($customValueElem);\n            }\n            // Process value\n            else if ($processValueElem && $processValueElem.isVisible()) {\n               val.isProcessValue = true;\n               val.value = $processValueElem.getValue();\n            }\n\n            // Add to output\n            result.push(val);\n         });\n      }\n\n      return result;\n   }\n\n   /**\n    * @method objectLoad\n    * Load the Object we are currently working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._Object = object;\n\n      this._mockApp = this.AB.applicationNew({});\n      this._mockFormWidget = new ABViewForm(\n         {\n            settings: {\n               showLabel: false,\n               labelWidth: 0,\n            },\n         },\n         this._mockApp // just need any ABApplication here\n      );\n      this._mockFormWidget.objectLoad(object);\n\n      this.setValue(null); // clear\n   }\n\n   /**\n    * @method removeItem\n    * Remove the current form row.\n    * @param {webix.view} $viewCond\n    *        This is the webix.view that contains the whole value row\n    *        we are removing.\n    */\n   removeItem($viewCond) {\n      const $form = $$(this.ids.form);\n\n      $form.removeView($viewCond);\n      this.toggleForm();\n   }\n\n   /**\n    * @method selectField\n    * Update the value display when a field is selected. Changing to a\n    * different field will change the types of values that can be entered.\n    * @param {string} columnId\n    *        The field.uuid of the object that was selected.\n    * @param {webix.view} $viewItem\n    *        The webix.view that contains the value expression of the field\n    *        that was selected.\n    */\n   async selectField(columnId, $viewItem) {\n      const field = this._Object.fieldByID(columnId);\n\n      if (!field) {\n         this.AB.notify.builder(\n            new Error(`could not find field for id[${columnId}]`),\n            {\n               context: \"RowUpdater.selectField() could not find a field\",\n               fieldID: columnId,\n            }\n         );\n\n         return;\n      }\n\n      const fieldComponent = field.formComponent(),\n         formFieldWidget = fieldComponent.newInstance(\n            this._mockApp,\n            this._mockFormWidget\n         ),\n         formFieldComponent = formFieldWidget.component(\n            this.AB._App,\n            this.idBase\n         );\n      const childViews = $viewItem.getChildViews();\n\n      let inputView =\n         typeof formFieldComponent.ui == \"function\"\n            ? formFieldComponent.ui()\n            : formFieldComponent.ui;\n\n      // Add extended value options\n      $viewItem.removeView(childViews[5]);\n\n      if (this._extendedOptions?.length)\n         $viewItem.addView(\n            {\n               view: \"richselect\",\n               options: this._extendedOptions,\n               hidden: true,\n            },\n            5\n         );\n      else\n         $viewItem.addView(\n            {\n               hidden: true,\n            },\n            5\n         );\n\n      await this.busy();\n\n      // WORKAROUND: add '[Current User]' option to the user data field\n      switch (field.key) {\n         case \"connectObject\":\n         case \"user\":\n            inputView = inputView.rows[0].rows[0];\n            inputView.suggest.body.data =\n               (await field.getOptions()).map((e) => {\n                  return {\n                     id: field.getRelationValue(e),\n                     value: e.text,\n                  };\n               }) ?? [];\n\n            if (field.key === \"user\")\n               inputView.suggest.body.data.unshift({\n                  id: \"ab-current-user\",\n                  value: \"ab-current-user\",\n                  // This one is saved with the \"value\" not \"id\".\n                  // value: L(\"Current User\"),\n               });\n\n            break;\n\n         case \"date\":\n         case \"datetime\":\n            inputView = {\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"checkbox\",\n                     labelWidth: 0,\n                     labelRight: L(\"Current Date/Time\"),\n                     on: {\n                        onChange: function (newVal) {\n                           const layout = this.getParentView();\n\n                           if (!layout) return;\n\n                           const datePicker = layout.getChildViews()[1];\n\n                           if (!datePicker) return;\n\n                           newVal ? datePicker.hide() : datePicker.show();\n                        },\n                     },\n                  },\n                  inputView,\n               ],\n            };\n\n            break;\n      }\n\n      // Change component to display value\n      $viewItem.removeView(childViews[4]);\n      $viewItem.addView(inputView, 4);\n\n      formFieldComponent.init();\n\n      // Show custom display of data field\n      if (field.customDisplay)\n         field.customDisplay({}, this.AB._App, childViews[4].$view);\n\n      this.toggleCustomProcessOption(\n         $viewItem,\n         childViews[3].getValue() === \"process\"\n      );\n      $$($viewItem).adjust();\n      $viewItem.getFormView().adjust();\n\n      this.ready();\n   }\n\n   /**\n    * @method setValue\n    * Given the previous settings, redraw the form with the field/value\n    * entries.\n    * @param {array} settings\n    *        [\n    *           {\n    *              fieldId: {UUID}\n    *              value: {Object|String}\n    *           }, ...\n    *        ]\n    */\n   setValue(settings) {\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      // Redraw form with no elements\n      webix.ui([], $form);\n\n      settings = settings || [];\n      if (settings.length < 1) return;\n\n      settings.forEach(async (item) => {\n         const $viewContainer = $$(this.addItem());\n         const $viewItem = $viewContainer.getChildViews()[0];\n         const $valueTypeButton = $viewItem.queryView(\n            { view: \"segmented\" },\n            \"self\"\n         );\n\n         $valueTypeButton.setValue(item.isProcessValue ? \"process\" : \"custom\");\n\n         const $field = $viewItem.$$(this.ids.field);\n\n         $field.define(\"value\", item.fieldId);\n         $field.refresh();\n\n         await this.selectField(item.fieldId, $viewItem);\n\n         const fieldInfo = this._Object.fieldByID(item.fieldId);\n\n         if (!fieldInfo) return;\n\n         // Set process value\n         if (item.isProcessValue) {\n            const $processValueElem = $viewItem.getChildViews()[5];\n\n            $processValueElem.setValue?.(item.value);\n\n            return;\n         }\n\n         // Set custom value\n         let $customValueElem = $viewItem.getChildViews()[4];\n         $customValueElem = this._pullInputElement($customValueElem);\n         const rowData = {};\n\n         rowData[fieldInfo.columnName] = item.value?.value ?? item.value;\n         fieldInfo.setValue($customValueElem, rowData);\n\n         // Set \"Current Date/Time\" check box\n         if (\n            (fieldInfo.key == \"date\" || fieldInfo.key == \"datetime\") &&\n            rowData[fieldInfo.columnName] == \"ab-current-date\" &&\n            $customValueElem.config.view == \"checkbox\"\n         ) {\n            $customValueElem.setValue(true);\n         }\n      });\n\n      this.toggleForm();\n   }\n\n   /**\n    * @method toggleForm\n    * decide if the form with the field/value elements should be displayed.\n    */\n   toggleForm() {\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         const childViews = $form.getChildViews();\n\n         if (childViews && childViews.length) $form.show();\n         else $form.hide();\n         $form.adjust();\n      }\n   }\n\n   setExtendedOptions(options) {\n      this._extendedOptions = options;\n   }\n\n   toggleCustomProcessOption($viewItem, showProcessOption) {\n      const $customOption = $viewItem.getChildViews()[4];\n      const $processOption = $viewItem.getChildViews()[5];\n\n      if (showProcessOption) {\n         $customOption.hide();\n         $processOption.show();\n      } else {\n         $customOption.show();\n         $processOption.hide();\n      }\n   }\n\n   async busy() {\n      $$(this.ids.addNew).disable();\n\n      const $form = $$(this.ids.form);\n\n      if (!$form) return;\n\n      if (!$form.showProgress) await this.init(this.AB);\n\n      $form.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      $$(this.ids.addNew).enable();\n      $$(this.ids.form).hideProgress();\n   }\n\n   _pullInputElement($elem) {\n      if (!$elem?.getValue && $elem?.getChildViews) {\n         return (\n            $elem\n               .getChildViews()\n               .filter((childView) => childView.getValue)[0] ?? $elem\n         );\n      } else {\n         return $elem;\n      }\n   }\n}\n\nexport default RowUpdater;\n","/*\n * ABField\n *\n * An ABField defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABFieldCore = require(\"../../core/dataFields/ABFieldCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABField extends ABFieldCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n\n      this.AB.on(\"ab.abdefinition.update\", (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n         }\n      });\n\n      //  \t// NOTE: setup this first so later we can use .fieldType(), .fieldIcon()\n      //  \tthis.defaults = fieldDefaults;\n\n      // \t{\n      // \t\tid:'uuid',\t\t\t\t\t// uuid value for this obj\n      // \t\tkey:'fieldKey',\t\t\t\t// unique key for this Field\n      // \t\ticon:'font',\t\t\t\t// fa-[icon] reference for an icon for this Field Type\n      // \t\tlabel:'',\t\t\t\t\t// pulled from translation\n      // \t\tcolumnName:'column_name',\t// a valid mysql table.column name\n      //\t\tsettings: {\t\t\t\t\t// unique settings for the type of field\n      // \t\t\tshowIcon:true/false,\t// only useful in Object Workspace DataTable\n      // \t\t\tisImported: 1/0,\t\t// flag to mark is import from other object\n      // \t\t\trequired: 1/0,\t\t\t// field allows does not allow NULL or it does allow NULL\n      // \t\t\twidth: {int}\t\t\t// width of display column\n\n      // \t\t// specific for dataField\n      // \t\t},\n      // \t\ttranslations:[]\n      // \t}\n\n      // \tthis.fromValues(values);\n\n      // this.object = object;\n   }\n\n   ///\n   /// Static Methods\n   ///\n   /// Available to the Class level object.  These methods are not dependent\n   /// on the instance values of the Application.\n   ///\n\n   static editorValues(settings) {\n      const obj = {\n         label: settings.label,\n         columnName: settings.columnName,\n         settings: settings,\n      };\n\n      delete settings.label;\n      delete settings.columnName;\n\n      return obj;\n   }\n\n   addValidation(ids, settings) {\n      const App = this.object.application.App;\n      const Filter = this.AB.filterComplexNew(\n         `${this.id}_field_validation_rules`\n      );\n      $$(ids.filterComplex).addView({\n         view: \"form\",\n         css: \"abValidationForm\",\n         cols: [\n            {\n               rows: [\n                  {\n                     view: \"text\",\n                     name: \"invalidMessage\",\n                     labelWidth: this.AB.UISettings.config().labelWidthLarge,\n                     value:\n                        settings && settings.invalidMessage\n                           ? settings.invalidMessage\n                           : \"\",\n                     label: L(\"Invalid Message\"),\n                  },\n                  Filter.ui,\n               ],\n            },\n            {\n               view: \"button\",\n               css: \"webix_danger\",\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  const $viewCond = this.getParentView();\n                  $$(ids.filterComplex).removeView($viewCond);\n               },\n            },\n         ],\n      });\n      $$(Filter.ids.save).hide();\n      // Filter.applicationLoad(this.object.application);\n      Filter.fieldsLoad(this.object.fields());\n      if (settings && settings.rules) Filter.setValue(settings.rules);\n   }\n\n   /*\n    * @method isValid\n    * check the current values to make sure they are valid.\n    * Here we check the default values provided by ABField.\n    *\n    * @return null or [{OP.Validation.validator()}] objects.\n    */\n   isValid() {\n      const validator = this.AB.Validation.validator();\n\n      // .columnName must be unique among fileds on the same object\n      const isNameUnique =\n         this.object.fields((f) => {\n            return (\n               f.id != this.id &&\n               f.columnName.toLowerCase() == this.columnName.toLowerCase()\n            );\n         }).length == 0;\n      if (!isNameUnique) {\n         validator.addError(\n            \"columnName\",\n            L(\n               \"Field columnName must be unique ({0} already used in this Object)\",\n               [this.columnName]\n            )\n         );\n      }\n\n      return validator;\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /// ABApplication data methods\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save() before:\n      if (!this.id) return;\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      await this.migrateDrop();\n\n      // the server still references an ABField in relationship to it's\n      // ABObject, so we need to destroy the Field 1st, then remove it\n      // from it's object.\n      await super.destroy();\n\n      await this.object.fieldRemove(this);\n   }\n\n   /**\n    * @method save()\n    *\n    * persist this instance of ABField with it's parent ABObject\n    *\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   async save(skipMigrate = false) {\n      let isAdd = false;\n      // if this is our initial save()\n      if (!this.id) {\n         isAdd = true;\n      }\n\n      // Whenever we update our settings, make sure any\n      // existing rows that have NULL values for this field\n      // are updated to have our current .default value.\n      if (!isAdd && this.settings.required && this.settings.default) {\n         const model = this.object.model();\n\n         // pull rows that has null value\n         const result = await model.findAll({\n            where: {\n               glue: \"and\",\n               rules: [\n                  {\n                     key: this.id,\n                     rule: \"is_null\",\n                  },\n               ],\n            },\n         });\n\n         const tasks = [];\n\n         // updating ...\n         result.data.forEach((d) => {\n            if (!d[this.columnName]) d[this.columnName] = this.settings.default;\n\n            tasks.push(model.update(d.id, d));\n         });\n\n         await Promise.all(tasks);\n      }\n\n      // New ABDefinition method of saving:\n      // when this is done, we now have an .id\n      await super.save();\n\n      // incase this was an ADD operation, make sure the\n      // parent Obj now includes this object:\n      // NOTE: must be done after the .save() so we have an .id\n      await this.object.fieldAdd(this);\n\n      // perform any server side migrations for this Field:\n\n      // but not connectObject fields:\n      // ABFieldConnect.migrateXXX() gets called from the UI popupNewDataField\n      // in order to handle the timings of the 2 fields that need to be created\n      if (!this.isConnection && !skipMigrate) {\n         const fnMigrate = isAdd ? this.migrateCreate() : this.migrateUpdate();\n         await fnMigrate;\n      }\n\n      return this;\n   }\n\n   ///\n   /// DB Migrations\n   ///\n\n   migrateCreate() {\n      return this.AB.Network.post({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateUpdate() {\n      return this.AB.Network.put({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   migrateDrop() {\n      return this.AB.Network[\"delete\"]({\n         url: `/definition/migrate/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @function columnHeader\n    * Return the column header for a webix grid component for this specific\n    * data field.\n    * @param {Object} options\n    * {\n    *    isObjectWorkspace: {bool},  is this being used in the Object workspace.\n    *    width: {int},\n    *    height: {int},\n    *    editable: {bool}\n    * }\n    * @return {obj}  configuration obj\n    */\n   columnHeader(options) {\n      options = options || {};\n\n      const config = {\n         id: this.columnName, // this.id,\n         header: this.label,\n      };\n\n      if (options.isObjectWorkspace && this.settings.showIcon) {\n         config.header = `<span class=\"webix_icon fa fa-${this.fieldIcon()}\"></span>${\n            config.header\n         }`;\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.  If this isn't\n    * a standard value display (think image, Map, graph, etc...) then use this\n    * method to create the display in the table/grid cell.\n    * @param {object} row\n    *        is the {name=>value} hash of the current row of data.\n    * @param {App} App\n    *        the shared ui App object useful more making globally\n    *\t\t\t unique id references.\n    * @param {HtmlDOM} node\n    *        the HTML Dom object for this field's display.\n    * @param {object} options\n    *        option of additional settings\n    */\n   customDisplay(row, App, node, options) {}\n\n   /*\n    * @function customEdit\n    *\n    *\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      return true;\n   }\n\n   /**\n    * @method getValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   getValue(item, rowData) {\n      return item.getValue();\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    */\n   setValue(item, rowData, defaultValue) {\n      if (!item) return;\n\n      let val;\n\n      if (\n         (rowData == null || rowData[this.columnName] == null) &&\n         defaultValue != null\n      ) {\n         val = defaultValue;\n      } else if (rowData && rowData[this.columnName] != null) {\n         val = rowData[this.columnName];\n      } else {\n         val = rowData;\n      }\n\n      try {\n         item.setValue(val);\n      } catch (err) {\n         // this error is fine because we handled it already\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent(formKey) {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n\n      let FC = {\n         // .common() is used to create the display in the list\n         common: () => {\n            return {\n               key: formKey,\n\n               // // but since this is a common place holder: use the\n               // // multilingual label here:\n               // labelKey: 'ab.abfield.labelPlaceholder',\n               // icon:  'square'\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // NOTE: in case you were wondering, the base ABField\n            // \t\t will just return a label with 'ABFieldPlaceholder'\n            // \t\t as the text.  Any sub class of ABField should overwrite\n            // \t\t this and return an actual Form Component.\n\n            // store object id and field id to field component\n            const values = FC.common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n            // ABFieldPlaceholder.formatTitle();\n            // ABFieldPlaceholder.text = \"ABFieldPlaceholder\";\n\n            return ABFieldPlaceholder;\n         },\n      };\n      return FC;\n   }\n\n   /**\n    * @method detailComponent\n    */\n   detailComponent() {\n      return {\n         common: () => {\n            return {\n               icon: \"square\",\n            };\n         },\n\n         // .newInstance() is used to create the view instance when the component\n         // \t\tis dropped onto the ABView list.\n         newInstance: (application, parent) => {\n            application = application ?? this.AB._mockApp;\n\n            // store object id and field id to field component\n            const values = this.detailComponent().common();\n            values.settings = values.settings || {};\n            values.settings.objectId = this.object.id;\n            values.settings.fieldId = this.id;\n\n            const ABFieldPlaceholder = application.viewNew(\n               values,\n               application,\n               parent\n            ); // ABViewManager.newView(values, application, parent);\n\n            return ABFieldPlaceholder;\n         },\n      };\n   }\n\n   /**\n    * @method getSettings()\n    * return a copy of this.settings.\n    * @return {object}\n    */\n   getSettings() {\n      return Object.assign({}, this.settings);\n   }\n\n   /**\n    * @method warningsMessage()\n    * generate a commonly formatted warning message for this ABField.\n    * This is expected to be called from within a .warningsEval()\n    * method when generating warnings.\n    * @param {string} msg\n    *        the warning string to display\n    * @param {json} data\n    *        any relevant additional information for a developer to refer to.\n    */\n   warningsMessage(msg, data = {}) {\n      let message = `${this.fieldKey()}[${this.label}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n\n   async getDbInfo() {\n      return this.AB.Network.get({\n         url: `/definition/info/object/${this.object.id}/field/${this.id}`,\n      });\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      // default is to just leave data as is.\n   }\n};\n","const ABFieldAutoIndexCore = require(\"../../core/dataFields/ABFieldAutoIndexCore\");\n\nmodule.exports = class ABFieldAutoIndex extends ABFieldAutoIndexCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldAutoIndex\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldBooleanCore = require(\"../../core/dataFields/ABFieldBooleanCore\");\n\nmodule.exports = class ABFieldBoolean extends ABFieldBooleanCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = \"template\";\n      config.css = \"center\";\n      config.template = (row, common, value, config) => {\n         // Group header\n         if (row.$group) return row[this.columnName];\n\n         // editable\n         if (options.editable) {\n            return (\n               '<div class=\"ab-boolean-display\">' +\n               common.checkbox(row, common, value, config) +\n               \"</div>\"\n            );\n         }\n\n         // readonly\n         else {\n            if (value)\n               return \"<div class='webix_icon fa fa-check-square-o'></div>\";\n            else return \"<div class='webix_icon fa fa-square-o'></div>\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"checkbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-checkbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcheckbox\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCalculateCore = require(\"../../core/dataFields/ABFieldCalculateCore\");\n\nmodule.exports = class ABFieldCalculate extends ABFieldCalculateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCalculate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldCombineCore = require(\"../../core/dataFields/ABFieldCombineCore\");\n\nmodule.exports = class ABFieldCombine extends ABFieldCombineCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldCombine\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this.settings.combinedFields.split(\",\") || []).forEach((id) => {\n         var field = this.object.fieldByID(id);\n         if (!field) {\n            this.warningsMessage(`dependent field[${id}] not found.`, {\n               fieldID: id,\n               combinedFields: this.settings.combinedFields,\n            });\n         }\n      });\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldConnect extends ABFieldConnectCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   /**\n    * @method destroy()\n    *\n    * destroy the current instance of ABApplication\n    *\n    * also remove it from our _AllApplications\n    *\n    * @return {Promise}\n    */\n   async destroy() {\n      // verify we have been .save()d before:\n      if (!this.id) return Promise.resolve();\n\n      // NOTE: our .migrateXXX() routines expect the object to currently exist\n      // in the DB before we perform the DB operations.  So we need to\n      // .migrateDrop()  before we actually .objectDestroy() this.\n      // this.migrateDrop()\n      //    // .then(() => {\n      //    //    // NOTE : prevent recursive remove connected fields\n      //    //    // - remove this field from JSON\n      //    //    this.object._fields = this.object.fields((f) => {\n      //    //       return f.id != this.id;\n      //    //    });\n      //    // })\n      //    .then(() => {\n      //       // Save JSON of the object\n      //       return this.object.fieldRemove(this);\n      //    })\n      await super.destroy();\n\n      // Now we need to remove our linked Object->field\n\n      const linkObject = this.datasourceLink;\n      if (!linkObject) return Promise.resolve(); // already notified\n\n      const linkField = this.fieldLink;\n      if (!linkField) return Promise.resolve(); // already notified\n\n      // destroy linked field\n      return linkField.destroy();\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method pullRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRelationValues(row) {\n      let selectedData = [];\n\n      const data = super.pullRelationValues(row);\n      const linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         } else if (typeof data == \"string\") {\n            selectedData = { text: data };\n         }\n      }\n\n      return selectedData;\n   }\n\n   columnHeader(options) {\n      options = options || {};\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      if (options.filters == null) {\n         options.filters = {};\n      }\n\n      var multiselect = this.settings.linkType == \"many\";\n\n      config.editor = multiselect ? \"multiselect\" : \"combo\";\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n      config.template = (row) => {\n         var selectedData = field.pullRelationValues(row);\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               values.push(\n                  `<div class='webix_multicombo_value'><span>${val.value}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n               );\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData.value) {\n            let clear = \"\";\n            if (options.editable) {\n               clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n            }\n            values.push(\n               `<div class='webix_multicombo_value'>${clear}<span class=\"ellip\">${selectedData.value}</span></div>`\n            );\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n\n      config.suggest = {\n         on: {\n            onBeforeShow: function () {\n               field.openOptions(this);\n            },\n         },\n\n         // Support partial matches\n         filter: ({ value }, search) =>\n            (value ?? \"\").toLowerCase().includes((search ?? \"\").toLowerCase()),\n      };\n\n      if (multiselect) {\n         config.suggest.view = \"checksuggest\";\n         config.suggest.button = true;\n      }\n\n      return config;\n   }\n\n   openOptions($suggest) {\n      // PREVENT repeatedly pull data:\n      // If not a x->1 relation and the options list was populated, then skip\n      const $list = $suggest.getList();\n      if (this.settings.linkViaType != \"one\") {\n         if (($list?.find({}) ?? []).length) return;\n      }\n\n      // Listen create/update events of the linked object, then clear data list to re-populate\n      [\"create\", \"update\"].forEach((key) => {\n         if (this[`_dc_${key}_event`]) return;\n\n         this[`_dc_${key}_event`] = this.AB.on(\n            `ab.datacollection.${key}`,\n            (res) => {\n               if (this.datasourceLink.id == res.objectId) $list.clearAll();\n            }\n         );\n      });\n\n      this.getAndPopulateOptions($suggest, null, this);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n\n   //// NOTE: why do we pass in row, App, and node?  is this something we do in our external components?\n   ////       are these values present when this Object is instanciated? Can't we just pass these into the\n   ////       object constructor and have it internally track these things?\n   customEdit(row, /*App,*/ node) {\n      // var selectedData = this.pullRelationValues(row);\n      // this._selectedData = selectedData;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"connect\");\n   }\n\n   formComponentMobile() {\n      if (this.settings.linkType == \"many\") {\n         return super.formComponent(\"mobile-selectmultiple\");\n      }\n      return super.formComponent(\"mobile-selectsingle\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailconnect\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method getOptions\n    * show options list in selectivity\n    *\n    * @return {Promise}\n    */\n   async getOptions(whereClause, term, sort, editor) {\n      const theEditor = editor;\n\n      if (theEditor) {\n         // PREVENT: repeatly refresh data too often\n         if (theEditor._getOptionsThrottle) {\n            clearTimeout(theEditor._getOptionsThrottle);\n            // NOTE: remove variables that reference the Promise and Resolve to let GC cleans up.\n            // https://dev.to/xnimorz/js-promises-3-garbage-collection-and-memory-leaks-2oi7?fbclid=IwAR1wqgNz2KqchaM7eRkclR6YWHT01eva4y5IWpnaY0in6BrxmTAtpNCnEXM\n            delete theEditor._timeToPullData;\n            delete theEditor._getOptionsResolve;\n         }\n         theEditor._timeToPullData = await new Promise((resolve) => {\n            theEditor._getOptionsResolve = resolve;\n            theEditor._getOptionsThrottle = setTimeout(() => {\n               resolve(true);\n            }, 100);\n         });\n         if (!theEditor._timeToPullData) return;\n      }\n\n      return new Promise((resolve, reject) => {\n         let haveResolved = false;\n         // {bool}\n         // have we already passed back a result?\n\n         const respond = (options) => {\n            // filter the raw lookup with the provided search term\n            options = options.filter((item) => {\n               if (item.text.toLowerCase().includes(term.toLowerCase())) {\n                  return true;\n               }\n            });\n\n            if (!haveResolved) {\n               haveResolved = true;\n               resolve(options);\n            } else {\n               // if we have already resolved() then .emit() that we have\n               // updated \"option.data\".\n               this.emit(\"option.data\", options);\n            }\n         };\n\n         // Prepare Where clause\n\n         const where = this.AB.cloneDeep(whereClause || {});\n         sort = sort || [];\n\n         if (!where.glue) where.glue = \"and\";\n\n         if (!where.rules) where.rules = [];\n\n         term = term || \"\";\n\n         // check if linked object value is not define, should return a empty array\n         if (!this.settings.linkObject) return [];\n\n         // if options was cached\n         // if (this._options != null) return resolve(this._options);\n\n         const linkedObj = this.datasourceLink;\n\n         // System could not found the linked object - It may be deleted ?\n         if (linkedObj == null) throw new Error(\"No linked object\");\n\n         const linkedCol = this.fieldLink;\n\n         // System could not found the linked field - It may be deleted ?\n         if (linkedCol == null) throw new Error(\"No linked column\");\n\n         // Get linked object model\n         const linkedModel = linkedObj.model();\n\n         // M:1 - get data that's only empty relation value\n         if (\n            this.settings.linkType == \"many\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            where.rules.push({\n               key: linkedCol.id,\n               rule: \"is_null\",\n            });\n            // where[linkedCol.columnName] = null;\n         }\n         // 1:1\n         else if (\n            this.settings.linkType == \"one\" &&\n            this.settings.linkViaType == \"one\" &&\n            editor?.config?.showAllOptions != true\n         ) {\n            // 1:1 - get data is not match link id that we have\n            if (this.settings.isSource == true) {\n               // NOTE: make sure \"haveNoRelation\" shows up as an operator\n               // the value \":0\" doesn't matter, we just need 'haveNoRelation' as an operator.\n               // newRule[linkedCol.id] = { 'haveNoRelation': 0 };\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"have_no_relation\",\n               });\n            }\n            // 1:1 - get data that's only empty relation value by query null value from link table\n            else {\n               where.rules.push({\n                  key: linkedCol.id,\n                  rule: \"is_null\",\n               });\n               // newRule[linkedCol.id] = 'null';\n               // where[linkedCol.id] = null;\n            }\n         }\n\n         const storageID = this.getStorageID(where);\n\n         Promise.resolve()\n            .then(async () => {\n               // Mar 23, 2023 disabling local storage of options because users\n               // were reporting not seeing the correct options list with either\n               // new, updated or deleted records that should or should not appear\n               return false;\n               // Get Local Storage unless xxx->one connected field\n               // if (this?.settings?.linkViaType != \"one\") {\n               //    // We store the .findAll() results locally and return that for a\n               //    // quick response:\n               //    return await this.AB.Storage.get(storageID);\n               // }\n            })\n            .then(async (storedOptions) => {\n               if (storedOptions) {\n                  // immediately respond with our stored options.\n                  this._options = storedOptions;\n                  return respond(this._options);\n               }\n               // Pull linked object data\n               let options = function () {\n                  return linkedModel.findAll({\n                     where: where,\n                     sort: sort,\n                     populate: false,\n                  });\n               };\n\n               // placeholder for selected options\n               let selected = function () {\n                  return new Promise((resolve, reject) => {\n                     // empty data array to pass to all()\n                     resolve({ data: [] });\n                  });\n               };\n\n               // we also need to get selected values of xxx->one connections\n               // if we are looking at a field in a form we look at linkViaOneValues\n               // if we are looking at a grid we are editing we look at theEditor?.config?.value\n               if (\n                  this?.settings?.linkViaType == \"one\" &&\n                  (this?.linkViaOneValues || theEditor?.config?.value)\n               ) {\n                  let values = \"\";\n                  // determine if we are looking in a grid or at a form field\n                  if (\n                     (theEditor?.config?.view == \"multicombo\" ||\n                        theEditor?.config?.view == \"combo\") &&\n                     this?.linkViaOneValues\n                  ) {\n                     values = this?.linkViaOneValues;\n                  } else if (theEditor?.config?.value) {\n                     if (Array.isArray(theEditor.config.value)) {\n                        values = theEditor?.config?.value.join();\n                     } else {\n                        values = theEditor?.config?.value;\n                     }\n                  }\n                  let whereRels = {};\n                  let sortRels = [];\n\n                  whereRels.glue = \"or\";\n                  whereRels.rules = [];\n\n                  values.split(\",\").forEach((v) => {\n                     whereRels.rules.push({\n                        key: \"uuid\",\n                        rule: \"equals\",\n                        value: v,\n                     });\n                  });\n                  selected = function () {\n                     return linkedModel.findAll({\n                        where: whereRels,\n                        sort: sortRels,\n                        populate: false,\n                     });\n                  };\n               }\n               try {\n                  const results = await Promise.all([options(), selected()]);\n\n                  // combine options and selected items and\n                  // put the selected options at the top of the list\n                  const result = results[1].data.concat(results[0].data);\n\n                  // store results in _options\n                  this._options = result.data || result || [];\n\n                  // populate display text\n                  (this._options || []).forEach((opt) => {\n                     opt.text = linkedObj.displayData(opt);\n                     opt.value = opt.text;\n                  });\n\n                  // 8/10/2023 - We are not actually using this (see line 338) - If we need to store\n                  // user data in local storage we should encrypt it.\n                  // cache options if not a xxx->one connection\n                  // if (this?.settings?.linkViaType != \"one\") {\n                  //    this.AB.Storage.set(storageID, this._options);\n                  // }\n                  return respond(this._options);\n               } catch (err) {\n                  this.AB.notify.developer(err, {\n                     context:\n                        \"ABFieldConnect:getOptions(): unable to retrieve options from server\",\n                     field: this.toObj(),\n                     where,\n                  });\n\n                  haveResolved = true;\n                  throw err;\n               }\n            });\n      });\n   }\n\n   getStorageID(where) {\n      return `${this.id}-${JSON.stringify(where)}`;\n   }\n\n   async clearStorage(where) {\n      const storageID = this.getStorageID(where);\n      await this.AB.Storage.set(storageID, null);\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               if (itemObj && itemObj.id) {\n                  vals.push(itemObj.id);\n               } else {\n                  vals.push(val);\n               }\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            } else {\n               vals.push(value);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         if (!value) {\n            return [];\n         } else {\n            let returnVals = [];\n            let vals = value.split(\",\");\n            vals.forEach((val) => {\n               returnVals.push(this.getItemFromVal(val));\n            });\n            return returnVals;\n         }\n      } else {\n         let item = this.getItemFromVal(value);\n         return item;\n      }\n   }\n\n   getAndPopulateOptions(editor, options, field, form) {\n      if (!editor) return Promise.resolve([]);\n\n      const theEditor = editor;\n      // if editor has options and is xxx->one store the options on the field\n      if (\n         this?.settings?.linkViaType == \"one\" &&\n         theEditor.getValue() &&\n         !field.linkViaOneValues\n      ) {\n         field.linkViaOneValues = theEditor.getValue();\n      }\n\n      // if we are filtering based off another selectivity's value we\n      // need to do it on fetch each time because the value can change\n      // copy the filters so we don't add to them every time there is a change\n      const combineFilters = options?.filters\n         ? Object.assign({}, options.filters)\n         : { glue: \"and\", rules: [] };\n\n      if (options?.filterByConnectValues) {\n         const parseFilterByConnectValues = (conditions, values, depth = 0) => {\n            const valuesByDepth = values.filter((e) => e?.depth === depth);\n\n            return [\n               ...conditions.rules.map((e) => {\n                  if (e.glue)\n                     return {\n                        glue: e.glue,\n                        rules: parseFilterByConnectValues(e, values, depth + 1),\n                     };\n\n                  const value = valuesByDepth.filter(\n                     (ef) => ef.key === e.key && ef.value === e.value\n                  )[0];\n\n                  if (!value) return e;\n\n                  const $parentField = value?.filterValue?.config.id\n                     ? $$(value.filterValue.config.id)\n                     : null;\n\n                  if (!$parentField)\n                     throw Error(\n                        \"Some parent field's view components don't exist\"\n                     );\n\n                  const parentValue = value?.filterValue\n                     ? $parentField.getValue() ?? \"\"\n                     : \"\";\n\n                  let newVal = \"\";\n\n                  if (parentValue) {\n                     if (value.filterColumn) {\n                        const filterField = field.object.fieldByID(\n                           value.filterValue.config.dataFieldId\n                        );\n                        let valItem;\n\n                        // When options does not load yet, then pull select value from DC\n                        if (!filterField._options?.length) {\n                           const linkedField =\n                              (form.datacollection.datasource?.fields(\n                                 (f) =>\n                                    f.id == value.value ||\n                                    f.columnName == value.value\n                              ) ?? [])[0];\n\n                           if (linkedField) {\n                              // Get values from DC\n                              const formVals = form.datacollection?.getCursor();\n\n                              valItem =\n                                 formVals[linkedField.relationName()] ??\n                                 formVals[value.value];\n                           }\n                        } else {\n                           valItem = filterField.getItemFromVal(parentValue);\n                        }\n\n                        if (valItem) {\n                           newVal = valItem[value.filterColumn];\n                        } else {\n                           newVal = parentValue;\n                        }\n                     } else {\n                        newVal = parentValue;\n                     }\n                  }\n\n                  return {\n                     key: e.key,\n                     rule: \"equals\",\n                     value: newVal,\n                  };\n               }),\n            ];\n         };\n\n         combineFilters.rules = parseFilterByConnectValues(\n            combineFilters,\n            options.filterByConnectValues\n         );\n      }\n\n      if (!this.handlerOptionData) {\n         this.handlerOptionData = (data) => {\n            if (theEditor.$destructed) {\n               this.removeListener(\"option.data\", this.handlerOptionData);\n               return;\n            }\n            this.populateOptions(theEditor, data, field, form, true);\n         };\n      }\n\n      // try to make sure we don't continually add up listeners.\n      this.removeListener(\"option.data\", this.handlerOptionData).once(\n         \"option.data\",\n         this.handlerOptionData\n      );\n\n      return new Promise((resolve, reject) => {\n         this.getOptions(\n            combineFilters,\n            \"\",\n            options?.sort ?? \"\",\n            theEditor\n         ).then((data) => {\n            this.populateOptions(theEditor, data, field, form, true);\n            resolve(data);\n         });\n      });\n   }\n\n   populateOptions(theEditor, data, field, form, addCy) {\n      if (theEditor == null || theEditor.$destructed) return;\n\n      theEditor.blockEvent();\n      theEditor.getList().clearAll();\n      theEditor.getList().define(\"data\", data);\n      if (addCy) {\n         this.populateOptionsDataCy(theEditor, field, form);\n      }\n      if (theEditor.getValue?.() && data?.length) {\n         let currVal = theEditor.getValue();\n         // in a multiselect environment, the current val can be an encoded string:\n         // \"id1,id2\".  Break this into an array:\n         if (field.linkType() == \"many\" && typeof currVal == \"string\") {\n            currVal = currVal.split(\",\");\n         }\n         if (!Array.isArray(currVal)) {\n            currVal = [currVal];\n         }\n\n         let selectedVals = [];\n         currVal.forEach((cVal) => {\n            // Check exists item\n            const isExists = data.some((d) => d.id == cVal);\n\n            if (isExists) {\n               selectedVals.push(cVal);\n            }\n\n            // if we couldn't find it by it's .id, then check to see\n            // if there is a custom index (.indexField  .indexField2)\n            // that does match.\n            // Select option item from custom index value\n            if (\n               !isExists &&\n               field.isConnection &&\n               (field.indexField || field.indexField2)\n            ) {\n               const selectedItem = data.filter(\n                  (d) =>\n                     d[field.indexField?.columnName ?? \"\"] == cVal ||\n                     d[field.indexField2?.columnName ?? \"\"] == cVal\n               )[0];\n\n               if (selectedItem) selectedVals.push(selectedItem.id);\n            }\n         });\n\n         theEditor.setValue(selectedVals);\n      }\n      theEditor.unblockEvent();\n   }\n\n   populateOptionsDataCy(theEditor, field, form) {\n      if (theEditor?.$destructed) return;\n\n      // Add data-cy attributes\n      if (theEditor?.getList) {\n         if (!theEditor.getPopup) return;\n         var popup = theEditor.getPopup();\n         if (!popup) return;\n         theEditor.getList().data.each((option) => {\n            if (!option) return;\n            var node = popup.$view.querySelector(\n               \"[webix_l_id='\" + option.id + \"']\"\n            );\n            if (!node) return;\n            node.setAttribute(\n               \"data-cy\",\n               `${field.key} options ${option.id} ${field.id} ${form?.id}`\n            );\n         });\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this._options || [];\n      if (options.length > 0) {\n         for (let i = 0; i < options.length; i++) {\n            if (\n               this.indexField &&\n               options[i][this.indexField.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else if (\n               this.indexField2 &&\n               options[i][this.indexField2.object.PK()] == val\n            ) {\n               item = options[i];\n               break;\n            } else {\n               if (\n                  options[i].id == val ||\n                  options[i].value == val ||\n                  options[i][this.indexField?.columnName ?? \"\"] == val ||\n                  options[i][this.indexField2?.columnName ?? \"\"] == val\n               ) {\n                  item = options[i];\n                  break;\n               }\n            }\n         }\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item) {\n      let val = item.getValue();\n      var multiselect = this.settings.linkType == \"many\";\n      if (multiselect) {\n         let vals = [];\n         if (val) {\n            val = val.split(\",\");\n            val.forEach((record) => {\n               // make sure we are returning the .uuid values and\n               // not full {Record} values.\n               vals.push(\n                  this.getRelationValue(item.getList().getItem(record), {\n                     forUpdate: true,\n                  })\n               );\n            });\n         }\n\n         return vals;\n      } else {\n         if (val) {\n            // return just the .uuid and not the full {Record}\n            return this.getRelationValue(item.getList().getItem(val));\n         } else {\n            return \"\";\n         }\n      }\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n      // if (AB.isEmpty(rowData)) return; removed because sometimes we will\n      // want to set this to empty\n      let val = this.pullRelationValues(rowData);\n      // put in current values as options so we can display them before\n      // the rest of the options are fetched when field is clicked\n      if (item.getList && item.getList().count() == 0) {\n         if (this.settings.linkType !== \"one\" && !Array.isArray(val)) {\n            val = [val];\n         }\n\n         const $list = item.getList();\n\n         $list.define(\"data\", val);\n         $list.refresh();\n      }\n\n      // try to prevent form flicker:\n      // Only reset the value if the value changes:\n      let currVal = item.getValue();\n      let newVal = Array.isArray(val)\n         ? val\n              .map(\n                 (e) =>\n                    this.getRelationValue(e, { forUpdate: true }) ??\n                    e.id ??\n                    e.uuid ??\n                    e\n              )\n              .join(\",\")\n         : this.getRelationValue(val, { forUpdate: true }) ??\n           val.id ??\n           val.uuid ??\n           val;\n      if (currVal != newVal) {\n         item.setValue(newVal);\n      }\n   }\n\n   /**\n    * @method pullRecordRelationValues\n    *\n    * On the Web client, we want our returned relation values to be\n    * ready for Webix objects that require a .text and .value field.\n    *\n    * @param {*} row\n    * @return {array}\n    */\n   pullRecordRelationValues(record) {\n      var selectedData = [];\n\n      var data = record;\n      var linkedObject = this.datasourceLink;\n\n      if (data && linkedObject) {\n         // if this select value is array\n         if (Array.isArray(data)) {\n            selectedData = data.map(function (d) {\n               // display label in format\n               if (d) {\n                  d.text = d.text || linkedObject.displayData(d);\n                  d.value = d.text;\n               }\n\n               return d;\n            });\n         } else if (data.id || data.uuid) {\n            selectedData = data;\n            selectedData.text =\n               selectedData.text || linkedObject.displayData(selectedData);\n            selectedData.value = selectedData.text;\n         }\n      }\n\n      return selectedData;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      var linkField = this.fieldLink;\n      if (!linkField) {\n         this.warningsMessage(\n            `is unable to find linked field[${this.settings.linkColumn}]`,\n            {\n               linkColumn: this.settings.linkColumn,\n            }\n         );\n      }\n\n      let linkObj = this.datasourceLink;\n      if (!linkObj) {\n         this.warningsMessage(\n            `is unable to find linked object[${this.settings.linkObject}]`,\n            {\n               linkObject: this.settings.linkObject,\n            }\n         );\n      }\n   }\n};\n","const ABFieldDateCore = require(\"../../core/dataFields/ABFieldDateCore\");\n\nmodule.exports = class ABFieldDate extends ABFieldDateCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // if (this.settings.includeTime)\n      // config.editor = \"datetime\";\n      // else\n      config.editor = this.AB.Account?.language() == \"th\" ? \"thaidate\" : \"date\";\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-date\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-date\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   dateToString(dateFormat, dateData) {\n      return webix.Date.dateToStr(dateFormat)(dateData);\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n\n      // Return longdate if option 4 or 5\n      if (dateFormat >= 4) {\n         return webix.i18n.longDateFormatStr(dateObj);\n      } else {\n         return webix.i18n.dateFormatStr(dateObj);\n      }\n   }\n};\n","const ABFieldDateTimeCore = require(\"../../core/dataFields/ABFieldDateTimeCore\");\n\nmodule.exports = class ABFieldDateTime extends ABFieldDateTimeCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldDate\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // Ignore date\n      if (this.settings.dateFormat == 1) {\n         config.editor = \"time\";\n      } else {\n         config.editor =\n            this.AB.Account?._config?.languageCode == \"th\"\n               ? \"thaidatetime\"\n               : \"datetime\";\n      }\n\n      // allows entering characters in datepicker input, false by default\n      config.editable = true;\n\n      // NOTE: it seems that the default value is a string in ISO format.\n\n      //// NOTE: webix seems unable to parse ISO string into => date here.\n      // config.map = '(date)#'+this.columnName+'#';   // so don't use this.\n\n      config.template = (row) => {\n         if (row.$group) return row[this.columnName];\n\n         return this.format(row);\n      };\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      config.editFormat = (d) => {\n         // this routine needs to return a Date() object for the editor to work with.\n\n         if (d == \"\" || d == null) {\n            return \"\";\n         }\n\n         // else retun the actual ISO string => Date() value\n         return this.AB.rules.toDate(d);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"datepicker\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"datepicker\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent(\"mobile-datetime\");\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-datetime\",\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   // Overwrite core.format to use webix locales.\n   format(rowData) {\n      if (!window.webixLocale) return super.format(rowData);\n      const d = this.dataValue(rowData);\n\n      if (d == \"\" || d == null) {\n         return \"\";\n      }\n      const dateObj = this.AB.rules.toDate(d);\n\n      const dateFormat = this.settings.dateFormat;\n      // @const {int} dateFormat AB Date Format\n      // 1 - ignore, 2 - dd/mm/yyyy, 3 - mm/dd/yyyy, 4 - M D, yyyy, 5 - D M, yyyy\n      const timeToStr = webix.Date.dateToStr(this.getTimeFormat());\n\n      if (dateFormat >= 4) {\n         return `${webix.i18n.longDateFormatStr(dateObj)} ${timeToStr(\n            dateObj\n         )}`;\n      } else {\n         return `${webix.i18n.dateFormatStr(dateObj)} ${timeToStr(dateObj)}`;\n      }\n   }\n};\n","const ABFieldEmailCore = require(\"../../core/dataFields/ABFieldEmailCore\");\n\nmodule.exports = class ABFieldEmail extends ABFieldEmailCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldBoolean\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-email\",\n            settings: {},\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldFileCore = require(\"../../core/dataFields/ABFieldFileCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldFile extends ABFieldFileCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related file.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (!this.id) {\n            resolve();\n            return;\n         }\n\n         // Ask the user what to do about the existing file:\n         webix.confirm({\n            title: L(\"Keep Files?\"),\n            message: L(\"Do you want to keep the files referenced by {0}?\", [\n               this.label,\n            ]),\n            callback: async (result) => {\n               // update this setting so the server can respond correctly in\n               // ABFieldFile.migrateDrop()\n               this.settings.removeExistingData = result ? 0 : 1;\n\n               try {\n                  await this.save();\n\n                  // TODO: a reminder that you still got alot on the server to do!\n                  webix.alert({\n                     title: \"!! TODO !!\",\n                     text: \"Tell a Developer to actually pay attention to this!\",\n                  });\n\n                  // now the default .destroy()\n                  await super.destroy();\n\n                  resolve();\n               } catch (err) {\n                  reject(err);\n               }\n            },\n         });\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFile\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n\n      config.editor = false;\n\n      const editable = options.editable;\n\n      // populate our default template:\n      config.template = (obj) => {\n         if (obj.$group) return this.dataValue(obj);\n\n         const fileDiv = [\n            '<div class=\"ab-file-data-field\" style=\"float: left;\">',\n            '<div class=\"webix_view ab-file-holder\">',\n            '<div class=\"webix_template\">',\n            this.fileTemplate(obj, editable),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return fileDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n      options = options || {};\n\n      let typesList = [];\n      let maximumSize = 0;\n\n      if (this.settings.limitFileType && this.settings.fileType) {\n         typesList = this.settings.fileType.split(\",\");\n      }\n\n      if (this.settings.limitFileSize && this.settings.fileSize) {\n         maximumSize = this.settings.fileSize;\n      }\n\n      // \t\t// safety check:\n      // \t\t// webix seems to crash if you specify a .container that doesn't exists:\n      // \t\t// Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-file-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         // \t\t\t// use a webix component for displaying the content.\n         // \t\t\t// do this so I can use the progress spinner\n\n         const webixContainer = webix.ui({\n            view: \"template\",\n            container: parentContainer,\n\n            template: this.fileTemplate(row, options.editable),\n\n            borderless: true,\n            width: 160,\n            height: 60,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         // \t\t\t////\n         // \t\t\t//// Prepare the Uploader\n         // \t\t\t////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n\n            return;\n         }\n\n         const url = this.urlUpload(true);\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: function (item) {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = typesList;\n                  if (acceptableTypes && acceptableTypes != \"\") {\n                     const type = item.type.toLowerCase();\n                     if (acceptableTypes.indexOf(type) == -1) {\n                        webix.message(\n                           L(\"Only [{0}] files are supported\", [\n                              acceptableTypes.join(\", \"),\n                           ])\n                        );\n                        return false;\n                     }\n                  }\n\n                  //verify file size\n                  //Convert to MegaBytes\n                  if (maximumSize > 0) {\n                     const acceptableSizes = maximumSize * 1000000;\n                     if (item.size > acceptableSizes) {\n                        webix.message(\n                           L(\"Maximum file size is {0}MB\", [maximumSize])\n                        );\n                        return false;\n                     }\n                  }\n\n                  // start progress indicator\n                  webixContainer.showProgress({\n                     type: \"icon\",\n                     delay: 2000,\n                  });\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  // this.showFile(idBase, response.data.uuid);\n\n                  const values = {};\n                  values[this.columnName] = {};\n                  values[this.columnName].uuid = response.data.uuid;\n                  values[this.columnName].filename = item.name;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldFile.onFileUpload(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error loading file\"), {\n                     message:\n                        \"ABFieldFile:onFileUploadError(): Error loading file\",\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // open file upload dialog when's click\n         node.addEventListener(\"click\", (e) => {\n            if (e.target.className.indexOf(\"delete-image\") > -1) {\n               this.deleteFile = true;\n            }\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node) {\n      if (this.deleteFile == true) {\n         // remove the property because it is only needed to prevent the file dialog from showing\n         delete this.deleteFile;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: \"\",\n            text: L(\"Are you sure you want to remove this file?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n\n                  values[this.columnName] = {};\n\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if ($$(node) && $$(node).updateItem)\n                           $$(node).updateItem(row.id, values);\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           message:\n                              \"ABFieldFile:customEdit(): Error updating our entry.\",\n                           row: row,\n                           values: values,\n                        });\n                     }\n                  }\n                  // update value in the form component\n                  else {\n                     this.setValue($$(node), values);\n                  }\n               }\n            },\n         });\n      } else {\n         const rowData = this.dataValue(row);\n         if (!rowData || !rowData.uuid) {\n            const uploaderId = node.dataset[\"uploaderId\"],\n               uploader = $$(uploaderId);\n\n            if (uploader && uploader.fileDialog)\n               uploader.fileDialog({ rowid: row.id });\n         }\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-file\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailcustom\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   //File Template\n\n   fileTemplate(obj, editable) {\n      let iconDisplay = \"\";\n      let fileDisplay = \"display:none;\";\n      let fileURL = \"\";\n\n      let value = \"\";\n      let name = \"\";\n\n      const rowData = this.dataValue(obj);\n      if (rowData) {\n         value = rowData.uuid;\n         name = rowData.filename;\n      }\n\n      if (value && name) {\n         iconDisplay = \"display:none;\";\n         fileDisplay = \"\";\n         fileURL = \"/file/\" + value;\n      }\n\n      const html = [\n         `<div class=\"file-data-field-icon\" style=\"text-align: center; height: inherit; display: table-cell; vertical-align: middle; border: 2px dotted #CCC; background: #FFF; border-radius: 10px; font-size: 11px; line-height: 13px; padding: 0 10px; ${iconDisplay}\"><i class=\"fa fa-file fa-2x\" style=\"opacity: 0.6; font-size: 32px; margin-top: 3px; margin-bottom: 5px;\"></i>${\n            editable ? `<br/>${L(\"Drag and drop or click here\")}` : \"\"\n         }</div>`,\n         `<div class=\"file-data-field-name\" style=\" width:100%; height:100%; position:relative; \"><a target=\"_blank\" href=\"${fileURL}\">${\n            name || \"\"\n         }</a>${\n            editable\n               ? `<a style=\"${fileDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n               : \"\"\n         }</div>`,\n      ].join(\"\");\n\n      return html;\n   }\n\n   getValue(item, rowData) {\n      const file = item.$view.querySelector(\".file-data-field-name\");\n      const fileLink = file.querySelector(\"a\");\n\n      return {\n         uuid: file.getAttribute(\"file-uuid\"),\n         filename: fileLink.innerHTML,\n      };\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const fileicon = domNode.querySelector(\".file-data-field-icon\");\n      if (fileicon) fileicon.style.display = val && val.uuid ? \"none\" : \"block\";\n\n      const file = domNode.querySelector(\".file-data-field-name\");\n      if (file) {\n         const fileDeleteIcon = file.querySelector(\".ab-delete-photo\");\n         if (fileDeleteIcon)\n            fileDeleteIcon.style.display = val && val.uuid ? \"block\" : \"none\";\n\n         file.style.display = val && val.uuid ? \"block\" : \"none\";\n         if (val && val.uuid) file.setAttribute(\"file-uuid\", val.uuid);\n         else file.removeAttribute(\"file-uuid\");\n\n         const fileLink = file.querySelector(\"a\");\n         const fileURL = \"/file/\" + (val ? val.uuid : \"\");\n         fileLink.href = fileURL;\n         fileLink.innerHTML = val ? val.filename : \"\";\n      }\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method urlFile\n    * return the url to use to reference the file by it's id.\n    * @param {string} id uuid reference of this file.\n    * @return {string}\n    */\n   urlFile(id) {\n      return `/file/${id}`;\n   }\n};\n","const ABFieldFormulaCore = require(\"../../core/dataFields/ABFieldFormulaCore\");\n\nmodule.exports = class ABFieldFormula extends ABFieldFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         if (rowData.$group) return rowData[this.columnName];\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return super.formComponent(\"fieldreadonly\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldImageCore = require(\"../../core/dataFields/ABFieldImageCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldImage extends ABFieldImageCore {\n   constructor(values, object) {\n      super(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @function destroy\n    * On a destroy operation, ask if the user wants to keep the related images.\n    */\n   async destroy() {\n      return new Promise((resolve, reject) => {\n         // verify we have been .save()d before:\n         if (this.id) {\n            // Ask the user what to do about the existing images:\n            webix.confirm({\n               title: L(\"Keep Images?\"),\n               message: L(\"Do you want to keep the images referenced by {0}?\", [\n                  this.label,\n               ]),\n               callback: async (result) => {\n                  // update this setting so the server can respond correctly in\n                  // ABFieldImage.migrateDrop()\n                  this.settings.removeExistingData = result ? 0 : 1;\n\n                  try {\n                     await this.save();\n\n                     // TODO: a reminder that you still got alot on the server to do!\n                     webix.alert({\n                        title: \"!! TODO !!\",\n                        text: \"ABFieldImage.destroy(): Tell a Developer to actually pay attention to this!\",\n                     });\n\n                     await super.destroy();\n\n                     resolve();\n                  } catch (err) {\n                     reject(err);\n                  }\n               },\n            });\n         } else {\n            resolve(); // nothing to do really\n         }\n      });\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj, formId) {\n      // if formId is passed the field is in a form view not a grid and\n      // we won't have the obj and each time this\n      // field is in a form it will conflict with the last one rendered\n      if (formId) {\n         return `${this.columnName.replace(/ /g, \"_\")}-${formId}-image`;\n      } else {\n         return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-image`;\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldImage\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      config.editor = false; // 'text';  // '[edit_type]'   for your unique situation\n      // config.sort   = 'string' // '[sort_type]'   for your unique situation\n\n      let containerHeight = \"100%\";\n      let imageHeight = \"100%\";\n      let width = \"100%\";\n      let imageSrcHeight = \"100%\";\n      if (field.settings.useWidth) {\n         config.width = field.settings.imageWidth || 100;\n         const heightVal =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight + 20\n               : 80;\n         containerHeight = `${heightVal}px`;\n         width = `${field.settings.imageWidth || 100}px`;\n         imageHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 80;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight =\n            field.settings.useHeight && field.settings.imageHeight\n               ? field.settings.imageHeight\n               : 60;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      } else if (options.width) {\n         config.width = options.width || 100;\n         width = `${options.width || 100}px`;\n         imageHeight = options.width;\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = options.width;\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n      if (\n         field.settings.useHeight &&\n         field.settings.imageHeight &&\n         field.settings.imageHeight != \"NaN\"\n      ) {\n         config.height = field.settings.imageHeight || 0;\n         containerHeight = parseInt(config.height) + 20;\n         containerHeight = `${containerHeight}px`;\n         imageHeight = parseInt(config.height);\n         imageHeight = `${imageHeight}px`;\n         imageSrcHeight = parseInt(config.height);\n         imageSrcHeight = `${imageSrcHeight}px`;\n      }\n\n      const editable = options.editable;\n\n      // populate our default template:\n      // debugger;\n      config.template = (obj) => {\n         if (obj.$group) return obj[this.columnName];\n\n         const widthStyle = `width: ${width}; height: ${containerHeight}`;\n\n         const imageStyle = `width: ${width}; height: ${imageHeight}`;\n\n         const imgDiv = [\n            `<div class=\"ab-image-data-field\" style=\"float: left; ${widthStyle}\">`,\n            `<div class=\"webix_view ab-image-holder\" style=\"${imageStyle}\">`,\n            '<div class=\"webix_template\">',\n            this.imageTemplate(obj, {\n               editable: editable,\n               height: imageSrcHeight,\n               width: width,\n            }),\n            \"</div>\",\n            \"</div>\",\n            \"</div>\",\n         ].join(\"\");\n\n         return imgDiv;\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    * @param {object} options - {\n    * \t\teditable {Bool}   where or not this field is currently editable\n    * \t\tformId {string}   the id of the presenting form if any\n    * }\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      // safety check:\n      // webix seems to crash if you specify a .container that doesn't exists:\n      // Note: when the template is first created, we don't have App.unique()\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.innerHTML = \"\";\n         // parentContainer.id = idBase;\t// change it to the unique one.\n\n         let imgHeight = 0;\n         if (this.settings.useHeight) {\n            imgHeight = parseInt(this.settings.imageHeight) || imgHeight;\n         }\n\n         let imgWidth = 0;\n         if (this.settings.useWidth) {\n            imgWidth = parseInt(this.settings.imageWidth) || imgWidth;\n         }\n\n         if (options.height) imgHeight = options.height;\n\n         if (options.width) imgWidth = options.width;\n         //// TODO: actually pay attention to the height and width when\n         //// displaying the images.\n\n         // use a webix component for displaying the content.\n         // do this so I can use the progress spinner\n         const webixContainer = webix.ui({\n            view: \"template\",\n            css: \"ab-image-holder\",\n            // id: ids.container,\n            container: parentContainer,\n\n            template: this.imageTemplate(row, {\n               editable: options.editable,\n               height: imgHeight ? imgHeight + \"px\" : 0,\n               width: imgWidth ? imgWidth + \"px\" : 0,\n            }),\n\n            borderless: true,\n            height: imgHeight,\n            width: imgWidth,\n         });\n         webix.extend(webixContainer, webix.ProgressBar);\n\n         ////\n         //// Prepare the Uploader\n         ////\n\n         if (!options.editable) {\n            const domNode = parentContainer.querySelector(\".delete-image\");\n            if (domNode) domNode.style.display = \"none\";\n            return;\n         }\n\n         const url = this.urlUpload();\n\n         const uploader = webix.ui({\n            view: \"uploader\",\n            // id:ids.uploader,\n            apiOnly: true,\n            upload: url,\n            inputName: \"file\",\n            multiple: false,\n            status: (f) => {\n               if (f.percent) {\n                  webixContainer.hideProgress();\n                  webixContainer.showProgress({\n                     type: \"top\",\n                     position: f.percent / 100,\n                  });\n               }\n            },\n            // formData:{\n            // \tappKey:application.name,\n            // \tpermission:actionKey,\n            // \tisWebix:true,\n            // \timageParam:'upload'\n            // },\n            on: {\n               // when a file is added to the uploader\n               onBeforeFileAdd: (item) => {\n                  node.classList.remove(\"webix_invalid\");\n                  node.classList.remove(\"webix_invalid_cell\");\n\n                  // verify file type\n                  const acceptableTypes = [\n                     \"jpg\",\n                     \"jpeg\",\n                     \"bmp\",\n                     \"png\",\n                     \"gif\",\n                     \"webp\",\n                  ];\n                  const type = item.type.toLowerCase();\n                  if (acceptableTypes.indexOf(type) == -1) {\n                     webix.message(\n                        L(\"Only [{0}] images are supported\", [\n                           acceptableTypes.join(\", \"),\n                        ])\n                     );\n                     return false;\n                  }\n                  this.uploadInProgress = true;\n                  // Display the image from local file\n                  var reader = new FileReader();\n                  reader.onload = (e) => {\n                     this.showImage(null, node, e.target.result);\n                     webixContainer.showProgress({\n                        type: \"top\",\n                        delay: 2000,\n                     });\n                  };\n                  reader.readAsDataURL(item.file);\n               },\n\n               // when upload is complete:\n               onFileUpload: async (item, response) => {\n                  webixContainer.hideProgress();\n                  this.showImage(response.data.uuid, node);\n                  this.uploadInProgress = false;\n\n                  const values = {};\n                  values[this.columnName] = response.data.uuid;\n\n                  // update just this value on our current object.model\n                  if (row.id) {\n                     try {\n                        await this.object.model().update(row.id, values);\n\n                        // update the client side data object as well so other data changes won't cause this save to be reverted\n                        if (\n                           $$(node) &&\n                           $$(node).getItem &&\n                           $$(node).getItem(row.id)\n                        ) {\n                           $$(node).updateItem(row.id, values);\n                        } else {\n                           // if you scroll the table the connection to the datatable is lost so we need to find it again\n                           const dataTable =\n                              document.querySelector(\".webix_dtable\");\n                           if ($$(dataTable) && $$(dataTable).getItem(row.id))\n                              $$(dataTable).updateItem(row.id, values);\n                        }\n                     } catch (err) {\n                        node.classList.add(\"webix_invalid\");\n                        node.classList.add(\"webix_invalid_cell\");\n\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABFieldImage.onFileUpload(): model.update(): error updating our entry\",\n                           field: this.toObj(),\n                           row,\n                           values,\n                        });\n                     }\n                  }\n\n                  // update value in the form component\n                  this.setValue($$(node), values);\n               },\n\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  this.AB.notify.developer(new Error(\"Error uploading image\"), {\n                     context: \"ABFieldImage. uploader. onFileUploadError():\",\n                     field: this.toObj(),\n                     response,\n                  });\n                  webixContainer.hideProgress();\n               },\n            },\n         });\n         uploader.addDropZone(webixContainer.$view);\n\n         // store upload id into html element (it will be used in .customEdit)\n         node.dataset[\"uploaderId\"] = uploader.config.id;\n\n         // if we are working in a datagrid we need to add a click event to\n         // check if the user is clicking on the delete button\n         if (node.className == \"webix_cell\") {\n            node.addEventListener(\"click\", (e) => {\n               if (e.target.className.indexOf(\"delete-image\") > -1) {\n                  this.deleteImage = true;\n               }\n            });\n         }\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, id, evt) {\n      if (\n         (evt && evt.target.className.indexOf(\"delete-image\") > -1) ||\n         this.deleteImage\n      ) {\n         delete this.deleteImage;\n         if (!row.removeDefaultImage) {\n            row.removeDefaultImage = [];\n         }\n         row.removeDefaultImage[this.columnName] = true;\n\n         // Ask the user if they really want to delete the photo\n         webix.confirm({\n            title: L(\"Are you sure you want to remove this image?\"),\n            callback: async (result) => {\n               const confirmDelete = result ? 1 : 0;\n               if (confirmDelete) {\n                  // update just this value on our current object.model\n                  const values = {};\n                  values[this.columnName] = \"\"; // removing the reference to the image here\n\n                  try {\n                     await this.object.model().update(row.id, values);\n\n                     // update the client side data object as well so other data changes won't cause this save to be reverted\n                     if ($$(node) && $$(node).updateItem)\n                        $$(node).updateItem(row.id, values);\n\n                     // update value in the form component\n                     this.setValue($$(node), values);\n                  } catch (err) {\n                     node.classList.add(\"webix_invalid\");\n                     node.classList.add(\"webix_invalid_cell\");\n\n                     this.AB.notify.developer(err, {\n                        context:\n                           \"ABFieldImage: customEdit(): Error updating our entry\",\n                        field: this.toObj(),\n                        row: row,\n                        values: values,\n                     });\n                  }\n               }\n            },\n         });\n      } else {\n         const uploaderId = node.dataset[\"uploaderId\"],\n            uploader = $$(uploaderId);\n\n         if (uploader && uploader.fileDialog)\n            uploader.fileDialog({ rowid: row.id });\n      }\n\n      return false;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"fieldcustom\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-image\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailimage\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   imageTemplate(obj, options) {\n      options = options || {};\n      options.height = options.height || \"100%\";\n      options.width = options.width || \"100%\";\n\n      // deault view is icon:\n      let iconDisplay = \"\";\n      let imageDisplay = \"display:none;\";\n      let imageURL = \"\";\n\n      let value = \"\";\n      let isRemoveDefaultImage = false;\n      if (obj[this.columnName]) {\n         value = obj[this.columnName];\n      }\n      if (obj.removeDefaultImage) {\n         if (obj.removeDefaultImage[this.columnName]) {\n            isRemoveDefaultImage = obj.removeDefaultImage[this.columnName];\n         }\n      }\n\n      if (value) {\n         iconDisplay = \"display:none;\";\n         imageDisplay = \"\";\n         imageURL = `background-image:url('${this.urlImage(value)}');`;\n      } else {\n         if (this.settings.useDefaultImage && !isRemoveDefaultImage) {\n            iconDisplay = \"display:none;\";\n            imageDisplay = \"\";\n            imageURL = `background-image:url('${this.urlImage(\n               this.settings.defaultImageUrl\n            )}');`;\n         }\n      }\n\n      let html = [\n         `<div class=\"image-data-field-icon\" style=\"${iconDisplay}\">#drag#</div>` +\n            `<div class=\"image-data-field-image\" style=\"${imageDisplay} height:${options.height}; ${imageURL}\">#remove#</div>`,\n      ].join(\"\");\n\n      html = html.replace(\n         \"#drag#\",\n         options.editable\n            ? `<div>${L(\"Drag and drop or click here\")}</div>`\n            : \"\"\n      );\n      html = html.replace(\n         \"#remove#\",\n         options.editable\n            ? `<a style=\"${imageDisplay}\" class=\"ab-delete-photo\" href=\"javascript:void(0);\"><i class=\"fa fa-times delete-image\"></i></a>`\n            : \"\"\n      );\n\n      return html;\n   }\n\n   showImage(uuid, node, url) {\n      const parentContainer = node.querySelector(\".ab-image-holder\");\n      if (parentContainer) {\n         parentContainer.querySelector(\".image-data-field-icon\").style.display =\n            \"none\";\n         const image = parentContainer.querySelector(\".image-data-field-image\");\n         image.style.display = \"\";\n         image.style.backgroundImage = `url('${url ?? this.urlImage(uuid)}')`;\n         image.setAttribute(\"image-uuid\", uuid);\n      }\n   }\n\n   getValue(item, rowData) {\n      const image = item.$view.querySelector(\".image-data-field-image\");\n      return image.getAttribute(\"image-uuid\");\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      const domNode = item.$view;\n      if (!domNode) return;\n\n      let val = null;\n      if (rowData) {\n         val = this.dataValue(rowData);\n\n         // if (val == null) {\n         // \t// assume they just sent us a single value\n         // \tval = rowData;\n         // }\n      }\n\n      const imageIcon = domNode.querySelector(\".image-data-field-icon\");\n      if (imageIcon) imageIcon.style.display = val ? \"none\" : \"\";\n\n      const image = domNode.querySelector(\".image-data-field-image\");\n      if (image) {\n         const imageDeleteIcon = image.querySelector(\".ab-delete-photo\");\n         if (imageDeleteIcon)\n            imageDeleteIcon.style.display = val ? \"block\" : \"none\";\n\n         image.style.display = val ? \"block\" : \"none\";\n\n         if (val) {\n            image.style.backgroundImage = `url('${this.urlImage(val)}')`;\n            image.setAttribute(\"image-uuid\", val);\n         } else {\n            image.removeAttribute(\"image-uuid\");\n         }\n      }\n   }\n\n   /**\n    * @method toBase64\n    *\n    * @param {Object} rowData\n    *\n    * @return {Promise} - {\n    * \t\tdata: string,\n    * \t\twidth: number,\n    * \t\theight: number\n    * }\n    */\n   toBase64(rowData) {\n      return new Promise((resolve, reject) => {\n         if (!rowData[this.columnName]) return resolve(null);\n\n         const img = new Image();\n         img.crossOrigin = \"Anonymous\";\n         img.onerror = function (err) {\n            reject(err);\n         };\n         img.onload = function () {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            const dataURL = canvas.toDataURL();\n            const imageData = {\n               data: dataURL,\n               width: img.width,\n               height: img.height,\n            };\n            resolve(imageData);\n         };\n\n         img.src = this.urlImage(rowData[this.columnName]);\n      });\n   }\n\n   /**\n    * @method urlImage()\n    * return the url to use to reference the image by it's id.\n    * @param {string} id\n    *        the file.uuid reference of this image.\n    * @return {string}\n    */\n   urlImage(id) {\n      return `/file/${id}`;\n   }\n\n   /**\n    * @method urlUpload()\n    * return the url for uploading a file.\n    * When used in a webix widget, the response is different than our normal\n    * API, so we can pass in a param to indicate a response compatible with\n    * webix.\n    * @param {bool} isWebix\n    *        Is this url being used by a webix component?\n    * @return {string}\n    */\n   urlUpload(isWebix = true) {\n      return `/file/upload/${this.object.id}/${this.id}/${isWebix ? \"1\" : \"0\"}`;\n   }\n\n   /**\n    * @method isValidData\n    * Parse through the given data and return an error if this field's\n    * data seems invalid.\n    * @param {obj} data  a key=>value hash of the inputs to parse.\n    * @param {OPValidator} validator  provided Validator fn\n    * @return {array}\n    */\n   isValidData(data, validator) {\n      super.isValidData(data, validator);\n      if (this.uploadInProgress)\n         validator.addError(this.columnName, L(\"Image still uploading\"));\n   }\n\n   rotateLeft(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=left`,\n      });\n   }\n\n   rotateRight(imgFile) {\n      return this.AB.Network.put({\n         url: `/image/rotate/${imgFile}?direction=right`,\n      });\n   }\n};\n","const ABFieldJsonCore = require(\"../../core/dataFields/ABFieldJsonCore\");\n\nmodule.exports = class ABFieldJson extends ABFieldJsonCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldJson\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      // config.editor = null; // read only for now\n      config.editor = \"text\";\n      config.css = \"textCell\";\n\n      // when called by ABViewFormCustom, will need a .template() fn.\n      // currently we don't need to return anything so ...\n      config.template = () => \"\";\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // read-only for now\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"json\",\n            settings: {\n               type: \"string\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-fieldreadonly\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n      if (item) {\n         item.config.value = rowData[this.columnName];\n      }\n   }\n\n   /**\n    * @method formCleanData()\n    * Review the data a form is about to submit and change/remove it as\n    * appropriate.\n    * @param {obj} rowData\n    *        The {data} a form has collected and is about to save.\n    * @return {undefined}\n    */\n   formCleanData(rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // \"\" isn't a valid json value, so just remove the data and\n         // let the DB handle the default value.\n         delete rowData[this.columnName];\n      }\n   }\n};\n","const ABFieldListCore = require(\"../../core/dataFields/ABFieldListCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldList extends ABFieldListCore {\n   constructor(values, object) {\n      super(values, object);\n\n      // this._Selectivity = new ABFieldSelectivity(values, object);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   save() {\n      return super.save().then(() => {\n         // Now we want to clear out any entries that had values == to item removed from our list:\n         if (this.pendingDeletions.length) {\n            const model = this.object.model();\n\n            if (this.settings.isMultiple == true) {\n               // find all the entries that have one of the deleted values:\n               // use Promise to prevent issues with data being loaded before it is deleted on client side\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n                  let numToDo = 0;\n\n                  model\n                     .findAll({})\n                     .then((list) => {\n                        list = list.data || list;\n\n                        // for each list item\n                        list.forEach((item) => {\n                           if (Array.isArray(item[this.columnName])) {\n                              // get fields not in pendingDeletions\n                              let remainingFields = item[\n                                 this.columnName\n                              ].filter((i) => {\n                                 return (\n                                    this.pendingDeletions.indexOf(i.id) == -1\n                                 );\n                              });\n\n                              if (\n                                 remainingFields.length !=\n                                 item[this.columnName].length\n                              ) {\n                                 numToDo++;\n\n                                 // update value to new field list\n                                 if (remainingFields.length == 0) {\n                                    remainingFields = \"\";\n                                 }\n                                 const value = {};\n                                 value[this.columnName] = remainingFields;\n                                 model.update(item.id, value).then(() => {\n                                    // if ($$(node) && $$(node).updateItem)\n                                    //    $$(node).updateItem(value.id, value);\n                                    numDone++;\n                                    if (numDone >= numToDo) {\n                                       resolve();\n                                    }\n                                 });\n                              }\n                           }\n                        });\n                        if (numToDo == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            } else {\n               // find all the entries that have one of the deleted values:\n               const where = {};\n               where[this.columnName] = this.pendingDeletions;\n               return new Promise((resolve, reject) => {\n                  let numDone = 0;\n\n                  model\n                     .findAll(where)\n                     .then((list) => {\n                        // make sure we just work with the { data:[] } that was returned\n                        list = list.data || list;\n\n                        // for each one, set the value to ''\n                        // NOTE: jQuery ajax routines filter out null values, so we can't\n                        // set them to null. :(\n                        // const numDone = 0;\n                        const value = {};\n                        value[this.columnName] = \"\";\n\n                        list.forEach((item) => {\n                           model.update(item.id, value).then(() => {\n                              numDone++;\n                              if (numDone >= list.length) {\n                                 resolve();\n                              }\n                           });\n                        });\n                        if (list.length == 0) {\n                           resolve();\n                        }\n                     })\n                     .catch(reject);\n               });\n            }\n         }\n      });\n   }\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldList\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n      const App = field.AB._App;\n\n      var formClass = \"\";\n      var placeHolder = \"\";\n      if (options.editable) {\n         formClass = \" form-entry\";\n         placeHolder = `<span style='color: #CCC; padding: 0 5px;'>${L(\n            \"Select item\"\n         )}</span>`;\n      }\n      var isRemovable = options.editable && !this.settings.required;\n\n      config.editFormat = (value) => {\n         return this.editFormat(value);\n      };\n      config.editParse = (value) => {\n         return this.editParse(value);\n      };\n\n      config.template = (rowData) => {\n         let selectedData = rowData[this.columnName];\n         if (selectedData == null) return \"\";\n         if (this.settings.isMultiple) {\n            selectedData = _getSelectedOptions(this, rowData);\n         }\n         var values = [];\n         values.push('<div class=\"badgeContainer\">');\n         let hasCustomColor = \"\";\n         let optionHex = \"\";\n         if (\n            selectedData &&\n            Array.isArray(selectedData) &&\n            selectedData.length\n         ) {\n            selectedData.forEach((val) => {\n               if (this.settings.hasColors && val.hex) {\n                  hasCustomColor = \"hascustomcolor\";\n                  optionHex = `background: ${val.hex};`;\n               }\n               if (val.text) {\n                  values.push(\n                     `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'><span>${val.text}</span><!-- span data-uuid=\"${val.id}\" class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span --></div>`\n                  );\n               }\n            });\n            if (selectedData.length > 1) {\n               values.push(\n                  `<span class=\"webix_badge selectivityBadge\">${selectedData.length}</span>`\n               );\n            }\n         } else if (selectedData) {\n            let selectedObj = selectedData;\n            if (typeof selectedData == \"string\") {\n               selectedObj = this.getItemFromVal(selectedData);\n            }\n            if (!selectedObj) return \"\";\n            if (this.settings.hasColors && selectedObj.hex) {\n               hasCustomColor = \"hascustomcolor\";\n               optionHex = `background: ${selectedObj.hex};`;\n            }\n            if (selectedObj.text) {\n               let clear = \"\";\n               if (options.editable && !this.settings.required) {\n                  clear = `<span class=\"webix_multicombo_delete clear-combo-value\" role=\"button\" aria-label=\"Remove item\"></span>`;\n               }\n               values.push(\n                  `<div style=\"${optionHex}\" class='webix_multicombo_value ${hasCustomColor}'>${clear}<span class=\"ellip\">${selectedObj.text}</span></div>`\n               );\n            }\n         } else {\n            return \"\";\n         }\n         values.push(\"</div>\");\n         return values.join(\"\");\n      };\n      config.editor = this.settings.isMultiple ? \"multiselect\" : \"combo\";\n      config.suggest = {\n         button: true,\n         data: this.settings.options.map(function (opt) {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n      if (this.settings.isMultiple) {\n         config.suggest.view = \"checksuggest\";\n      }\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      if (!node.querySelector) return;\n\n      var clearButton = node.querySelector(\n         \".selectivity-single-selected-item-remove\"\n      );\n      if (clearButton) {\n         clearButton.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            var values = {};\n            values[this.columnName] = \"\";\n            this.object\n               .model()\n               .update(row.id, values)\n               .then(() => {\n                  // update the client side data object as well so other data changes won't cause this save to be reverted\n                  $$(node)?.updateItem?.(row.id, values);\n               })\n               .catch((err) => {\n                  node.classList.add(\"webix_invalid\");\n                  node.classList.add(\"webix_invalid_cell\");\n\n                  this.AB.notify.developer(err, {\n                     message:\n                        \"ABFieldList:customDisplay(): Error updating our entry.\",\n                     row: row,\n                     values: \"\",\n                     field: this.toObj(),\n                  });\n               });\n         });\n      }\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customEdit(row, App, node) {\n   //    return super.customEdit(row, App, node);\n   // }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"selectmultiple\" : \"selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple\n               ? \"mobile-selectmultiple\"\n               : \"mobile-selectsingle\",\n            settings: {\n               options: this.settings.options.map(function (opt) {\n                  return {\n                     id: opt.id,\n                     value: opt.text,\n                     hex: opt.hex,\n                  };\n               }),\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: this.settings.isMultiple ? \"detailtext\" : \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   editFormat(value) {\n      if (!value) return \"\";\n      let vals = [];\n      if (Array.isArray(value)) {\n         value.forEach((val) => {\n            if (typeof val == \"object\") {\n               vals.push(val.id);\n            } else {\n               let itemObj = this.getItemFromVal(val);\n               vals.push(itemObj.id);\n            }\n         });\n      } else {\n         if (typeof value == \"object\") {\n            vals.push(value.id);\n         } else {\n            let itemObj = this.getItemFromVal(value);\n            if (itemObj && itemObj.id) {\n               vals.push(itemObj.id);\n            }\n         }\n      }\n      return vals.join();\n   }\n\n   editParse(value) {\n      if (this.settings.isMultiple) {\n         let returnVals = [];\n         let vals = value.split(\",\");\n         vals.forEach((val) => {\n            returnVals.push(this.getItemFromVal(val));\n         });\n         return returnVals;\n      } else {\n         return value;\n      }\n   }\n\n   getItemFromVal(val) {\n      let item;\n      let options = this.options();\n      if (options.length > 1) {\n         options.forEach((option) => {\n            if (option.id == val) {\n               item = option;\n               return false;\n            }\n         });\n         return item;\n      } else {\n         return \"\";\n      }\n   }\n\n   getValue(item, rowData) {\n      return this.editParse(item.getValue());\n   }\n\n   getSelectedOptions(field, rowData = {}) {\n      let result = [];\n      if (rowData[this.columnName] != null) {\n         result = rowData[this.columnName];\n      } else if (rowData) {\n         if (Array.isArray(rowData)) {\n            result = rowData;\n         } else {\n            result.push(rowData);\n         }\n      }\n      if (result.length) {\n         if (typeof result == \"string\") result = JSON.parse(result);\n\n         // Pull text with current language\n         if (this.settings) {\n            result = (this.settings.options || []).filter((opt) => {\n               return (\n                  (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                     .length > 0\n               );\n            });\n         }\n      }\n\n      return result;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return;\n\n      if (this.settings.isMultiple) {\n         // do we need anything here?\n      } else {\n         super.setValue(item, rowData);\n      }\n   }\n};\n\n// == Private methods ==\nfunction _getSelectedOptions(field, rowData = {}) {\n   let result = [];\n   if (rowData[field.columnName] != null) {\n      result = rowData[field.columnName];\n\n      if (typeof result == \"string\") result = JSON.parse(result);\n\n      // Pull text with current language\n      if (field.settings) {\n         result = (field.settings.options || []).filter((opt) => {\n            return (\n               (result || []).filter((v) => (opt.id || opt) == (v.id || v))\n                  .length > 0\n            );\n         });\n      }\n   }\n\n   return result;\n}\n","const ABFieldLongTextCore = require(\"../../core/dataFields/ABFieldLongTextCore\");\n\nmodule.exports = class ABFieldLongText extends ABFieldLongTextCore {\n   constructor(values, object) {\n      super(values, object);\n\n      /*\n\t\t{\n\t\t\tsettings: {\n\t\t\t\tdefault: 'string',\n\t\t\t\tsupportMultilingual: 1/0\n\t\t\t}\n\t\t}\n\t\t*/\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   isValid() {\n      const validator = super.isValid();\n\n      // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n      return validator;\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldLongText\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\"; // '[edit_type]'   for your unique situation\n      // config.sort = 'string' // '[sort_type]'   for your unique situation\n      config.template = (obj, common, value, col, ind) => {\n         return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n      };\n\n      return config;\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"multiple\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldNumberCore = require(\"../../core/dataFields/ABFieldNumberCore\");\n\nlet INIT_EDITOR = false;\n// {bool} INIT_EDITOR\n// Transition code between previous Framework and current.\n// we now need to wait until webix is declared or accessible globally.\n\nmodule.exports = class ABFieldNumber extends ABFieldNumberCore {\n   constructor(values, object) {\n      if (!INIT_EDITOR) {\n         // NOTE: if you need a unique [edit_type] by your returned config.editor above:\n         webix.editors.number = webix.extend(\n            {\n               // TODO : Validate number only\n            },\n            webix.editors.text\n         );\n         INIT_EDITOR = true;\n      }\n      super(values, object);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   // return the grid column header definition for this instance of ABFieldNumber\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"number\"; // [edit_type] simple inline editing.\n\n      config.format = (d) => {\n         const rowData = {};\n         rowData[this.columnName] = d;\n\n         return this.format(rowData);\n      };\n\n      return config;\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"numberbox\");\n   }\n\n   formComponentMobile() {\n      return super.formComponent(\"mobile-numberbox\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","/*\n * ABFieldSelectivity\n *\n * An ABFieldSelectivity defines a single unique Field/Column in a ABObject.\n *\n */\n\nconst ABField = require(\"./ABField\");\n\nconst defaultSettings = {\n   allowClear: true,\n   removeOnly: false,\n   readOnly: false,\n   showDropdown: true,\n   placeholder: \"\",\n   multiple: false,\n};\n\nconst ABFieldSelectivityDefaults = {\n   key: \"selectivity\",\n};\n\nmodule.exports = class ABFieldSelectivity extends ABField {\n   constructor(values, object, fieldDefaults = ABFieldSelectivityDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   // return the default values for this DataField\n   static defaults() {\n      return {\n         key: \"selectivity\",\n         icon: \"bars\",\n         menuName: \"\",\n         description: \"\",\n      };\n   }\n\n   selectivityRender(domNode, settings, App, row) {\n      if (domNode == null) return;\n\n      const cypress = settings.dataCy || \"\";\n      domNode.setAttribute(\"data-cy\", cypress);\n\n      // setting up our specific settings:\n      settings = settings || {};\n      for (const dv in defaultSettings) {\n         if (settings[dv] === null) {\n            settings[dv] = null;\n         } else {\n            settings[dv] = settings[dv] || defaultSettings[dv];\n         }\n      }\n\n      if (\n         settings.multiple &&\n         settings.items &&\n         settings.data &&\n         settings.data.length\n      ) {\n         settings.data.forEach(function (d) {\n            settings.items.map(function (i) {\n               if (i.id == d.id) d.hex = i.hex;\n            });\n         });\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      } else if (settings[\"data\"] == null || settings[\"data\"] == \"\") {\n         settings[\"data\"] = this.prepareData([], settings.multiple);\n      } else {\n         settings[\"data\"] = this.prepareData(\n            settings[\"data\"],\n            settings.multiple\n         );\n      }\n\n      // store the field id so we can look it up on click events later\n      settings[\"field\"] = this.id;\n\n      // Prevent render selectivity duplicate\n      if (domNode.selectivity != null) {\n         // Refresh selectivity settings\n         domNode.selectivity.setOptions(settings);\n\n         return;\n      }\n\n      settings.element = domNode;\n\n      // Render selectivity\n      let selectivityInput;\n      if (settings.multiple) {\n         if (settings.isUsers) {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: #eee !important; color: #666 !important; box-shadow: inset 0px 1px 1px #333;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t\t<i class=\"fa fa-user\" style=\"color: #666; opacity: 0.6;\"></i> \n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t\t${!settings.isLabelHidden ? options.text : \"\"}\n\t\t\t\t\t\t\t\t${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\" style=\"color: #333;\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         } else {\n            settings.templates = {\n               multipleSelectedItem: function (options) {\n                  return `<span class=\"selectivity-multiple-selected-item ${\n                     options.highlighted ? \" highlighted\" : \"\"\n                  }\"\n\t\t\t\t\t\t\t\tstyle=\"background-color: ${options.hex} !important;\"\n\t\t\t\t\t\t\t\tdata-item-id=\"${options.uuid}\" data-field-id=\"${settings.field}\">\n                        ${\n                           settings.editPage\n                              ? ` <a class=\"selectivity-multiple-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>`\n                              : \"\"\n                        }\n                        ${\n                           settings.additionalText\n                              ? settings.additionalText(options)\n                              : \"\"\n                        }\n                        ${!settings.isLabelHidden ? options.text : \"\"}\n                        ${\n                           options.removable\n                              ? ` <a class=\"selectivity-multiple-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>`\n                              : \"\"\n                        }\n\t\t\t\t\t\t\t</span>`;\n               },\n            };\n         }\n         selectivityInput = new Selectivity.Inputs.Multiple(settings);\n\n         domNode.selectivity = selectivityInput;\n         this.selectivitySetBadge(domNode, App, row);\n      } else {\n         settings.templates = {\n            singleSelectedItem: function (options) {\n               return `<span class=\"selectivity-single-selected-item\" data-item-id=\"${\n                  options.uuid\n               }\" data-field-id=\"${settings.field}\">\n\t\t\t\t\t\t\t${\n                        settings.editPage\n                           ? '<a class=\"selectivity-single-selected-item-edit\"><i class=\"fa fa-edit\"></i></a>'\n                           : \"\"\n                     }\n                     ${\n                        settings.additionalText\n                           ? settings.additionalText(options)\n                           : \"\"\n                     }\n                     ${!settings.isLabelHidden ? options.text : \"\"}\n                     ${\n                        options.removable\n                           ? '<a class=\"selectivity-single-selected-item-remove\"><i class=\"fa fa-remove\"></i></a>'\n                           : \"\"\n                     }\n\t\t\t\t\t\t</span>`;\n            },\n         };\n\n         selectivityInput = new Selectivity.Inputs.Single(settings);\n         domNode.selectivity = selectivityInput;\n      }\n\n      if (settings.editPage) {\n         const trigerEditPageEvent = () => {\n            const instance = this;\n            const editMenus = document.querySelectorAll(\n               \".selectivity-single-selected-item-edit, .selectivity-multiple-selected-item-edit\"\n            );\n            for (let i = 0; i < editMenus.length; i++) {\n               const eMenu = editMenus[i];\n               if (eMenu && !eMenu.__hasClickEvent) {\n                  eMenu.addEventListener(\n                     \"click\",\n                     function (e) {\n                        e.stopPropagation();\n                        e.preventDefault();\n\n                        const parentElm = this.parentElement;\n                        if (!parentElm) return;\n\n                        const rowId = parentElm.getAttribute(\"data-item-id\");\n                        if (!rowId) return;\n\n                        const fieldId = parentElm.getAttribute(\"data-field-id\");\n                        if (!fieldId) return;\n\n                        const thisField = instance.object.fieldByID(fieldId);\n                        if (!thisField) return;\n\n                        thisField.emit(\"editPage\", rowId);\n                     },\n                     true\n                  );\n                  eMenu.__hasClickEvent = true;\n               }\n            }\n         };\n\n         setTimeout(() => {\n            trigerEditPageEvent();\n\n            domNode.addEventListener(\"change\", () => {\n               trigerEditPageEvent();\n            });\n         }, 500);\n      }\n\n      // WORKAROUND : remove caret icon of selectivity\n      if (settings.readOnly) {\n         const caretElems = domNode.getElementsByClassName(\"selectivity-caret\");\n         for (let i = 0; i < caretElems.length; i++) {\n            const caretElm = caretElems[i];\n            if (caretElm) {\n               caretElm.parentNode.removeChild(caretElm);\n            }\n         }\n      }\n\n      // remember our settings values\n      this.selectivitySettings = settings;\n   }\n\n   selectivityGet(domNode) {\n      if (domNode && domNode.selectivity) {\n         if (this.selectivitySettings && this.selectivitySettings.multiple) {\n            // on a multiple select, return an array of results, or empty array\n            return domNode.selectivity.getData() || [];\n         } else {\n            // if a single select, return the object or null\n            return domNode.selectivity.getData() || null;\n         }\n      } else {\n         if (this.selectivitySettings && this.selectivitySettings.multiple)\n            return [];\n         else return null;\n      }\n   }\n\n   selectivitySet(domNode, data) {\n      if (!domNode || !domNode.selectivity) return;\n\n      data = this.prepareData(data, domNode.selectivity.options.multiple);\n\n      if (\n         (Array.isArray(data) && data[0]) || // Check Array\n         (data && data.id)\n      )\n         // Check a object\n         domNode.selectivity.setData(data);\n      else domNode.selectivity.clear();\n   }\n\n   selectivityDestroy(domNode) {\n      if (domNode && domNode.selectivity) {\n         domNode.selectivity.destroy();\n\n         delete domNode.selectivity;\n      }\n   }\n\n   prepareData(data, multiple = true) {\n      if (!data && multiple) {\n         return [];\n      } else if (multiple && data && Array.isArray(data) && data.length == 0) {\n         return [];\n      } else if (!multiple && data && Array.isArray(data) && data.length == 0) {\n         return null;\n      } else if (!data && !multiple) {\n         return null;\n      }\n\n      if (typeof data == \"string\" && data.length > 0) {\n         try {\n            data = JSON.parse(data);\n         } catch (e) {\n            // not JSON parsable, so convert to\n            data = { id: data, text: data };\n         }\n      }\n\n      // if single select, then it should be object\n      if (!multiple && Array.isArray(data)) {\n         data = data[0];\n      } else if (multiple && !Array.isArray(data)) {\n         data = [data];\n      }\n\n      // check to see if id is present on each item\n      if (multiple) {\n         data.forEach((d) => {\n            if (!d.id && d.uuid) {\n               d.id = d.uuid;\n            }\n         });\n      } else {\n         if (!data.id && data.uuid) data.id = data.uuid;\n      }\n\n      if (data == null && multiple) {\n         data = [];\n      }\n\n      return data;\n   }\n\n   selectivitySetBadge(domNode) {\n      if (!domNode.clientHeight) return;\n      const innerHeight = domNode.clientHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         let values = [];\n         if (domNode && domNode.selectivity)\n            values = domNode.selectivity.getValue() || [];\n\n         count = values.length;\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               // v2: this just updated the $height property for this row\n               // we don't do that anymore:\n               // anchor.addEventListener(\"click\", function () {\n               //    App.actions.onRowResizeAuto(row.id, innerHeight);\n               // });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n};\n","const ABFieldStringCore = require(\"../../core/dataFields/ABFieldStringCore\");\n\nmodule.exports = class ABFieldString extends ABFieldStringCore {\n   // constructor(values, object) {\n   //    super(values, object);\n\n   // {\n   //   settings: {\n   // \t  default: 'string',\n   // \t  supportMultilingual: 1/0\n   //   }\n   // }\n\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldString\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = \"text\";\n      config.css = \"textCell\";\n      // config.sort   = 'string'\n      config.template = (obj, common, value /* , col, ind */) => {\n         // if this isn't part of a group header display the default format\n         if (!obj.$group) {\n            return (value || \"\").toString().replace(/[<]/g, \"&lt;\");\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      // if no default value is set, then don't insert a value.\n      if (!values[this.columnName]) {\n         // Set default string\n         if (this.settings.default) {\n            if (this.settings.default.indexOf(\"{uuid}\") >= 0) {\n               values[this.columnName] = this.AB.uuid();\n            } else {\n               values[this.columnName] = this.settings.default;\n            }\n         }\n      }\n   }\n\n   /**\n    * @method formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   // formComponentMobile() {\n   //    // NOTE: what is being returned here needs to mimic an ABView CLASS.\n   //    // primarily the .common() and .newInstance() methods.\n   //    const formComponentSetting = super.formComponent();\n\n   //    // .common() is used to create the display in the list\n   //    formComponentSetting.common = () => {\n   //       return {\n   //          key: \"mobile-textbox\",\n   //          settings: {\n   //             type: \"single\",\n   //          },\n   //       };\n   //    };\n\n   //    return formComponentSetting;\n   // }\n\n   /**\n    * @method formComponentMobile\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponentMobile() {\n      // NOTE: what is being returned here needs to mimic an ABView CLASS.\n      // primarily the .common() and .newInstance() methods.\n      const formComponentSetting = super.formComponent();\n\n      // .common() is used to create the display in the list\n      formComponentSetting.common = () => {\n         return {\n            key: \"mobile-textbox\",\n            settings: {\n               type: \"single\",\n            },\n         };\n      };\n\n      return formComponentSetting;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   /**\n    * @method setValue\n    * this function uses for form component and mass update popup\n    * to get value of fields that apply custom editor\n    *\n    * @param {Object} item - Webix element\n    * @param {Object} rowData - data of row\n    *\n    * @return {Object}\n    */\n   setValue(item, rowData) {\n      super.setValue(item, rowData, \"\");\n   }\n};\n","const ABFieldTextFormulaCore = require(\"../../core/dataFields/ABFieldTextFormulaCore\");\n\nmodule.exports = class ABFieldTextFormula extends ABFieldTextFormulaCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   // return the grid column header definition for this instance of ABFieldTextFormula\n   columnHeader(options) {\n      const config = super.columnHeader(options);\n\n      config.editor = null; // read only\n      config.css = \"textCell\";\n      config.template = (rowData) => {\n         // if this isn't part of a group header display the default format\n         if (!rowData.$group) {\n            return this.format(rowData);\n         } else {\n            return \"\";\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(/* row, App, node, options */) {}\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      // not support in the form widget\n      return null;\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtext\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n};\n","const ABFieldTreeCore = require(\"../../core/dataFields/ABFieldTreeCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABFieldTree extends ABFieldTreeCore {\n   // constructor(values, object) {\n   //    super(values, object);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   // isValid() {\n   //    const validator = super.isValid();\n\n   //    // validator.addError('columnName', L('ab.validation.object.name.unique', 'Field columnName must be unique (#name# already used in this Application)').replace('#name#', this.name) );\n\n   //    return validator;\n   // }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   idCustomContainer(obj) {\n      return `${this.columnName.replace(/ /g, \"_\")}-${obj.id}-tree`;\n   }\n\n   // return the grid column header definition for this instance of ABFieldTree\n   columnHeader(options) {\n      options = options || {};\n\n      const config = super.columnHeader(options);\n      const field = this;\n\n      let formClass = \"\";\n      let placeHolder = \"\";\n      if (options.isForm) {\n         formClass = \" form-entry\";\n         placeHolder =\n            \"<span style='color: #CCC; padding: 0 5px;'>\" +\n            L(\"Select items\") +\n            \"</span>\";\n      }\n\n      const width = options.width;\n\n      config.template = (obj) => {\n         if (obj.$group) return obj[field.columnName];\n\n         const branches = [];\n         let selectOptions = this.AB.cloneDeep(field.settings.options);\n         selectOptions = new webix.TreeCollection({\n            data: selectOptions,\n         });\n\n         let values = obj;\n         if (obj[field.columnName] != null) {\n            values = obj[field.columnName];\n         }\n\n         selectOptions.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  selectOptions.data.each(function (par) {\n                     if (selectOptions.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values'>\";\n         if (branches.length == 0) {\n            nodeHTML += placeHolder;\n         } else {\n            branches.forEach(function (item) {\n               nodeHTML +=\n                  '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n                  myHex +\n                  ' !important;\">' +\n                  item +\n                  \"</span>\";\n            });\n         }\n         nodeHTML += \"</div>\";\n\n         // field.setBadge(node, App, row);\n\n         if (width) {\n            return (\n               '<div style=\"margin-left: ' +\n               width +\n               'px;\" class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         } else {\n            return (\n               '<div class=\"list-data-values' +\n               formClass +\n               '\">' +\n               nodeHTML +\n               \"</div>\"\n            );\n         }\n      };\n\n      return config;\n   }\n\n   /*\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customDisplay(row, App, node, options) {\n      // sanity check.\n      if (!node) {\n         return;\n      }\n\n      options = options || {};\n\n      const field = this;\n\n      if (options.isForm) {\n         if (!row || row.length == 0) {\n            node.innerHTML =\n               \"<div class='list-data-values form-entry'><span style='color: #CCC; padding: 0 5px;'>\" +\n               L(\"Select items\") +\n               \"</span></div>\";\n            return;\n         }\n\n         const branches = [];\n         options = this.AB.cloneDeep(field.settings.options);\n         options = new webix.TreeCollection({\n            data: options,\n         });\n\n         let values = row;\n         if (row[field.columnName] != null) {\n            values = row[field.columnName];\n         }\n\n         options.data.each(function (obj) {\n            if (\n               typeof values.indexOf != \"undefined\" &&\n               values.indexOf(obj.id) != -1\n            ) {\n               let html = \"\";\n\n               let rootid = obj.id;\n               while (this.getParentId(rootid)) {\n                  options.data.each(function (par) {\n                     if (options.data.getParentId(rootid) == par.id) {\n                        html = par.text + \": \" + html;\n                     }\n                  });\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n         let nodeHTML = \"\";\n         nodeHTML += \"<div class='list-data-values form-entry'>\";\n         branches.forEach(function (item) {\n            nodeHTML +=\n               '<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color:' +\n               myHex +\n               ' !important;\">' +\n               item +\n               \"</span>\";\n         });\n         nodeHTML += \"</div>\";\n\n         node.innerHTML = nodeHTML;\n      }\n\n      field.setBadge(node, App, row);\n   }\n\n   /*\n    * @function customEdit\n    *\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *\t\t\t\t\tunique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   customEdit(row, App, node, component) {\n      const idBase = App.unique(this.idCustomContainer(row));\n      const idPopup = `${idBase}-popup`;\n      const idTree = `${idBase}-tree`;\n      const view = $$(node);\n      const field = this;\n      const parentComponent = component;\n      let values = {};\n      let firstRender = true;\n\n      function getValues(field, row) {\n         let values = {};\n         if (\n            typeof field != \"undefined\" &&\n            typeof field.columnName != \"undefined\" &&\n            typeof row[field.columnName] != \"undefined\"\n         ) {\n            values = row[field.columnName];\n         }\n         return values;\n      }\n\n      function populateTree(field, vals) {\n         values = getValues(field, vals);\n\n         const $Tree = $$(idTree);\n         $Tree.blockEvent(); // prevents endless loop\n\n         const options = field.AB.cloneDeep(field.settings.options);\n         $Tree.clearAll();\n         $Tree.parse(options);\n         $Tree.refresh();\n         $Tree.uncheckAll();\n         $Tree.openAll();\n\n         if (values != null && values.length) {\n            values.forEach(function (id) {\n               if ($Tree.exists(id)) {\n                  $Tree.checkItem(id);\n                  const dom = $Tree.getItemNode(id);\n                  dom.classList.add(\"selected\");\n               }\n            });\n         }\n         $Tree.unblockEvent();\n      }\n\n      if ($$(idPopup)) {\n         $$(idPopup).show();\n         populateTree(this, row);\n      } else {\n         webix\n            .ui({\n               id: idPopup,\n               view: \"popup\",\n               width: 500,\n               height: 400,\n               on: {\n                  onShow: () => {\n                     if (firstRender == true) populateTree(this, row);\n\n                     firstRender = false;\n                  },\n               },\n               body: {\n                  id: idTree,\n                  view: \"tree\",\n                  css: \"ab-data-tree\",\n                  template: function (obj, common) {\n                     return (\n                        \"<label>\" +\n                        common.checkbox(obj, common) +\n                        \"&nbsp;\" +\n                        obj.text +\n                        \"</label>\"\n                     );\n                  },\n                  on: {\n                     onItemCheck: async function (id, value, event) {\n                        const dom = this.getItemNode(id);\n                        const tree = this;\n                        if (value == true) {\n                           dom.classList.add(\"selected\");\n                        } else {\n                           dom.classList.remove(\"selected\");\n                        }\n                        // works for the same-level children only\n                        // except root items\n                        if (this.getParentId(id)) {\n                           tree.blockEvent(); // prevents endless loop\n\n                           let rootid = id;\n                           while (this.getParentId(rootid)) {\n                              rootid = this.getParentId(rootid);\n                              if (rootid != id) tree.uncheckItem(rootid);\n                           }\n\n                           this.data.eachSubItem(rootid, function (item) {\n                              if (item.id != id) tree.uncheckItem(item.id);\n                           });\n\n                           tree.unblockEvent();\n                        } else {\n                           tree.blockEvent(); // prevents endless loop\n                           this.data.eachSubItem(id, function (obj) {\n                              if (obj.id != id) tree.uncheckItem(obj.id);\n                           });\n                           tree.unblockEvent();\n                        }\n                        const values = {};\n                        values[field.columnName] = $$(idTree).getChecked();\n\n                        if (row.id) {\n                           // pass null because it could not put empty array in REST api\n                           if (values[field.columnName].length == 0)\n                              values[field.columnName] = \"\";\n\n                           try {\n                              await field.object.model().update(row.id, values);\n\n                              // update the client side data object as well so other data changes won't cause this save to be reverted\n                              if (view && view.updateItem) {\n                                 view.updateItem(row.id, values);\n                              }\n                           } catch (err) {\n                              node.classList.add(\"webix_invalid\");\n                              node.classList.add(\"webix_invalid_cell\");\n\n                              this.AB.notify.developer(err, {\n                                 message:\n                                    \"ABFieldTree:onItemClick(): Error updating our entry.\",\n                                 row: row,\n                                 values: values,\n                              });\n                           }\n                        } else {\n                           const rowData = {};\n                           rowData[field.columnName] = $$(idTree).getChecked();\n\n                           field.setValue($$(parentComponent.ui.id), rowData);\n                        }\n                     },\n                  },\n               },\n            })\n            .show(node, {\n               x: -7,\n            });\n      }\n      return false;\n   }\n\n   setBadge(domNode, row) {\n      const field = this;\n      domNode = domNode.querySelector(\".list-data-values\");\n      const innerHeight = domNode.scrollHeight;\n      const outerHeight = domNode.parentElement.clientHeight;\n      if (innerHeight - outerHeight > 5) {\n         let count = 0;\n         if (row[field.columnName] && row[field.columnName].length)\n            count = row[field.columnName].length;\n         else count = 0;\n\n         if (count > 1) {\n            const badge = domNode.querySelector(\n               \".webix_badge.selectivityBadge\"\n            );\n            if (badge != null) {\n               badge.innerHTML = count;\n            } else {\n               const anchor = document.createElement(\"A\");\n               anchor.href = \"javascript:void(0);\";\n               anchor.addEventListener(\"click\", function (event) {\n                  // v2: this was just saving the new height to the\n                  // field properties. We don't do that anymore:\n                  // App.actions.onRowResizeAuto(row.id, innerHeight);\n                  event.stopPropagation();\n               });\n               const node = document.createElement(\"SPAN\");\n               const textnode = document.createTextNode(count);\n               node.classList.add(\"webix_badge\", \"selectivityBadge\");\n               node.appendChild(textnode);\n               anchor.appendChild(node);\n               domNode.appendChild(anchor);\n            }\n         }\n      }\n   }\n\n   /*\n    * @funciton formComponent\n    * returns a drag and droppable component that is used on the UI\n    * interface builder to place form components related to this ABField.\n    *\n    * an ABField defines which form component is used to edit it's contents.\n    * However, what is returned here, needs to be able to create an instance of\n    * the component that will be stored with the ABViewForm.\n    */\n   formComponent() {\n      return super.formComponent(\"formtree\");\n   }\n\n   detailComponent() {\n      const detailComponentSetting = super.detailComponent();\n\n      detailComponentSetting.common = () => {\n         return {\n            key: \"detailtree\",\n         };\n      };\n\n      return detailComponentSetting;\n   }\n\n   getValue(item, rowData) {\n      let values = {};\n      values = item.getValues();\n      return values;\n   }\n\n   setValue(item, rowData) {\n      if (!item) return false;\n\n      const val = rowData[this.columnName] || [];\n\n      item.setValues(val);\n      // get dom\n      const dom = item.$view.querySelector(\".list-data-values\");\n\n      if (!dom) return false;\n\n      // set value to selectivity\n      this.customDisplay(val, this.App, dom, {\n         editable: true,\n         isForm: true,\n      });\n\n      setTimeout(function () {\n         let height = 33;\n         if (dom.scrollHeight > 33) {\n            height = dom.scrollHeight;\n         }\n         item.config.height = height + 5;\n         item.resize();\n      }, 200);\n   }\n};\n","const ABFieldConnectCore = require(\"../../core/dataFields/ABFieldConnectCore\");\nconst ABFieldUserCore = require(\"../../core/dataFields/ABFieldUserCore\");\n\nmodule.exports = class ABFieldUser extends ABFieldUserCore {\n   constructor(values, object, fieldDefaults) {\n      super(values, object, fieldDefaults);\n   }\n\n   ///\n   /// Working with Actual Object Values:\n   ///\n\n   async save() {\n      // Add new\n      if (this.id == null) {\n         const SiteUser = this.AB.objectUser();\n         const Defaults = ABFieldUserCore.defaults();\n\n         this.settings.linkObject = SiteUser.id;\n         this.settings.isCustomFK = 1;\n\n         if (this.settings.isMultiple) {\n            this.settings.indexField2 = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"many\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         } else {\n            this.settings.indexField = Defaults.USERNAME_FIELD_ID;\n            this.settings.linkType = \"one\";\n            this.settings.linkViaType = \"many\";\n            this.settings.isSource = 1;\n         }\n\n         // TODO: .fieldCustomNew() for saving \"local\" changes.\n         // NOTE: The Object adding this Field sees it's data as a ABFieldUser\n         //       connection.\n         //       However, the SiteUser will see the data as a ABFieldConnect\n         //       connection\n         const linkCol = SiteUser.fieldNew({\n            key: ABFieldConnectCore.defaults().key,\n            columnName: `${this.object.name}_${this.label}`,\n            label: this.object.label,\n            settings: {\n               showIcon: this.settings.showIcon,\n               linkObject: this.object.id,\n               linkType: this.settings.linkViaType,\n               linkViaType: this.settings.linkType,\n               isCustomFK: this.settings.isCustomFK,\n               indexField: this.settings.indexField,\n               indexField2: this.settings.indexField2,\n               isSource: 0,\n            },\n         });\n\n         // // Create definitions of the connected fields\n         // // NOTE: skip directly to the ABMLClass.save() to avoid the\n         // // migrations caused during the ABField.save() operations.\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         // linkCol.settings.linkColumn = this.id;\n         // await ABFieldUserCore.prototype.save.call(linkCol);\n\n         // // Update the id value of linked field to connect together\n         // this.settings.linkColumn = linkCol.id;\n         // await ABFieldUserCore.prototype.save.call(this);\n\n         let newDef = await this.toDefinition().save();\n         this.id = newDef.id;\n\n         linkCol.settings.linkColumn = this.id;\n         let newLinkDef = await linkCol.toDefinition().save();\n         linkCol.id = newLinkDef.id;\n\n         this.settings.linkColumn = linkCol.id;\n         await this.toDefinition().save();\n\n         // Add fields to Objects\n         await this.object.fieldAdd(this);\n\n         await SiteUser.fieldAdd(linkCol);\n\n         // Create column to DB\n         await this.migrateCreate();\n\n         await linkCol.migrateCreate();\n\n         return this;\n      } else {\n         return super.save();\n      }\n   }\n\n   // return the grid column header definition for this instance of ABFieldUser\n\n   columnHeader(options) {\n      // debugger;\n      options = this.setDisplayOptions(options);\n      return super.columnHeader(options);\n   }\n\n   /**\n    * @function customDisplay\n    * perform any custom display modifications for this field.\n    * @param {object} row is the {name=>value} hash of the current row of data.\n    * @param {App} App the shared ui App object useful more making globally\n    *             unique id references.\n    * @param {HtmlDOM} node  the HTML Dom object for this field's display.\n    */\n   // customDisplay(row, App, node, options = {}) {\n   //    debugger;\n   //    options = this.setDisplayOptions(options);\n   //\n   //    return super.customDisplay(row, App, node, options);\n   // }\n\n   setDisplayOptions(options) {\n      options = options || {};\n      options.editable =\n         this.settings.editable != null ? this.settings.editable : true;\n\n      options.isLabelHidden =\n         this.settings.isShowUsername != null\n            ? !this.settings.isShowUsername\n            : false;\n\n      options.additionalText = (opt) => {\n         if (!this.settings.isShowProfileImage) return \"\";\n\n         if (opt.image_id)\n            return `<img src='/file/${opt.image_id}' style='border-radius:100%; object-fit: cover; margin: 0 5px 0 -10px;' width='28' height='28' />`;\n         else return '<i style=\"opacity: 0.6;\" class=\"fa fa-user\"></i> ';\n      };\n\n      return options;\n   }\n\n   /**\n    * @method defaultValue\n    * insert a key=>value pair that represent the default value\n    * for this field.\n    * @param {obj} values a key=>value hash of the current values.\n    */\n   defaultValue(values) {\n      if (this.settings.isCurrentUser) {\n         if (this.settings.isMultiple) {\n            values[this.columnName] = [\n               {\n                  id: this.AB.Account.username(),\n                  text: this.AB.Account.username(),\n               },\n            ];\n         } else {\n            values[this.columnName] = this.AB.Account.username();\n         }\n      }\n   }\n\n   getValue(item) {\n      let val = super.getValue(item);\n\n      if (val) {\n         if (typeof val == \"string\")\n            val = val.replace(/ab-current-user/g, this.AB.Account.username());\n         else if (Array.isArray(val))\n            val = val.map((v) =>\n               (v?.username ?? v?.uuid ?? v?.id ?? v)?.replace(\n                  /ab-current-user/g,\n                  this.AB.Account.username()\n               )\n            );\n      }\n\n      return val;\n   }\n\n   setValue(item, rowData) {\n      let val = rowData[this.columnName];\n      if (val === \"\") {\n         // this means this value isn't set.\n         // can we remove this from the data?\n         delete rowData[this.columnName];\n         super.setValue(item, rowData);\n         return;\n      }\n\n      if (this.linkType() == \"many\") {\n         // val should be an array.\n         if (!Array.isArray(val)) {\n            val = [val];\n         }\n         // if any of those contain \"ab-current-user\" replace it:\n         val = val.map((v) =>\n            v == \"ab-current-user\" ? this.AB.Account.username() : v\n         );\n      } else {\n         // val is a single entry string\n         // Select \"[Current user]\" to update\n         if (val == \"ab-current-user\") val = this.AB.Account.username();\n      }\n\n      rowData[this.columnName] = val;\n\n      super.setValue(item, rowData);\n   }\n\n   getUsers() {\n      return this.AB.Account.userList().map((u) => {\n         const result = {\n            id: u.username,\n            image: u.image_id,\n         };\n\n         if (this.settings.isMultiple) {\n            result.text = u.username;\n         } else {\n            result.value = u.username;\n         }\n\n         return result;\n      });\n   }\n\n   getOptions(...params) {\n      return super.getOptions(...params).then((options) => {\n         // in a ABFieldUser, our options.id elements need to have\n         // the username, not the .uuid:\n         (options || []).forEach((o) => {\n            if (o.username) {\n               o.id = o.username;\n            }\n         });\n\n         return options;\n      });\n   }\n\n   pullRelationValues(row) {\n      let values = super.pullRelationValues(row);\n\n      // remember, our .id == .username\n      if (Array.isArray(values)) {\n         // prevent any null or undefined:\n         values = values.filter((v) => v);\n         values = values.map((v) => {\n            v.id = v.username || v.id;\n            return v;\n         });\n      } else {\n         if (values) {\n            values.id = values.username || values.id;\n         }\n      }\n\n      return values;\n   }\n\n   pullRecordRelationValues(record) {\n      let data = super.pullRecordRelationValues(record);\n      if (Array.isArray(data)) {\n         data = data.map((d) => {\n            d.id = d.username ?? d.id;\n            return d;\n         });\n      } else {\n         data.id = data.username || data.id;\n      }\n\n      return data;\n   }\n};\n","const ABMobilePageCore = require(\"../../core/mobile/ABMobilePageCore\");\n\nmodule.exports = class ABMobilePage extends ABMobilePageCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // check to see if I've been updated, if so, alert my parent:\n      this.__Handler_ABDEF_UPDATED = (def) => {\n         if (def.id == this.id) {\n            this.emit(\"definition.updated\", this);\n            this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         }\n      };\n      this.AB.on(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n\n      // check to see if any of my child pages have been updated and\n      // update my defintion of them:\n      this.__Handler_DEF_UPDATED = (page) => {\n         // create a new Field with the updated def\n         var def = this.AB.definitionByID(page.id);\n         if (!def) return;\n\n         var newPage = this.pageNew(def);\n\n         // we want to keep the same pageID order:\n         var newPages = [];\n         this.pages().forEach((pg) => {\n            if (pg.id === page.id) {\n               newPages.push(newPage);\n               return;\n            }\n            newPages.push(pg);\n         });\n\n         this._pages = newPages;\n\n         page.off(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      };\n      this.pages().forEach((p) => {\n         p.on(\"definition.updated\", this.__Handler_DEF_UPDATED);\n      });\n   }\n\n   /**\n    * @method refreshInstance()\n    * This returns a NEW instance of a ABMobilePage based upon the latest\n    * version of it's Definition.  It also resolves any current listeners\n    * this copy currently has and prepare this to discard itself.\n    */\n   refreshInstance(parent) {\n      // create a new Field with the updated def\n      var def = this.AB.definitionByID(this.id);\n      if (!def) return;\n\n      var newPage = (parent ?? this.parent)?.pageNew(def);\n\n      try {\n         // detatch ourself from other emitters:\n         this.AB.off(\"ab.abdefinition.update\", this.__Handler_ABDEF_UPDATED);\n         this.pages().forEach((pg) => {\n            pg.removeAllListeners(\"definition.updated\");\n         });\n      } catch (e) {\n         // debugger;\n         console.error(e);\n      }\n\n      return newPage;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let allViews = this.views();\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no widgets\");\n      }\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABMobileViewCore = require(\"../../core/mobile/ABMobileViewCore.js\");\n\nmodule.exports = class ABMobileView extends ABMobileViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"mobile-view\",\n         \"mobile-page\",\n         // \"formpanel\",\n         // \"viewcontainer\",\n         // // not allowed Detail's widgets\n         // \"detailcheckbox\",\n         // \"detailcustom\",\n         // \"detailconnect\",\n         // \"detailimage\",\n         // \"detailselectivity\",\n         // \"detailtext\",\n         // \"detailtree\",\n         // // not allowed Form's widgets\n         // \"button\",\n         // \"checkbox\",\n         // \"connect\",\n         // \"datepicker\",\n         // \"fieldcustom\",\n         // \"textbox\",\n         // \"numberbox\",\n         // \"selectsingle\",\n         // \"selectmultiple\",\n         // \"formtree\",\n         // \"fieldreadonly\",\n         // // not allowed Chart's Widgets\n         // \"pie\",\n         // \"bar\",\n         // \"line\",\n         // \"area\",\n         // // not allowed Report page\n         // \"report\",\n         // \"reportPage\",\n         // \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our sub views\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABMobileViewFormCore = require(\"../../core/mobile/ABMobileViewFormCore\");\n\nconst ABMobileViewFormButton = require(\"./ABMobileViewFormButton\");\n\nmodule.exports = class ABMobileViewForm extends ABMobileViewFormCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method refreshDefaultButton()\n    * On the ABDesigner once a Form Field is added/removed from a form, we want\n    * to make sure the default Form Button is pushed down to the bottom of the\n    * list of form Items.\n    * @param {obj} ids\n    *        The id hash of the webix widgets that show the fields.\n    * @return {ABMobileViewFormButton}\n    */\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABMobileViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABMobileViewFormButton.newInstance(\n            this.application,\n            this\n         );\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.dataviewID) {\n         this.warningsMessage(`does not have a DataCollection assigned.`);\n      } else {\n         let DC = this.datacollection;\n         if (!DC) {\n            this.warningsMessage(\n               `references an unknown DataCollection [${this.settings.dataviewID}].`\n            );\n         }\n      }\n   }\n};\n","const ABMobileViewFormButtonCore = require(\"../../core/mobile/ABMobileViewFormButtonCore\");\n\nmodule.exports = class ABMobileViewFormButton extends (\n   ABMobileViewFormButtonCore\n) {};\n","const ABMobileViewFormCheckboxCore = require(\"../../core/mobile/ABMobileViewFormCheckboxCore\");\n\nmodule.exports = class ABMobileViewFormCheckbox extends (\n   ABMobileViewFormCheckboxCore\n) {};\n","const ABMobileViewFormConnectCore = require(\"../../core/mobile/ABMobileViewFormConnectCore\");\n\n// const ABViewPropertyAddPage =\n//    require(\"./viewProperties/ABViewPropertyAddPage\").default;\n// const ABViewPropertyEditPage =\n//    require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\n// const ABViewFormConnectPropertyComponentDefaults =\n//    ABMobileViewFormConnectCore.defaultValues();\n\n// const ABPopupSort = require(\"../../../ABDesigner/ab_work_object_workspace_popupSortFields\");\n\n// let FilterComponent = null;\n// let SortComponent = null;\n\nmodule.exports = class ABMobileViewFormConnect extends (\n   ABMobileViewFormConnectCore\n) {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions\n         /* ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n         */\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // Does this do anything here?\n      // this.addPageTool.fromSettings(this.settings);\n      // this.editPageTool.fromSettings(this.settings);\n   }\n\n   // static get addPageProperty() {\n   //    return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   // static get editPageProperty() {\n   //    return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n   //    return new ABViewFormConnectComponent(this);\n   // }\n\n   // get addPageTool() {\n   //    if (this.__addPageTool == null)\n   //       this.__addPageTool = new ABViewPropertyAddPage();\n\n   //    return this.__addPageTool;\n   // }\n\n   // get editPageTool() {\n   //    if (this.__editPageTool == null)\n   //       this.__editPageTool = new ABViewPropertyEditPage();\n\n   //    return this.__editPageTool;\n   // }\n};\n","const ABMobileViewFormCustomCore = require(\"../../core/mobile/ABMobileViewFormCustomCore\");\n\nmodule.exports = class ABMobileViewFormCustom extends (\n   ABMobileViewFormCustomCore\n) {};\n","const ABMobileViewFormDateCore = require(\"../../core/mobile/ABMobileViewFormDateCore\");\n\nmodule.exports = class ABMobileViewFormDate extends ABMobileViewFormDateCore {};\n","const ABMobileViewFormDatetimeCore = require(\"../../core/mobile/ABMobileViewFormDatetimeCore\");\n\nmodule.exports = class ABMobileViewFormDatetime extends (\n   ABMobileViewFormDatetimeCore\n) {};\n","const ABMobileViewFormEmailCore = require(\"../../core/mobile/ABMobileViewFormEmailCore\");\n\nmodule.exports = class ABMobileViewFormEmail extends (\n   ABMobileViewFormEmailCore\n) {};\n","const ABMobileViewFormFileCore = require(\"../../core/mobile/ABMobileViewFormFileCore\");\n\nmodule.exports = class ABMobileViewFormFile extends ABMobileViewFormFileCore {};\n","const ABMobileViewFormFormulaCore = require(\"../../core/mobile/ABMobileViewFormFormulaCore\");\n\nmodule.exports = class ABMobileViewFormFormula extends (\n   ABMobileViewFormFormulaCore\n) {};\n","const ABMobileViewFormImageCore = require(\"../../core/mobile/ABMobileViewFormImageCore\");\n\nmodule.exports = class ABMobileViewFormImage extends (\n   ABMobileViewFormImageCore\n) {};\n","const ABMobileViewFormItemCore = require(\"../../core/mobile/ABMobileViewFormItemCore\");\n\nmodule.exports = class ABMobileViewFormItem extends ABMobileViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`FormItem Test Warning.`);\n   // }\n};\n","const ABMobileViewFormNumberCore = require(\"../../core/mobile/ABMobileViewFormNumberCore\");\n\nmodule.exports = class ABMobileViewFormNumber extends (\n   ABMobileViewFormNumberCore\n) {};\n","const ABMobileViewFormReadonlyCore = require(\"../../core/mobile/ABMobileViewFormReadonlyCore\");\n\nmodule.exports = class ABMobileViewFormReadonly extends (\n   ABMobileViewFormReadonlyCore\n) {};\n","const ABMobileViewFormSelectMultipleCore = require(\"../../core/mobile/ABMobileViewFormSelectMultipleCore\");\n\nmodule.exports = class ABMobileViewFormSelectMultiple extends (\n   ABMobileViewFormSelectMultipleCore\n) {};\n","const ABMobileViewFormSelectSingleCore = require(\"../../core/mobile/ABMobileViewFormSelectSingleCore\");\n\nmodule.exports = class ABMobileViewFormSelectSingle extends (\n   ABMobileViewFormSelectSingleCore\n) {};\n","const ABMobileViewFormTextboxCore = require(\"../../core/mobile/ABMobileViewFormTextboxCore\");\n\nmodule.exports = class ABMobileViewFormTextbox extends (\n   ABMobileViewFormTextboxCore\n) {\n   // warningsEval() {\n   //    super.warningsEval();\n   //    this.warningsMessage(`${k} references an unknown Page.`);\n   // }\n};\n","const ABMobileViewLabelCore = require(\"../../core/mobile/ABMobileViewLabelCore\");\n// const ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABMobileViewLabel extends ABMobileViewLabelCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   // component() {\n\n   //    // return new ABViewLabelComponent(this);\n   // }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABMobileViewListCore = require(\"../../core/mobile/ABMobileViewListCore\");\n\nmodule.exports = class ABMobileViewList extends ABMobileViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n   warningsEval() {\n      super.warningsEval();\n\n      [\"linkPageAdd\", \"linkPageDetail\"].forEach((k) => {\n         if (this.settings[k]) {\n            let page = this.application.pageByID(this.settings[k], true);\n            if (!page) {\n               this.warningsMessage(`${k} references an unknown Page.`);\n            }\n         }\n      });\n   }\n};\n","/**\n * ABProcessLane\n * manages a lane in a Process Diagram.\n *\n * Lanes manage users in the system, and provide a way to lookup a SiteUser.\n */\nvar ABProcessLaneCore = require(\"../../core/process/ABProcessLaneCore\");\n\nmodule.exports = class ABProcessLane extends ABProcessLaneCore {\n   // constructor(attributes, process, application) {\n   //    super(attributes, process, application);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   transferParticipantWhereToMe(id) {\n      var myParticipant = this.process.elementForDiagramID(id);\n      if (myParticipant) {\n         // if I haven't already set my where clause, and my Participant\n         // has one, then take it:\n         if (!this.stashed && myParticipant.stashed) {\n            var copyParams = [\n               \"stashed\",\n               \"useRole\",\n               \"role\",\n               \"useAccount\",\n               \"account\",\n            ];\n            copyParams.forEach((p) => {\n               var swap = this[p];\n               this[p] = myParticipant[p];\n               myParticipant[p] = swap; // ?? do this ??\n            });\n         }\n      }\n   }\n\n   /**\n    * fromElement()\n    * initialize this Lane's values from the given BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n\n      // on creation, if I have child objects, then move the .where definition\n      // from my parent Participant to ME\n      if (element.children && element.children.length > 0) {\n         if (element.parent && element.parent.type == \"bpmn:Participant\") {\n            this.transferParticipantWhereToMe(element.parent.id);\n         }\n      } else {\n         // this info might just reside in the .parent.children[]\n         if (\n            element.parent &&\n            element.parent.children &&\n            element.parent.children.length > 0\n         ) {\n            element.parent.children.forEach((child) => {\n               if (child.type != \"bpmn:Lane\") {\n                  // if child has lanes\n                  if (\n                     child.businessObject.lanes &&\n                     child.businessObject.lanes.length > 0\n                  ) {\n                     // if lane is me\n                     var myLane = child.businessObject.lanes.find((l) => {\n                        return l.id == this.diagramID;\n                     });\n                     if (myLane) {\n                        this.transferParticipantWhereToMe(element.parent.id);\n\n                        // tell child I'm it's lane:\n                        var objChild = this.process.elementForDiagramID(\n                           child.id\n                        );\n                        if (objChild) {\n                           objChild.setLane(this);\n                        }\n                     }\n                  }\n               }\n            });\n         }\n      }\n\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Lane with information that was relevant\n    * from the provided BPMN:Lane\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // if I picked up a new task, inform it I am it's lane:\n   }\n};\n","/**\n * ABProcessParticipant\n * manages the participant lanes in a Process Diagram.\n *\n * Participants manage users in the system (when there are no lanes defined)\n * and provide a way to lookup a SiteUser.\n */\nvar ABProcessParticipantCore = require(\"../../core/process/ABProcessParticipantCore\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessParticipant extends ABProcessParticipantCore {\n   // constructor(attributes, process, AB) {\n   //    super(attributes, process, AB);\n   // }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   /**\n    * fromElement()\n    * initialize this Participant's values from the given BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Participant with information that was relevant\n    * from the provided BPMN:Participant\n    * @param {BPMNParticipant}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Participant_185ljkg\",\n                \"width\": 958,\n                \"height\": 240,\n                \"type\": \"bpmn:Participant\",\n                \"x\": -810,\n                \"y\": -2010,\n                \"order\": {\n                    \"level\": -2\n                },\n               \"businessObject\": {\n                    \"$type\": \"bpmn:Participant\",\n                    \"id\": \"Participant_185ljkg\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": -810,\n                            \"y\": -2010,\n                            \"width\": 958,\n                            \"height\": 240\n                        },\n                        \"id\": \"Participant_185ljkg_di\",\n                        \"isHorizontal\": true\n                    },\n                    \"processRef\": {\n                        \"$type\": \"bpmn:Process\",\n                        \"id\": \"Process_0x3sul5\"\n                    }\n                }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      if (defElement.children) {\n         var laneIDs = [];\n         defElement.children.forEach((c) => {\n            if (c.type == \"bpmn:Lane\") {\n               laneIDs.push(c.id);\n            }\n         });\n         this.laneIDs = laneIDs;\n      }\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this objec.\n    * @return {json}\n    */\n   diagramProperties() {\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n   }\n};\n","const ABProcessElementCore = require(\"../../../core/process/tasks/ABProcessElementCore.js\");\n\nmodule.exports = class ABProcessElement extends ABProcessElementCore {\n   // constructor(attributes, process, AB, defaultValues) {\n   //    super(attributes, process, AB, defaultValues);\n\n   //    // listen\n   // }\n\n   /**\n    * @method destroy()\n    * remove this task definition.\n    * @return {Promise}\n    */\n   destroy() {\n      ////\n      //// TODO: once our core conversion is complete, this .save() can be\n      //// moved to ABProcessTaskCore, and our ABDefinition.save() can take\n      //// care of the proper method to save depending on the current Platform.\n      ////\n      // return this.toDefinition()\n      //     .destroy()\n\n      return super.destroy().then(() => {\n         return this.process.elementRemove(this);\n      });\n   }\n\n   isValid() {\n      /*\n        var validator = OP.Validation.validator();\n\n        // label/name must be unique:\n        var isNameUnique =\n            this.AB.processes((o) => {\n                return o.name.toLowerCase() == this.name.toLowerCase();\n            }).length == 0;\n        if (!isNameUnique) {\n            validator.addError(\n                \"name\",\n                L(\n                    \"ab.validation.object.name.unique\",\n                    `Process name must be unique (\"${this.name}\"\" already used in this Application)`\n                )\n            );\n        }\n\n        return validator;\n        */\n\n      // var isValid =\n      //     this.AB.processes((o) => {\n      //         return o.name.toLowerCase() == this.name.toLowerCase();\n      //     }).length == 0;\n      // return isValid;\n\n      return true;\n   }\n\n   ////\n   //// Modeler Instance Methods\n   ////\n\n   findLane(curr, cb) {\n      if (!curr) {\n         cb(null, null);\n         return;\n      }\n\n      // if current object has a LANE definition, use that one:\n      if (curr.lanes && curr.lanes.length > 0) {\n         cb(null, curr.lanes[0]);\n      } else if (curr.$type == \"bpmn:Participant\") {\n         // if the current is a Participant, take that one\n         cb(null, curr);\n      } else {\n         // else move upwards and check again:\n         curr = curr.$parent;\n         this.findLane(curr, cb);\n      }\n   }\n\n   setLane(Lane) {\n      this.laneDiagramID = Lane.diagramID;\n   }\n\n   /**\n    * fromElement()\n    * initialize this Task's values from the given BPMN:Element\n    * @param {BPMNElement}\n    */\n   fromElement(element) {\n      this.diagramID = element.id || this.diagramID;\n      this.onChange(element);\n   }\n\n   /**\n    * onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      /*\n        Sample DefElement:\n            {\n                \"labels\": [],\n                \"children\": [],\n                \"id\": \"Task_08j07ni\",\n                \"width\": 100,\n                \"height\": 80,\n                \"type\": \"bpmn:SendTask\",\n                \"x\": 20,\n                \"y\": -2130,\n                \"order\": {\n                    \"level\": 5\n                },\n                \"businessObject\": {\n                    \"$type\": \"bpmn:SendTask\",\n                    \"id\": \"Task_08j07ni\",\n                    \"name\": \"ffff\",\n                    \"di\": {\n                        \"$type\": \"bpmndi:BPMNShape\",\n                        \"bounds\": {\n                            \"$type\": \"dc:Bounds\",\n                            \"x\": 20,\n                            \"y\": -2130,\n                            \"width\": 100,\n                            \"height\": 80\n                        },\n                        \"id\": \"SendTask_0iidv6o_di\"\n                    }\n\n                    // Some elements (like EndEvents) have:\n                    .eventDefinitions: [\n                        {\n                            $type: \"actual bpmn:ElementType\",\n                            ...\n                        }\n                    ]\n                },\n                \"incoming\":[],\n                \"outgoing\":[]\n            }\n         */\n\n      // from the BPMI modeler we can gather a label for this:\n      if (\n         defElement.businessObject.name &&\n         defElement.businessObject.name != \"\"\n      ) {\n         this.label = defElement.businessObject.name;\n      }\n\n      // our lane may have changed:\n      var currObj = defElement.businessObject;\n      this.findLane(currObj, (err, obj) => {\n         if (obj) {\n            this.laneDiagramID = obj.id;\n         } else {\n            // if my parent shape is a Participant, then use that:\n            if (\n               defElement.parent &&\n               defElement.parent.type == \"bpmn:Participant\"\n            ) {\n               this.laneDiagramID = defElement.parent.id;\n            } else {\n               this.laneDiagramID = null;\n            }\n         }\n      });\n   }\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      const warnings = this.warnings();\n      return [\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n            warn: warnings.length ? warnings : null,\n         },\n      ];\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ui = {\n         id: id,\n         view: \"label\",\n         label: \"this task has not implement properties yet...\",\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {}\n\n   /**\n    * property()\n    * return the specific property value if it exists.\n    * @return {mixed} | undefined\n    */\n   property(id) {\n      if ($$(id)) {\n         return $$(id).getValue();\n      }\n   }\n\n   /**\n    * switchTo()\n    * replace this object with an instance of one of our child classes:\n    * @param {ABProcessTask*} child\n    *        an instance of the new Process Task we are replaced with.\n    * @param {string} propertiesID\n    *        the webix ui.id container for the properties panel.\n    */\n   switchTo(child, propertiesID) {\n      // remove myself from our containing process's elements\n      this.process.elementRemove(this);\n\n      // add the new Process WITH the same id\n      this.process.elementAdd(child);\n\n      // show the child properties:\n      child.propertiesShow(propertiesID);\n\n      this.emit(\"switchTo\", child);\n   }\n\n   /**\n    * @method warningsEval()\n    * re-evaluate our warnings for this Process Task.\n    * Most of our ProcessTasks need to also verify data related to\n    * other available tasks, so we need to call the onProcessReady()\n    * so we can access those values.\n    */\n   warningsEval() {\n      super.warningsEval();\n      this.onProcessReady();\n\n      // if this isn't an end type of task, then there must be\n      // > 0 next tasks\n      if (!this.isEndTask()) {\n         const myOutgoingConnections = this.process.connectionsOutgoing(\n            this.diagramID\n         );\n         if (myOutgoingConnections.length < 1) {\n            this.warningMessage(\"should have another task after this one\");\n         }\n      }\n   }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(msg, data = {}) {\n      let message = `${this.defaults.key}[${\n         this.label ? this.label : this.name\n      }]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABProcessEndCore = require(\"../../../core/process/tasks/ABProcessEndCore.js\");\n\nmodule.exports = class ABProcessEnd extends ABProcessEndCore {\n   /**\n    * do()\n    * this method actually performs the action for this task.\n    * @param {obj} instance  the instance data of the running process\n    * @return {Promise}\n    *      resolve(true/false) : true if the task is completed.\n    *                            false if task is still waiting\n    */\n   // do(instance) {\n   //     return new Promise((resolve, reject) => {\n   //         // An End Event doesn't perform any other actions\n   //         // than to signal it has successfully completed.\n   //         // But it provides no Additional Tasks to work on.\n   //         // for testing:\n   //         this.stateCompleted(instance);\n   //         this.log(instance, \"End Event Reached\");\n   //         resolve(true);\n   //     });\n   // }\n};\n","const ABProcessGatewayExclusiveCore = require(\"../../../core/process/tasks/ABProcessGatewayExclusiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessGatewayExclusive extends (\n   ABProcessGatewayExclusiveCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /**\n    * diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties() {\n      // the first entry is for the gateway element itself\n      var properties = super.diagramProperties();\n      /*[\n         {\n            id: this.diagramID,\n            def: {\n               name: this.name,\n            },\n         },\n      ];\n      */\n\n      // now add any additional updates for each of our connections:\n      var myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      myOutgoingConnections.forEach((conn) => {\n         properties.push({\n            id: conn.id,\n            def: {\n               name: this.conditions[conn.id]?.label ?? \"\",\n            },\n         });\n      });\n      return properties;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      // make sure we have > 1 connection.\n      const myOutgoingConnections = this.process.connectionsOutgoing(\n         this.diagramID\n      );\n      if (myOutgoingConnections.length < 2) {\n         this.warningMessage(\"should have multiple outgoing connections\");\n      }\n\n      // make sure there is no more then 1 connection that doesn't have\n      // a condition:\n      let numCondWithOne = 0;\n      myOutgoingConnections.forEach((c) => {\n         if ((this.conditions[c.id]?.filterValue.rules?.length ?? 0) == 0) {\n            numCondWithOne++;\n         }\n      });\n\n      if (numCondWithOne > 1) {\n         this.warningMessage(\n            \"should not have more than 1 unfiltered connection.\"\n         );\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskEmailCore = require(\"../../../core/process/tasks/ABProcessTaskEmailCore.js\");\n\nmodule.exports = class ABProcessTaskEmail extends ABProcessTaskEmailCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      // check for warnings:\n\n      if (!this.subject) {\n         this.warningMessage(\"is missing a subject\");\n      }\n\n      if (!this.message) {\n         this.warningMessage(\"is missing a message\");\n      }\n\n      this.verifySetting(\"to\");\n      this.verifySetting(\"from\");\n      this.verifyNextLane(\"to\");\n      if (this.from == \"0\") {\n         let thisLane = this.myLane();\n         if (!thisLane) {\n            this.warningMessage(\n               \"can not resolve the lane participant for [.from] field.\"\n            );\n         }\n      }\n      this.verifyRoleAccount(\"to\", \"toUsers\");\n      this.verifyRoleAccount(\"from\", \"fromUsers\");\n   }\n\n   /**\n    * @method verifySetting()\n    * make sure the given field key has a value assigned.\n    * @param {string} key\n    *        the property of this object to check. (to, from)\n    */\n   verifySetting(key) {\n      if (this[key] == \"\") {\n         this.warningMessage(`does not have a [${key}] setting.`);\n      }\n   }\n\n   /**\n    * @method verifyNextLane()\n    * make sure we can access a Lane for the given property key.\n    * The \"to\" field can reference the \"Next Participant\". This checks to\n    * see if we can reference a lane for the next task.\n    * @param {string} key\n    *        the property that has the value for Next Participant. [to]\n    */\n   verifyNextLane(key) {\n      if (this[key] === \"0\") {\n         // Next Participant\n         // we need to resolve our next task and see if we can pull the participant info from it.\n\n         let nextTasks = this.process.connectionNextTask(this);\n         let nextLanesResolved = true;\n         nextTasks.forEach((t) => {\n            let lane = t.myLane();\n            if (!lane) {\n               nextLanesResolved = false;\n            }\n         });\n         if (!nextLanesResolved || nextTasks.length == 0) {\n            this.warningMessage(\n               `can not resolve next lane participant for [${key}] field.`\n            );\n         }\n      }\n   }\n\n   /**\n    * @method verifyRoleAccount()\n    * Check to see if the provided property is set to use a Role/Account for\n    * the email, and make sure there are values set for what is chosen.\n    * @param {string} key\n    *        the property we are currently validating.\n    * @param {string} valKey\n    *        the property that contains the specific value object.\n    */\n   verifyRoleAccount(key, valKey) {\n      if (this[key] == \"1\") {\n         if (this[valKey]) {\n            if (this[valKey].useRole) {\n               if (this[valKey].role.length == 0) {\n                  this.warningMessage(`can not resolve [${key}] Role setting.`);\n               }\n            }\n            if (this[valKey].useAccount) {\n               if (this[valKey].account.length == 0) {\n                  this.warningMessage(\n                     `can not resolve [${key}] Account setting.`\n                  );\n               }\n            }\n            // TODO:\n            // if (this[valKey].userFields.length > 0) {\n            //    // how to know if this is a problem?\n            // }\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCore.js\");\n\nmodule.exports = class ABProcessTaskService extends ABProcessTaskServiceCore {};\n","const AccountingBatchProcessingCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingBatchProcessingCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingBatchProcessing extends (\n   AccountingBatchProcessingCore\n) {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         fieldBatchEntries: `${id}_fieldBatchEntries`,\n         fieldBatchFinancialPeriod: `${id}_fieldBatchFinancialPeriod`,\n         objectJE: `${id}_objectJE`,\n         fieldJEAccount: `${id}_fieldJEAccount`,\n         fieldJERC: `${id}_fieldJERC`,\n         fieldJEStatus: `${id}_fieldJEStatus`,\n         fieldJEStatusComplete: `${id}_fieldJEStatusComplete`,\n         objectBR: `${id}_objectBR`,\n         fieldBRFinancialPeriod: `${id}_fieldBRFinancialPeriod`,\n         fieldBRAccount: `${id}_fieldBRAccount`,\n         fieldBRRC: `${id}_fieldBRRC`,\n         fieldBREntries: `${id}_fieldBREntries`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      //\n      // set up field settings:\n      //\n\n      var blankField = {\n         id: 0,\n         value: L(\"Select a Field\"),\n      };\n      // blankField : generic Select a field entry\n\n      function defaultFields(objID) {\n         // create a new options array of Field Choices for the given obj.id\n\n         var fields = [blankField];\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      }\n\n      function updateFields(fieldPickers, fieldValues, defaultValue) {\n         // update the list of field select choices with the new field choices\n\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               // if (defaultValue) {\n               //    picker.define(\"value\", defaultValue);\n               // } else {\n               //    picker.define(\"value\", fieldValues[0].value);\n               // }\n               picker.refresh();\n               picker.show();\n            }\n         });\n      }\n\n      var batchFields = defaultFields(this.objectBatch);\n      // batchFields : the default list of fields for the Batch Object\n\n      var fieldPickersBatch = [\n         ids.fieldBatchEntries,\n         ids.fieldBatchFinancialPeriod,\n      ];\n      // fieldPickersBatch : the list of field selects to update for the Batch\n      //      object.\n\n      var jeFields = defaultFields(this.objectJE);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersJE = [\n         ids.fieldJEAccount,\n         ids.fieldJERC,\n         ids.fieldJEStatus,\n      ];\n      // fieldPickersJE : the list of field selects to update for the Journal Entry\n      //      object.\n\n      function compileStatusValues(statusField) {\n         var values = [{ id: 0, value: L(\"Select the Complete Value\") }];\n         if (statusField && statusField.options) {\n            statusField.options().forEach((o) => {\n               values.push({ id: o.id, value: o.text });\n            });\n         }\n         return values;\n      }\n\n      function updatePickerStatusComplete(values) {\n         var wbxComplete = $$(ids.fieldJEStatusComplete);\n         if (wbxComplete) {\n            // update fieldJEStatusComplete options\n            wbxComplete.define(\"options\", values);\n            wbxComplete.refresh();\n            // show fieldJEStatusComplete\n            wbxComplete.show();\n         }\n      }\n\n      function onStatusComplete(newVal) {\n         // pull the ABField object from newValue\n         var jeEntryID = $$(ids.objectJE).getValue();\n         var jeEntry = objectList.find((o) => o.id == jeEntryID);\n         if (jeEntry && jeEntry.object) {\n            var statusField = jeEntry.object.fieldByID(newVal);\n            if (statusField && statusField.options) {\n               // get the options as an []\n               jeFieldStatusValues = compileStatusValues(statusField);\n\n               updatePickerStatusComplete(jeFieldStatusValues);\n            }\n         }\n      }\n\n      var jeFieldStatusValues = compileStatusValues();\n      // jeFieldStatusValues : the list of status options from the fieldJEStatus\n      //      selected entry.\n\n      var brFields = defaultFields(this.objectBR);\n      // jeFields : the default list of fields for the Journal Entry Object\n\n      var fieldPickersBR = [\n         ids.fieldBRFinancialPeriod,\n         ids.fieldBRAccount,\n         ids.fieldBRRC,\n         ids.fieldBREntries,\n      ];\n      // fieldPickersBR : the list of field selects to update for the Balance Record\n      //      object.\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        batchFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBatch, batchFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchEntries,\n               view: \"select\",\n               label: L(\"Batch->JE[]\"),\n               value: this.fieldBatchEntries,\n               name: \"fieldBatchEntries\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBatchFinancialPeriod,\n               view: \"select\",\n               label: L(\"Batch->FinancialPeriod\"),\n               value: this.fieldBatchFinancialPeriod,\n               name: \"fieldBatchFinancialPeriod\",\n               options: batchFields,\n               hidden: true,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"Journal Entry Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        jeFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersJE, jeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEAccount,\n               view: \"select\",\n               label: L(\"JE->Account\"),\n               value: this.fieldJEAccount,\n               name: \"fieldJEAccount\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJERC,\n               view: \"select\",\n               label: L(\"JE->RC\"),\n               value: this.fieldJERC,\n               name: \"fieldJERC\",\n               options: jeFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldJEStatus,\n               view: \"select\",\n               label: L(\"JE->Status\"),\n               value: this.fieldJEStatus,\n               name: \"fieldJEStatus\",\n               options: jeFields,\n               hidden: true,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        onStatusComplete(newVal);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldJEStatusComplete,\n               view: \"select\",\n               label: L(\"JE->Status->Complete\"),\n               value: this.fieldJEStatusComplete,\n               name: \"fieldJEStatusComplete\",\n               options: jeFieldStatusValues,\n               hidden: true,\n            },\n            {\n               id: ids.objectBR,\n               view: \"select\",\n               label: L(\"Balance Record\"),\n               value: this.objectBR,\n               name: \"objectBR\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of jeFields\n                        brFields = defaultFields(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFields(fieldPickersBR, brFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldBRFinancialPeriod,\n               view: \"select\",\n               label: L(\"BR->FP\"),\n               value: this.fieldBRFinancialPeriod,\n               name: \"fieldBRFinancialPeriod\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRAccount,\n               view: \"select\",\n               label: L(\"BR->Account\"),\n               value: this.fieldBRAccount,\n               name: \"fieldBRAccount\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBRRC,\n               view: \"select\",\n               label: L(\"BR->RC\"),\n               value: this.fieldBRRC,\n               name: \"fieldBRRC\",\n               options: brFields,\n               hidden: true,\n            },\n            {\n               id: ids.fieldBREntries,\n               view: \"select\",\n               label: L(\"BR->Entries\"),\n               value: this.fieldBREntries,\n               name: \"fieldBREntries\",\n               options: brFields,\n               hidden: true,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      // if there are already default values for our Objects,\n      // unhide the field selectors:\n      if (this.objectBatch && this.objectBatch != 0) {\n         updateFields(fieldPickersBatch, batchFields);\n      }\n\n      if (this.objectJE && this.objectJE != 0) {\n         updateFields(fieldPickersJE, jeFields);\n      }\n\n      if (this.fieldJEStatus) {\n         onStatusComplete(this.fieldJEStatus);\n      }\n\n      if (this.objectBR && this.objectBR != 0) {\n         updateFields(fieldPickersBR, brFields);\n      }\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPClose extends AccountingFPCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPValue: `${id}_processFPValue`,\n         objectFP: `${id}_objectFP`,\n         objectGL: `${id}_objectGL`,\n         objectAcc: `${id}_objectAcc`,\n         fieldFPStart: `${id}_fieldFPStart`,\n         fieldFPOpen: `${id}_fieldFPOpen`,\n         fieldFPStatus: `${id}_fieldFPStatus`,\n         fieldFPActive: `${id}_fieldFPActive`,\n         fieldGLStarting: `${id}_fieldGLStarting`,\n         fieldGLRunning: `${id}_fieldGLRunning`,\n         fieldGLAccount: `${id}_fieldGLAccount`,\n         fieldGLRc: `${id}_fieldGLRc`,\n         fieldGLDebit: `${id}fieldGLDebit`,\n         fieldGLCredit: `${id}_fieldGLCredit`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccAsset: `${id}_fieldAccAsset`,\n         fieldAccExpense: `${id}_fieldAccExpense`,\n         fieldAccLiabilities: `${id}_fieldAccLiabilities`,\n         fieldAccEquity: `${id}_fieldAccEquity`,\n         fieldAccIncome: `${id}_fieldAccIncome`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object.fields().forEach((f) => {\n                  fields.push({ id: f.id, value: f.label, field: f });\n               });\n            }\n         }\n         return fields;\n      };\n\n      let getStatusFieldOptions = (statusFieldId) => {\n         let result = [];\n         let fpObject = this.AB.objectByID(this.objectFP);\n         if (!fpObject) return result;\n\n         let fpStatusField = fpObject.fieldByID(statusFieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateFPFields = (fpFields) => {\n         [ids.fieldFPStart, ids.fieldFPOpen, ids.fieldFPStatus].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", fpFields);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateFPStatusFields = (fpStatusOptions) => {\n         $$(ids.fieldFPActive).define(\"options\", fpStatusOptions);\n         $$(ids.fieldFPActive).refresh();\n      };\n\n      let updateGLFields = (glFields) => {\n         [\n            ids.fieldGLRunning,\n            ids.fieldGLAccount,\n            ids.fieldGLRc,\n            ids.fieldGLDebit,\n            ids.fieldGLCredit,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", glFields);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccAsset,\n            ids.fieldAccExpense,\n            ids.fieldAccLiabilities,\n            ids.fieldAccEquity,\n            ids.fieldAccIncome,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let fpFields = getFieldOptions(this.objectFP);\n      let glFields = getFieldOptions(this.objectGL);\n      let accFields = getFieldOptions(this.objectAcc);\n      let fpStatusFields = getStatusFieldOptions(this.fieldFPStatus);\n      let accTypeOptions = getListOptions(this.objectAcc, this.fieldAccType);\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Value\"),\n               value: this.processFPValue,\n               name: \"processFPValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFP,\n               view: \"select\",\n               label: L(\"FP Object\"),\n               value: this.objectFP,\n               name: \"objectFP\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        fpFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateFPFields(fpFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"GL Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        // gather new set of batchFields\n                        glFields = getFieldOptions(newVal);\n                        // rebuild the associated list of Fields to pick\n                        updateGLFields(glFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAcc,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAcc,\n               name: \"objectAcc\",\n               options: objectList,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        accFields = getFieldOptions(newVal);\n                        updateAccFields(accFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPStart,\n               view: \"select\",\n               label: L(\"FP -> Start\"),\n               value: this.fieldFPStart,\n               name: \"fieldFPStart\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPOpen,\n               view: \"select\",\n               label: L(\"FP -> Open\"),\n               value: this.fieldFPOpen,\n               name: \"fieldFPOpen\",\n               options: fpFields,\n            },\n            {\n               id: ids.fieldFPStatus,\n               view: \"select\",\n               label: L(\"FP -> Status\"),\n               value: this.fieldFPStatus,\n               name: \"fieldFPStatus\",\n               options: fpFields,\n               on: {\n                  onChange(newVal, oldVal) {\n                     if (newVal != oldVal) {\n                        fpStatusFields = getStatusFieldOptions(newVal);\n                        updateFPStatusFields(fpStatusFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPActive,\n               view: \"select\",\n               label: L(\"FP -> Active\"),\n               value: this.fieldFPActive,\n               name: \"fieldFPActive\",\n               options: fpStatusFields,\n            },\n            {\n               id: ids.fieldGLStarting,\n               view: \"select\",\n               label: L(\"GL -> Starting BL\"),\n               value: this.fieldGLStarting,\n               name: \"fieldGLStarting\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRunning,\n               view: \"select\",\n               label: L(\"GL -> Running BL\"),\n               value: this.fieldGLRunning,\n               name: \"fieldGLRunning\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLAccount,\n               view: \"select\",\n               label: L(\"GL -> Account\"),\n               value: this.fieldGLAccount,\n               name: \"fieldGLAccount\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLRc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLRc,\n               name: \"fieldGLRc\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLDebit,\n               view: \"select\",\n               label: L(\"GL -> Debit\"),\n               value: this.fieldGLDebit,\n               name: \"fieldGLDebit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldGLCredit,\n               view: \"select\",\n               label: L(\"GL -> Credit\"),\n               value: this.fieldGLCredit,\n               name: \"fieldGLCredit\",\n               options: glFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAcc || $$(ids.objectAcc).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccAsset,\n               view: \"select\",\n               label: L(\"Acc -> Asset\"),\n               value: this.fieldAccAsset,\n               name: \"fieldAccAsset\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccExpense,\n               name: \"fieldAccExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccLiabilities,\n               view: \"select\",\n               label: L(\"Acc -> Liabilities\"),\n               value: this.fieldAccLiabilities,\n               name: \"fieldAccLiabilities\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccEquity,\n               name: \"fieldAccEquity\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccIncome,\n               name: \"fieldAccIncome\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingFPYearCloseCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingFPYearCloseCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingFPYearClose extends AccountingFPYearCloseCore {\n   ////\n   //// Process Instance Methods\n   ////\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processFPYearValue: `${id}_processFPYearValue`,\n         objectFPYear: `${id}_objectFPYear`,\n         objectFPMonth: `${id}_objectFPMonth`,\n         objectGL: `${id}_objectGL`,\n         objectAccount: `${id}_objectAccount`,\n         valueFundBalances: `${id}_valueFundBalances`,\n         valueNetIncome: `${id}_valueNetIncome`,\n         fieldFPYearStart: `${id}_fieldFPYearStart`,\n         fieldFPYearEnd: `${id}_fieldFPYearEnd`,\n         fieldFPYearStatus: `${id}_fieldFPYearStatus`,\n         fieldFPYearActive: `${id}_fieldFPYearActive`,\n         fieldFPMonthStart: `${id}_fieldFPMonthStart`,\n         fieldFPMonthEnd: `${id}_fieldFPMonthEnd`,\n         fieldGLStartBalance: `${id}_fieldGLStartBalance`,\n         fieldGLRunningBalance: `${id}_fieldGLRunningBalance`,\n         fieldGLrc: `${id}_fieldGLrc`,\n         fieldAccNumber: `${id}_fieldAccNumber`,\n         fieldAccType: `${id}_fieldAccType`,\n         fieldAccTypeIncome: `${id}_fieldAccTypeIncome`,\n         fieldAccTypeExpense: `${id}_fieldAccTypeExpense`,\n         fieldAccTypeEquity: `${id}_fieldAccTypeEquity`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      var ids = this.propertyIDs(id);\n\n      var processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      var processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      var objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getFieldOptions = (objID, fieldKey) => {\n         let fields = [\n            {\n               id: 0,\n               value: L(\"Select a Field\"),\n            },\n         ];\n\n         if (objID) {\n            var entry = objectList.find((o) => o.id == objID);\n            if (entry && entry.object) {\n               entry.object\n                  .fields((f) => f.key == fieldKey)\n                  .forEach((f) => {\n                     fields.push({ id: f.id, value: f.label, field: f });\n                  });\n            }\n         }\n         return fields;\n      };\n\n      let getListOptions = (objectId, fieldId) => {\n         let result = [];\n         let object = this.AB.objectByID(objectId);\n         if (!object) return result;\n\n         let fpStatusField = object.fieldByID(fieldId);\n         if (\n            !fpStatusField ||\n            !fpStatusField.settings ||\n            !fpStatusField.settings.options\n         )\n            return result;\n\n         result = (fpStatusField.settings.options || []).map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n            };\n         });\n\n         return result;\n      };\n\n      let updateAccNumberFields = (accNumberFields) => {\n         $$(ids.fieldAccNumber).define(\"options\", accNumberFields);\n         $$(ids.fieldAccNumber).refresh();\n      };\n\n      let updateAccFields = (accFields) => {\n         $$(ids.fieldAccType).define(\"options\", accFields);\n         $$(ids.fieldAccType).refresh();\n      };\n\n      let updateAccTypeOptions = (accTypeOptions) => {\n         [\n            ids.fieldAccTypeIncome,\n            ids.fieldAccTypeExpense,\n            ids.fieldAccTypeEquity,\n         ].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", accTypeOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearDateOptions = (fpYearDateOptions) => {\n         [ids.fieldFPYearStart, ids.fieldFPYearEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpYearDateOptions);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateFPYearStatusOptions = (fpYearStatusFields) => {\n         $$(ids.fieldFPYearStatus).define(\"options\", fpYearStatusFields);\n         $$(ids.fieldFPYearStatus).refresh();\n      };\n\n      let updateFPYearActiveOptions = (fpYearStatusOptions) => {\n         $$(ids.fieldFPYearActive).define(\"options\", fpYearStatusOptions);\n         $$(ids.fieldFPYearActive).refresh();\n      };\n\n      let updateFPMonthDateFields = (fpMonthDateOpts) => {\n         [ids.fieldFPMonthStart, ids.fieldFPMonthEnd].forEach((fieldGLElem) => {\n            $$(fieldGLElem).define(\"options\", fpMonthDateOpts);\n            $$(fieldGLElem).refresh();\n         });\n      };\n\n      let updateGlNumberFields = (glNumberOptions) => {\n         [ids.fieldGLStartBalance, ids.fieldGLRunningBalance].forEach(\n            (fieldGLElem) => {\n               $$(fieldGLElem).define(\"options\", glNumberOptions);\n               $$(fieldGLElem).refresh();\n            }\n         );\n      };\n\n      let updateGlConnectFields = (glRcOptions) => {\n         $$(ids.fieldGLrc).define(\"options\", glRcOptions);\n         $$(ids.fieldGLrc).refresh();\n      };\n\n      let fpYearDateFields = getFieldOptions(this.objectFPYear, \"date\");\n      let fpYearStatusFields = getFieldOptions(this.objectFPYear, \"list\");\n      let fpYearStatusOptions = getListOptions(\n         this.objectFPYear,\n         this.fieldFPYearStatus\n      );\n      let fpMonthDateFields = getFieldOptions(this.objectFPMonth, \"date\");\n      let glNumberFields = getFieldOptions(this.objectGL, \"number\");\n      let glRcFields = getFieldOptions(this.objectGL, \"connectObject\");\n      let accNumberFields = getFieldOptions(this.objectAccount, \"number\");\n      let accTypeFields = getFieldOptions(this.objectAccount, \"list\");\n      let accTypeOptions = getListOptions(\n         this.objectAccount,\n         this.fieldAccType\n      );\n\n      var ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 200,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processFPYearValue,\n               view: \"select\",\n               label: L(\"Process Fiscal Period Year Value\"),\n               value: this.processFPYearValue,\n               name: \"processFPYearValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectFPYear,\n               view: \"select\",\n               label: L(\"FP Year Object\"),\n               value: this.objectFPYear,\n               name: \"objectFPYear\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPYearDateOptions(fpYearDateFields);\n\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateFPYearStatusOptions(accTypeFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectFPMonth,\n               view: \"select\",\n               label: L(\"FP Month Object\"),\n               value: this.objectFPMonth,\n               name: \"objectFPMonth\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpMonthDateFields = getFieldOptions(newVal, \"date\");\n                        updateFPMonthDateFields(fpMonthDateFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectGL,\n               view: \"select\",\n               label: L(\"Balance Object\"),\n               value: this.objectGL,\n               name: \"objectGL\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        glNumberFields = getFieldOptions(newVal, \"number\");\n                        updateGlNumberFields(glNumberFields);\n\n                        glRcFields = getFieldOptions(newVal, \"connectObject\");\n                        updateGlConnectFields(glRcFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.objectAccount,\n               view: \"select\",\n               label: L(\"Account Object\"),\n               value: this.objectAccount,\n               name: \"objectAccount\",\n               options: objectList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeFields = getFieldOptions(newVal, \"list\");\n                        updateAccFields(accTypeFields);\n\n                        accNumberFields = getFieldOptions(newVal, \"number\");\n                        updateAccNumberFields(accNumberFields);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.valueFundBalances,\n               view: \"text\",\n               label: L(\"Fund Balances Code\"),\n               value: this.valueFundBalances,\n               name: \"valueFundBalances\",\n            },\n            {\n               id: ids.valueNetIncome,\n               view: \"text\",\n               label: L(\"Net Income Code\"),\n               value: this.valueNetIncome,\n               name: \"valueNetIncome\",\n            },\n            {\n               id: ids.fieldFPYearStart,\n               view: \"select\",\n               label: L(\"FP Year -> Start\"),\n               value: this.fieldFPYearStart,\n               name: \"fieldFPYearStart\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearEnd,\n               view: \"select\",\n               label: L(\"FP Year -> End\"),\n               value: this.fieldFPYearEnd,\n               name: \"fieldFPYearEnd\",\n               options: fpYearDateFields,\n            },\n            {\n               id: ids.fieldFPYearStatus,\n               view: \"select\",\n               label: L(\"FP Year -> Status\"),\n               value: this.fieldFPYearStatus,\n               name: \"fieldFPYearStatus\",\n               options: fpYearStatusFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        fpYearStatusOptions = getListOptions(\n                           this.objectFPYear || $$(ids.objectFPYear).getValue(),\n                           newVal\n                        );\n                        updateFPYearActiveOptions(fpYearStatusOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldFPYearActive,\n               view: \"select\",\n               label: L(\"FP Year -> Active\"),\n               value: this.fieldFPYearActive,\n               name: \"fieldFPYearActive\",\n               options: fpYearStatusOptions,\n            },\n            {\n               id: ids.fieldFPMonthStart,\n               view: \"select\",\n               label: L(\"FP Month -> Start\"),\n               value: this.fieldFPMonthStart,\n               name: \"fieldFPMonthStart\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldFPMonthEnd,\n               view: \"select\",\n               label: L(\"FP Month -> End\"),\n               value: this.fieldFPMonthEnd,\n               name: \"fieldFPMonthEnd\",\n               options: fpMonthDateFields,\n            },\n            {\n               id: ids.fieldGLStartBalance,\n               view: \"select\",\n               label: L(\"GL -> Start Balance\"),\n               value: this.fieldGLStartBalance,\n               name: \"fieldGLStartBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLRunningBalance,\n               view: \"select\",\n               label: L(\"GL -> Running Balance\"),\n               value: this.fieldGLRunningBalance,\n               name: \"fieldGLRunningBalance\",\n               options: glNumberFields,\n            },\n            {\n               id: ids.fieldGLrc,\n               view: \"select\",\n               label: L(\"GL -> RC\"),\n               value: this.fieldGLrc,\n               name: \"fieldGLrc\",\n               options: glRcFields,\n            },\n            {\n               id: ids.fieldAccNumber,\n               view: \"select\",\n               label: L(\"Acc -> Account Number\"),\n               value: this.fieldAccNumber,\n               name: \"fieldAccNumber\",\n               options: accNumberFields,\n            },\n            {\n               id: ids.fieldAccType,\n               view: \"select\",\n               label: L(\"Acc -> Type\"),\n               value: this.fieldAccType,\n               name: \"fieldAccType\",\n               options: accTypeFields,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     if (newVal != oldVal) {\n                        accTypeOptions = getListOptions(\n                           this.objectAccount ||\n                              $$(ids.objectAccount).getValue(),\n                           newVal\n                        );\n                        updateAccTypeOptions(accTypeOptions);\n                     }\n                  },\n               },\n            },\n            {\n               id: ids.fieldAccTypeIncome,\n               view: \"select\",\n               label: L(\"Acc -> Income\"),\n               value: this.fieldAccTypeIncome,\n               name: \"fieldAccTypeIncome\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeExpense,\n               view: \"select\",\n               label: L(\"Acc -> Expense\"),\n               value: this.fieldAccTypeExpense,\n               name: \"fieldAccTypeExpense\",\n               options: accTypeOptions,\n            },\n            {\n               id: ids.fieldAccTypeEquity,\n               view: \"select\",\n               label: L(\"Acc -> Equity\"),\n               value: this.fieldAccTypeEquity,\n               name: \"fieldAccTypeEquity\",\n               options: accTypeOptions,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      var ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         this[s] = this.property(ids[s]);\n      });\n   }\n};\n","const AccountingJEArchiveCore = require(\"../../../core/process/tasks/ABProcessTaskServiceAccountingJEArchiveCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class AccountingJEArchive extends AccountingJEArchiveCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         processBatchValue: `${id}_processBatchValue`,\n         objectBatch: `${id}_objectBatch`,\n         objectBalance: `${id}_objectBalance`,\n         objectJE: `${id}_objectJE`,\n         objectJEArchive: `${id}_objectJEArchive`,\n\n         fieldBatchFiscalMonth: `${id}_fieldBatchFiscalMonth`,\n         fieldJeAccount: `${id}_fieldJeAccount`,\n         fieldJeRC: `${id}_fieldJeRC`,\n         fieldJeArchiveBalance: `${id}_fieldJeArchiveBalance`,\n         fieldBrFiscalMonth: `${id}_fieldBrFiscalMonth`,\n         fieldBrAccount: `${id}_fieldBrAccount`,\n         fieldBrRC: `${id}_fieldBrRC`,\n\n         fieldsMatch: `${id}_fieldsMatch`,\n      };\n   }\n\n   /**\n    * propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      let processValues = [{ id: 0, value: L(\"Select a Process Value\") }];\n      let processDataFields = this.process.processDataFields(this);\n      (processDataFields || []).forEach((row) => {\n         processValues.push({ id: row.key, value: row.label });\n      });\n\n      let objectList = this.AB.objects().map((o) => {\n         return { id: o.id, value: o.label || o.name, object: o };\n      });\n\n      objectList.unshift({\n         id: 0,\n         value: L(\"Select an Object\"),\n      });\n\n      let getConnectFieldOptions = (objectId) => {\n         let object = this.AB.objectByID(objectId);\n         if (!object) return [];\n\n         let options = object\n            .fields((f) => f.isConnection)\n            .map((f) => {\n               return {\n                  id: f.id,\n                  value: f.label,\n               };\n            });\n\n         options.unshift({\n            id: 0,\n            value: L(\"Select a Field\"),\n         });\n\n         return options;\n      };\n\n      let updateFields = (fieldPickers, fieldValues) => {\n         fieldPickers.forEach((fp) => {\n            var picker = $$(fp);\n            if (picker) {\n               picker.define(\"options\", fieldValues);\n               picker.refresh();\n               picker.show();\n            }\n         });\n      };\n\n      let refreshBatchFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldBatchFiscalMonth], options);\n      };\n\n      let refreshBRFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields(\n            [ids.fieldBrAccount, ids.fieldBrFiscalMonth, ids.fieldBrRC],\n            options\n         );\n      };\n\n      let refreshJeFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeAccount, ids.fieldJeRC], options);\n      };\n\n      let refreshJeArchiveFields = (objectId) => {\n         let options = getConnectFieldOptions(objectId);\n         updateFields([ids.fieldJeArchiveBalance], options);\n      };\n\n      let refreshFieldsMatch = () => {\n         let $fieldsMatch = $$(ids.fieldsMatch);\n         if (!$fieldsMatch) return;\n\n         // clear form\n         webix.ui([], $fieldsMatch);\n\n         let JEObj = this.AB.objectByID(this.objectJE);\n         if (!JEObj) return;\n\n         let JEArchiveObj = this.AB.objectByID(this.objectJEArchive);\n         if (!JEArchiveObj) return;\n\n         // create JE acrhive field options to the form\n         JEArchiveObj.fields().forEach((f) => {\n            let jeFields = [];\n\n            if (f.isConnection) {\n               jeFields = JEObj.fields((fJe) => {\n                  return (\n                     fJe.isConnection &&\n                     fJe.settings &&\n                     f.settings &&\n                     fJe.settings.linkObject == f.settings.linkObject &&\n                     fJe.settings.linkType == f.settings.linkType &&\n                     fJe.settings.linkViaType == f.settings.linkViaType &&\n                     fJe.settings.isCustomFK == f.settings.isCustomFK\n                  );\n               });\n            } else {\n               jeFields = JEObj.fields((fJe) => fJe.key == f.key);\n            }\n\n            jeFields = jeFields.map((fJe) => {\n               return {\n                  id: fJe.id,\n                  value: fJe.label,\n               };\n            });\n\n            $fieldsMatch.addView({\n               view: \"select\",\n               name: f.id,\n               label: f.label,\n               options: jeFields,\n            });\n         });\n\n         $fieldsMatch.setValues(this.fieldsMatch || {});\n      };\n\n      let fieldBatchList = getConnectFieldOptions(this.objectBatch);\n      let fieldBalanceList = getConnectFieldOptions(this.objectBalance);\n      let fieldJeList = getConnectFieldOptions(this.objectJE);\n      let fieldJeArchiveList = getConnectFieldOptions(this.objectJEArchive);\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 180,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.processBatchValue,\n               view: \"select\",\n               label: L(\"Process Batch Value\"),\n               value: this.processBatchValue,\n               name: \"processBatchValue\",\n               options: processValues,\n            },\n            {\n               id: ids.objectBatch,\n               view: \"select\",\n               label: L(\"Batch Object\"),\n               value: this.objectBatch,\n               name: \"objectBatch\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBatch = newVal;\n                     refreshBatchFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBatchFiscalMonth,\n               view: \"select\",\n               label: L(\"Batch -> Fiscal Month\"),\n               value: this.fieldBatchFiscalMonth,\n               name: \"fieldBatchFiscalMonth\",\n               options: fieldBatchList,\n            },\n            {\n               id: ids.objectBalance,\n               view: \"select\",\n               label: L(\"BR Object\"),\n               value: this.objectBalance,\n               name: \"objectBalance\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectBalance = newVal;\n                     refreshBRFields(newVal);\n                  },\n               },\n            },\n            {\n               id: ids.fieldBrFiscalMonth,\n               view: \"select\",\n               label: L(\"BR -> Fiscal Month\"),\n               value: this.fieldBrFiscalMonth,\n               name: \"fieldBrFiscalMonth\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrAccount,\n               view: \"select\",\n               label: L(\"BR -> Account\"),\n               value: this.fieldBrAccount,\n               name: \"fieldBrAccount\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.fieldBrRC,\n               view: \"select\",\n               label: L(\"BR -> RC\"),\n               value: this.fieldBrRC,\n               name: \"fieldBrRC\",\n               options: fieldBalanceList,\n            },\n            {\n               id: ids.objectJE,\n               view: \"select\",\n               label: L(\"JE Object\"),\n               value: this.objectJE,\n               name: \"objectJE\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJE = newVal;\n                     refreshJeFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeAccount,\n               view: \"select\",\n               label: L(\"JE -> Account\"),\n               value: this.fieldJeAccount,\n               name: \"fieldJeAccount\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.fieldJeRC,\n               view: \"select\",\n               label: L(\"JE -> RC\"),\n               value: this.fieldJeRC,\n               name: \"fieldJeRC\",\n               options: fieldJeList,\n            },\n            {\n               id: ids.objectJEArchive,\n               view: \"select\",\n               label: L(\"JE Archive Object\"),\n               value: this.objectJEArchive,\n               name: \"objectJEArchive\",\n               options: objectList,\n               on: {\n                  onChange: (newVal) => {\n                     this.objectJEArchive = newVal;\n                     refreshJeArchiveFields(newVal);\n                     refreshFieldsMatch();\n                  },\n               },\n            },\n            {\n               id: ids.fieldJeArchiveBalance,\n               view: \"select\",\n               label: L(\"JE Archive -> BR\"),\n               value: this.fieldJeArchiveBalance,\n               name: \"fieldJeArchiveBalance\",\n               options: fieldJeArchiveList,\n            },\n            {\n               view: \"fieldset\",\n               label: \"Fields Matching\",\n               body: {\n                  id: ids.fieldsMatch,\n                  view: \"form\",\n                  borderless: true,\n                  elements: [],\n               },\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n\n      refreshFieldsMatch();\n   }\n\n   /**\n    * propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    */\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n\n      // TIP: keep the .settings entries == ids[s] keys and this will\n      // remain simple:\n      this.defaults.settings.forEach((s) => {\n         if (s === \"fieldsMatch\") {\n            this[s] = $$(ids.fieldsMatch).getValues();\n         } else {\n            this[s] = this.property(ids[s]);\n         }\n      });\n   }\n};\n","const CalculateTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceCalculateCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class CalculateTask extends CalculateTaskCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.formulaText) {\n         this.warningMessage(\"is missing a formula.\");\n      }\n\n      if (this.formulaText) {\n         const hash = {};\n         (this.process.processDataFields(this) || []).forEach((item) => {\n            hash[`{${item.label}}`] = item;\n         });\n\n         let exp = new RegExp(`{[^}]*}`, \"g\");\n         let entries = this.formulaText.match(exp) || [];\n         entries.forEach((entry) => {\n            if (!hash[entry]) {\n               this.warningMessage(\n                  `could not resolve process value [${entry}]`\n               );\n            }\n         });\n      }\n   }\n};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskServiceGetResetPasswordUrlCore = require(\"../../../core/process/tasks/ABProcessTaskServiceGetResetPasswordUrlCore.js\");\n\nmodule.exports = class ABProcessTaskServiceGetResetPasswordUrl extends (\n   ABProcessTaskServiceGetResetPasswordUrlCore\n) {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.email) {\n         this.warningMessage(\"is missing the email address.\");\n      }\n\n      const processData = (this.process.processDataFields(this) ?? [])\n         .filter((item) => item.field?.key == \"email\")\n         .map((item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         });\n\n      if (processData.length == 0) {\n         this.warningMessage(\"has no previous tasks exporting email fields.\");\n      }\n   }\n};\n","const InsertRecordTaskCore = require(\"../../../core/process/tasks/ABProcessTaskServiceInsertRecordCore.js\");\n\nmodule.exports = class InsertRecordTask extends InsertRecordTaskCore {\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.objectID) {\n         this.warningMessage(\"has no Object set.\");\n      }\n\n      const fv = Object.keys(this.fieldValues || {}) || [];\n      if (fv.length == 0) {\n         this.warningMessage(\"has no fields set\");\n      } else {\n         let isSet = false;\n         fv.forEach((f) => {\n            if (\n               this.fieldValues[f]?.set != \"0\" &&\n               this.fieldValues[f]?.value != null\n            ) {\n               isSet = true;\n            }\n         });\n         if (!isSet) {\n            this.warningMessage(\"has no fields set\");\n         }\n      }\n   }\n};\n","const ABProcessTaskServiceQueryCore = require(\"../../../core/process/tasks/ABProcessTaskServiceQueryCore.js\");\n\nconst ABQLManager = require(\"../../ql/ABQLManager.js\");\n\nmodule.exports = class ABProcessTaskServiceQuery extends (\n   ABProcessTaskServiceQueryCore\n) {\n   constructor(attributes, process, AB) {\n      super(attributes, process, AB);\n\n      this.attributes = attributes;\n   }\n\n   ABQLManager() {\n      return ABQLManager;\n   }\n\n   warnings() {\n      // first get all our embedded QL Command warnings\n      let qlWarnings = [];\n      if (this.qlObj) {\n         qlWarnings = qlWarnings.concat(this.qlObj.warnings());\n      }\n      // run the QL Warnings through our .warningMessage() to get a message\n      // that includes this task's name:\n      qlWarnings.forEach((w) => {\n         if (w?.message) this.warningMessage(w.message);\n      });\n      let myWarnings = super.warnings();\n      return myWarnings.filter((w) => w); // filter out any undefined.\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (this.qlObj) {\n         this.qlObj.warningsEval();\n      } else {\n         this.warningMessage(`has no Query defined.`);\n      }\n\n      if (!this.name) {\n         this.warningMessage(\"does not have a name.\", {\n            attributes: this.attributes,\n         });\n      }\n\n      let hasSave = false;\n      let curr = this.qlObj;\n      while (curr) {\n         if (curr.key === \"row_save\" || curr.key === \"set_save\") {\n            hasSave = true;\n            curr = null; // just stop here.\n         } else {\n            curr = curr.next;\n         }\n      }\n\n      if (!hasSave) {\n         this.warningMessage(\"requires at least one Save operation.\");\n      }\n   }\n};\n","const SubProcessCore = require(\"../../../core/process/tasks/ABProcessTaskSubProcessCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class SubProcess extends SubProcessCore {\n   ////\n   //// Process Instance Methods\n   ////\n\n   /*\n   propertyIDs(id) {\n      return {\n         name: `${id}_name`,\n         isEnable: `${id}_isEnable`,\n         parameterId: `${id}_parameterId`,\n      };\n   }\n\n   /**\n    * @method propertiesShow()\n    * display the properties panel for this Process Element.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesShow(id) {\n      let ids = this.propertyIDs(id);\n\n      // Pull query tasks option list\n      let parameterOptions = (this.process.processDataFields(this) || []).map(\n         (item) => {\n            return {\n               id: item.key,\n               value: item.label,\n            };\n         }\n      );\n\n      let ui = {\n         id: id,\n         view: \"form\",\n         elementsConfig: {\n            labelWidth: 120,\n         },\n         elements: [\n            {\n               id: ids.name,\n               view: \"text\",\n               label: L(\"Name\"),\n               name: \"name\",\n               value: this.name,\n            },\n            {\n               id: ids.isEnable,\n               view: \"switch\",\n               label: L(\"Enable\"),\n               value: this.isEnable,\n            },\n            {\n               id: ids.parameterId,\n               view: \"richselect\",\n               label: L(\"Repeat for\"),\n               options: parameterOptions,\n               value: this.parameterId,\n            },\n         ],\n      };\n\n      webix.ui(ui, $$(id));\n\n      $$(id).show();\n   }\n\n   /**\n    * @method propertiesStash()\n    * pull our values from our property panel.\n    * @param {string} id\n    *        the webix $$(id) of the properties panel area.\n    * /\n   propertiesStash(id) {\n      let ids = this.propertyIDs(id);\n      this.name = this.property(ids.name);\n      this.isEnable = this.property(ids.isEnable);\n      this.parameterId = this.property(ids.parameterId);\n   }\n   */\n\n   /**\n    * @method diagramProperties()\n    * return a set of values for the XML shape definition based upon\n    * the current values of this object.\n    * @return {json}\n    */\n   diagramProperties(bpmnModeler) {\n      let props = super.diagramProperties();\n      props = props || [{}];\n      props[0].def = props[0].def || {};\n\n      if (this.parameterId != null) {\n         props[0].def = props[0].def || {};\n         props[0].def.loopCharacteristics = bpmnModeler\n            .get(\"moddle\")\n            .create(\"bpmn:MultiInstanceLoopCharacteristics\");\n         props[0].def.loopCharacteristics.isSequential = true;\n      }\n\n      return props;\n   }\n\n   /**\n    * @method onChange()\n    * update the current Task with information that was relevant\n    * from the provided BPMN:Element\n    * @param {BPMNElement}\n    */\n   onChange(defElement) {\n      let loopCharacteristics =\n         defElement.loopCharacteristics ||\n         defElement.businessObject.loopCharacteristics ||\n         {};\n\n      switch (loopCharacteristics.$type) {\n         case \"bpmn:MultiInstanceLoopCharacteristics\":\n            this.loopType = loopCharacteristics.isSequential\n               ? \"sequential\"\n               : \"parallel\";\n            break;\n         case \"bpmn:StandardLoopCharacteristics\":\n            this.loopType = \"looping\";\n            break;\n      }\n   }\n\n   /**\n    * @method destroy()\n    * destroy this sub process and inside tasks\n    *\n    * @return {Promise}\n    */\n   destroy() {\n      // reuse .destroy function of ABProcess\n      // to clear tasks within this sub process\n      return this.process.destroy.call(this);\n   }\n\n   /**\n    * @method save()\n    * persist this sub process\n    *\n    * @return {Promise}\n    *\t\t\t\t\t\t.resolve( {this} )\n    */\n   save() {\n      // reuse .save function of ABProcess\n      // to update tasks within this sub process\n      return this.process.save.call(this);\n   }\n\n   /**\n    * @method elementNewForModelDefinition()\n    * create a new process element defined by the given BPMN:Element\n    *\n    * the BPMN:Element definition comes from the BPMN Modeler when a new\n    * diagram element is created.\n    *\n    * @param {BPMN:Element} element\n    *        the BPMN modeler diagram element definition\n    * @return {ABProcessParticipant|ABProcessLane|ABProcessElement}\n    *\n    */\n   elementNewForModelDefinition(element) {\n      let task = this.AB.processElementNewForModelDefinition(element, this);\n\n      // Add a new task to this sub process\n      if (task) {\n         this.elementAdd(task);\n      }\n      return task;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      (this._unknownElementIDs || []).forEach((eID) => {\n         this.warningMessage(\n            `is referencing an unknown process element id[${eID}]`,\n            { process: this.id, eID }\n         );\n      });\n   }\n};\n","const ABProcessTaskUserCore = require(\"../../../core/process/tasks/ABProcessTaskUserCore.js\");\n\nmodule.exports = class ABProcessTaskUser extends ABProcessTaskUserCore {};\n","const ABProcessTaskUserApprovalCore = require(\"../../../core/process/tasks/ABProcessTaskUserApprovalCore.js\");\n\nmodule.exports = class ABProcessTaskUserApproval extends (\n   ABProcessTaskUserApprovalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTaskUserExternalCore = require(\"../../../core/process/tasks/ABProcessTaskUserExternalCore.js\");\n\nmodule.exports = class ABProcessTaskUserExternal extends (\n   ABProcessTaskUserExternalCore\n) {};\n","// import ABApplication from \"./ABApplication\"\n// const ABApplication = require(\"./ABApplication\"); // NOTE: change to require()\nconst ABProcessTriggerCore = require(\"../../../core/process/tasks/ABProcessTriggerCore.js\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTrigger extends ABProcessTriggerCore {};\n","const ABProcessTriggerLifecycleCore = require(\"../../../core/process/tasks/ABProcessTriggerLifecycleCore.js\");\n\nmodule.exports = class ABProcessTriggerLifecycle extends (\n   ABProcessTriggerLifecycleCore\n) {};\n","const ABProcessTriggerTimerCore = require(\"../../../core/process/tasks/ABProcessTriggerTimerCore.js\");\n\nconst START_URL = \"/process/timer/#id#/start\";\nconst STOP_URL = \"/process/timer/#id#/stop\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABProcessTriggerTimer extends ABProcessTriggerTimerCore {\n   /**\n    * @method save()\n    * persist this instance of ABObject with it's parent ABApplication\n    * @return {Promise}\n    */\n   save() {\n      return (\n         Promise.resolve()\n            .then(() => super.save())\n            // Restart the timer\n            .then((result) => {\n               return this.AB.Network.put({\n                  url: (this.isEnabled ? START_URL : STOP_URL).replace(\n                     \"#id#\",\n                     this.id\n                  ),\n               });\n            })\n      );\n   }\n};\n","/*\n * ABQL\n *\n * An ABQL defines the base class for our AB Query Language Objects.\n * These classes share a common way to\n *   - parse input strings for commands\n *\n *\n */\nconst ABQLCore = require(\"../../core/ql/ABQLCore.js\");\nconst RowUpdater = require(\"../RowUpdater.js\").default;\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nclass ABQL extends ABQLCore {\n   constructor(attributes, parameterDefinitions, prevOP, task, AB) {\n      super(attributes, parameterDefinitions, prevOP, task, AB);\n\n      this.on(\"warning\", (message, data) => {\n         this._warnings.push({ message, data });\n      });\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      // const allColumns = row.getChildViews();\n      // allColumns.shift(); // remove selector\n      this.parameterDefinitions.forEach((pDef) => {\n         // const col = allColumns.shift();\n         const myID = this.uiID(id);\n\n         this.ids = this.toIDs(myID);\n         this.params = this.params ?? {};\n\n         let $uiCondition = null;\n\n         switch (pDef.type) {\n            case \"objectFields\":\n               this.params[pDef.name] = $$(this.ids.objectfields).getValue();\n\n               break;\n\n            case \"objectName\":\n               this.params[pDef.name] = $$(this.ids.objectname).getValue();\n\n               break;\n\n            case \"objectConditions\":\n            case \"objectValues\":\n               $uiCondition = $$(this.ids.condition);\n\n               if ($uiCondition) {\n                  const condition = $uiCondition.getValue();\n\n                  if (condition && condition !== \"\") {\n                     this.params[pDef.name] = JSON.parse(condition);\n                  }\n               }\n\n               break;\n\n            case \"taskParam\":\n               this.params[pDef.name] = $$(this.ids.taskparam).getValue();\n\n               break;\n         }\n      });\n   }\n\n   /*\n    * @method toIDs()\n    * generate a set of unique webix ids to use for our UI.\n    * @param {string} myID\n    *        the unique id generated by .uiID()\n    */\n   toIDs(myID) {\n      return {\n         condition: `${myID}_condition`,\n         objectfields: `${myID}_objectfields`,\n         objectname: `${myID}_objname`,\n         popup: `${myID}_popup`,\n         select: `${myID}_select`,\n         shorthand: `${myID}_shorthand`,\n         taskparam: `${myID}_taskparam`,\n         spacer: `${myID}_spacer`,\n      };\n   }\n\n   /**\n    * @method uiAddParamForDef()\n    * Add an operation parameter for each parameterDefinition we have defined.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParamForDef(pDef, id, ui) {\n      // params are added to a .col[] definition.\n      // if our ui isn't down to the current .col element, then drill down\n      if (!ui.cols) {\n         if (ui.rows) {\n            for (let i = 0; i < ui.rows.length; i++)\n               if (ui.rows[i].cols) {\n                  this.uiAddParamForDef(pDef, id, ui.rows[i]);\n\n                  break;\n               }\n         } else throw new Error(\"provided ui is not able to add a parameter!\");\n\n         return;\n      }\n\n      const paramUI = this.uiParamUI(pDef, id);\n\n      if (paramUI) {\n         // if we only have 1 param\n         if (this.parameterDefinitions.length === 1) {\n            ui.cols.pop();\n            ui.cols.push(paramUI);\n         }\n         // if we haven't already added a parameter\n         else {\n            // create a row stack of parameters:\n            if (ui.cols.length < 3)\n               ui.cols.push({\n                  rows: [paramUI],\n               });\n            // add to the current stack of parameters\n            else ui.cols[2].rows.push(paramUI);\n         }\n      }\n   }\n\n   /**\n    * @method uiAddNext()\n    * Add the next row selector for this operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddNext(id, ui) {\n      const uiRow = this.uiNextRow(id);\n\n      // if we have a next operation defined, then add on the ui definitions\n      // for that operation:\n      if (this.next) {\n         this.next.uiAddParams(id, uiRow);\n         ui.rows.push(uiRow);\n         this.next.uiAddNext(id, ui);\n      }\n      // otherwise we just leave the selector:\n      else ui.rows.push(uiRow);\n   }\n\n   /**\n    * @method uiAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {obj} ui\n    *        the current webix ui definition we are building.\n    */\n   uiAddParams(id, ui) {\n      this.parameterDefinitions.forEach((pDef) => {\n         this.uiAddParamForDef(pDef, id, ui);\n      });\n   }\n\n   /*\n    * @method uiID()\n    * generate a unique webix id for this operation.\n    * @param {string} id\n    *        the webix id of the base property.query holder\n    */\n   uiID(id) {\n      if (this.prevOP) return `${this.prevOP.uiID(id)}_${this.constructor.key}`;\n\n      return `${id}_${this.constructor.key}`;\n   }\n\n   /*\n    * uiXXX Operations:\n    * are UI building operations that are performed BEFORE the webix UI\n    * is generated.  They work by filling out a {ui} object definition\n    * that webix will eventually create into the DOM.\n    *\n    * viewXXX Operations:\n    * are UI building operations that are performed AFTER the webix UI\n    * is generated. They work by adding in child views to an existing\n    * DOM.\n    */\n\n   /**\n    * @method uiNextRow()\n    * return the webix UI definition for the next of UI chaining.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiNextRow(id) {\n      const options = this.constructor.NextQLOps.map((op) => {\n         return { id: op.key, value: op.label };\n      });\n\n      options.unshift({ id: 0, value: L(\"choose next operation\") });\n\n      const myID = this.uiID(id);\n      const ids = this.toIDs(myID);\n\n      const uiRow = {\n         cols: [\n            {\n               id: ids.select,\n               view: \"select\",\n               value: this.next ? this.next.constructor.key : 0,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     const resetValue = () => {\n                        const select = $$(ids.select);\n\n                        select.blockEvent();\n                        select.setValue(oldValue);\n                        select.unblockEvent();\n                     };\n\n                     if (newValue === oldValue) return;\n\n                     const newOP = this.constructor.NextQLOps.find(\n                        (op) => op.key === newValue\n                     );\n\n                     if (!newOP) {\n                        resetValue();\n\n                        return;\n                     }\n\n                     const thisRow = $$(ids.select).getParentView();\n                     const thisQuery = thisRow.getParentView();\n                     const addOP = () => {\n                        if (newOP) {\n                           const nextOP = new newOP(\n                              {},\n                              this,\n                              this.task,\n                              this.AB\n                           );\n\n                           this.next = nextOP;\n\n                           nextOP.viewAddParams(id, thisRow);\n                           nextOP.viewAddNext(id, thisQuery);\n                        }\n                     };\n\n                     // if there are rows after this one, then warn\n                     // about changing\n                     const allRows = thisQuery.getChildViews();\n\n                     if (allRows.length - 1 > allRows.indexOf(thisRow))\n                        webix.confirm({\n                           title: L(\"continue?\"),\n                           text: L(\n                              \"changing this rule will reset any following rules.\"\n                           ),\n                           ok: L(\"Yes\"),\n                           cancel: L(\"No\"),\n                           callback: (result) => {\n                              if (result) {\n                                 // remove the current additional Rows:\n                                 let ir = allRows.length - 1;\n\n                                 while (\n                                    allRows[ir].config.id !== thisRow.config.id\n                                 ) {\n                                    thisQuery.removeView(allRows[ir]);\n                                    ir--;\n                                 }\n\n                                 // now remove the parameters\n                                 const allCols = thisRow.getChildViews();\n\n                                 let ic = allCols.length;\n\n                                 while (ic > 1) {\n                                    thisRow.removeView(allCols[ic - 1]);\n                                    ic--;\n                                 }\n\n                                 addOP();\n                              } else resetValue();\n                           },\n                        });\n                     else addOP();\n                  },\n               },\n            },\n            {\n               id: ids.spacer,\n            },\n         ],\n      };\n\n      return uiRow;\n   }\n\n   uiNextRowSelectorRefresh(id) {\n      const $select = $$(this.ids.select);\n\n      if (!$select) return;\n\n      const uiNextRow = this.uiNextRow(id);\n\n      const uiNextCol =\n         uiNextRow.cols.filter((c) => c.id == $select.config.id)[0] ??\n         uiNextRow.cols[1];\n\n      if (uiNextCol) AB.Webix.ui(uiNextCol, $select);\n   }\n\n   /**\n    * @method uiParamUI()\n    * return the webix UI definition for the parameter entry of this current\n    * operation.\n    * @param {obj} pDef\n    *        the current parameterDefinition entry we are creating the UI\n    *        for.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @return {obj}\n    */\n   uiParamUI(pDef, id) {\n      const uiConfig = AB.Config.uiSettings();\n\n      let myID = this.uiID(id);\n\n      this.ids = this.toIDs(myID);\n\n      let paramUI = null;\n      let options = null;\n      let Filter = null;\n      let hashFieldIDs = null;\n      let initialCond = null;\n      let displayLabel = null;\n      let initialValue = null;\n      let Updater = null;\n      let popUp = null;\n\n      // now add the parameter\n      switch (pDef.type) {\n         case \"objectFields\":\n            // an objectFields parameter returns a select list of fields\n            // available on an Object.\n            if (this.object)\n               options = this.object.fields().map((f) => {\n                  return { id: f.id, value: f.label, icon: `fa fa-${f.icon}` };\n               });\n\n            options.unshift({\n               id: \"_PK\",\n               value: \"[PK]\",\n            });\n\n            // if not set, default .fieldID to the 1st entry in options\n            // so we will have a default.  In use, if a user sees the\n            // 1st item and continues on, then we will have chosen it.\n            if (!this.fieldID && options.length > 0) {\n               // act like it was selected:\n               this.params[pDef.name] = options[0].id;\n               this.paramChanged(pDef, id);\n            }\n\n            paramUI = {\n               id: this.ids.objectfields,\n               view: \"richselect\",\n               label: L(\"Field\"),\n               labelWidth: 70,\n               value: this.fieldID,\n               options: options,\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectName\":\n            // an objectName parameter returns a select list of available\n            // objects in this ABFactory.\n            options = this.AB.objects().map((o) => {\n               return { id: o.id, value: o.label };\n            });\n\n            if (!this.objectID && options.length > 0) {\n               this.objectID = options[0].id;\n               this.params[pDef.name] = this.objectID;\n               this.paramChanged(pDef);\n            }\n\n            paramUI = {\n               id: this.ids.objectname,\n               view: \"select\",\n               label: L(\"Data Source\"),\n               labelWidth: uiConfig.labelWidthLarge,\n               value: this.objectID,\n               options: options,\n               on: {\n                  onChange: (newValue /*, oldValue */) => {\n                     this.params = this.params ?? {};\n\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef);\n                     }\n                  },\n               },\n            };\n\n            break;\n\n         case \"objectConditions\":\n            // objectConditions: returns a filter text summary, that when\n            // clicked, pops up a Filter Entry Popup.\n            // the actual value is stored in a hidden field.\n\n            // we will create a new FilterComplex() object to use for our\n            // filtering.\n            // Our goal is to create a special filter entry for each avaiable\n            // process data value that is available.\n            // A filter entry needs to look like:\n            // {\n            //     id: `{string}`,      // A unique id selector for this filter\n            //     name: `{string}`,    // the operation name displayed\n            //     type, {obj}          // an object defining the editor to show\n            //     fn: ()=>{}           // a function used for filtering elements\n            // }\n            //\n            // In our filters, we are assigning filters to EACH field by the\n            // field.id.  So the type definition needs to look like:\n            // {\n            //     \"uniqueID of the field (field.id)\" : {webixUI definition}\n            // }\n\n            Filter = this.AB.filterComplexNew(id);\n            hashFieldIDs = this.availableProcessDataFieldsHash();\n\n            if (this.object) {\n               Filter.fieldsLoad(this.object.fields(), this.object);\n               // NOTE: this will create default filters based upon the\n               // object fields() and their types\n\n               // Now we need to add in the Process Data Fields:\n               // for each Process Data Field that matches our same object\n               const foundFields = Object.keys(hashFieldIDs).map(\n                  (f) => hashFieldIDs[f]\n               );\n\n               Filter.processFieldsLoad(foundFields);\n               /*\n               (foundFields ?? []).forEach((processField) => {\n                  const type = {};\n                  if (processField.field) {\n                     type[processField.field.id] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  } else {\n                     // if there is no .field, it is probably an embedded special field\n                     // like: .uuid\n                     const key = processField.key.split(\".\").pop();\n                     type[key] = {\n                        view: \"select\",\n                        options: [\n                           {\n                              id: \"empty\",\n                              value: \"choose option\"\n                           },\n                           {\n                              id: processField.key,\n                              value: `context(${processField.label})`\n                           }\n                        ]\n                     };\n                  }\n\n                  // add an \"equals\" and \"not equals\" filter for each:\n                  Filter.filterAdd([\n                     {\n                        id: `context_equals`,\n                        name: `equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a === b;\n                        }\n                     },\n                     {\n                        id: `context_not_equal`,\n                        name: `not equals`,\n                        type,\n                        fn: (a, b) => {\n                           return a !== b;\n                        }\n                     }\n                  ]);\n                  \n               }); */\n            }\n\n            // every time the Filter \"saves\" it's data, it emits this event:\n            // take the given condition and store it in our hidden element.\n            Filter.on(\"save\", (condition) => {\n               // @param {obj} condition an object describing the filter\n               // condition.\n\n               this.params = this.params ?? {};\n               this.params[pDef.name] = condition;\n\n               const shortHand = $$(this.ids.shorthand);\n\n               shortHand.define({\n                  label: Filter.toShortHand(),\n               });\n               shortHand.refresh();\n\n               // NOTE: the hidden element is a text field, so convert the\n               // {condition object} => a string\n               const elCondition = $$(this.ids.condition);\n\n               elCondition.define({\n                  value: JSON.stringify(this.params[pDef.name]),\n               });\n               elCondition.refresh();\n            });\n\n            // create the initial condition value from our inputs.\n            initialCond = \"\";\n\n            if (this.params && this.params[pDef.name]) {\n               Filter.setValue(this.params[pDef.name]);\n               initialCond = JSON.stringify(this.params[pDef.name]);\n            } else {\n               Filter.setValue(null);\n            }\n\n            // what we show on the panel, is a text representation\n            // of the current condition.\n            displayLabel = Filter.toShortHand();\n\n            paramUI = {\n               rows: [\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: displayLabel,\n                     on: {\n                        onItemClick: () => {\n                           Filter.popUp($$(this.ids.shorthand), null, {\n                              pos: \"center\",\n                           });\n                        },\n                     },\n                  },\n                  // have a hidden field to contain the condition\n                  // value we will parse out later\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialCond,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"objectValues\":\n            // objectValues : shows a condenced textual representation of the\n            // field => value changes.  Clicking on the text will show a popup\n            // that allows you to add/remove additional field updates for\n            // the current object.\n\n            initialValue = \"\";\n            Updater = new RowUpdater(myID, this.AB);\n\n            if (this.object) Updater.objectLoad(this.object);\n\n            // Set processed data key to value options\n            Updater.setExtendedOptions(\n               (this.task.process.processDataFields(this.task) ?? []).map(\n                  (item) => {\n                     return {\n                        id: item.key,\n                        value: item.label,\n                     };\n                  }\n               )\n            );\n\n            // NOTE: .setValue() must be called once the RowUpdater is already\n            // displayed.  See the end of popUp() below:\n            if (this.params && this.params[pDef.name]) {\n               Updater.setValue(this.params[pDef.name]);\n               initialValue = JSON.stringify(this.params[pDef.name]);\n            }\n\n            popUp = () => {\n               // show the RowUpdater in a popup:\n               const ui = {\n                  id: this.ids.popup,\n                  view: \"popup\",\n                  position: \"center\",\n                  minWidth: 700,\n                  modal: true,\n                  resize: true,\n                  body: {\n                     rows: [\n                        {\n                           height: 30,\n                           borderless: true,\n                           cols: [\n                              { fillspace: true },\n                              {\n                                 view: \"button\",\n                                 value: \"X\",\n                                 width: 30,\n                                 click: () => {\n                                    $$(this.ids.popup).hide();\n                                 },\n                              },\n                           ],\n                        },\n                        Updater.ui(),\n                        {\n                           view: \"button\",\n                           value: L(\"Save\"),\n                           css: \"webix_primary\",\n                           click: () => {\n                              this.params = this.params ?? {};\n                              this.params[pDef.name] = Updater.getValue();\n                              const sh = $$(this.ids.shorthand);\n\n                              sh.define({\n                                 badge: this.params[pDef.name].length,\n                              });\n                              sh.refresh();\n\n                              const cond = $$(this.ids.condition);\n\n                              cond.define({\n                                 value: JSON.stringify(this.params[pDef.name]),\n                              });\n                              cond.refresh();\n\n                              $$(this.ids.popup).hide();\n                           },\n                        },\n                     ],\n                  },\n               };\n\n               // create and show the popup\n               this._myPopup = webix.ui(ui);\n               this._myPopup.show();\n\n               // NOTE: on a RowUpdater, the values need to be set\n               // AFTER it is displayed:\n               if (this.params && this.params[pDef.name])\n                  Updater.setValue(this.params[pDef.name]);\n            };\n\n            paramUI = {\n               rows: [\n                  // the textual shorthand for these values\n                  {\n                     id: this.ids.shorthand,\n                     view: \"button\",\n                     label: L(\"Update Popout\"),\n                     badge: this.params[pDef.name]?.length,\n                     on: {\n                        onItemClick: () => {\n                           popUp();\n                        },\n                     },\n                  },\n                  // the hidden field that contains the results\n                  {\n                     id: this.ids.condition,\n                     view: \"text\",\n                     value: initialValue,\n                     hidden: true,\n                  },\n               ],\n            };\n\n            break;\n\n         case \"taskParam\":\n            paramUI = {\n               id: this.ids.taskparam,\n               view: \"text\",\n               label: L(\"Variable\"),\n               labelWidth: 70,\n               value: this.params[pDef.name],\n               placeholder: L(\"Enter parameter name\"),\n               on: {\n                  onChange: (newValue, oldValue) => {\n                     // this.params = this.params ?? {};\n                     if (newValue !== this.params[pDef.name]) {\n                        this.params[pDef.name] = newValue;\n                        this.paramChanged(pDef, id);\n                     }\n                  },\n               },\n            };\n\n            break;\n      }\n\n      return paramUI;\n   }\n\n   /**\n    * @method viewAddNext()\n    * Add the next selector row After this Operation:\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} topView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the top container that is adding a new\n    *        row for each operation.\n    */\n   viewAddNext(id, topView) {\n      const uiRow = this.uiNextRow(id);\n\n      topView.addView(uiRow);\n   }\n\n   /**\n    * @method viewAddParams()\n    * Add operation parameter(s) for each parameterDefinition we have defined.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    * @param {webixNode} rowView\n    *        the current webix node that needs this view added to\n    *        NOTE: this should be the ROW that the parameters are added to\n    */\n   viewAddParams(id, rowView) {\n      const params = [];\n\n      this.parameterDefinitions.forEach((pDef) => {\n         // get the definition from .uiParamUI()\n         params.push(this.uiParamUI(pDef, id));\n      });\n\n      let toInsert = null;\n\n      // stack parameters in a row if there are more than 1\n      if (params.length > 1)\n         toInsert = {\n            rows: params,\n         };\n      else toInsert = params.pop();\n\n      if (toInsert) {\n         rowView.removeView(rowView.getChildViews()[1]);\n         rowView.addView(toInsert);\n      }\n   }\n\n   warnings() {\n      let myWarnings = this._warnings || [];\n      if (this.next)\n         myWarnings = myWarnings.concat(this.next.warnings()).filter((w) => w);\n      return this.AB.uniq(myWarnings);\n   }\n\n   warningsEval() {\n      this._warnings = [];\n      if (this.next) this.next.warningsEval();\n   }\n\n   // warningsAll() {\n   //    let myWarnings = this.warnings();\n   //    if (this.next) {\n   //       myWarnings = myWarnings.concat(this.next.warningsAll());\n   //    }\n   //    return myWarnings;\n   // }\n\n   /**\n    * @method warningMessage(message)\n    * Save a warning message in a common format for our ProcessTasks.\n    */\n   warningMessage(message) {\n      // this.emit(\"warning\", `${this.key}: ${message}`);\n      this._warnings = this._warnings || [];\n      this._warnings.push({ message: `${this.key}: ${message}` });\n   }\n\n   ////\n   //// QueryString Parser routines:\n   ////\n}\n\nmodule.exports = ABQL;\n","/*\n * ABQLFind\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\nconst ABQLFindCore = require(\"../../core/ql/ABQLFindCore.js\");\n\nclass ABQLFind extends ABQLFindCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLFind;\n","/*\n * ABQLManager\n *\n * An interface for managing the different ABQL Operations available in our\n * AppBuilder.\n *\n */\n\nconst ABQLManagerCore = require(\"../../core/ql/ABQLManagerCore.js\");\nconst ABQLRootObject = require(\"./ABQLRootObject.js\");\n\nconst ABQLManager = {\n   /**\n    * @method fromAttributes()\n    * return an {ABQL} object that represents the given attributes that\n    * were saved from the previous .toObj()\n    * @param {object} attributes\n    *\t\t  the values returned from the previous .toObj() call\n    * @param {ABProcessTask***} task\n    *\t\t  the current ABProcessTaskServiceQuery that contains this QL\n    * @param {ABFactory} AB\n    *\t\t  the current {ABFactory} active for this interface.\n    * @return {ABQL} | null\n    */\n   fromAttributes: ABQLManagerCore.fromAttributes,\n\n   /**\n    * @method ids()\n    * return a set of unique webix ids for the ui portions of this object.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @return {object}\n    */\n   ids: (id) => {\n      return {\n         root: `${id}_root`,\n         select: `${id}_root_select`,\n         options: `${id}_root_options`,\n      };\n   },\n\n   /**\n    * @method builder\n    * return a UI component like object that will display the QL builder.\n    * The component will support:\n    *\t\t.ui(id) : returns a webix ui definition for the current builder\n    *\t\t.init(id) : performs any special actions to prepare the webix ui\n    * @param {object} rootOP\n    *\t\t  the root ABQLxxxx operation\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} active for this display.\n    * @return {object}\n    */\n   builder: (rootOP, task, AB) => {\n      // const rootOP = this.fromAttributes(attributes, task, AB);\n      // const L = (...params) => AB.Multilingual.label(...params);\n\n      return {\n         ui: (id) => {\n            rootOP = rootOP ?? new ABQLRootObject({}, task, AB);\n\n            const ids = ABQLManager.ids(id);\n            const ui = {\n               rows: [\n                  {\n                     id: ids.root,\n                     cols: [],\n                  },\n               ],\n            };\n\n            rootOP.uiAddParams(id, ui);\n            rootOP.uiAddNext(id, ui);\n\n            return ui;\n         },\n         init: (id) => {},\n      };\n   },\n\n   /**\n    * @method parse\n    * step through the current properties panel and decode the QL objects\n    * and their parameters.\n    * Return the .toOBJ() attributes definition as a result.\n    * @param {string} id\n    *\t\t  the webix base id of the parameters panel.\n    * @param {ABProcessTask***} task\n    *\t\t  the current Process Task that is requesting the data.\n    * @param {ABFactory} AB\n    *\t\t  the {ABFactory} object that is currently active.\n    * @return {object}\n    */\n   parse: (id, task, AB) => {\n      const ids = ABQLManager.ids(id);\n      const root = $$(ids.root);\n\n      if (!root) {\n         console.warn(\"ABQLManager.parse(): unable to find root element\");\n\n         return;\n      }\n\n      // get all the input rows\n      const rows = root.getParentView().getChildViews();\n\n      const parseCurrent = (rows, options, prevOP) => {\n         if (rows.length === 0) return null;\n\n         const row = rows.shift();\n\n         // get which operation was selected\n         // find the operation selector (skip any indents)\n         const views = row.getChildViews();\n\n         let selector = views.shift();\n\n         while (!selector?.getValue) selector = views.shift();\n\n         const value = selector.getValue();\n\n         // figure out the QLOP object\n         const OP = options.find((o) => {\n            return o.key === value || o.key === ABQLRootObject.key;\n         });\n\n         if (OP) {\n            let currOP = null;\n\n            if (prevOP) currOP = new OP({}, prevOP, task, AB);\n            else currOP = new OP({}, task, AB);\n\n            // now get currOP to initialize from it's parameters:\n            currOP.parseRow(row, id);\n\n            // carry forward any .object info if not already established\n            // by the .parseRow():\n            if (!currOP.object && prevOP) {\n               currOP.object = prevOP.object;\n               currOP.objectID = currOP.object?.id ?? null;\n            }\n\n            const nextRow = parseCurrent(\n               rows,\n               currOP.constructor.NextQLOps,\n               currOP\n            );\n\n            currOP.next = nextRow;\n\n            return currOP;\n         }\n\n         return null;\n      };\n\n      const operation = parseCurrent(rows, ABQLManagerCore.QLOps, null);\n\n      return operation;\n   },\n};\n\nmodule.exports = ABQLManager;\n","/*\n * ABQLRootObject\n *\n * An ABQL defines a Query Language Operation. A QL Operation\n * is intended to be evaluated at run time and return a value that can be\n * assigned to form value or an object.\n *\n *\n */\n\nconst ABQLRootObjectCore = require(\"../../core/ql/ABQLRootObjectCore.js\");\n\nclass ABQLObject extends ABQLRootObjectCore {\n   // constructor(attributes, task, application) {\n   //     // NOTE: keep this so we can insert the prevOp === null\n   //     super(attributes, ParameterDefinitions, null, task, application);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"name\") {\n         this.objectID = this.params[pDef.name];\n         this.object = this.objectLookup(this.objectID);\n\n         // ?? is this correct?\n         // if we already have created a .next operation, and we have\n         // just changed our .object, pass that information forward.\n         if (this.next) this.next.object = this.object;\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      // for an Object operation, we need to set our .objectID after\n      // the values are parsed.\n\n      if (this.params.name) {\n         this.objectID = this.params.name;\n         this.object = this.objectLookup(this.params.name);\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.object) {\n         this.warningMessage(\"has no object set.\", {\n            objectID: this.objectID,\n         });\n      }\n   }\n}\n\nmodule.exports = ABQLObject;\n","const ABQLRowPluckCore = require(\"../../core/ql/ABQLRowPluckCore.js\");\n\nclass ABQLRowPluck extends ABQLRowPluckCore {\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n\n      // Re-generate next select options\n      if (pDef.name === \"fieldID\") this.uiNextRowSelectorRefresh(id);\n   }\n}\n\nmodule.exports = ABQLRowPluck;\n","/*\n * ABQLRowSave\n *\n * An ABQLRowSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLRowSaveCore = require(\"../../core/ql/ABQLRowSaveCore.js\");\n\nclass ABQLRowSave extends ABQLRowSaveCore {\n   paramChanged(pDef, id) {\n      super.paramChanged(pDef);\n   }\n}\n\nmodule.exports = ABQLRowSave;\n","/*\n * ABQLRowUpdate\n *\n * An ABQLRow Update allows you to update the values on the current\n * Row of data.\n *\n */\n\nconst ABQLRowUpdateCore = require(\"../../core/ql/ABQLRowUpdateCore.js\");\n\nclass ABQLRowUpdate extends ABQLRowUpdateCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, ParameterDefinitions, prevOP, task, application);\n   //     // #Hack! : when an Operation provides the same .NextQlOps that it\n   //     // was defined in, we can't require it again ==> circular dependency.\n   //     // so we manually set it here from the operation that created us:\n   //     this.constructor.NextQLOps = prevOP.constructor.NextQLOps;\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLRowUpdate;\n","/*\n * ABQLSetFirst\n *\n * An ABQLFind depends on a BASE QL object (Object, Datacollection, Query)\n * and can perform a DB query based upon that BASE object.\n *\n */\n\nconst ABQLSetFirstCore = require(\"../../core/ql/ABQLSetFirstCore.js\");\n\nclass ABQLSetFirst extends ABQLSetFirstCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n}\n\nmodule.exports = ABQLSetFirst;\n","/*\n * ABQLSetPluck\n *\n * An ABQLSetPluck can process a set (array) of data and pluck out a specified\n * field from each row to then make an array of values that only contain that \n * field.\n * \n * Example: \narray = [\n {\n\tname: \"Neo\",\n\temail: \"neo@thematrix.com\",\n\trelationships: [ { morpheous}, {trinity} ]\n },\n {\n\tname: \"trinity\",\n\temail: \"trinity@thematrix.com\",\n\trelationships: [ {neo}, {morpheous} ]\n },\n {\n\tname: \"morpheous\",\n\temail: \"morpheous@thematrix.com\",\n\trelationships: [ {neo}, {trinity}]\n }\n\n]\n\npluck(\"email\") :\n\t[\n\t\t\"neo@thematrix.com\",\n\t\t\"trinity@thematrix.com\",\n\t\t\"morpheous@thematrix.com\"\n\t]\n\npluck(\"relationships\"):\n\t[\n\t\t{neo},\n\t\t{trinity},\n\t\t{morpheous}\n\t]\n *\n */\n\nconst ABQLSetPluckCore = require(\"../../core/ql/ABQLSetPluckCore.js\");\n\nclass ABQLSetPluck extends ABQLSetPluckCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"fieldID\") {\n         // debugger;\n         this.fieldID = this.params[pDef.name];\n         // v2 method:\n         // this.field = this.object.fieldByID(this.fieldID);\n         this.field = this.object.fieldByID(this.fieldID);\n\n         // v2 method:\n         // if (this.field && this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n\n            // ?? is this correct?\n            // if we already have created a .next operation, and we have\n            // just changed our .object, pass that information forward.\n            if (this.next) this.next.object = this.objectOut;\n         }\n      }\n   }\n\n   /**\n    * @method parseRow()\n    * When it is time to pull the information from the properties panel,\n    * use this fn to get the current Row of data.\n    *\n    * This fn() will populate the this.params with the values for each\n    * of our .parameterDefinitions.\n    *\n    * NOTE: in this process our .object and .objectOut isn't as simple\n    * as the other QL node types.  We'll have to interpolate our values\n    * from the given fieldID in our property panel.\n    *\n    * @param {webixNode} row\n    *        the current webix node that contains the ROW defining the\n    *        operation and it's parameters.\n    * @param {string} id\n    *        the unique id for where the properties panel is displayed.\n    */\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.fieldID = this.params.fieldID;\n\n      // we now have to build backwards from the current fieldID to set our\n      // relevant .object and .objectOut\n      this.AB.objects((o) => {\n         if (!this.field) {\n            // const field = o.fieldByID(this.fieldID);\n            const field = o.fieldByID(this.fieldID);\n\n            if (field) this.field = field;\n         }\n      });\n\n      if (this.field) {\n         this.object = this.field.object;\n\n         // v2 method:\n         // if (this.field.isConnected) {\n         if (this.field && this.field.key === \"connectObject\") {\n            this.objectOut = this.field.datasourceLink;\n            this.objectOutID = this.objectOut.id;\n         }\n      }\n   }\n}\n\nmodule.exports = ABQLSetPluck;\n","/*\n * ABQLSetSave\n *\n * An ABQLSetSave can store the current Data set into the Process Task it is\n * in, so that this data can be made available to other Process Tasks.\n *\n */\n\nconst ABQLSetSaveCore = require(\"../../core/ql/ABQLSetSaveCore.js\");\n\nclass ABQLSetSave extends ABQLSetSaveCore {\n   // constructor(attributes, prevOP, task, application) {\n   //     super(attributes, [], prevOP, task, application);\n   // }\n   ///\n   /// Instance Methods\n   ///\n\n   /*\n    * @method paramChanged()\n    * respond to an update to the given parameter.\n    * NOTE: the value will ALREADY be saved in this.params[pDef.name].\n    * @param {obj} pDef\n    *        the this.parameterDefinition entry of the parameter that was\n    *        changed.\n    */\n   paramChanged(pDef) {\n      if (pDef.name === \"task_param\") {\n         this.taskParam = this.params[pDef.name];\n      }\n   }\n\n   parseRow(row, id) {\n      super.parseRow(row, id);\n\n      this.taskParam = this.params[\"task_param\"];\n\n      if (!this.registered) {\n         this.task.registerDatasource(this);\n         this.registered = true;\n      }\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      if (!this.taskParam || this.taskParam === \"\") {\n         this.warningMessage(\"requires a name to save our data as.\");\n      }\n   }\n}\n\nmodule.exports = ABQLSetSave;\n","const ABViewCore = require(\"../../core/views/ABViewCore.js\");\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\n\nmodule.exports = class ABView extends ABViewCore {\n   // constructor(attributes, application, parent) {\n   //    super(attributes, application, parent);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewComponent(this);\n   }\n\n   /*\n    * @method componentList\n    * return the list of components available on this view to display in the editor.\n    * @param {bool} isEdited  is this component currently in the Interface Editor\n    * @return {array} of ABView objects.\n    */\n   componentList(isEdited) {\n      // views not allowed to drop onto this View:\n      var viewsToIgnore = [\n         \"view\",\n         \"page\",\n         \"formpanel\",\n         \"viewcontainer\",\n         // not allowed Detail's widgets\n         \"detailcheckbox\",\n         \"detailcustom\",\n         \"detailconnect\",\n         \"detailimage\",\n         \"detailselectivity\",\n         \"detailtext\",\n         \"detailtree\",\n         // not allowed Form's widgets\n         \"button\",\n         \"checkbox\",\n         \"connect\",\n         \"datepicker\",\n         \"fieldcustom\",\n         \"textbox\",\n         \"numberbox\",\n         \"selectsingle\",\n         \"selectmultiple\",\n         \"formtree\",\n         \"fieldreadonly\",\n         // not allowed Chart's Widgets\n         \"pie\",\n         \"bar\",\n         \"line\",\n         \"area\",\n         // not allowed Report page\n         \"report\",\n         \"reportPage\",\n         \"reportPanel\",\n      ];\n\n      var allComponents = this.application.viewAll(); // ABViewManager.allViews();\n      var allowedComponents = allComponents.filter((c) => {\n         return viewsToIgnore.indexOf(c.common().key) == -1;\n      });\n\n      return allowedComponents;\n   }\n\n   changePage(pageId) {\n      this.emit(\"changePage\", pageId);\n   }\n\n   warningsAll() {\n      // report both OUR warnings, and any warnings from any of our fields\n      var allWarnings = super.warningsAll();\n      this.views().forEach((v) => {\n         allWarnings = allWarnings.concat(v.warningsAll());\n      });\n\n      (this.pages?.() || []).forEach((p) => {\n         allWarnings = allWarnings.concat(p.warningsAll());\n      });\n\n      return allWarnings.filter((w) => w);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      (this.__missingViews || []).forEach((id) => {\n         this.warningsMessage(`references unknown View[${id}]`);\n      });\n\n      allViews.forEach((v) => {\n         v.warningsEval();\n      });\n\n      // if a datacollection is specified, verify it can be accessed.\n      if (this.settings.dataviewID) {\n         let dc = this.datacollections || this.datacollection;\n         if (!dc) {\n            this.warningsMessage(\n               `references unknown dataviewID[${this.settings.dataviewID}]`\n            );\n         }\n      }\n   }\n\n   warningsMessage(msg, data = {}) {\n      let message = `${this.key}[${this.name}]: ${msg}`;\n      this._warnings.push({ message, data });\n   }\n};\n","const ABViewCSVExporterCore = require(\"../../core/views/ABViewCSVExporterCore\");\nconst ABViewCSVExporterComponent = require(\"./viewComponent/ABViewCSVExporterComponent\");\n\nmodule.exports = class ABViewCSVExporter extends ABViewCSVExporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewCSVExporterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewCSVImporterCore = require(\"../../core/views/ABViewCSVImporterCore\");\nconst ABViewCSVImporterComponent = require(\"./viewComponent/ABViewCSVImporterComponent\");\n\nmodule.exports = class ABViewCSVImporter extends ABViewCSVImporterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(idBase) {\n      return new ABViewCSVImporterComponent(this, idBase);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.availableFieldIds?.length) {\n         this.warningsMessage(\"has no fields set for matching import data\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewCarouselComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewCarousel_${baseView.id}`,\n         Object.assign(\n            {\n               carousel: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_doOnShow = () => {\n         this.onShow();\n      };\n\n      this._handler_doReload = () => {\n         // this.datacollection?.reloadData();\n      };\n\n      this._handler_doFilter = (fnFilter, filterRules) => {\n         // NOTE: fnFilter is depreciated and will be removed.\n\n         // this.onShow(filterRules);\n         const dv = this.datacollection;\n\n         if (!dv) return;\n\n         dv.filterCondition(filterRules);\n         dv.reloadData();\n      };\n\n      this._handler_busy = () => {\n         this.busy();\n      };\n\n      this._handler_ready = () => {\n         this.ready();\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n\n      const baseView = this.view;\n\n      this.filterUI = baseView.filterHelper; // component(/* App, idBase */);\n      this.linkPage = baseView.linkPageHelper.component(/* App, idBase */);\n\n      const spacer = {};\n      const settings = this.settings;\n\n      if (settings.width === 0)\n         Object.assign(spacer, {\n            width: 1,\n         });\n\n      const _ui = super.ui([\n         {\n            borderless: true,\n            cols: [\n               spacer, // spacer\n               {\n                  borderless: true,\n                  rows: [\n                     this.filterUI.ui(), // filter UI\n                     {\n                        id: ids.carousel,\n                        view: \"carousel\",\n                        cols: [],\n                        width: settings.width,\n                        height: settings.height,\n                        navigation: {\n                           items: !settings.hideItem,\n                           buttons: !settings.hideButton,\n                           type: settings.navigationType,\n                        },\n                        on: {\n                           onShow: () => {\n                              const activeIndex = $$(\n                                 ids.carousel\n                              ).getActiveIndex();\n\n                              this.switchImage(activeIndex);\n                           },\n                        },\n                     },\n                  ],\n               },\n               spacer, // spacer\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) {\n         AB.notify.builder(`Datacollection is ${dv}`, {\n            message: \"This is an invalid datacollection\",\n         });\n\n         return;\n      }\n\n      const object = dv.datasource;\n\n      if (!object) {\n         AB.notify.developer(`Object is ${dv}`, {\n            message: \"This is an invalid object\",\n         });\n\n         return;\n      }\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n      dv.on(\"loadData\", this._handler_doOnShow);\n\n      dv.removeListener(\"update\", this._handler_doReload);\n      dv.on(\"update\", this._handler_doReload);\n\n      dv.removeListener(\"delete\", this._handler_doReload);\n      dv.on(\"delete\", this._handler_doReload);\n\n      dv.removeListener(\"create\", this._handler_doReload);\n      dv.on(\"create\", this._handler_doReload);\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n      dv.on(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n      dv.on(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor) {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n            dv.on(key, this._handler_doOnShow);\n         });\n      }\n\n      const baseView = this.view;\n\n      // filter helper\n      baseView.filterHelper.objectLoad(object);\n      baseView.filterHelper.viewLoad(this);\n\n      this.filterUI.init(this.AB);\n      this.filterUI.removeListener(\"filter.data\", this._handler_doFilter);\n      this.filterUI.on(\"filter.data\", this._handler_doFilter);\n\n      // link page helper\n      this.linkPage.init({\n         view: baseView,\n         datacollection: dv,\n      });\n\n      // set data-cy\n      const $carouselView = $$(this.ids.carousel)?.$view;\n\n      if ($carouselView) {\n         $carouselView.setAttribute(\n            \"data-cy\",\n            `${baseView.key} ${baseView.id}`\n         );\n         $carouselView\n            .querySelector(\".webix_nav_button_prev\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button previous ${baseView.id}`\n            );\n         $carouselView\n            .querySelector(\".webix_nav_button_next\")\n            ?.firstElementChild?.setAttribute(\n               \"data-cy\",\n               `${baseView.key} button next ${baseView.id}`\n            );\n      }\n   }\n\n   /**\n    * @method detatch()\n    * Will make sure all our handlers are removed from any object\n    * we have attached them to.\n    *\n    * You'll want to call this in situations when we are dynamically\n    * creating and recreating instances of the same Widget (like in\n    * the ABDesigner).\n    */\n   detatch() {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      dv.removeListener(\"loadData\", this._handler_doOnShow);\n\n      if (this._handler_doReload) {\n         dv.removeListener(\"update\", this._handler_doReload);\n         dv.removeListener(\"delete\", this._handler_doReload);\n         dv.removeListener(\"create\", this._handler_doReload);\n      }\n\n      dv.removeListener(\"initializingData\", this._handler_busy);\n\n      dv.removeListener(\"initializedData\", this._handler_ready);\n\n      if (this.settings.filterByCursor)\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            dv.removeListener(key, this._handler_doOnShow);\n         });\n\n      this.filterUI.removeListener(\"filter.data\", this._handler_doOnShow);\n   }\n\n   myTemplate(row) {\n      if (row?.src) {\n         const settings = this.settings;\n\n         return `<div class=\"ab-carousel-image-container\">\n            <link rel=\"preload\" href=\"${\n               row.src\n            }\" as=\"image\" fetchpriotity=\"low\"/>\n            <img id=\"${this.ids.component}-${row.id}\" src=\"${\n            row.src\n         }\" class=\"content\" ondragstart=\"return false\" loading=\"lazy\" />\n            ${\n               settings.showLabel\n                  ? `<div class=\"ab-carousel-image-title\">${\n                       row.label || \"\"\n                    }</div>`\n                  : \"\"\n            }\n            <div class=\"ab-carousel-image-icon\">\n            ${\n               settings.detailsPage || settings.detailsTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-detail webix_icon fa fa-eye\"></span>`\n                  : \"\"\n            }\n            ${\n               settings.editPage || settings.editTab\n                  ? `<span ab-row-id=\"${row.id}\" class=\"ab-carousel-edit webix_icon fa fa-pencil\"></span>`\n                  : \"\"\n            }\n            <span class=\"webix_icon ab-carousel-zoom-in fa fa-search-plus\"></span>\n            <span class=\"webix_icon ab-carousel-zoom-out fa fa-search-minus\"></span>\n                  <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-left fa fa-rotate-left\"></span>\n               <span ab-row-id=\"${row.id}\" ab-img-file=\"${\n            row.imgFile\n         }\" class=\"webix_icon ab-carousel-rotate-right fa fa-rotate-right\"></span>\n               <span class=\"webix_icon ab-carousel-fullscreen fa fa-arrows-alt\"></span>\n               <span style=\"display: none;\" class=\"webix_icon ab-carousel-exit-fullscreen fa fa-times\"></span>\n            </div>\n         </div>`;\n      }\n      // empty image\n      else return \"\";\n   }\n\n   busy() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.disable();\n      $carousel?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $carousel = $$(this.ids.carousel);\n\n      $carousel?.enable();\n      $carousel?.hideProgress?.();\n   }\n\n   async switchImage(currentPosition) {\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // Check want to load more images\n      if (\n         currentPosition >= this._imageCount - 1 && // check last image\n         dv.totalCount > this._rowCount\n      ) {\n         // loading cursor\n         this.busy();\n\n         try {\n            await dv.loadData(this._rowCount || 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               message:\n                  \"ABViewCarousel:switchImage():Error when load data from a Data collection\",\n            });\n         }\n\n         this.ready();\n      }\n   }\n\n   onShow(fnFilter = this.filterUI.getFilter()) {\n      const ids = this.ids;\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const obj = dv.datasource;\n\n      if (!obj) return;\n\n      const field = this.view.imageField;\n\n      if (!field) return;\n\n      if (dv.dataStatus == dv.dataStatusFlag.notInitial) {\n         // load data when a widget is showing\n         dv.loadData();\n\n         // it will call .onShow again after dc loads completely\n         return;\n      }\n\n      const settings = this.settings;\n\n      let rows = dv.getData(fnFilter);\n\n      // Filter images by cursor\n      if (settings.filterByCursor) {\n         const cursor = dv.getCursor();\n\n         if (cursor)\n            rows = rows.filter(\n               (r) =>\n                  (r[obj.PK()] || r.id || r) ===\n                  (cursor[obj.PK()] || cursor.id || cursor)\n            );\n      }\n\n      const images = [];\n\n      rows.forEach((r) => {\n         const imgFile = r[field.columnName];\n\n         if (imgFile) {\n            const imgData = {\n               id: r.id,\n               src: `/file/${imgFile}`,\n               imgFile,\n            };\n\n            // label of row data\n            if (settings.showLabel) imgData.label = obj.displayData(r);\n\n            images.push({\n               css: \"image\",\n               borderless: true,\n               template: (...params) => {\n                  return this.myTemplate(...params);\n               },\n               data: imgData,\n            });\n         }\n      });\n\n      const ab = this.AB;\n\n      // insert the default image to first item\n      if (field.settings.defaultImageUrl)\n         images.unshift({\n            css: \"image\",\n            template: (...params) => this.myTemplate(...params),\n            data: {\n               id: ab.uuid(),\n               src: `/file/${field.settings.defaultImageUrl}`,\n               label: this.label(\"Default image\"),\n            },\n         });\n\n      // empty image\n      if (images.length < 1)\n         images.push({\n            rows: [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: settings.height,\n                  label: \"<div style='display: block; font-size: 180px; background-color: #666; color: transparent; text-shadow: 0px 1px 1px rgba(255,255,255,0.5); -webkit-background-clip: text; -moz-background-clip: text; background-clip: text;' class='fa fa-picture-o'></div>\",\n               },\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  label: this.label(\"No image\"),\n               },\n            ],\n         });\n\n      // store total of rows\n      this._rowCount = rows.length;\n\n      // store total of images\n      this._imageCount = images.length;\n\n      const $carousel = $$(ids.carousel);\n      const abWebix = ab.Webix;\n\n      if ($carousel) {\n         // re-render\n         abWebix.ui(images, $carousel);\n\n         // add loading cursor\n         abWebix.extend($carousel, abWebix.ProgressBar);\n\n         // link pages events\n         const editPage = settings.editPage;\n         const detailsPage = settings.detailsPage;\n\n         // if (detailsPage || editPage) {\n         $carousel.$view.onclick = async (e) => {\n            if (e.target.className) {\n               if (e.target.className.indexOf(\"ab-carousel-edit\") > -1) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(editPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-detail\") > -1\n               ) {\n                  abWebix.html.removeCss($carousel.getNode(), \"fullscreen\");\n                  abWebix.fullscreen.exit();\n                  let rowId = e.target.getAttribute(\"ab-row-id\");\n                  this.linkPage.changePage(detailsPage, rowId);\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-fullscreen\") > -1\n               ) {\n                  $carousel.define(\"css\", \"fullscreen\");\n                  abWebix.fullscreen.set(ids.carousel, {\n                     head: {\n                        view: \"toolbar\",\n                        css: \"webix_dark\",\n                        elements: [\n                           {},\n                           {\n                              view: \"icon\",\n                              icon: \"fa fa-times\",\n                              click: function () {\n                                 abWebix.html.removeCss(\n                                    $carousel.getNode(),\n                                    \"fullscreen\"\n                                 );\n                                 abWebix.fullscreen.exit();\n                              },\n                           },\n                        ],\n                     },\n                  });\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-left\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"left\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-rotate-right\") > -1\n               ) {\n                  const rowId = e.target.getAttribute(\"ab-row-id\");\n                  const imgFile = e.target.getAttribute(\"ab-img-file\");\n                  this.rotateImage(rowId, imgFile, field, \"right\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-in\") > -1\n               ) {\n                  this.zoom(\"in\");\n               } else if (\n                  e.target.className.indexOf(\"ab-carousel-zoom-out\") > -1\n               ) {\n                  this.zoom(\"out\");\n               }\n            }\n         };\n      }\n   }\n\n   showFilterPopup($view) {\n      this.filterUI.showPopup($view);\n   }\n\n   async rotateImage(rowId, imgFile, field, direction = \"right\") {\n      this.busy();\n\n      // call api to rotate\n      if (direction == \"left\") await field.rotateLeft(imgFile);\n      else await field.rotateRight(imgFile);\n\n      // refresh image\n      const imgElm = document.getElementById(`${this.ids.component}-${rowId}`);\n      if (imgElm) {\n         await fetch(imgElm.src, { cache: \"reload\", mode: \"no-cors\" });\n         imgElm.src = `${imgElm.src}#${new Date().getTime()}`;\n      }\n\n      this.ready();\n   }\n\n   zoom(inOrOut = \"in\") {\n      const imgContainer = document.getElementsByClassName(\n         \"ab-carousel-image-container\"\n      )[0];\n      if (!imgContainer) return;\n\n      const imgElem = imgContainer.getElementsByTagName(\"img\")[0];\n      if (!imgElem) return;\n\n      const step = 15;\n      const height = parseInt(\n         (imgElem.style.height || 100).toString().replace(\"%\", \"\")\n      );\n      const newHeight = inOrOut == \"in\" ? height + step : height - step;\n      imgElem.style.height = `${newHeight}%`;\n\n      imgContainer.style.overflow = newHeight > 100 ? \"auto\" : \"\";\n   }\n}\n","const ABViewCarouselCore = require(\"../../core/views/ABViewCarouselCore\");\nimport ABViewCarouselComponent from \"./viewComponent/ABViewCarouselComponent\";\n\n// const ABViewPropertyFilterData = require(\"./viewProperties/ABViewPropertyFilterData\");\n// const ABViewPropertyLinkPage = require(\"./viewProperties/ABViewPropertyLinkPage\");\n\nimport ABViewPropertyFilterData from \"./viewProperties/ABViewPropertyFilterData\";\nimport ABViewPropertyLinkPage from \"./viewProperties/ABViewPropertyLinkPage\";\n\nlet PopupCarouselFilterMenu = null;\n\nexport default class ABViewCarousel extends ABViewCarouselCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.filter);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      var dv = this.datacollection;\n      if (dv) {\n         this.filterHelper.objectLoad(dv.datasource);\n         this.filterHelper.fromSettings(this.settings.filter);\n      }\n\n      return new ABViewCarouselComponent(this);\n   }\n\n   get idBase() {\n      return `ABViewCarousel_${this.id}`;\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null)\n         this.__filterHelper = new ABViewPropertyFilterData(\n            this.AB,\n            this.idBase\n         );\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.imageField;\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve image field[${this.settings.field}]`\n         );\n      }\n   }\n}\n","const ABViewChartCore = require(\"../../core/views/ABViewChartCore\");\nconst ABViewChartComponent = require(\"./viewComponent/ABViewChartComponent\");\n\nmodule.exports = class ABViewChart extends ABViewChartCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartComponent(this);\n   }\n\n   fromValues(values) {\n      super.fromValues(values);\n      this.refreshData();\n   }\n\n   getDCChart() {\n      if (!this._dcChart) this._dcChart = new webix.DataCollection();\n\n      return this._dcChart;\n   }\n\n   refreshData() {\n      const dc = this.datacollection;\n      if (dc == null) return this.dcChart;\n\n      const labelCol = this.labelField();\n      const valueCol = this.valueField();\n      const valueCol2 = this.valueField2();\n\n      if (!labelCol || !valueCol) return this.dcChart;\n\n      // const labelColName = labelCol.columnName;\n      const numberColName = valueCol.columnName;\n\n      let numberColName2 = \"\";\n\n      if (this.settings.multipleSeries && valueCol2) {\n         numberColName2 = valueCol2.columnName;\n      }\n\n      const colorList = [\n         \"#ee4339\",\n         \"#ee9336\",\n         \"#eed236\",\n         \"#d3ee36\",\n         \"#a7ee70\",\n         \"#58dccd\",\n         \"#36abee\",\n         \"#476cee\",\n         \"#a244ea\",\n         \"#e33fc7\",\n      ];\n\n      const dInfo = dc.getData();\n\n      let results = [];\n      let sumData = {};\n      let sumNumber = 0;\n      let sumNumber2 = 0;\n      let countNumber = dInfo.length;\n\n      dInfo.forEach((item) => {\n         const labelKey = labelCol.format(item) || item.id;\n\n         let numberVal = parseFloat(item[numberColName] || 0);\n         let numberVal2 = null;\n\n         if (this.settings.multipleSeries)\n            numberVal2 = parseFloat(item[numberColName2]) || 0;\n\n         switch (valueCol.key) {\n            //Formula Datatype\n            case \"formula\":\n               numberVal = valueCol.format(item);\n\n               break;\n\n            //Calcualte Datatype\n            case \"calculate\":\n               numberVal = parseFloat(\n                  valueCol.constructor.convertToJs(\n                     valueCol.object,\n                     valueCol.settings.formula,\n                     item,\n                     valueCol.settings.decimalPlaces\n                  )\n               );\n\n               break;\n\n            default:\n               break;\n         }\n\n         if (sumData[labelKey] == null) {\n            let label = labelKey;\n\n            // Get label of the connect field\n            if (labelCol.isConnection) {\n               let relateValues = labelCol.pullRelationValues(item);\n               if (relateValues != null) {\n                  if (Array.isArray(relateValues))\n                     label = relateValues\n                        .map((val) => val.text || \"\")\n                        .join(\", \");\n                  else label = relateValues.text;\n               }\n            }\n\n            if (this.settings.multipleSeries) {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n                  value2: 0,\n               };\n            } else {\n               sumData[labelKey] = {\n                  label: label || item.id,\n                  value: 0,\n               };\n            }\n         }\n\n         sumData[labelKey].value += numberVal;\n         sumNumber += numberVal;\n\n         if (this.settings.multipleSeries) {\n            sumData[labelKey].value2 += numberVal2;\n            sumNumber2 += numberVal2;\n         }\n      });\n\n      let index = 0;\n\n      for (const key in sumData) {\n         let val = sumData[key].value;\n\n         if (val <= 0) continue;\n\n         // Display to percent values\n         if (this.settings.isPercentage) {\n            val = (val / sumNumber) * 100;\n            val = Math.round(val * 100) / 100; // round decimal 2 digits\n            val = val + \" %\";\n         }\n\n         if (this.settings.multipleSeries) {\n            let val2 = sumData[key].value2;\n\n            if (val2 <= 0) continue;\n\n            // Display to percent values\n            if (this.settings.isPercentage) {\n               val2 = (val2 / sumNumber2) * 100;\n               val2 = Math.round(val2 * 100) / 100; // round decimal 2 digits\n               val2 = val2 + \" %\";\n            }\n\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               value2: val2,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         } else {\n            results.push({\n               label: sumData[key].label,\n               value: val,\n               color: colorList[index % colorList.length],\n               count: countNumber,\n            });\n         }\n\n         index += 1;\n      }\n\n      const dcChart = this.getDCChart();\n\n      dcChart.clearAll();\n      dcChart.parse(results);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let labelField = this.labelField();\n      if (!labelField) {\n         this.warningsMessage(\n            `can't resolve label field[${this.settings.columnLabel}]`\n         );\n      }\n\n      let valueField = this.valueField();\n      if (!valueField) {\n         this.warningsMessage(\n            `can't resolve value field[${this.settings.columnValue}]`\n         );\n      }\n   }\n};\n","const ABViewChartAreaCore = require(\"../../core/views/ABViewChartAreaCore\");\nconst ABViewChartAreaComponent = require(\"./viewComponent/ABViewChartAreaComponent\");\n\nmodule.exports = class ABViewChartArea extends ABViewChartAreaCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartAreaComponent(this);\n   }\n};\n","const ABViewChartBarCore = require(\"../../core/views/ABViewChartBarCore\");\nconst ABViewChartBarComponent = require(\"./viewComponent/ABViewChartBarComponent\");\n\nmodule.exports = class ABViewChartBar extends ABViewChartBarCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartBarComponent(this);\n   }\n};\n","const ABViewWidget = require(\"./ABViewWidget\");\nconst ABViewChartContainerComponent = require(\"./viewComponent/ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartContainer extends ABViewWidget {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartContainerComponent(this);\n   }\n\n   get datacollection() {\n      return this.parent.datacollection;\n   }\n};\n","const ABViewChartLineCore = require(\"../../core/views/ABViewChartLineCore\");\nconst ABViewChartLineComponent = require(\"./viewComponent/ABViewChartLineComponent\");\n\nmodule.exports = class ABViewChartLine extends ABViewChartLineCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartLineComponent(this);\n   }\n};\n","const ABViewChartPieCore = require(\"../../core/views/ABViewChartPieCore\");\nconst ABViewChartPieComponent = require(\"./viewComponent/ABViewChartPieComponent\");\n\nmodule.exports = class ABViewChartPie extends ABViewChartPieCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewChartPieComponent(this);\n   }\n};\n","const ABViewCommentCore = require(\"../../core/views/ABViewCommentCore\");\nconst ABViewCommentComponent = require(\"./viewComponent/ABViewCommentComponent\");\n\nmodule.exports = class ABViewComment extends ABViewCommentCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewCommentComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let field = this.getUserField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve user field[${this.settings.columnUser}]`\n         );\n      }\n\n      field = this.getCommentField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve comment field[${this.settings.columnComment}]`\n         );\n      }\n\n      field = this.getDateField();\n      if (!field) {\n         this.warningsMessage(\n            `can't resolve date field[${this.settings.columnDate}]`\n         );\n      }\n   }\n};\n","const ABViewConditionalContainerCore = require(\"../../core/views/ABViewConditionalContainerCore\");\nconst ABViewConditionalContainerComponent = require(\"./viewComponent/ABViewConditionalContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainer extends (\n   ABViewConditionalContainerCore\n) {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConditionalContainerComponent(this);\n   }\n\n   async save() {\n      const viewIf = this.views().find((v) => v.name === \"If\");\n      const viewElse = this.views().find((v) => v.name === \"Else\");\n      const pendingSave = [];\n\n      if (viewIf) pendingSave.push(viewIf.save());\n\n      if (viewElse) pendingSave.push(viewElse.save());\n\n      await Promise.all(pendingSave);\n\n      await super.save();\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (\n         !this.settings.filterConditions ||\n         this.settings.filterConditions?.rules?.length == 0\n      ) {\n         this.warningsMessage(\"has no filter conditions set\");\n      }\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewConnectDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewConnectDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n            },\n            ids\n         )\n      );\n\n      this.field = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            type: \"space\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"icon\",\n                  icon: \"fa fa-filter\",\n                  align: \"left\",\n                  disabled: true,\n               },\n               {\n                  view: \"combo\",\n                  id: ids.filter,\n                  labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n                  disabled: true,\n                  on: {\n                     onChange: (id) => this.applyConnectFilter(id),\n                  },\n               },\n               {\n                  view: \"icon\",\n                  id: ids.reset,\n                  icon: \"fa fa-times\",\n                  align: \"left\",\n                  disabled: true,\n                  tooltip: this.label(\"Renmove this filter\"),\n                  on: {\n                     onItemClick: () => this.resetConnectFilter(),\n                  },\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      const [field] = object.fields(\n         (f) => f.columnName === this.settings.field\n      );\n\n      if (!field) {\n         this.AB.notify.developer(\n            `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n            {\n               context: \"ABViewConnectDataFilterComponent.init()\",\n               data: { settings: this.settings },\n            }\n         );\n\n         return;\n      }\n\n      this.field = field;\n\n      const ids = this.ids;\n      const suggest = webix.ui({\n         view: \"suggest\",\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.filter), field, {});\n            },\n         },\n      });\n      field.getAndPopulateOptions(suggest, null, field);\n\n      const $filter = $$(ids.filter);\n\n      $filter.define(\"suggest\", suggest);\n      $filter.define(\"label\", `${this.label(\"Filter by\")} ${field.label}`);\n      $filter.enable();\n      $filter.refresh();\n   }\n\n   resetConnectFilter() {\n      const ids = this.ids;\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [] });\n      dc.reloadData();\n      // Block applyConnectFields() from triggering\n\n      const $filter = $$(ids.filter);\n\n      $filter.blockEvent();\n      $filter.setValue();\n      $filter.unblockEvent();\n      $$(ids.reset).disable();\n   }\n\n   applyConnectFilter(connectId) {\n      const filterRule = {\n         key: this.field.id,\n         rule: \"equals\",\n         value: connectId,\n      };\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: [filterRule] });\n      dc.reloadData();\n      $$(this.ids.reset).enable();\n   }\n}\n","import ABViewConnectDataFilterCore from \"../../core/views/ABViewConnectDataFilterCore\";\nimport ABViewConnectDataFilterComponent from \"./viewComponent/ABViewConnectDataFilterComponent\";\n\nexport default class ABViewConnectDataFilter extends ABViewConnectDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewConnectDataFilterComponent(this);\n   }\n}\n","const ABViewContainerCore = require(\"../../core/views/ABViewContainerCore\");\nconst ABViewContainerComponent = require(\"./viewComponent/ABViewContainerComponent\");\n\nmodule.exports = class ABViewContainer extends ABViewContainerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewContainerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no content\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (allViews || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\nimport ABViewCustomFilter from \"../viewProperties/ABViewPropertyFilterData\";\nimport _ from \"lodash\";\n\nexport default class ABViewDataFilterComponent extends ABViewComponent {\n   constructor(baseView, idbase, ids) {\n      super(\n         baseView,\n         idbase || `ABViewDataFilter_${baseView.id}`,\n         Object.assign(\n            {\n               filter: \"\",\n               reset: \"\",\n               sortButton: \"\",\n               filterButton: \"\",\n               globalSearchToolbar: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.field = null;\n      const ab = this.AB;\n\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n      this.PopupSortComponent = new ABPopupSortField(\n         `ABViewDataFilter_Sort_Popup_${this.settings.dataviewID}`\n      );\n      this.PopupSortComponent.init(ab);\n      this.PopupSortComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n\n      this.filterHelper = new ABViewCustomFilter(\n         this.AB,\n         `ABViewDataFilter_Filter_Popup_${this.settings.dataviewID}`\n      );\n      this.filterHelper.settings = {\n         filterOption: 1,\n         userFilterPosition: \"toolbar\",\n         isGlobalToolbar: 1,\n      };\n      this.filterHelper.init(ab);\n      this.detatch();\n      this.filterHelper.on(\"filter.data\", this._handler_filterData);\n   }\n\n   advancedUI() {\n      const compId = this.ids.component;\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            rows: [\n               {},\n               {\n                  cols: [\n                     {\n                        width: 18,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-filter\",\n                        width: 40,\n                        id: this.ids.filterButton,\n                        css: `webix_primary abFilterButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.toolbarFilter($$(this.ids.filterButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} filter button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-sort\",\n                        width: 40,\n                        id: this.ids.sortButton,\n                        css: `webix_primary abSortButton${this.settings.dataviewID}`,\n                        click: (id, event) => {\n                           this.openSort($$(this.ids.sortButton).$view);\n                        },\n                        on: {\n                           onAfterRender: function () {\n                              this.getInputNode().setAttribute(\n                                 \"data-cy\",\n                                 `${compId} sort button`\n                              );\n                           },\n                        },\n                     },\n                     {\n                        id: this.ids.globalSearchToolbar,\n                        view: \"search\",\n                        placeholder: this.label(\"Search..\"),\n                        css: `abGlobalSearchField${this.settings.dataviewID}`,\n                        width: 0,\n                        attributes: {\n                           \"data-cy\": `${this.ids.component} global search`,\n                           datacollection: this.settings.dataviewID,\n                        },\n                        on: {\n                           onTimedKeyPress: () => {\n                              const searchText = $$(\n                                 this.ids.globalSearchToolbar\n                              ).getValue();\n                              // store search text in datacollection because\n                              // it is shared amoung the similar filterHelpers\n                              const dc = this.datacollection;\n                              dc.settings.objectWorkspace.searchText =\n                                 searchText;\n\n                              this.filterHelper.externalSearchText(searchText);\n                           },\n                        },\n                     },\n                     {\n                        width: 18,\n                     },\n                  ],\n               },\n               {},\n            ],\n         },\n      ];\n   }\n\n   connectedFieldUI() {\n      return [\n         {\n            css: \"bg_gray\",\n            maxHeight: 60,\n            cols: [\n               {\n                  width: 18,\n               },\n               {\n                  rows: [\n                     {},\n                     {\n                        view: \"abslayout\",\n                        cells: [\n                           {\n                              css: \"bg_gray\",\n                              view: \"combo\",\n                              id: this.ids.filter,\n                              labelWidth: 0,\n                              relative: true,\n                              disabled: true,\n                              on: {\n                                 onChange: (id) => this.applyConnectFilter(id),\n                              },\n                           },\n                           {\n                              view: \"icon\",\n                              id: this.ids.reset,\n                              icon: \"fa fa-times\",\n                              right: 24,\n                              top: 7,\n                              width: 24,\n                              height: 24,\n                              hidden: true,\n                              tooltip: this.label(\"Remove this filter\"),\n                              on: {\n                                 onItemClick: () =>\n                                    $$(this.ids.filter).setValue(),\n                              },\n                           },\n                        ],\n                     },\n                     {},\n                  ],\n               },\n               {\n                  width: 18,\n               },\n            ],\n         },\n      ];\n   }\n\n   ui() {\n      if (\n         !this.settings?.dataviewID ||\n         (this.settings?.viewType !== \"advanced\" && !this.settings?.field)\n      )\n         return { height: 1, id: this.ids.component };\n\n      const ui =\n         this.settings.viewType == \"advanced\"\n            ? this.advancedUI()\n            : this.connectedFieldUI();\n      const _ui = super.ui(ui);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const object = dv.datasource;\n\n      if (!object) return;\n\n      if (this.settings.viewType == \"advanced\") {\n         if (this.settings.showSort) {\n            this.PopupSortComponent.objectLoad(object);\n            // if there are some preset sorts show them to user\n            this.PopupSortComponent.setSettings(\n               dv?.settings?.objectWorkspace?.sortFields\n            );\n         } else {\n            $$(this.ids.sortButton).hide();\n         }\n         if (this.settings.showFilter) {\n            this.filterHelper.objectLoad(object);\n         } else {\n            $$(this.ids.filterButton).hide();\n         }\n      } else if (this.settings.viewType == \"connected\") {\n         const [field] = object.fields(\n            (f) => f.columnName === this.settings.field\n         );\n\n         if (!field) {\n            this.AB.notify.developer(\n               `Cannot find field \"${this.settings.field}\" in ${object.name}`,\n               {\n                  context: \"ABViewDataFilterComponent.init()\",\n                  data: { settings: this.settings },\n               }\n            );\n\n            return;\n         }\n\n         this.field = field;\n\n         const ids = this.ids;\n         const suggest = webix.ui({\n            view: \"suggest\",\n            filter: ({ value }, search) =>\n               value.toLowerCase().includes(search.toLowerCase()),\n            on: {\n               onShow: () => {\n                  field.populateOptionsDataCy($$(ids.filter), field, {});\n               },\n            },\n            showAllOptions: true,\n         });\n         field.getAndPopulateOptions(suggest, null, field);\n\n         const $filter = $$(ids.filter);\n\n         $filter.define(\"suggest\", suggest);\n         $filter.define(\n            \"placeholder\",\n            `${this.label(\"Filter by\")} ${field.label}`\n         );\n         $filter.enable();\n         $filter.refresh();\n      }\n   }\n\n   onShow() {\n      super.onShow();\n      this.updateUI();\n   }\n\n   applyConnectFilter(connectId) {\n      let filterRule = [];\n      if (connectId) {\n         $$(this.ids.reset).show();\n         filterRule = [\n            {\n               key: this.field.id,\n               rule: \"equals\",\n               value: connectId,\n            },\n         ];\n      } else {\n         $$(this.ids.reset).hide();\n      }\n      const dc = this.datacollection;\n\n      dc.filterCondition({ glue: \"and\", rules: filterRule });\n      dc.reloadData();\n   }\n\n   openSort($view) {\n      this.PopupSortComponent.show($view);\n   }\n\n   /**\n    * @method callbackSortData()\n    * Process the provided sort options from our sort ui.\n    * @param {array} sortRules\n    *        Any Sort Rules added by the user.\n    */\n   async callbackSortData(sortRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.settings?.objectWorkspace?.sortFields, sortRules)) {\n         dc.settings.objectWorkspace.sortFields = sortRules;\n         await this.datacollection.reloadData();\n      }\n      this.updateUI();\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const dc = this.datacollection;\n      if (!_.isEqual(dc?.__filterCond, filterRules)) {\n         dc.filterCondition(filterRules);\n         dc.reloadData();\n         this.updateUI();\n      }\n   }\n\n   toolbarFilter($view) {\n      this.filterHelper.showPopup($view);\n   }\n\n   updateUI() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      var filterButtons = document.getElementsByClassName(\n         `abFilterButton${this.settings.dataviewID}`\n      );\n\n      const onlyFilterRules = this.filterHelper.filterRules();\n      let filterBadge =\n         onlyFilterRules?.rules?.length > 0\n            ? onlyFilterRules?.rules?.length\n            : null;\n      for (let b of filterButtons) {\n         $$(b).define(\"badge\", filterBadge);\n         $$(b).refresh();\n      }\n\n      var sortButtons = document.getElementsByClassName(\n         `abSortButton${this.settings.dataviewID}`\n      );\n\n      const onlySortRules = dc.settings.objectWorkspace.sortFields;\n      let sortBadge = onlySortRules?.length > 0 ? onlySortRules?.length : null;\n\n      for (let b of sortButtons) {\n         $$(b).define(\"badge\", sortBadge);\n         $$(b).refresh();\n      }\n\n      var searchFields = document.getElementsByClassName(\n         `abGlobalSearchField${this.settings.dataviewID}`\n      );\n\n      const searchText = dc.settings.objectWorkspace.searchText;\n      if (searchText != null) {\n         for (let s of searchFields) {\n            var activeElement = document.activeElement;\n            if (\n               activeElement?.attributes?.datacollection?.value ==\n                  this.settings.dataviewID &&\n               activeElement == s.getElementsByTagName(\"input\")[0]\n            ) {\n               // skip the already selected input\n            } else {\n               $$(s).setValue(searchText);\n            }\n         }\n      }\n   }\n\n   detatch() {\n      this.filterHelper.removeListener(\"filter.data\", this._handler_filterData);\n      // this.datacollection?.removeListener(\"changeCursor\", this.handler_select);\n   }\n}\n","import ABViewDataFilterCore from \"../../core/views/ABViewDataFilterCore\";\nimport ABViewDataFilterComponent from \"./viewComponent/ABViewDataFilterComponent\";\n\nexport default class ABViewDataFilter extends ABViewDataFilterCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDataFilterComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (this.settings.viewType == \"connected\") {\n            const object = DC.datasource;\n            const [field] = object.fields(\n               (f) => f.columnName === this.settings.field\n            );\n            if (!field) {\n               this.warningsMessage(`can't resolve field reference`);\n            }\n         }\n      }\n   }\n}\n","const ABViewDataviewCore = require(\"../../core/views/ABViewDataviewCore\");\nconst ABViewDataviewComponent = require(\"./viewComponent/ABViewDataviewComponent\");\n\nconst ABViewDataviewDefaults = ABViewDataviewCore.defaultValues();\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewDataview extends ABViewDataviewCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.settings.detailsPage =\n         this.settings.detailsPage ?? ABViewDataviewDefaults.detailsPage;\n      this.settings.editPage =\n         this.settings.editPage ?? ABViewDataviewDefaults.editPage;\n      this.settings.detailsTab =\n         this.settings.detailsTab ?? ABViewDataviewDefaults.detailsTab;\n      this.settings.editTab =\n         this.settings.editTab ?? ABViewDataviewDefaults.editTab;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDataviewComponent(this);\n   }\n};\n","const ABViewDetailCore = require(\"../../core/views/ABViewDetailCore\");\nconst ABViewDetailComponent = require(\"./viewComponent/ABViewDetailComponent\");\n\nmodule.exports = class ABViewDetail extends ABViewDetailCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj } v1App\n    * @param {string} idPrefix - define to support in 'Datacollection' widget\n    *\n    * @return {obj } UI component\n    */\n   component() {\n      return new ABViewDetailComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewDetailCheckboxCore = require(\"../../core/views/ABViewDetailCheckboxCore\");\nconst ABViewDetailCheckboxComponent = require(\"./viewComponent/ABViewDetailCheckboxComponent\");\n\nmodule.exports = class ABViewDetailCheckbox extends ABViewDetailCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCheckboxComponent(this);\n   }\n};\n","const ABViewDetailConnectCore = require(\"../../core/views/ABViewDetailConnectCore\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\n\nconst ABViewDetailConnectComponent = require(\"./viewComponent/ABViewDetailConnectComponent\");\n\nmodule.exports = class ABViewDetailConnect extends ABViewDetailConnectCore {\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n      this.addPageTool.fromSettings(this.settings);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n};\n","const ABViewDetailCustomCore = require(\"../../core/views/ABViewDetailCustomCore\");\nconst ABViewDetailCustomComponent = require(\"./viewComponent/ABViewDetailCustomComponent\");\n\nmodule.exports = class ABViewDetailCustom extends ABViewDetailCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailCustomComponent(this);\n   }\n};\n","const ABViewDetailImageCore = require(\"../../core/views/ABViewDetailImageCore\");\nconst ABViewDetailImageComponent = require(\"./viewComponent/ABViewDetailImageComponent\");\n\nmodule.exports = class ABViewDetailImage extends ABViewDetailImageCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailImageComponent(this);\n   }\n};\n","const ABViewDetailItemCore = require(\"../../core/views/ABViewDetailItemCore\");\nconst ABViewDetailItemComponent = require(\"./viewComponent/ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailItem extends ABViewDetailItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailItemComponent(this);\n   }\n};\n","const ABViewDetailTextCore = require(\"../../core/views/ABViewDetailTextCore\");\nconst ABViewDetailTextComponent = require(\"./viewComponent/ABViewDetailTextComponent\");\n\nmodule.exports = class ABViewDetailText extends ABViewDetailTextCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTextComponent(this);\n   }\n};\n","const ABViewDetailTreeCore = require(\"../../core/views/ABViewDetailTreeCore\");\nconst ABViewDetailTreeComponent = require(\"./viewComponent/ABViewDetailTreeComponent\");\n\nmodule.exports = class ABViewDetailTree extends ABViewDetailTreeCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDetailTreeComponent(this);\n   }\n};\n","const ABViewDocxBuilderCore = require(\"../../core/views/ABViewDocxBuilderCore\");\nconst ABViewDocxBuilderComponent = require(\"./viewComponent/ABViewDocxBuilderComponent\");\n\nmodule.exports = class ABViewDocxBuilder extends ABViewDocxBuilderCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewDocxBuilderComponent(this);\n   }\n\n   letUserDownload(blob, filename) {\n      const url = window.URL.createObjectURL(blob);\n\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = filename;\n      document.body.appendChild(a); // we need to append the element to the dom -> otherwise it will not work in firefox\n      a.click();\n      a.remove(); //afterwards we remove the element again\n\n      window.URL.revokeObjectURL(url);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollections || this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (!this.settings.filename) {\n         this.warningsMessage(\"is missing a DOCX template file\");\n      } else {\n         // TODO: should we check for the existance of the file?\n         // this isn't currently an async friendly fn, so how?\n         // let url = this.downloadUrl();\n      }\n   }\n};\n","const ABViewFormCore = require(\"../../core/views/ABViewFormCore\");\nconst ABViewFormComponent = require(\"./viewComponent/ABViewFormComponent\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\nconst ABViewFormCustom = require(\"./ABViewFormCustom\");\nconst ABViewFormConnect = require(\"./ABViewFormConnect\");\nconst ABViewFormDatepicker = require(\"./ABViewFormDatepicker\");\nconst ABViewFormSelectMultiple = require(\"./ABViewFormSelectMultiple\");\nconst ABViewFormTextbox = require(\"./ABViewFormTextbox\");\nconst ABViewFormJson = require(\"./ABViewFormJson\");\n\nconst L = (...params) => AB.Multilingual.label(...params);\n\n// const ABRecordRule = require(\"../../rules/ABViewRuleListFormRecordRules\");\n// const ABSubmitRule = require(\"../../rules/ABViewRuleListFormSubmitRules\");\n\n// let PopupRecordRule = null;\n// let PopupSubmitRule = null;\n\nconst ABViewFormPropertyComponentDefaults = ABViewFormCore.defaultValues();\n\nmodule.exports = class ABViewForm extends ABViewFormCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      this._callbacks = {\n         onBeforeSaveData: () => true,\n      };\n   }\n\n   superComponent() {\n      if (this._superComponent == null)\n         this._superComponent = super.component();\n\n      return this._superComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormComponent(this);\n   }\n\n   refreshDefaultButton(ids) {\n      // If default button is not exists, then skip this\n      let defaultButton = this.views(\n         (v) => v instanceof ABViewFormButton && v.settings.isDefault\n      )[0];\n\n      // Add a default button\n      if (defaultButton == null) {\n         defaultButton = ABViewFormButton.newInstance(this.application, this);\n         defaultButton.settings.isDefault = true;\n      }\n      // Remove default button from array, then we will add it to be the last item later (.push)\n      else {\n         this._views = this.views((v) => v.id != defaultButton.id);\n      }\n\n      // Calculate position Y of the default button\n      let yList = this.views().map((v) => (v.position.y || 0) + 1);\n      yList.push(this._views.length || 0);\n      yList.push($$(ids.fields).length || 0);\n      let posY = Math.max(...yList);\n\n      // Update to be the last item\n      defaultButton.position.y = posY;\n\n      // Keep the default button is always the last item of array\n      this._views.push(defaultButton);\n\n      return defaultButton;\n   }\n\n   /**\n    * @method getFormValues\n    *\n    * @param {webix form} formView\n    * @param {ABObject} obj\n    * @param {ABDatacollection} dc\n    * @param {ABDatacollection} dcLink [optional]\n    */\n   getFormValues(formView, obj, dc, dcLink) {\n      // get the fields that are on this form\n      const visibleFields = [\"id\"]; // we always want the id so we can udpate records\n      formView.getValues(function (obj) {\n         visibleFields.push(obj.config.name);\n      });\n\n      // only get data passed from form\n      const allVals = formView.getValues();\n      const formVals = {};\n      visibleFields.forEach((val) => {\n         formVals[val] = allVals[val];\n      });\n\n      // get custom values\n      this.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            comp instanceof ABViewFormConnect ||\n            comp instanceof ABViewFormDatepicker ||\n            comp instanceof ABViewFormSelectMultiple ||\n            (comp instanceof ABViewFormJson && comp.settings.type == \"filter\")\n      ).forEach((f) => {\n         const vComponent = this.viewComponents[f.id];\n         if (vComponent == null) return;\n\n         const field = f.field();\n         if (field) {\n            const getValue = vComponent.getValue ?? vComponent.logic.getValue;\n            if (getValue)\n               formVals[field.columnName] = getValue.call(vComponent, formVals);\n         }\n      });\n\n      // remove connected fields if they were not on the form and they are present in the formVals because it is a datacollection\n      obj.connectFields().forEach((f) => {\n         if (\n            visibleFields.indexOf(f.columnName) == -1 &&\n            formVals[f.columnName]\n         ) {\n            delete formVals[f.columnName];\n            delete formVals[f.relationName()];\n         }\n      });\n\n      // clear undefined values or empty arrays\n      for (const prop in formVals) {\n         if (formVals[prop] == null || formVals[prop].length == 0)\n            formVals[prop] = \"\";\n      }\n\n      // Add parent's data collection cursor when a connect field does not show\n      let linkValues;\n\n      if (dcLink) {\n         linkValues = dcLink.getCursor();\n      }\n\n      if (linkValues) {\n         const objectLink = dcLink.datasource;\n\n         const connectFields = obj.connectFields();\n         connectFields.forEach((f) => {\n            const formFieldCom = this.fieldComponents(\n               (fComp) => fComp?.field?.()?.id === f?.id\n            );\n\n            if (\n               objectLink.id == f.settings.linkObject &&\n               formFieldCom.length < 1 && // check field does not show\n               formVals[f.columnName] === undefined\n            ) {\n               const linkColName = f.indexField\n                  ? f.indexField.columnName\n                  : objectLink.PK();\n\n               formVals[f.columnName] = {};\n               formVals[f.columnName][linkColName] =\n                  linkValues[linkColName] ?? linkValues.id;\n            }\n         });\n      }\n\n      // NOTE: need to pull data of current cursor to calculate Calculate & Formula fields\n      // .formVals variable does not include data that does not display in the Form widget\n      const cursorFormVals = Object.assign(dc.getCursor() ?? {}, formVals);\n\n      // Set value of calculate or formula fields to use in record rule\n      obj.fields((f) => f.key == \"calculate\" || f.key == \"formula\").forEach(\n         (f) => {\n            if (formVals[f.columnName] == null) {\n               let reCalculate = true;\n\n               // WORKAROUND: If \"Formula\" field will have Filter conditions,\n               // Then it is not able to re-calculate on client side\n               // because relational data is not full data so FilterComplex will not have data to check\n               if (f.key == \"formula\" && f.settings?.where?.rules?.length > 0) {\n                  reCalculate = false;\n               }\n\n               formVals[f.columnName] = f.format(cursorFormVals, reCalculate);\n            }\n         }\n      );\n\n      if (allVals.translations?.length > 0)\n         formVals.translations = allVals.translations;\n\n      // give the Object a final chance to review the data being handled.\n      obj.formCleanValues(formVals);\n\n      return formVals;\n   }\n\n   /**\n    * @method validateData\n    *\n    * @param {webix form} formView\n    * @param {ABObject} object\n    * @param {object} formVals\n    *\n    * @return {boolean} isValid\n    */\n   validateData($formView, object, formVals) {\n      let list = \"\";\n\n      // validate required fields\n      const requiredFields = this.fieldComponents(\n         (fComp) =>\n            fComp?.field?.().settings?.required == true ||\n            fComp?.settings?.required == true\n      ).map((fComp) => fComp.field());\n\n      // validate data\n      const validator = object.isValidData(formVals);\n      let isValid = validator.pass();\n\n      // $$($formView).validate();\n      $formView.validate();\n      /**\n       * helper function to fix the webix ui after adding an validation error\n       * message.\n       * @param {string} col - field.columnName\n       */\n      const fixInvalidMessageUI = (col) => {\n         const $forminput = $formView.elements[col];\n         if (!$forminput) return;\n         // Y position\n         const height = $forminput.$height;\n         if (height < 56) {\n            $forminput.define(\"height\", 60);\n            $forminput.resize();\n         }\n\n         // X position\n         const domInvalidMessage = $forminput.$view.getElementsByClassName(\n            \"webix_inp_bottom_label\"\n         )[0];\n         if (!domInvalidMessage?.style[\"margin-left\"]) {\n            domInvalidMessage.style.marginLeft = `${\n               this.settings.labelWidth ??\n               ABViewFormPropertyComponentDefaults.labelWidth\n            }px`;\n         }\n      };\n\n      // Display required messages\n      requiredFields.forEach((f) => {\n         if (!f) return;\n\n         const fieldVal = formVals[f.columnName];\n         if (fieldVal == \"\" || fieldVal == null || fieldVal.length < 1) {\n            $formView.markInvalid(f.columnName, L(\"This is a required field.\"));\n            list += `<li>${L(\"Missing Required Field\")} ${f.columnName}</li>`;\n            isValid = false;\n\n            // Fix position of invalid message\n            fixInvalidMessageUI(f.columnName);\n         }\n      });\n\n      // if data is invalid\n      if (!isValid) {\n         const saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // error message\n         if (validator?.errors?.length) {\n            validator.errors.forEach((err) => {\n               $formView.markInvalid(err.name, err.message);\n               list += `<li>${err.name}: ${err.message}</li>`;\n               fixInvalidMessageUI(err.name);\n            });\n\n            saveButton?.disable();\n         } else {\n            saveButton?.enable();\n         }\n      }\n      if (list) {\n         webix.alert({\n            type: \"alert-error\",\n            title: L(\"Problems Saving\"),\n            width: 400,\n            text: `<ul style='text-align:left'>${list}</ul>`,\n         });\n      }\n\n      return isValid;\n   }\n\n   /**\n    * @method recordRulesReady()\n    * This returns a Promise that gets resolved when all record rules report\n    * that they are ready.\n    * @return {Promise}\n    */\n   async recordRulesReady() {\n      return this.RecordRule.rulesReady();\n   }\n\n   /**\n    * @method saveData\n    * save data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async saveData($formView) {\n      // call .onBeforeSaveData event\n      // if this function returns false, then it will not go on.\n      if (!this._callbacks?.onBeforeSaveData?.()) return;\n\n      $formView.clearValidation();\n\n      // get ABDatacollection\n      const dv = this.datacollection;\n      if (dv == null) return;\n\n      // get ABObject\n      const obj = dv.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dv.model;\n      if (model == null) return;\n\n      // show progress icon\n      $formView.showProgress?.({ type: \"icon\" });\n\n      // get update data\n      const formVals = this.getFormValues(\n         $formView,\n         obj,\n         dv,\n         dv.datacollectionLink\n      );\n\n      // form ready function\n      const formReady = (newFormVals) => {\n         // clear cursor after saving.\n         if (dv) {\n            if (this.settings.clearOnSave) {\n               dv.setCursor(null);\n               $formView.clear();\n            } else {\n               if (newFormVals && newFormVals.id) dv.setCursor(newFormVals.id);\n            }\n         }\n\n         $formView.hideProgress?.();\n\n         // if there was saved data pass it up to the onSaveData callback\n         // if (newFormVals) this._logic.callbacks.onSaveData(newFormVals);\n         if (newFormVals) this.emit(\"saved\", newFormVals); // Q? is this the right upgrade?\n      };\n\n      const formError = (err) => {\n         const $saveButton = $formView.queryView({\n            view: \"button\",\n            type: \"form\",\n         });\n\n         // mark error\n         if (err) {\n            if (err.invalidAttributes) {\n               for (const attr in err.invalidAttributes) {\n                  let invalidAttrs = err.invalidAttributes[attr];\n                  if (invalidAttrs && invalidAttrs[0])\n                     invalidAttrs = invalidAttrs[0];\n\n                  $formView.markInvalid(attr, invalidAttrs.message);\n               }\n            } else if (err.sqlMessage) {\n               webix.message({\n                  text: err.sqlMessage,\n                  type: \"error\",\n               });\n            } else {\n               webix.message({\n                  text: L(\"System could not save your data\"),\n                  type: \"error\",\n               });\n               this.AB.notify.developer(err, {\n                  message: \"Could not save your data\",\n                  view: this.toObj(),\n               });\n            }\n         }\n\n         $saveButton?.enable();\n\n         $formView?.hideProgress?.();\n      };\n\n      // Load data of DCs that use in record rules\n      await this.loadDcDataOfRecordRules();\n\n      // wait for our Record Rules to be ready before we continue.\n      await this.recordRulesReady();\n\n      // update value from the record rule (pre-update)\n      this.doRecordRulesPre(formVals);\n\n      // validate data\n      if (!this.validateData($formView, obj, formVals)) {\n         // console.warn(\"Data is invalid.\");\n         $formView.hideProgress?.();\n         return;\n      }\n\n      let newFormVals;\n      // {obj}\n      // The fully populated values returned back from service call\n      // We use this in our post processing Rules\n\n      try {\n         // is this an update or create?\n         if (formVals.id) {\n            newFormVals = await model.update(formVals.id, formVals);\n         } else {\n            newFormVals = await model.create(formVals);\n         }\n      } catch (err) {\n         formError(err.data);\n         throw err;\n      }\n\n      /*\n      // OLD CODE:\n      try {\n         await this.doRecordRules(newFormVals);\n         // make sure any updates from RecordRules get passed along here.\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return newFormVals;\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n         // Question:  how do we respond to an error?\n         // ?? just keep going ??\n         this.doSubmitRules(newFormVals);\n         formReady(newFormVals);\n         return;\n      }\n      */\n\n      try {\n         await this.doRecordRules(newFormVals);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: \"Error processing Record Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      // make sure any updates from RecordRules get passed along here.\n      try {\n         this.doSubmitRules(newFormVals);\n      } catch (errs) {\n         this.AB.notify.developer(errs, {\n            message: \"Error processing Submit Rules.\",\n            view: this.toObj(),\n            newFormVals: newFormVals,\n         });\n      }\n\n      formReady(newFormVals);\n      return newFormVals;\n   }\n\n   focusOnFirst() {\n      let topPosition = 0;\n      let topPositionId = \"\";\n      this.views().forEach((item) => {\n         if (item.key == \"textbox\" || item.key == \"numberbox\") {\n            if (item.position.y == topPosition) {\n               // topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n         }\n      });\n      let childComponent = this.viewComponents[topPositionId];\n      if (childComponent && $$(childComponent.ui.id)) {\n         $$(childComponent.ui.id).focus();\n      }\n   }\n\n   async loadDcDataOfRecordRules() {\n      const tasks = [];\n\n      (this.settings?.recordRules ?? []).forEach((rule) => {\n         (rule?.actionSettings?.valueRules?.fieldOperations ?? []).forEach(\n            (op) => {\n               if (op.valueType !== \"exist\") return;\n\n               const pullDataDC = this.AB.datacollectionByID(op.value);\n\n               if (\n                  pullDataDC?.dataStatus ===\n                  pullDataDC.dataStatusFlag.notInitial\n               )\n                  tasks.push(pullDataDC.loadData());\n            }\n         );\n      });\n\n      await Promise.all(tasks);\n\n      return true;\n   }\n\n   get viewComponents() {\n      const superComponent = this.superComponent();\n      return superComponent.viewComponents;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n\n      if (this.settings.recordRules) {\n         // TODO: scan recordRules for warnings\n      }\n\n      if (this.settings.submitRules) {\n         // TODO: scan submitRules for warnings.\n      }\n   }\n\n   /**\n    * @method deleteData\n    * delete data in to database\n    * @param $formView - webix's form element\n    *\n    * @return {Promise}\n    */\n   async deleteData($formView) {\n      // get ABDatacollection\n      const dc = this.datacollection;\n      if (dc == null) return;\n\n      // get ABObject\n      const obj = dc.datasource;\n      if (obj == null) return;\n\n      // get ABModel\n      const model = dc.model;\n      if (model == null) return;\n\n      // get update data\n      const formVals = $formView.getValues();\n\n      if (formVals?.id) {\n         const result = await model.delete(formVals.id);\n\n         // clear form\n         if (result) {\n            dc.setCursor(null);\n            $formView.clear();\n         }\n\n         return result;\n      }\n   }\n};\n","const ABViewFormButtonCore = require(\"../../core/views/ABViewFormButtonCore\");\nconst ABViewFormButtonComponent = require(\"./viewComponent/ABViewFormButtonComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormButtonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormButtonComponent(this);\n   }\n};\n","const ABViewFormCheckboxCore = require(\"../../core/views/ABViewFormCheckboxCore\");\nconst ABViewFormCheckboxComponent = require(\"./viewComponent/ABViewFormCheckboxComponent\");\n\nmodule.exports = class ABViewFormCheckbox extends ABViewFormCheckboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCheckboxComponent(this);\n   }\n};\n","const ABViewFormConnectCore = require(\"../../core/views/ABViewFormConnectCore\");\nconst ABViewFormConnectComponent = require(\"./viewComponent/ABViewFormConnectComponent\");\nconst ABViewPropertyAddPage =\n   require(\"./viewProperties/ABViewPropertyAddPage\").default;\nconst ABViewPropertyEditPage =\n   require(\"./viewProperties/ABViewPropertyEditPage\").default;\n\nconst ABViewFormConnectPropertyComponentDefaults =\n   ABViewFormConnectCore.defaultValues();\n\nmodule.exports = class ABViewFormConnect extends ABViewFormConnectCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABView} parent the ABView this view is a child of. (can be null)\n    */\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n\n      // Set filter value\n      this.__filterComponent = this.AB.filterComplexNew(\n         `${this.id}__filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.__filterComponent.fieldsLoad(\n         this.datasource ? this.datasource.fields() : [],\n         this.datasource ? this.datasource : null\n      );\n\n      // NOTE: .objectWorkspace is a v1 setting\n      // if (\n      //    !this.settings.objectWorkspace ||\n      //    !this.settings.objectWorkspace.filterConditions\n      // ) {\n      //    this.AB.error(\"Error: filter conditions do not exist\", {\n      //       error: \"filterConditions do not exist\",\n      //       viewLocation: {\n      //          application: this.application.name,\n      //          id: this.id,\n      //          name: this.label,\n      //       },\n      //       view: this,\n      //    });\n      //    // manually place an empty filter\n      //    this.settings[\"objectWorkspace\"] = {};\n      //    this.settings[\"objectWorkspace\"][\"filterConditions\"] = { glue: \"and\" };\n      // }\n\n      this.__filterComponent.setValue(\n         this.settings.filterConditions ??\n            ABViewFormConnectPropertyComponentDefaults.filterConditions\n      );\n   }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      this.addPageTool.fromSettings(this.settings);\n      this.editPageTool.fromSettings(this.settings);\n   }\n\n   static get addPageProperty() {\n      return ABViewPropertyAddPage.propertyComponent(this.App, this.idBase);\n   }\n\n   static get editPageProperty() {\n      return ABViewPropertyEditPage.propertyComponent(this.App, this.idBase);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormConnectComponent(this);\n   }\n\n   get addPageTool() {\n      if (this.__addPageTool == null)\n         this.__addPageTool = new ABViewPropertyAddPage();\n\n      return this.__addPageTool;\n   }\n\n   get editPageTool() {\n      if (this.__editPageTool == null)\n         this.__editPageTool = new ABViewPropertyEditPage();\n\n      return this.__editPageTool;\n   }\n};\n","const ABViewFormCustomCore = require(\"../../core/views/ABViewFormCustomCore\");\nconst ABViewFormCustomComponent = require(\"./viewComponent/ABViewFormCustomComponent\");\n\nmodule.exports = class ABViewFormCustom extends ABViewFormCustomCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormCustomComponent(this);\n   }\n};\n","const ABViewFormDatepickerCore = require(\"../../core/views/ABViewFormDatepickerCore\");\nconst ABViewFormDatepickerComponent = require(\"./viewComponent/ABViewFormDatepickerComponent\");\n\nmodule.exports = class ABViewFormDatepicker extends ABViewFormDatepickerCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormDatepickerComponent(this);\n   }\n};\n","const ABViewFormItemCore = require(\"../../core/views/ABViewFormItemCore\");\nconst ABViewFormItemComponent = require(\"./viewComponent/ABViewFormItemComponent\");\n\nconst ABViewFormFieldPropertyComponentDefaults =\n   ABViewFormItemCore.defaultValues();\n\nmodule.exports = class ABViewFormItem extends ABViewFormItemCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   static get componentUI() {\n      return ABViewFormItemComponent;\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormItemComponent(this);\n   }\n\n   /**\n    * @method parentFormUniqueID\n    * return a unique ID based upon the closest form object this component is on.\n    * @param {string} key  The basic id string we will try to make unique\n    * @return {string}\n    */\n   parentFormUniqueID(key) {\n      var form = this.parentFormComponent();\n      var uniqueInstanceID;\n      if (form) {\n         uniqueInstanceID = form.uniqueInstanceID;\n      } else {\n         uniqueInstanceID = webix.uid();\n      }\n\n      return key + uniqueInstanceID;\n   }\n};\n","const ABViewFormJsonCore = require(\"../../core/views/ABViewFormJsonCore\");\nconst ABViewFormJsonComponent = require(\"./viewComponent/ABViewFormJsonComponent\");\n\nmodule.exports = class ABViewFormJson extends ABViewFormJsonCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormJsonComponent(this);\n   }\n};\n","const ABViewFormNumberCore = require(\"../../core/views/ABViewFormNumberCore\");\nconst ABViewFormNumberComponent = require(\"./viewComponent/ABViewFormNumberComponent\");\n\nmodule.exports = class ABViewFormNumber extends ABViewFormNumberCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormNumberComponent(this);\n   }\n};\n","const ABViewFormReadonlyCore = require(\"../../core/views/ABViewFormReadonlyCore\");\nconst ABViewFormReadonlyComponent = require(\"./viewComponent/ABViewFormReadonlyComponent\");\n\nmodule.exports = class ABViewFormReadonly extends ABViewFormReadonlyCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormReadonlyComponent(this);\n   }\n};\n","const ABViewFormSelectMultipleCore = require(\"../../core/views/ABViewFormSelectMultipleCore\");\nconst ABViewFormSelectMultipleComponent = require(\"./viewComponent/ABViewFormSelectMultipleComponent\");\n\nmodule.exports = class ABViewFormSelectMultiple extends (\n   ABViewFormSelectMultipleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectMultipleComponent(this);\n   }\n};\n","const ABViewFormSelectSingleCore = require(\"../../core/views/ABViewFormSelectSingleCore\");\nconst ABViewFormSelectSingleComponent = require(\"./viewComponent/ABViewFormSelectSingleComponent\");\n\nmodule.exports = class ABViewFormSelectSingle extends (\n   ABViewFormSelectSingleCore\n) {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormSelectSingleComponent(this);\n   }\n};\n","const ABViewFormTextboxCore = require(\"../../core/views/ABViewFormTextboxCore\");\nconst ABViewFormTextboxComponent = require(\"./viewComponent/ABViewFormTextboxComponent\");\n\nmodule.exports = class ABViewFormTextbox extends ABViewFormTextboxCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTextboxComponent(this);\n   }\n};\n","const ABViewFormTreeCore = require(\"../../core/views/ABViewFormTreeCore\");\nconst ABViewFormTreeComponent = require(\"./viewComponent/ABViewFormTreeComponent\");\n\nmodule.exports = class ABViewFormTree extends ABViewFormTreeCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewFormTreeComponent(this);\n   }\n};\n","import ABViewComponent from \"./ABViewComponent\";\n\nexport default class ABViewGanttComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGantt_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n               gantt: \"\",\n            },\n            ids\n         )\n      );\n\n      this._tempDC = null;\n      // {ABDataCollection}\n      // A link to a DC that was passed in.  NOTE: this is only for\n      // the temp DCs created in the AppBuilder Designer and passed\n      // in.  Normal DCs are handled by the default CurrentDatacollection\n      // methods.\n\n      this.TitleField = null;\n      this.StartDateField = null;\n      this.EndDateField = null;\n      this.DurationField = null;\n      this.ProgressField = null;\n      this.NotesField = null;\n\n      this.originalStartDate = null;\n      this.originalEndDate = null;\n\n      this.pendingAdds = {};\n      // {Promise}  /* id : {Promise} */\n      // In order to prevent a race condition where multiple adds can be\n      // generated on the same item, we catch the repeats and just return\n      // the same data for each.\n\n      const idGantt = this.ids.gantt;\n\n      this.ganttElement = {\n         isExistsTask: (taskId) => {\n            const localService = $$(idGantt).getService(\"local\");\n            if (!localService) return false;\n\n            const tasksData = localService.tasks();\n            if (!tasksData || !tasksData.exists) return false;\n\n            return tasksData.exists(taskId);\n         },\n         removeTask: (taskId) => {\n            if (!this.ganttElement.isExistsTask(taskId)) return;\n\n            const opsService = $$(idGantt).getService(\"operations\");\n            if (!opsService) return;\n\n            return opsService.removeTask(taskId);\n         },\n      };\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const { YEAR_SCALE, MONTH_SCALE, DAY_SCALE } = this.getConstantScales;\n      const _ui = super.ui([\n         {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"menu\",\n                  id: ids.menu,\n                  layout: \"x\",\n                  width: 300,\n                  data: [\n                     {\n                        id: \"day\",\n                        value: this.label(\"Day\"),\n                     },\n                     {\n                        id: \"week\",\n                        value: this.label(\"Week\"),\n                     },\n                     {\n                        id: \"month\",\n                        value: this.label(\"Month\"),\n                     },\n                     {\n                        id: \"year\",\n                        value: this.label(\"Year\"),\n                     },\n                  ],\n                  on: {\n                     onItemClick: (id /* , e, node */) => {\n                        this.setScale(id);\n                     },\n                  },\n               },\n            ],\n         },\n         {\n            id: ids.gantt,\n            view: \"gantt\",\n            scales: [YEAR_SCALE, MONTH_SCALE, DAY_SCALE],\n            override: new Map([\n               [\n                  gantt.services.Backend,\n                  // global webix gantt object\n                  class MyBackend extends gantt.services.Backend {\n                     async tasks() {\n                        const DC = self.CurrentDatacollection;\n                        if (!DC) return [];\n\n                        // if (DC.dataStatus != DC.dataStatusFlag.initialized) {\n                        //    await DC.loadData().catch((err) => {\n                        //       console.error(err);\n                        //    });\n                        // }\n                        return (DC.getData() || []).map((d, indx) =>\n                           self.convertFormat(d, indx)\n                        );\n                     }\n                     links() {\n                        return Promise.resolve([]);\n                     }\n                     async addTask(obj, index, parent) {\n                        if (!self.pendingAdds[obj.id]) {\n                           self.pendingAdds[obj.id] = self.taskAdd(obj);\n                        }\n                        const newTask = await self.pendingAdds[obj.id];\n                        delete self.pendingAdds[obj.id];\n                        return {\n                           id: (newTask || {}).id,\n                        };\n                     }\n                     async updateTask(id, obj) {\n                        return await self.taskUpdate(obj.id, obj);\n                     }\n                     async removeTask(id) {\n                        return await self.taskRemove(id);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // #HACK!: as of webix v.8.1.1 there is a visual glitch of the Gantt\n      // object if you replace a gantt widget with a new definition (like in\n      // the ABDesigner you can switch from Gantt1 to Gantt2 in the object\n      // workspace).  In that one case, the menu would disappear even though\n      // the data is present.  So this makes sure the menu is shown\n      const $menu = $$(this.ids.menu);\n\n      if ($menu) $menu.showItem(\"day\");\n   }\n\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return super.CurrentDatacollection || this._tempDC;\n   }\n\n   /**\n    * @method convertFormat()\n    * Convert an ABObject's row value into a gantt task data format.\n    * @param {obj} row\n    *        The current row of data returned from an ABObject.\n    * @param {int} index\n    *        The order of this task.\n    * @return {obj}\n    *         A key=>value hash corresponding to the gantt task that\n    *         represents this row of data.\n    */\n   convertFormat(row = {}, index = null) {\n      const data = {};\n      const StartDateField = this.StartDateField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (!StartDateField || (!EndDateField && !DurationField)) return data;\n\n      const currDate = new Date();\n\n      data[\"id\"] = row.id || row.uuid;\n      data[\"type\"] = \"task\";\n      data[\"parent\"] = 0;\n      data[\"open\"] = true;\n\n      // define label\n      const TitleField = this.TitleField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n\n      data[\"text\"] = TitleField\n         ? row[TitleField.columnName] || \"\"\n         : this.CurrentObject.displayData(row);\n      data[\"start_date\"] = row[StartDateField.columnName] || currDate;\n      data[\"progress\"] = ProgressField\n         ? parseFloat(row[ProgressField.columnName] || 0)\n         : 0;\n\n      if (NotesField) data[\"details\"] = row[NotesField.columnName] || \"\";\n\n      if (EndDateField)\n         data[\"end_date\"] = row[EndDateField.columnName] || currDate;\n\n      if (DurationField) data[\"duration\"] = row[DurationField.columnName] || 1;\n\n      // Default values\n      if (!data[\"end_date\"] && !data[\"duration\"]) {\n         data[\"end_date\"] = currDate;\n         data[\"duration\"] = 1;\n      }\n\n      if (index) data[\"order\"] = index;\n\n      return data;\n   }\n\n   /**\n    * @method convertValues()\n    * Convert a Gantt task into a set of values for our ABObject.\n    * @param {obj} task\n    *        The current gantt task data.\n    * @return {obj}\n    *         A key=>value hash corresponding to the ABObject that\n    *         is tied to this gantt.\n    */\n   convertValues(task) {\n      const patch = {};\n      const TitleField = this.TitleField;\n      const StartDateField = this.StartDateField;\n      const ProgressField = this.ProgressField;\n      const NotesField = this.NotesField;\n      const EndDateField = this.EndDateField;\n      const DurationField = this.DurationField;\n\n      if (TitleField) patch[TitleField.columnName] = task[\"text\"] || \"\";\n\n      if (StartDateField) patch[StartDateField.columnName] = task[\"start_date\"];\n\n      if (ProgressField)\n         patch[ProgressField.columnName] = parseFloat(task[\"progress\"] || 0);\n\n      if (NotesField) patch[NotesField.columnName] = task[\"details\"];\n\n      if (EndDateField) patch[EndDateField.columnName] = task[\"end_date\"];\n\n      if (DurationField) patch[DurationField.columnName] = task[\"duration\"];\n\n      return patch;\n   }\n\n   /**\n    * @method objectLoad\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      // const baseView = this.view;\n      const settings = this.settings;\n\n      if (object) {\n         this.TitleField = object.fieldByID(settings.titleFieldID);\n         this.StartDateField = object.fieldByID(settings.startDateFieldID);\n         this.EndDateField = object.fieldByID(settings.endDateFieldID);\n         this.DurationField = object.fieldByID(settings.durationFieldID);\n         this.ProgressField = object.fieldByID(settings.progressFieldID);\n         this.NotesField = object.fieldByID(settings.notesFieldID);\n      }\n   }\n\n   /**\n    * @method datacollectionLoad\n    * @param {ABDatacollection} datacollection\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const dc = this.CurrentDatacollection || datacollection;\n      if (!dc) return;\n\n      // NOTE: this can happen in the ABDesigner object workspace.\n      // we send in a temp DC with no .id\n      this._tempDC = datacollection;\n\n      // NOTE: keep .objectLoad() before any .initData() is called.\n      this.objectLoad(dc.datasource);\n\n      const eventNames = [\"create\", \"update\", \"delete\", \"initializedData\"];\n\n      eventNames.forEach((e) => {\n         if (\n            e in dc._events &&\n            this.__events.findIndex((eo) => eo.eventName === e) !== -1\n         )\n            return;\n\n         switch (e) {\n            case \"delete\":\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: \"delete\",\n                  listener: (taskId) => {\n                     // remove this task in gantt\n                     if (this.ganttElement.isExistsTask(taskId))\n                        this.ganttElement.removeTask(taskId);\n                  },\n               });\n\n               break;\n\n            default:\n               this.eventAdd({\n                  emitter: dc,\n                  eventName: e,\n                  listener: () => {\n                     this.initData();\n                  },\n               });\n\n               break;\n         }\n      });\n   }\n\n   /**\n    * @function hide()\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.component)?.hide();\n   }\n\n   initData() {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const dataService = ganttElem.getService(\"local\");\n      if (!dataService) return;\n\n      const dcTasks = dataService.tasks();\n      if (!dcTasks) return;\n\n      // gantt v 8.1.1\n      // Note: there is a race condition that can happen here.\n      // dataService.tasks() calls the MyBackend.tasks() above which\n      // returns a Promise.\n      // when you call dcTasks.clearAll() before the promise\n      // is resolved, the gantt internally throws an error.\n      //\n      // So give webix some time to internally complete it's process\n      // before we do .clearAll();\n      setTimeout(() => {\n         dcTasks.clearAll();\n\n         const DC = this.CurrentDatacollection;\n         const gantt_data = {\n            data: DC\n               ? (DC.getData() || []).map((d, index) =>\n                    this.convertFormat(d, index)\n                 )\n               : [],\n         };\n\n         // check required fields before parse\n         if (this.StartDateField && (this.EndDateField || this.DurationField)) {\n            dcTasks.parse(gantt_data);\n         }\n\n         // Keep original start and end dates for calculate scale to display\n         const currScale = dataService.getScales();\n\n         this.originalStartDate = currScale.start;\n         this.originalEndDate = currScale.end;\n\n         this.sort();\n      }, 10);\n   }\n\n   get getConstantScales() {\n      const DAY_SCALE = { unit: \"day\", format: \"%d\" },\n         WEEK_SCALE = {\n            unit: \"week\",\n            format: (start) => {\n               const parser = webix.Date.dateToStr(\"%d %M\");\n               const wstart = webix.Date.weekStart(start);\n               const wend = webix.Date.add(\n                  webix.Date.add(wstart, 1, \"week\", true),\n                  -1,\n                  \"day\",\n                  true\n               );\n\n               return parser(wstart) + \" - \" + parser(wend);\n            },\n         },\n         MONTH_SCALE = { unit: \"month\", format: \"%F\" },\n         YEAR_SCALE = { unit: \"year\", format: \"%Y\" };\n\n      return {\n         DAY_SCALE,\n         WEEK_SCALE,\n         MONTH_SCALE,\n         YEAR_SCALE,\n      };\n   }\n\n   setScale(scale) {\n      const ganttElem = $$(this.ids.gantt);\n      if (!ganttElem) return;\n\n      const ganttData = ganttElem.getService(\"local\");\n      if (!ganttData) return;\n\n      const newScales = [];\n      const { YEAR_SCALE, MONTH_SCALE, WEEK_SCALE, DAY_SCALE } =\n         this.getConstantScales;\n\n      switch (scale) {\n         case \"day\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, DAY_SCALE);\n            break;\n\n         case \"week\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE, WEEK_SCALE);\n            break;\n\n         case \"month\":\n            newScales.push(YEAR_SCALE, MONTH_SCALE);\n            break;\n\n         case \"year\":\n            newScales.push(YEAR_SCALE);\n            break;\n      }\n\n      const abWebix = this.AB.Webix;\n      const currScale = ganttElem.getService(\"local\").getScales(),\n         start = abWebix.Date.add(this.originalStartDate, -1, scale, true),\n         end = abWebix.Date.add(this.originalEndDate, 1, scale, true);\n\n      ganttData.setScales(\n         start,\n         end,\n         currScale.precise,\n         currScale.cellWidth,\n         currScale.cellHeight,\n         newScales\n      );\n      ganttElem.$app.refresh();\n      ganttElem.getState().$batch({ top: 0, left: 0 });\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   onShow() {\n      super.onShow();\n      this.datacollectionLoad(this.datacollection);\n\n      $$(this.ids.component)?.show();\n   }\n\n   sort() {\n      // TODO: sorting;\n      return;\n      // const gantt = $$(ids.gantt).getGantt();\n      // if (!gantt) return;\n\n      // // default sort\n      // const MAX_date = new Date(8640000000000000);\n      // gantt.sort(function(a, b) {\n      //    const aStartDate = a[\"start_date\"],\n      //       aEndDate = a[\"end_date\"],\n      //       aDuration = a[\"duration\"] || 1,\n      //       bStartDate = b[\"start_date\"],\n      //       bEndDate = b[\"end_date\"],\n      //       bDuration = b[\"duration\"] || 1;\n\n      //    // if no start date, then be a last item\n      //    if (\n      //       a[this.StartDateField.columnName] == null ||\n      //       b[this.StartDateField.columnName] == null\n      //    ) {\n      //       return (\n      //          (a[this.StartDateField.columnName] || MAX_date) -\n      //          (b[this.StartDateField.columnName] || MAX_date)\n      //       );\n      //    } else if (aStartDate != bStartDate) {\n      //       return aStartDate - bStartDate;\n      //    } else if (aEndDate != bEndDate) {\n      //       return aEndDate - bEndDate;\n      //    } else if (aDuration != bDuration) {\n      //       return bDuration - aDuration;\n      //    }\n      // }, false);\n   }\n\n   async taskAdd(taskData) {\n      const patch = this.convertValues(taskData);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend addTask() method\n         // On Webix documents, the method addTask() have to return the added object so we have to pass the data we add through this method.\n         return await this.CurrentObject?.model().create(patch);\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Saving Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to save this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskAdd(): Error Saving Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskRemove(rowId) {\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend removeTask() method\n         // On Webix documents, the method removeTask() return {} (an empty object) so we return {} in removeTask() instead.\n         await this.CurrentObject.model().delete(rowId);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Removing Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to remove this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskRemove(): Error Removing Item\",\n            rowId,\n         });\n\n         throw e;\n      }\n   }\n\n   async taskUpdate(rowId, updatedTask) {\n      const patch = this.convertValues(updatedTask);\n      const ab = this.AB;\n\n      try {\n         // this method is being used in MyBackend updateTask() method\n         // On Webix documents, the method updateTask() return {} (an empty object) so we return {} in updateTask() instead.\n         await this.CurrentObject.model().update(rowId, patch);\n\n         return {};\n      } catch (e) {\n         ab.Webix.alert({\n            title: this.label(\"Error Updating Item\"),\n            ok: this.label(\"Okay\"),\n            text: this.label(\"Unable to update this item.\"),\n         });\n         ab.notify.developer(e, {\n            context: \"ABViewGantt:taskUpdate(): Error Updating Item\",\n            patch,\n         });\n\n         throw e;\n      }\n   }\n}\n","import ABViewGanttComponent from \"./viewComponent/ABViewGanttComponent\";\n\nconst ABViewGanttCore = require(\"../../core/views/ABViewGanttCore\");\n\nexport default class ABViewGantt extends ABViewGanttCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGanttComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      } else {\n         if (!this.settings.startDateFieldID) {\n            this.warningsMessage(`doesn't have a start date field set.`);\n         } else {\n            let field = DC.datasource?.fieldByID(\n               this.settings.startDateFieldID\n            );\n            if (!field) {\n               this.warningsMessage(\n                  `can't lookup field: startDate[${this.settings.startDateFieldID}]`\n               );\n            }\n         }\n      }\n   }\n}\n","/*\n * ABViewGridPopupExport.js\n * Manage the Popup that allows you to export data into one of our supported\n * formats.\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nexport default class ABWorkObjectPopupExport extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupExport\";\n\n      super({\n         popupExport: `${idBase}_popupExport`,\n         list: `${idBase}_popupExport_list`,\n      });\n\n      this._currentObject = null;\n      // {ABObject}\n      // The ABObject of the data we will export.  We can find out the fields\n      // from the object.\n\n      this._dataCollection = null;\n      // {ABDatacCollection}\n      // The ABDataCollection that contains the data we are going to export.\n\n      this._grid = null;\n      // {webix.grid}\n      // the current webix.grid that contains the data we are going to export.\n\n      this._filename = null;\n      // {string}\n      // the name of the desired output file.\n\n      this._hiddenFields = [];\n      // {array}\n      // An array of ABField.columnName(s) that we are not wanting to export\n   }\n\n   ui() {\n      var self = this;\n\n      // webix UI definition:\n      return {\n         view: \"popup\",\n         id: this.ids.popupExport,\n         width: 160,\n         height: 0, //150,\n         select: false,\n         hidden: true,\n         body: {\n            id: this.ids.list,\n            view: \"list\",\n            autoheight: true,\n            data: [\n               { name: \"CSV\", icon: \"file-excel-o\" },\n               { name: \"Excel\", icon: \"file-excel-o\" },\n               { name: \"PDF\", icon: \"file-pdf-o\" },\n               { name: \"PNG\", icon: \"file-image-o\" },\n            ],\n            template:\n               \"<div><i class='fa fa-#icon# webix_icon_btn' aria-hidden='true'></i> #name#</div>\",\n            on: {\n               onItemClick: function (id /*, e, node */) {\n                  var component = this.getItem(id);\n                  self.export(component.name);\n               },\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n      webix.ui(this.ui());\n      $$(this.ids.popupExport).resize();\n   }\n\n   // internal business logic\n\n   /**\n    * @method dataCollectionLoad()\n    * the current ABDataCollection we are working with.\n    * @param {ABDataCollection} dc\n    */\n   dataCollectionLoad(dc) {\n      this._dataCollection = dc;\n   }\n\n   /**\n    * @method objectLoad()\n    * The current ABObject we are working with.\n    * @param {ABObject} object\n    */\n   objectLoad(object) {\n      this._currentObject = object;\n   }\n\n   /**\n    * @method setHiddenFields\n    * Register Fields we don't want exported in our data.\n    * @param {array} fields\n    *        An array of ABField.columnName(s) to exclude from our export.\n    */\n   setHiddenFields(fields = []) {\n      this._hiddenFields = fields ?? [];\n   }\n\n   /**\n    * @method setFilename()\n    * Register the name of the file we want our data to export as.\n    * @param {string} filename\n    */\n   setFilename(filename) {\n      this._filename = filename;\n   }\n\n   /**\n    * @method setGridComponent()\n    * Register the webix.grid that currently stores the data we are\n    * exporting.\n    * @param {webix.grid} $grid\n    */\n   setGridComponent($grid) {\n      this._grid = $grid;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    */\n   show($view) {\n      $$(this.ids.popupExport).show($view);\n   }\n\n   async export(name) {\n      let fnExport;\n\n      let columns = {};\n\n      let dc = this._dataCollection;\n      let _currentObject = this._currentObject;\n      let _grid = this._grid;\n      let _filename = this._filename;\n\n      if (\n         dc &&\n         (!dc.settings.loadAll || dc.dataStatus == dc.dataStatusFlag.notInitial)\n      ) {\n         // Load all data\n         await dc.reloadData(0, null);\n         dc.settings.loadAll = true;\n      }\n\n      // client filter data\n      // template of report\n      if (_currentObject) {\n         _currentObject.fields().forEach((f) => {\n            // hidden fields\n            if (this._hiddenFields.indexOf(f.columnName) > -1) return;\n\n            columns[f.columnName] = {\n               template: (rowData) => {\n                  return f.format(rowData);\n               },\n            };\n         });\n      }\n\n      // If there are checked items, then export them only\n      // Otherwise export all items\n      const noCheckedRow =\n         _grid.data.find({ appbuilder_select_item: 1 }).length < 1;\n      const filterRow = (row) =>\n         noCheckedRow || row?.appbuilder_select_item == 1;\n\n      switch (name) {\n         case \"CSV\":\n            webix.csv.delimiter.cols = \",\";\n\n            fnExport = webix.toCSV(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filter: filterRow,\n            });\n            break;\n         case \"Excel\":\n            fnExport = webix.toExcel(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               name:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               columns: columns,\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PDF\":\n            fnExport = webix.toPDF(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               filterHTML: true,\n               filter: filterRow,\n            });\n            break;\n         case \"PNG\":\n            fnExport = webix.toPNG(_grid, {\n               filename:\n                  _filename || (_currentObject ? _currentObject.label : null),\n               // filter: NOT SUPPORT\n            });\n            break;\n      }\n\n      try {\n         await fnExport;\n         $$(this.ids.popupExport).hide();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            message: `ABViewGridPopupExport:export(): System could not export: ${name}`,\n            exportType: name,\n            columns,\n            fileName: _filename,\n         });\n      }\n   }\n\n   // this.dataCollectionLoad = _logic.dataCollectionLoad;\n   // this.objectLoad = _logic.objectLoad;\n   // this.setGridComponent = _logic.setGridComponent;\n   // this.setFilename = _logic.setFilename;\n   // this.setHiddenFields = _logic.setHiddenFields;\n   // this.show = _logic.show;\n}\n","/*\n * ABViewGridPopupMassUpdate\n *\n * An ABViewGrid can offer a mass update feature.  This is a ui component\n * to help with the processing of the update.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\nimport RowUpdater from \"../RowUpdater\";\n\nvar L = null;\n\nexport default class ABViewGridPopupMassUpdate extends ClassUI {\n   //.extend(idBase, function(App) {\n\n   constructor(ABViewGridComponent, idBase) {\n      idBase = idBase || \"abviewgridpopupMassUpdate\";\n\n      super({\n         component: `${idBase}_popupMassUpdate`,\n         submit: `${idBase}_submitMassUpdate`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // Which ABObject are we currently working with.\n\n      this.GridComponent = ABViewGridComponent;\n      // {ABViewGridComponent}\n      // The current ABViewGridComponent we are working with.\n\n      this.AB = ABViewGridComponent.AB;\n      // {ABFactory}\n\n      this.rowUpdater = new RowUpdater(idBase, this.AB);\n      // {RowUpdater}\n      // An instance of our RowUpdater form builder.\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         view: \"popup\",\n         id: ids.component,\n         // modal: true,\n         body: {\n            width: 500,\n            rows: [\n               // Update panel\n               this.rowUpdater.ui(),\n               { height: 15 },\n               {\n                  cols: [\n                     {},\n                     {\n                        view: \"button\",\n                        value: L(\"Cancel\"),\n                        width: 100,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     {\n                        id: ids.submit,\n                        css: \"webix_primary\",\n                        view: \"button\",\n                        label: L(\"Update\"),\n                        type: \"form\",\n                        width: 120,\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   async init(AB) {\n      webix.ui(this.ui());\n      this.rowUpdater.init(AB);\n\n      return Promise.resolve();\n   }\n\n   /**\n    * @method hide()\n    * Hide the popup.\n    */\n   hide() {\n      $$(this.ids.component).hide();\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object & datatable\n    * @param {ABObject} object\n    *        the currently selected object.\n    * @param {webix.datatable} dataTable\n    *        the dataTable we need to run the mass update on...trust me this\n    *        will be good\n    */\n   objectLoad(object, dataTable) {\n      this.CurrentObject = object;\n      this.rowUpdater.objectLoad(object);\n      this.DataTable = dataTable;\n   }\n\n   onShow() {}\n\n   /**\n    * @method show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {json} options\n    *        Additional webix options related to the .show() method.\n    */\n   show($view, options = null) {\n      if (options != null) {\n         $$(this.ids.component).show($view, options);\n      } else {\n         $$(this.ids.component).show($view);\n      }\n   }\n\n   /**\n    * @method submit()\n    * Process the submit action by getting the values to change and then\n    * running a batchUpdate() on the items in our datatable that were selected.\n    */\n   submit() {\n      // Update values to records\n      let update_button = $$(this.ids.submit),\n         update_items = this.rowUpdater.getValue() || [];\n\n      update_button.disable();\n\n      if (!this.GridComponent) {\n         // TODO : Message\n         // console.log(\"no data collection to update\");\n         update_button.enable();\n         return;\n      } else if (update_items.length < 1) {\n         // TODO : Message\n         update_button.enable();\n         return;\n      }\n\n      let $datatable = this.GridComponent.getDataTable(); // $$(DataTable.ui.id);\n      let updatedRowIds = [];\n      $datatable.data.each(function (row) {\n         if (\n            row &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item == 1\n         ) {\n            updatedRowIds.push(row.id);\n         }\n      });\n\n      let vals = {};\n      update_items.forEach((item) => {\n         let fieldInfo = this.CurrentObject.fieldByID(item.fieldId);\n         if (!fieldInfo) return;\n\n         vals[fieldInfo.columnName] = item.value;\n      });\n\n      if (updatedRowIds.length > 0) {\n         webix.confirm({\n            title: L(\"Updating Multiple Records\"),\n            text: L(\"Are you sure you want to update the selected records?\"),\n            callback: (result) => {\n               if (result) {\n                  if ($datatable && $datatable.showProgress)\n                     $datatable.showProgress({ type: \"icon\" });\n\n                  let objModel = this.CurrentObject.model();\n                  objModel\n                     .batchUpdate({\n                        rowIds: updatedRowIds,\n                        values: vals,\n                     })\n                     .then(() => {\n                        // Update webix.datatable\n                        (updatedRowIds ?? []).forEach((rowId) => {\n                           $datatable.updateItem(rowId, vals);\n                        });\n\n                        // Anything we need to do after we are done.\n                        update_button.enable();\n                        this.hide();\n\n                        if ($datatable && $datatable.hideProgress)\n                           $datatable.hideProgress();\n                     })\n                     .catch((err) => {\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewGridPopupMassUpdate:submit(): Error during batchUpdate\",\n                           rowIds: updatedRowIds,\n                           values: vals,\n                        });\n                     });\n               } else {\n                  update_button.enable();\n               }\n            },\n         });\n      } else {\n         webix.alert({\n            title: L(\"No Records Selected\"),\n            text: L(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n         update_button.enable();\n         this.hide();\n      }\n   }\n}\n","import ABViewComponent from \"./ABViewComponent\";\nimport ABPopupExport from \"../ABViewGridPopupExport\";\nimport ABPopupMassUpdateClass from \"../ABViewGridPopupMassUpdate\";\nimport ABPopupSortField from \"../ABViewGridPopupSortFields\";\n\nexport default class ABViewGridComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewGrid_${baseView.id}`,\n         Object.assign(\n            {\n               table: \"\",\n\n               // component: `${base}_component`,\n               toolbar: \"\",\n               buttonDeleteSelected: \"\",\n\n               buttonFilter: \"\",\n               buttonMassUpdate: \"\",\n               buttonSort: \"\",\n               buttonExport: \"\",\n\n               globalSearchToolbar: \"\",\n\n               datatable: \"\",\n            },\n            ids\n         )\n      );\n\n      this._handler_filterData = (fnFilter, filterRules) => {\n         this.callbackFilterData(fnFilter, filterRules); // be notified when there is a change in the filter\n      };\n\n      this.handler_select = (...params) => {\n         this.selectRow(...params);\n      };\n      // {fn} .handler_select\n      // the callback fn for our selectRow()\n      // We want this called when the .datacollection we are linked to\n      // emits an \"onChange\" event.\n\n      this.detatch();\n      baseView.filterHelper.on(\"filter.data\", this._handler_filterData);\n\n      // derive these from viewGrid\n      this.id = baseView.id;\n\n      /////\n      ///// For TEsting:\n      /////\n      // this.settings.showToolbar = 1;\n      // this.settings.isEditable = 1;\n      // this.settings.isExportable = 1;\n      // this.settings.gridFilter = {\n      //    filterOption: 1,\n      //    userFilterPosition: \"form\",\n      //    isGlobalToolbar: 1,\n      // };\n\n      // this.settings.detailsPage = \"some-uuid\";\n      // this.settings.detailTab = \"some_uuid_2\";\n      // this.settings.trackView = 1;\n      /////\n      ///// end testing\n      /////\n\n      this.columnSplitLeft = 0;\n      // {integer}\n      // Which column to \"split\"/\"freeze\" from the left side of the grid.\n\n      this.columnSplitRight = 0;\n      // {integer}\n      // The # columns to the right to freeze.\n\n      // this.datacollection = null;\n      // // {ABDataCollection}\n      // // The Webix DataCollection that manages the data we are displaying.\n\n      this.validationError = false;\n      // {bool}\n      // Has a Validation Error occured?\n\n      this.linkPage = baseView.linkPageHelper.component();\n      // {ABViewPropertyLinkPage}\n      //\n\n      const idTable = this.ids.table;\n      const ab = this.AB;\n\n      this.PopupExport = new ABPopupExport(idTable);\n      this.PopupExport.init(ab);\n      // {ABViewGridPopupExport}\n      // Popup for managing how to export our data.\n\n      this.PopupMassUpdateComponent = new ABPopupMassUpdateClass(this, idTable);\n      this.PopupMassUpdateComponent.init(ab);\n      // this.PopupMassUpdateComponent.on(\"\")\n      // {}\n      // The popup for performing a Mass Edit operation.\n\n      this.PopupSortDataTableComponent = new ABPopupSortField(idTable);\n      this.PopupSortDataTableComponent.init(ab);\n      this.PopupSortDataTableComponent.on(\"changed\", (sortOptions) => {\n         this.callbackSortData(sortOptions);\n      });\n      // {ABViewGridPopupSortFields}\n      // The popup for adding sort criteria to our grid.\n\n      this.skippableColumns = [\n         \"appbuilder_select_item\",\n         \"appbuilder_view_detail\",\n         \"appbuilder_view_track\",\n         \"appbuilder_view_edit\",\n         \"appbuilder_trash\",\n      ];\n      // {array}\n      // An array of column names that should be skipped from some of our\n      // event handlers.\n\n      // this.EditField = null;\n      // // {ABFieldXXX}\n      // // Which ABField is the focus of our PopupHeader menu?\n\n      // this.EditNode = null;\n      // // {HTML DOM}\n      // // The webix.$node where the ABField Header is that our PopupHeader\n      // // should be displayed at.\n\n      this.ignoreLocalSettings = false;\n      // {bool}\n      // should we ignore our local settings in our current context?\n      // (used in ABDesigner when our settings will change as we need to\n      // use those instead of the saved settings.)\n\n      this._gridSettings = null;\n      // {hash} { grid.id : [ {columnHeader}, {columnHeader} ...]}\n      // Keep a global copy of our local Grid settings, so we can optimize the header\n      // sizes.\n\n      this._isDatacollectionLoaded = false;\n   }\n\n   // {string}\n   // the unique key for ABViewGrids to store/retrieve their local settings\n   get keyStorageSettings() {\n      return \"abviewgrid_settings\";\n   }\n\n   detatch() {\n      this.view.filterHelper.removeAllListeners(\"filter.data\");\n      [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n         this.datacollection?.removeListener(key, this.handler_select);\n      });\n   }\n\n   /**\n    * @method getColumnIndex()\n    * return the Datatable.getColumnIndex() value\n    * @param {string} id\n    *        the uuid of the column we are referencing.\n    * @return {integer}\n    */\n   getColumnIndex(id) {\n      let indx = this.getDataTable().getColumnIndex(id);\n      if (!this.settings.massUpdate) {\n         // the index is 0 based. So if the massUpdate feature isn't\n         // enabled, we need to add 1 to the result so they look like\n         // a 1, 2, ...\n\n         indx++;\n      }\n      return indx;\n   }\n\n   uiDatatable() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const self = this;\n\n      let view = \"datatable\";\n\n      if (settings.isTreeDatable || settings.groupBy)\n         // switch datatable to support tree\n         view = \"treetable\";\n\n      let selectType = \"cell\";\n\n      if (!settings.isEditable && (settings.detailsPage || settings.editPage))\n         selectType = \"row\";\n\n      return {\n         view,\n         id: ids.datatable,\n         resizeColumn: { size: 10 },\n         resizeRow: { size: 10 },\n         prerender: false,\n         editable: settings.isEditable,\n         fixedRowHeight: false,\n         height: settings.height || 0,\n         editaction: \"custom\",\n         select: selectType,\n         footer:\n            // show footer when there are summary columns\n            settings.summaryColumns.length > 0 ||\n            settings.countColumns.length > 0,\n         tooltip: true,\n         // tooltip: {\n         //    // id: ids.tooltip,\n         //    template: (obj, common) => {\n         //       return this.toolTip(obj, common);\n         //    },\n         //    on: {\n         //       // When showing a larger image preview the tooltip sometime displays part of the image off the screen...this attempts to fix that problem\n         //       onBeforeRender: function () {\n         //          self.toolTipOnBeforeRender(this.getNode());\n         //       },\n         //       onAfterRender: function (data) {\n         //          self.toolTipOnAfterRender(this.getNode());\n         //       },\n         //    },\n         // },\n         dragColumn: true,\n         on: {\n            onBeforeSelect: function (data, preserve) {\n               if (self.skippableColumns.indexOf(data.column) != -1) {\n                  return false;\n               } else if (settings.isEditable) {\n                  const currObject = self.datacollection.datasource;\n                  const selectField = currObject.fields(\n                     (f) => f.columnName === data.column\n                  )[0];\n\n                  if (selectField == null) return true;\n\n                  const cellNode = this.getItemNode({\n                        row: data.row,\n                        column: data.column,\n                     }),\n                     rowData = this.getItem(data.row);\n\n                  return selectField.customEdit(rowData, null, cellNode);\n               } else if (!settings.detailsPage && !settings.editPage)\n                  return false;\n            },\n            onAfterSelect: (data, preserve) => {\n               // {ABObject} data\n               //            the selected object\n               // {bool} prevent\n               //        indicates whether the previous selection state should\n               //        be saved. (is multiselect and they are holding SHIFT)\n               if (this.settings.isEditable) {\n                  this.onAfterSelect(data, preserve);\n               }\n            },\n            // onBeforeEditStart: function (/*id*/) {\n            //    // Not sure what this is suposed to check, but this condition\n            //    // will always be false.\n            //    if (!this.getItem(id) == \"appbuilder_select_item\") return false;\n            // },\n            onCheck: function (row, col, val) {\n               // Update checkbox data\n               if (col == \"appbuilder_select_item\") {\n                  // do nothing because we will parse the table once we decide\n                  // if we are deleting or updating rows\n                  self.toggleUpdateDelete();\n               } else {\n                  if (settings.isEditable) {\n                     // if the colum is not the select item column move on to\n                     // the next step to save\n                     const state = {\n                        value: val,\n                     };\n                     const editor = {\n                        row: row,\n                        column: col,\n                        config: null,\n                     };\n\n                     self.onAfterEditStop(state, editor);\n                  } else {\n                     const node = this.getItemNode({\n                        row: row,\n                        column: col,\n                     });\n                     const checkbox = node.querySelector(\n                        'input[type=\"checkbox\"]'\n                     );\n\n                     if (val == 1) {\n                        checkbox.checked = false;\n                     } else {\n                        checkbox.checked = true;\n                     }\n                  }\n               }\n            },\n            onBeforeEditStop: function (state, editor) {\n               // Check if data loading is complete\n               const oldValue = state.old;\n               let newValue = state.value;\n               if (!Array.isArray(newValue)) newValue = [newValue];\n               if (\n                  oldValue != null &&\n                  oldValue != \"\" &&\n                  // If options does not load completely, then Webix returns state.value as ['', '', '']\n                  newValue.filter((val) => val != null && val != \"\").length <\n                     1 &&\n                  // Check if no data load to the option\n                  editor.getPopup?.().getList?.().data?.find({}).length < 1\n               ) {\n                  return false;\n               }\n            },\n            onAfterEditStop: (state, editor, ignoreUpdate) => {\n               if (this.validationError == false)\n                  this.onAfterEditStop(state, editor, ignoreUpdate);\n            },\n            onValidationError: function () {\n               this.validationError = true;\n            },\n            onValidationSuccess: function () {\n               this.validationError = false;\n            },\n\n            // We are sorting with server side requests now so we can remove this\n            // onAfterLoad: function () {\n            //    _logic.onAfterLoad();\n            // },\n            onColumnResize: function (\n               columnName,\n               newWidth,\n               oldWidth,\n               user_action\n            ) {\n               // if we resize the delete column we want to resize the last\n               // column but Webix will not allow since the column is split\n               const rightSplitItems = [\n                  \"appbuilder_view_detail\",\n                  \"appbuilder_view_track\",\n                  \"appbuilder_view_edit\",\n                  \"appbuilder_trash\",\n               ];\n\n               if (rightSplitItems.indexOf(columnName) != -1) {\n                  // Block events so we can leave the delete column alone\n                  this.blockEvent();\n                  // keeps original width\n                  this.setColumnWidth(columnName, oldWidth);\n                  this.unblockEvent();\n                  // Listen to events again\n\n                  // find the last column's config\n                  const column = self.getLastColumn();\n\n                  columnName = column.id;\n\n                  // determine if we are making the column larger or smaller\n                  if (newWidth < oldWidth) {\n                     newWidth = column.width + 40;\n                     // add 40 because there is not any more space to drag so we\n                     // will allow 40px increments\n                  } else {\n                     newWidth = column.width - (newWidth - 40);\n                     // take the column's width and subtrack the difference of\n                     // the expanded delet column drag\n                  }\n                  // we don't want columns to be smaller than 50 ?? do we ??\n                  // I could be wrong maybe a checkbox could be smaller so this\n                  // could change\n                  if (newWidth < 50) {\n                     newWidth = 50;\n                  }\n                  // minWidth is important because we are using fillspace:true\n                  column.minWidth = newWidth;\n                  // Sets the UI\n                  this.setColumnWidth(columnName, newWidth);\n               }\n               // Saves the new width\n               if (user_action) {\n                  self.onColumnResize(\n                     columnName,\n                     newWidth,\n                     oldWidth,\n                     user_action\n                  );\n               }\n            },\n            onRowResize: (rowId) => {\n               // V2: we no longer do anything onRowResize()\n               // before we saved the row height in the record.\n               // this.onRowResize(rowId);\n            },\n            onBeforeColumnDrag: (sourceId, event) =>\n               !(this.skippableColumns.indexOf(sourceId) !== -1),\n            onBeforeColumnDrop: (sourceId, targetId, event) =>\n               // Make sure we are not trying to drop onto one of our special\n               // columns ...\n               !(this.skippableColumns.indexOf(targetId) !== -1),\n            onAfterColumnDrop: (sourceId, targetId, event) =>\n               this.onAfterColumnDrop(sourceId, targetId, event),\n            // onAfterColumnShow: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnShow()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).showField(id);\n            // },\n            // onAfterColumnHide: function (id) {\n            //    // console.warn(\"!! ToDo: onAfterColumnHide()\");\n            //    // $$(self.webixUiId.visibleFieldsPopup).hideField(id);\n            // },\n\n            onHeaderClick: (id, e, node) => {\n               /* if (settings.configureHeaders) */\n               this.onHeaderClick(id, e, node);\n            },\n         },\n      };\n   }\n\n   uiFilter() {\n      return this.view.filterHelper.ui();\n\n      // make sure onFilterData is now .emit()ed instead of passing in a callback.\n   }\n\n   /**\n    * @method uiToolbar()\n    * Return the webix definition for the toolbar row for our Grids.\n    * @return {json}\n    */\n   uiToolbar() {\n      const ids = this.ids;\n      const self = this;\n\n      return {\n         view: \"toolbar\",\n         id: ids.toolbar,\n         hidden: true,\n         css: \"ab-data-toolbar\",\n         cols: [\n            {\n               view: \"button\",\n               id: ids.buttonMassUpdate,\n               css: \"webix_transparent\",\n               label: this.label(\"Edit\"),\n               icon: \"fa fa-pencil-square-o\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarMassUpdate(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonDeleteSelected,\n               css: \"webix_transparent\",\n               label: this.label(\"Delete\"),\n               icon: \"fa fa-trash\",\n               type: \"icon\",\n               disabled: true,\n               autowidth: true,\n               click: function () {\n                  self.toolbarDeleteSelected(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonFilter,\n               css: \"webix_transparent\",\n               label: this.label(\"Filters\"),\n               icon: \"fa fa-filter\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarFilter(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonSort,\n               css: \"webix_transparent\",\n               label: this.label(\"Sort\"),\n               icon: \"fa fa-sort\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarSort(this.$view);\n               },\n            },\n            {\n               view: \"button\",\n               id: ids.buttonExport,\n               css: \"webix_transparent\",\n               label: this.label(\"Export\"),\n               icon: \"fa fa-print\",\n               type: \"icon\",\n               autowidth: true,\n               click: function () {\n                  self.toolbarExport(this.$view);\n               },\n            },\n            {},\n            {\n               id: ids.globalSearchToolbar,\n               view: \"search\",\n               placeholder: this.label(\"Search...\"),\n               on: {\n                  onTimedKeyPress: () => {\n                     const searchText = $$(ids.globalSearchToolbar).getValue();\n\n                     this.view.filterHelper.externalSearchText(searchText);\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      const _uiGrid = {\n         id: this.ids.table,\n         type: \"space\",\n         borderless: true,\n         rows: [\n            {},\n            {\n               view: \"label\",\n               label: this.label(\"Select an object to load.\"),\n               inputWidth: 200,\n               align: \"center\",\n            },\n            {},\n         ],\n      };\n\n      const settings = this.settings;\n\n      if (this.datacollection || settings.dataviewID !== \"\") {\n         _uiGrid.padding = settings.padding;\n         _uiGrid.rows = [];\n         if (settings.showToolbar) {\n            _uiGrid.rows.push(this.uiToolbar());\n         }\n         if (this.settings.gridFilter.filterOption) {\n            _uiGrid.rows.push(this.uiFilter());\n         }\n\n         _uiGrid.rows.push(this.uiDatatable());\n      }\n\n      const _ui = super.ui([_uiGrid]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel = 2) {\n      if (AB) await super.init(AB);\n\n      const self = this;\n      const ids = this.ids;\n\n      // WORKAROUND : Where should we define this ??\n      // For include PDF.js\n      const abWebix = AB.Webix;\n\n      abWebix.codebase = \"\";\n      abWebix.cdn = \"/js/webix\";\n\n      // this shows the options to Hide, Filter, sort , etc...\n      // only in Designer?\n      // PopupHeaderEditComponent.init({\n      //    onClick: _logic.callbackHeaderEdit, // be notified when there is a change in the hidden fields\n      // });\n\n      // NOTE: register the onAfterRender() here, so it only registers\n      // one.\n      const $DataTable = this.getDataTable();\n\n      let throttleCustomDisplay = null;\n      let scrollStarted = null;\n\n      if (!$DataTable) return;\n\n      abWebix.extend($DataTable, abWebix.ProgressBar);\n\n      $DataTable.config.accessLevel = accessLevel;\n\n      if (accessLevel < 2) $DataTable.define(\"editable\", false);\n\n      const settings = this.settings;\n\n      const customDisplays = (data) => {\n         const CurrentObject = this.datacollection?.datasource;\n\n         if (!CurrentObject || !$DataTable.data) return;\n\n         const displayRecords = [];\n\n         const verticalScrollState = $DataTable.getScrollState().y,\n            rowHeight = $DataTable.config.rowHeight,\n            height =\n               $DataTable.$view.querySelector(\".webix_ss_body\").clientHeight,\n            startRecIndex = Math.floor(verticalScrollState / rowHeight),\n            endRecIndex = startRecIndex + $DataTable.getVisibleCount();\n\n         let index = 0;\n\n         $DataTable.data.order.each((id) => {\n            if (id != null && startRecIndex <= index && index <= endRecIndex)\n               displayRecords.push(id);\n\n            index++;\n         });\n\n         let editable = settings.isEditable;\n\n         if ($DataTable.config.accessLevel < 2) editable = false;\n\n         CurrentObject.customDisplays(\n            data,\n            this.AB._App,\n            $DataTable,\n            displayRecords,\n            editable\n         );\n      };\n\n      $DataTable.attachEvent(\"onAfterRender\", function (data) {\n         $DataTable.resize();\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n\n         AB.ClassUI.CYPRESS_REF($DataTable);\n         Object.keys(ids).forEach((key) => {\n            const $el = $$(ids[key]);\n            if ($el) {\n               AB.ClassUI.CYPRESS_REF($el);\n            }\n         });\n      });\n\n      // we have some data types that have custom displays that don't look\n      // right after scrolling large data sets we need to call customDisplays\n      // again\n      $DataTable.attachEvent(\"onScroll\", function () {\n         if (scrollStarted) clearTimeout(scrollStarted);\n\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         scrollStarted = setTimeout(() => {\n            customDisplays(this.data);\n         }, 1500);\n      });\n      $DataTable.attachEvent(\"onAfterScroll\", function () {\n         if (throttleCustomDisplay) clearTimeout(throttleCustomDisplay);\n\n         throttleCustomDisplay = setTimeout(() => {\n            if (scrollStarted) clearTimeout(scrollStarted);\n            customDisplays(this.data);\n         }, 350);\n      });\n\n      // Process our onItemClick events.\n      // this is a good place to check if our delete/trash icon was clicked.\n      $DataTable.attachEvent(\"onItemClick\", function (id, e, node) {\n         // make sure we have an object selected before processing this.\n         const dc = self.datacollection;\n         const CurrentObject = dc?.datasource;\n\n         if (!CurrentObject) return;\n\n         if (settings.isEditable === 0) {\n            const items = $DataTable.getItem(id);\n         }\n         // if this was our edit icon:\n         // console.log(e.target.className);\n         if (e === \"auto\" || e.target.className.indexOf(\"eye\") > -1) {\n            // View a Details Page:\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (e.target.className.indexOf(\"pencil\") > -1) {\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         } else if (e.target.className.indexOf(\"track\") > -1)\n            self.emit(\"object.track\", CurrentObject, id.row);\n         // App.actions.openObjectTrack(CurrentObject, id.row);\n         else if (e.target.className.indexOf(\"clear-combo-value\") > -1) {\n            const clearValue = {};\n\n            clearValue[id.column] = \"\";\n\n            const updateRow = async () => {\n               try {\n                  const response = await CurrentObject.model().update(\n                     id.row,\n                     clearValue\n                  );\n\n                  // console.log(response);\n               } catch (err) {\n                  self.AB.notify.developer(err, {\n                     context: \"ABViewGridComponent.onItemClick\",\n                     message: \"Error updating item\",\n                     obj: CurrentObject.toObj(),\n                     id: id.row,\n                  });\n               }\n            };\n\n            updateRow();\n         }\n         // if this was our trash icon:\n         else if (e.target.className.indexOf(\"trash\") > -1) {\n            // If the confirm popup is showing, then skip to show a new one\n            if (!this._deleteConfirmPopup) {\n               this._deleteConfirmPopup = abWebix.confirm({\n                  title: self.label(\"Delete data\"),\n                  text: self.label(\"Do you want to delete this row?\"),\n                  callback: (result) => {\n                     delete this._deleteConfirmPopup;\n                     if (result) {\n                        const deleteRow = async () => {\n                           try {\n                              const response =\n                                 await CurrentObject.model().delete(id.row);\n\n                              if (response.numRows > 0) {\n                                 $DataTable.remove(id);\n                                 $DataTable.clearSelection();\n                              } else\n                                 abWebix.alert({\n                                    text: self.label(\n                                       \"No rows were effected.  This does not seem right.\"\n                                    ),\n                                 });\n                           } catch (err) {\n                              self.AB.notify.developer(err, {\n                                 context: \"ABViewGridComponent.onItemClick\",\n                                 message: \"Error deleting item\",\n                                 obj: CurrentObject.toObj(),\n                                 id: id.row,\n                              });\n\n                              //// TODO: what do we do here?\n                           }\n                        };\n\n                        deleteRow();\n                     }\n\n                     $DataTable.clearSelection();\n\n                     return true;\n                  },\n               });\n            }\n         } else if (settings.detailsPage.length) {\n            // If an icon wasn't selected but a details page is set\n            // view the details page\n            self.changePage(dc, id, settings.detailsPage);\n            self.toggleTab(settings.detailsTab, this);\n         } else if (settings.editPage.length) {\n            // If an icon wasn't selected but an edit page is set\n            // view the edit page\n            self.changePage(dc, id, settings.editPage);\n            self.toggleTab(settings.editTab, this);\n         }\n      });\n\n      // ABViewGrid Original init();\n      if (settings.showToolbar) {\n         if (\n            settings.massUpdate ||\n            settings.isSortable ||\n            settings.isExportable ||\n            (settings.gridFilter &&\n               settings.gridFilter.filterOption &&\n               settings.gridFilter.userFilterPosition === \"toolbar\")\n         )\n            $$(ids.toolbar).show();\n\n         if (!settings.massUpdate) {\n            $$(ids.buttonMassUpdate).hide();\n            $$(ids.buttonDeleteSelected).hide();\n         }\n\n         if (!settings.allowDelete) $$(ids.buttonDeleteSelected).hide();\n\n         if (settings.gridFilter) {\n            if (\n               settings.gridFilter.filterOption !== 1 ||\n               settings.gridFilter.userFilterPosition !== \"toolbar\"\n            )\n               $$(ids.buttonFilter).hide();\n\n            if (\n               settings.gridFilter.filterOption === 3 &&\n               settings.gridFilter.globalFilterPosition === \"single\"\n            )\n               $DataTable.hide();\n\n            if (settings.gridFilter.isGlobalToolbar)\n               $$(ids.globalSearchToolbar).show();\n            else $$(ids.globalSearchToolbar).hide();\n\n            if (settings.gridFilter.filterOption)\n               this.view.filterHelper.init(this.AB);\n         }\n\n         if (!settings.isSortable) $$(ids.buttonSort).hide();\n\n         if (!settings.isExportable) $$(ids.buttonExport).hide();\n      }\n\n      if (settings.hideHeader) this.hideHeader();\n\n      const dc =\n         this.datacollection || this.AB.datacollectionByID(settings.dataviewID);\n\n      if (!this._isDatacollectionLoaded) this.datacollectionLoad(dc);\n\n      // Make sure\n      this._gridSettings =\n         this._gridSettings ||\n         (await this.AB.Storage.get(this.keyStorageSettings)) ||\n         {};\n\n      if (dc?.datasource) {\n         // TRANSITION: ABViewGrid_orig line 862 ...\n\n         this.linkPage.init({\n            view: this.view,\n            datacollection: dc,\n         });\n\n         this.refreshHeader();\n      }\n   }\n\n   /**\n    * @method busy()\n    * Indicate that our datatable is currently busy loading/processing\n    * data.\n    */\n   busy() {\n      this.getDataTable()?.showProgress?.({ type: \"icon\" });\n   }\n\n   /**\n    * @method callbackFilterData()\n    * Process the provided filter options from our filterHelper.\n    * @param {fn} fnFilter\n    *        A function that returns true/false for each row of data\n    *        to determine if is should exist.\n    * @param {array} filterRules\n    *        Any Filter Rules added by the user.\n    */\n   callbackFilterData(fnFilter, filterRules = []) {\n      const ids = this.ids;\n      const $ButtonFilter = $$(ids.buttonFilter);\n\n      if ($ButtonFilter) {\n         const onlyFilterRules = this.view.filterHelper.filterRules();\n\n         $ButtonFilter.define(\"badge\", onlyFilterRules?.rules?.length ?? 0);\n         $ButtonFilter.refresh();\n      }\n\n      const dc = this.datacollection;\n\n      dc.filterCondition(filterRules);\n      dc.reloadData();\n   }\n\n   async callbackSortData(sortRules = []) {\n      const $buttonSort = $$(this.ids.buttonSort);\n\n      $buttonSort.define(\"badge\", sortRules.length || null);\n      $buttonSort.refresh();\n\n      const gridElem = this.getDataTable();\n\n      if (gridElem.data.find({}).length < gridElem.data.count()) {\n         try {\n            // NOTE: Webix's client sorting does not support dynamic loading.\n            // If the data does not be loaded, then load all data.\n            await this.datacollection.reloadData(0, 0);\n         } catch (err) {\n            this.AB.notify.developer(err, {\n               context:\n                  \"ABViewGrid:callbackSortData(): Error perform datacollection.reloadData()\",\n            });\n         }\n      }\n\n      // wait until the grid component will done to repaint UI\n      setTimeout(() => {\n         gridElem.sort((a, b) => this.PopupSortDataTableComponent.sort(a, b));\n      }, 777);\n   }\n\n   /**\n    * @method changePage()\n    * Helper method to switch to another View.\n    * @param {ABDataCollection} dv\n    *        The DataCollection we are working with.\n    * @param {obj} rowItem\n    *        the { row:#, column:{string} } of the item that was clicked.\n    * @param {ABViewPage.uuid} page\n    *        The .uuid of the ABViewPage/ABViewTab we are to swtich to.\n    *\n    */\n   changePage(dv, rowItem, page) {\n      const rowId = rowItem?.row ?? null;\n\n      // Set cursor to data view\n      if (dv) dv.setCursor(rowId);\n\n      // Pass settings to link page module\n      if (this.linkPage) this.linkPage.changePage(page, rowId);\n      else super.changePage(page);\n   }\n\n   columnConfig(headers = []) {\n      this.settings.columnConfig = headers;\n   }\n   /**\n    * @method datacollectionLoad()\n    * Assign an ABDataCollection to this component to use instead of any\n    * provided .dataviewID in our settings.\n    * NOTE: this primarily happens in the ABDesigner's Object Workspace.\n    * @param {ABDataCollection} dc\n    */\n   datacollectionLoad(dc) {\n      const oldDC = this.datacollection;\n      this.datacollection = dc;\n\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      if ($DataTable) {\n         // preventing too many handlers\n         if (!this.__handler_dc_busy) {\n            this.__handler_dc_busy = () => {\n               this.busy();\n            };\n\n            this.__handler_dc_ready = () => {\n               this.ready();\n               this.populateGroupData();\n            };\n\n            this.__handler_dc_loadData = () => {\n               this.populateGroupData();\n            };\n         }\n\n         if (oldDC) {\n            // remove our listeners from the previous DC\n            oldDC.removeListener(\"initializingData\", this.__handler_dc_busy);\n            oldDC.removeListener(\"initializedData\", this.__handler_dc_ready);\n            oldDC.removeListener(\"loadData\", this.__handler_dc_loadData);\n         }\n\n         if (dc) {\n            if (dc.datacollectionLink && dc.fieldLink)\n               dc.bind($DataTable, dc.datacollectionLink, dc.fieldLink);\n            else dc.bind($DataTable);\n\n            // making sure we only have 1 registered listener on this dc\n            dc.removeListener(\"initializingData\", this.__handler_dc_busy);\n            dc.on(\"initializingData\", this.__handler_dc_busy);\n            dc.removeListener(\"initializedData\", this.__handler_dc_ready);\n            dc.on(\"initializedData\", this.__handler_dc_ready);\n            dc.removeListener(\"loadData\", this.__handler_dc_loadData);\n            dc.on(\"loadData\", this.__handler_dc_loadData);\n            this.grouping();\n\n            this._isDatacollectionLoad = true;\n         } else $DataTable.unbind();\n\n         // Be sure to pass on our CurrentObject to our dependent components.\n         if (CurrentObject) {\n            this.view.filterHelper.objectLoad(CurrentObject);\n            this.PopupMassUpdateComponent.objectLoad(\n               CurrentObject,\n               this.getDataTable()\n            );\n            this.PopupSortDataTableComponent.objectLoad(CurrentObject);\n\n            this.PopupExport.objectLoad(CurrentObject);\n            this.PopupExport.dataCollectionLoad(dc);\n            this.PopupExport.setGridComponent(this.getDataTable());\n            this.PopupExport.setHiddenFields(this.settings.hiddenFields);\n            this.PopupExport.setFilename(this.view.label);\n         }\n      }\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * disable the update or delete buttons in the toolbar if there no items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   disableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.disable();\n      $$(this.ids.buttonDeleteSelected)?.disable();\n      // externally indicate that no rows are selected\n      this.emit(\"selection.cleared\");\n   }\n\n   /**\n    * @function enableUpdateDelete\n    *\n    * enable the update or delete buttons in the toolbar if there are any items selected\n    * we will make this externally accessible so we can call it from within the datatable component\n    */\n   enableUpdateDelete() {\n      $$(this.ids.buttonMassUpdate)?.enable();\n      $$(this.ids.buttonDeleteSelected)?.enable();\n      // externally indicate that a row has been selected\n      this.emit(\"selection\");\n   }\n\n   freezeDeleteColumn() {\n      // we are going to always freeze the delete column if the datatable\n      // is wider than the container so it is easy to get to\n      return this.getDataTable().define(\"rightSplit\", this.columnSplitRight);\n   }\n\n   /**\n    * @method getDataTable()\n    * return the webix grid component.\n    * @return {webix.grid}\n    */\n   getDataTable() {\n      return $$(this.ids.datatable);\n   }\n\n   /**\n    * @method getLastColumn\n    * return the last column of a datagrid that is resizeable\n    */\n   getLastColumn() {\n      const $DataTable = this.getDataTable();\n\n      let lastColumn = {};\n\n      // Loop through each columns config to find out if it is in the split 1 region and set it as the last item...then it will be overwritten by next in line\n      $DataTable.eachColumn((columnId) => {\n         const columnConfig = $DataTable.getColumnConfig(columnId);\n\n         if (columnConfig.split === 1) lastColumn = columnConfig;\n      });\n\n      return lastColumn;\n   }\n\n   /**\n    * @method grouping()\n    * perform any grouping operations\n    */\n   grouping() {\n      if (!this.settings.groupBy) return;\n\n      const $treetable = this.getDataTable();\n\n      // map: {\n      //     votes:[\"votes\", \"sum\"],\n      //     title:[\"year\"]\n      // }\n      const baseGroupMap = {};\n      const CurrentObject = this.datacollection.datasource;\n\n      CurrentObject.fields().forEach((f) => {\n         switch (f.key) {\n            case \"number\":\n               baseGroupMap[f.columnName] = [f.columnName, \"sum\"];\n\n               break;\n\n            case \"calculate\":\n            case \"formula\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData) return 0;\n\n                     let sum = 0;\n\n                     listData.forEach((r) => {\n                        // we only want numbers returned so pass `true` as third param\n                        // to signify that this is part of a grouping row\n                        sum += f.format(r, false, true) * 1;\n                     });\n\n                     // simulate reformat from ABFieldFormulaCore\n                     if (!f.fieldLink || f.fieldLink.key === \"calculate\")\n                        return sum;\n                     else {\n                        const rowDataFormat = {};\n\n                        rowDataFormat[f.fieldLink.columnName] = sum;\n\n                        return f.fieldLink.format(rowDataFormat);\n                     }\n                  },\n               ];\n\n               break;\n\n            case \"connectObject\":\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  (prop, listData) => {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const valRelation = r[f.relationName()];\n\n                        // array\n                        if (valRelation?.length) count += valRelation.length;\n                        // object\n                        else if (valRelation) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n\n            default:\n               baseGroupMap[f.columnName] = [\n                  f.columnName,\n                  function (prop, listData) {\n                     if (!listData || !listData.length) return 0;\n\n                     let count = 0;\n\n                     listData.forEach((r) => {\n                        const val = prop(r);\n\n                        // count only exists data\n                        if (val) count += 1;\n                     });\n\n                     return count;\n                  },\n               ];\n\n               break;\n         }\n      });\n\n      // set group definition\n      // $DataTable.define(\"scheme\", {\n      //    $group: {\n      //       by: settings.groupBy,\n      //       map: groupMap\n      //    }\n      // });\n\n      // NOTE: https://snippet.webix.com/e3a2bf60\n      let groupBys = (this.settings.groupBy || \"\")\n         .split(\",\")\n         .map((g) => g.trim());\n      // Reverse the array NOTE: call .group from child to root\n      groupBys = groupBys.reverse();\n\n      groupBys.forEach((colName, gIndex) => {\n         const groupMap = this.AB.cloneDeep(baseGroupMap);\n\n         let by;\n\n         // Root\n         if (gIndex === groupBys.length - 1) by = colName;\n         // Sub groups\n         else {\n            by = (row) => {\n               let byValue = row[colName];\n\n               for (let i = gIndex + 1; i < groupBys.length; i++) {\n                  byValue = `${row[groupBys[i]]} - ${byValue}`;\n               }\n\n               return byValue;\n            };\n\n            // remove parent group data\n            groupBys.forEach((gColName) => {\n               if (gColName !== colName) groupMap[gColName] = [gColName];\n            });\n         }\n\n         $treetable.data.group({\n            by: by,\n            map: groupMap,\n         });\n      });\n   }\n\n   hideHeader() {\n      const $DataTable = this.getDataTable();\n\n      $DataTable.define(\"header\", false);\n      $DataTable.refresh();\n   }\n\n   /**\n    * @function onAfterColumnDrop\n    * When an editor drops a column to save a new column order\n    * @param {string} sourceId\n    *        the columnName of the item dragged\n    * @param {string} targetId\n    *        the columnName of the item dropped on\n    * @param {event} event\n    */\n   async onAfterColumnDrop(sourceId, targetId, event) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const settings = this.settings;\n      const columnConfig = this.localSettings();\n\n      // Reorder our current columnConfig\n      // We know what was moved and what item it has replaced/pushed forward\n      // so first we want to splice the item moved out of the array of fields\n      // and store it so we can put it somewhere else\n      let itemMoved = null;\n      let oPos = 0; // original position\n\n      for (let i = 0; i < columnConfig.length; i++)\n         if (columnConfig[i].id == sourceId) {\n            itemMoved = columnConfig[i];\n            columnConfig.splice(i, 1);\n            oPos = i;\n\n            break;\n         }\n      // once we have removed/stored it we can find where its new position\n      // will be by looping back through the array and finding the item it\n      // is going to push forward\n      for (let j = 0; j < columnConfig.length; j++)\n         if (columnConfig[j].id == targetId) {\n            // if the original position was before the new position we will\n            // follow webix's logic that the drop should go after the item\n            // it was placed on\n            if (oPos <= j) j++;\n\n            columnConfig.splice(j, 0, itemMoved);\n\n            break;\n         }\n\n      // special case: dropped on end and need to update .fillspace\n      // if (j == columnConfig.length - 1) {\n      //    if (columnConfig[j - 1].fillspace) {\n      //       columnConfig[j - 1].fillspace = false;\n      //       columnConfig[j].fillspace = true;\n      //    }\n      // }\n\n      // if we allow local changes\n      this.localSettings(columnConfig);\n\n      if (settings.saveLocal) this.localSettingsSave();\n\n      // Now emit this event, in case an external object is wanting to\n      // respond to this: ABDesigner.objectBuilder, Interface  Designer,\n      // we send back an array[ ABField.id, ...] in the order we have\n      // them.\n      this.emit(\n         \"column.order\",\n         columnConfig.map((c) => c.fieldID)\n      );\n\n      this.refreshHeader();\n\n      // CurrentObject.fieldReorder(sourceId, targetId)\n      //    .then(() => {\n      //       // reset each column after a drop so we do not have multiple fillspace and minWidth settings\n      //       var editiable = settings.isEditable;\n      //       if ($DataTable.config.accessLevel < 2) {\n      //          editiable = false;\n      //       }\n      //       var columnHeaders = CurrentObject.columnHeaders(true, editiable);\n      //       columnHeaders.forEach(function (col) {\n      //          if (col.id == sourceId && col.fillspace == true) {\n      //             columnHeader.fillspace = false;\n      //             columnHeader.minWidth = columnHeader.width;\n      //          }\n      //       });\n\n      //       _logic.callbacks.onColumnOrderChange(CurrentObject);\n      //       // freeze columns:\n      //       let frozenColumnID =\n      //          settings.frozenColumnID != null\n      //             ? settings.frozenColumnID\n      //             : CurrentObject.workspaceFrozenColumnID;\n      //       if (frozenColumnID != \"\") {\n      //          $DataTable.define(\n      //             \"leftSplit\",\n      //             $DataTable.getColumnIndex(frozenColumnID) + columnSplitLeft\n      //          );\n      //       } else {\n      //          $DataTable.define(\"leftSplit\", columnSplitLeft);\n      //       }\n      //       _logic.freezeDeleteColumn();\n      //       $DataTable.refreshColumns();\n      //    })\n      //    .catch((err) => {\n      //       OP.Error.log(\"Error saving new column order:\", {\n      //          error: err,\n      //       });\n      //    });\n   }\n\n   /**\n    * @function onAfterEditStop\n    * When an editor is finished.\n    * @param {json} state\n    * @param {} editor\n    * @param {} ignoreUpdate\n    * @return\n    */\n   async onAfterEditStop(state, editor, ignoreUpdate) {\n      // state:   {value: \"new value\", old: \"old value\"}\n      // editor:  { column:\"columnName\", row:ID, value:'value', getInputNode:fn(), config:{}, focus: fn(), getValue: fn(), setValue: function, getInputNode: function, render: function…}\n\n      const $DataTable = this.getDataTable();\n\n      // if you don't edit an empty cell we just need to move on\n      if (\n         (!state.old && state.value === \"\") ||\n         (state.old === \"\" && state.value === \"\")\n      ) {\n         $DataTable.clearSelection();\n\n         return false;\n      }\n\n      if (editor.config)\n         switch (editor.config.editor) {\n            case \"number\":\n               state.value = parseFloat(state.value);\n\n               break;\n\n            case \"datetime\":\n               state.value = state.value.getTime();\n\n               if (state && state.old && state.old.getTime)\n                  state.old = state.old.getTime();\n\n               break;\n\n            default:\n            // code block\n         }\n\n      if (state.value !== state.old) {\n         const item = $DataTable?.getItem(editor.row);\n\n         item[editor.column] = state.value;\n\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid\");\n         $DataTable.removeCellCss(item.id, editor.column, \"webix_invalid_cell\");\n\n         const CurrentObject = this.datacollection.datasource;\n         const validator = CurrentObject.isValidData(item);\n\n         if (validator.pass()) {\n            //// Question: do we submit full item updates?  or just patches?\n            // IF Patch:\n            // var patch = {};\n            // patch.id = item.id;\n            // patch[editor.column] = item[editor.column];\n            // await CurrentObject.model().update(item.id, patch)\n\n            const ab = this.AB;\n\n            try {\n               await CurrentObject.model().update(item.id, item);\n\n               if ($DataTable.exists(editor.row)) {\n                  $DataTable.updateItem(editor.row, item);\n                  $DataTable.clearSelection();\n                  $DataTable.refresh(editor.row);\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  context: \"ABViewGrid:onAfterEditStop(): Error saving item\",\n                  item,\n                  editor,\n                  state,\n                  object: CurrentObject.toObj(),\n               });\n\n               $DataTable.clearSelection();\n\n               if (\n                  ab.Validation.isGridValidationError(\n                     err,\n                     editor.row,\n                     $DataTable\n                  )\n               ) {\n                  // Do we reset the value?\n                  // item[editor.column] = state.old;\n                  // $DataTable.updateItem(editor.row, item);\n               } else {\n                  // this was some other Error!\n               }\n            }\n            // CurrentObject.model()\n            //    .update(item.id, item)\n            //    .then(() => {\n            //       if ($DataTable.exists(editor.row)) {\n            //          $DataTable.updateItem(editor.row, item);\n            //          $DataTable.clearSelection();\n            //          $DataTable.refresh(editor.row);\n            //       }\n            //    })\n            //    .catch((err) => {\n            //       OP.Error.log(\"Error saving item:\", {\n            //          error: err\n            //       });\n\n            //       $DataTable.clearSelection();\n            //       if (\n            //          OP.Validation.isGridValidationError(\n            //             err,\n            //             editor.row,\n            //             $DataTable\n            //          )\n            //       ) {\n            //          // Do we reset the value?\n            //          // item[editor.column] = state.old;\n            //          // $DataTable.updateItem(editor.row, item);\n            //       } else {\n            //          // this was some other Error!\n            //       }\n            //    });\n         } else validator.updateGrid(editor.row, $DataTable);\n      } else $DataTable.clearSelection();\n\n      return false;\n\n      // var item = $$(self.webixUiId.objectDatatable).getItem(editor.row);\n\n      // self.updateRowData(state, editor, ignoreUpdate)\n      //    .fail(function (err) { // Cached\n      //       item[editor.column] = state.old;\n      //       $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       $$(self.webixUiId.objectDatatable).refresh(editor.row);\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    })\n      //    .then(function (result) {\n      //       if (item) {\n      //          item[editor.column] = state.value;\n\n      //          if (result && result.constructor.name === 'Cached' && result.isUnsync())\n      //             item.isUnsync = true;\n\n      //          $$(self.webixUiId.objectDatatable).updateItem(editor.row, item);\n      //       }\n\n      //       // TODO : Message\n\n      //       $$(self.webixUiId.objectDatatable).hideProgress();\n      //    });\n   }\n\n   /**\n    * @function onAfterSelect\n    * This is when a user clicks on a cell.  We use the onAfterSelect to\n    * trigger a normal .editCell() if there isn't a custom editor for this field.\n    * @param {json} data webix cell data\n    * @return\n    */\n   onAfterSelect(data /*, preserve */) {\n      // data: {row: 1, column: \"name\", id: \"1_name\", toString: function}\n      // data.row: ABObject.id\n      // data.column => columnName of the field\n\n      // Normal update data\n      this.getDataTable()?.editCell(data.row, data.column);\n   }\n\n   /**\n    * @function onColumnResizeResize\n    * This is when a user adjusts the size of a column\n    * @param {} columnName\n    * @param {int} newWidth\n    * @param {int} oldWidth\n    * @param {} user_action\n    * @return\n    */\n   async onColumnResize(columnName, newWidth, oldWidth, user_action) {\n      // update the settings\n\n      let requireRefresh = false;\n\n      const ab = this.AB;\n\n      if (newWidth < 30) {\n         newWidth = 30;\n         requireRefresh = true;\n\n         ab.Webix.message({\n            type: \"info\",\n            text: this.label(\"minimum column width is {0}\", [30]),\n            expire: 1000,\n         });\n      }\n\n      const localSettings = this.localSettings();\n\n      if (localSettings) {\n         const header = localSettings.find((h) => h.id == columnName);\n\n         if (header) {\n            header.width = newWidth;\n\n            delete header.adjust;\n         }\n      }\n\n      this.localSettings(localSettings);\n\n      if (this.settings.saveLocal) {\n         await this.localSettingsSave();\n         // for (const item in GridSettings) {\n         //    GridSettings[item].forEach((item) => {\n         //       // we cannot include field info because of the cicular structure\n         //       if (item?.footer?.field) {\n         //          delete item.footer.field;\n         //       }\n         //    });\n         // }\n         // await this.AB.Storage.set(this.keyStorageSettings, GridSettings);\n      }\n\n      // refresh the display\n      if (requireRefresh) this.refreshHeader();\n\n      this.freezeDeleteColumn();\n\n      // this.getDataTable().refreshColumns();\n\n      // TODO: allow external app to respond in special cases:\n      // eg: ABDesigner object workspace, interface builder, etc...\n      this.emit(\"column.resize\", columnName, newWidth, oldWidth);\n   }\n\n   /**\n    * @method onHeaderClick\n    * process the user clicking on the header for one of our columns.\n    */\n   onHeaderClick(id, e, node) {\n      if (this.skippableColumns.indexOf(id.column) !== -1) return false;\n\n      // save our EditNode & EditField:\n      // this.EditNode = node;\n\n      const EditField = this.datacollection.datasource.fields(\n         (f) => f.columnName === id.column\n      )[0];\n      // if (this.EditField) {\n      //    // show the popup\n      //    PopupHeaderEditComponent.show(node, this.EditField);\n      // }\n\n      this.emit(\"column.header.clicked\", node, EditField);\n\n      return false;\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      super.onShow();\n\n      // make sure our grid is properly .adjust()ed to the screen.\n      this.getDataTable()?.adjust();\n\n      const dv = this.datacollection;\n\n      if (dv)\n         [\"changeCursor\", \"cursorStale\", \"cursorSelect\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: this.handler_select.bind(this),\n            });\n         });\n   }\n\n   /**\n    * @method ready()\n    * Indicate that our datatable is currently ready for operation.\n    */\n   ready() {\n      const dc = this.datacollection;\n      if (\n         this.isCustomGroup &&\n         dc?.dataStatus != dc?.dataStatusFlag.initialized\n      )\n         return;\n\n      this.getDataTable()?.hideProgress?.();\n   }\n\n   /**\n    * @function refreshHeader()\n    *\n    * refresh the header for the table apart from the refresh() command\n    * @param {bool} ignoreLocal\n    *        Should we ignore our local settings and build directly from\n    *        our config settings?\n    */\n   refreshHeader(ignoreLocal = this.ignoreLocal) {\n      // columnSplitRight = 0;\n      // wait until we have an Object defined:\n      const CurrentObject = this.datacollection.datasource;\n\n      if (!CurrentObject) return;\n\n      const ids = this.ids;\n      const $DataTable = $$(ids.datatable);\n\n      if (!$DataTable) return;\n\n      const accessLevel = $DataTable.config.accessLevel;\n\n      $DataTable.define(\"leftSplit\", 0);\n      $DataTable.define(\"rightSplit\", 0);\n\n      let rowHeight = 0;\n\n      CurrentObject.imageFields().forEach((image) => {\n         const settings = image.getSettings();\n\n         if (settings.useHeight && settings.imageHeight > rowHeight)\n            rowHeight = settings.imageHeight;\n      });\n\n      if (rowHeight) $DataTable.define(\"rowHeight\", rowHeight);\n\n      // $DataTable.clearAll();\n\n      const settings = this.settings;\n\n      let editable = settings.isEditable;\n\n      if ($DataTable.config.accessLevel < 2) editable = false;\n\n      //// update DataTable structure:\n      // get column list from our local settings\n      const objColumnHeaders = CurrentObject.columnHeaders(\n         true,\n         editable,\n         // TRANSITION: moving these from .columnHeaders() to here:\n         [], //settings.summaryColumns,\n         [], //settings.countColumns,\n         [] //settings.hiddenFields\n      );\n\n      let columnHeaders = this.localSettings();\n\n      const ab = this.AB;\n\n      // if that is empty, pull from our settings.columnConfig\n      if (!columnHeaders || ignoreLocal)\n         columnHeaders = ab.cloneDeep(this.settings.columnConfig);\n\n      // if that is empty for some reason, rebuild from our CurrentObject\n      if (columnHeaders.length === 0) columnHeaders = objColumnHeaders;\n\n      // sanity check:\n      // columnHeaders can't contain a column that doesn't exist in objColumHeaders:\n      // (eg: a field might have been removed but localStorage doesn't know that )\n      const objColumnHeaderIDs = objColumnHeaders.map((h) => h.fieldID);\n\n      columnHeaders = columnHeaders.filter(\n         (c) => objColumnHeaderIDs.indexOf(c.fieldID) > -1\n      );\n\n      // default our columnConfig values to our columnHeaders:\n      columnHeaders.forEach((c) => {\n         // we want to overwrite our default settings with anything stored\n         // in local storage\n         const origCol = objColumnHeaders.find((h) => h.fieldID === c.fieldID);\n\n         // none of our functions can be stored in localStorage, so scan\n         // the original column and attach any template functions to our\n         // stashed copy.\n         // also the suggest for selects and connected fields may contain a\n         // function so go ahead and copy the original suggest to the column\n         Object.keys(origCol).forEach((k) => {\n            if (typeof origCol[k] === \"function\" || k === \"suggest\") {\n               c[k] = origCol[k];\n            }\n         });\n\n         const f = CurrentObject.fieldByID(c.fieldID);\n\n         if (!f) return;\n\n         // if it's a hidden field:\n         if (settings.hiddenFields.indexOf(f.columnName) > -1) {\n            c.hidden = true;\n         }\n\n         // add summary footer:\n         if (settings.summaryColumns.indexOf(f.id) > -1) {\n            if (f.key == \"calculate\" || f.key == \"formula\")\n               c.footer = { content: \"totalColumn\", field: f };\n            else c.footer = { content: \"summColumn\" };\n         }\n         // or add the count footer\n         else if (settings.countColumns.indexOf(f.id) > -1)\n            c.footer = { content: \"countColumn\" };\n      });\n\n      let localSettings = this.localSettings();\n\n      if (!localSettings || ignoreLocal) {\n         this.localSettings(columnHeaders);\n\n         localSettings = columnHeaders;\n      }\n\n      columnHeaders = ab.cloneDeep(localSettings);\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      columnHeaders.forEach((col) => {\n         col.fillspace = false;\n\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (col.validationRules) {\n            if (typeof col.validationRules === \"string\") {\n               col.validationRules = JSON.parse(col.validationRules);\n            }\n\n            if (col.validationRules.length) {\n               const validationUI = [];\n\n               // there could be more than one so lets loop through and build the UI\n               col.validationRules.forEach((rule) => {\n                  const Filter = ab.filterComplexNew(\n                     col.id /*+ \"_\" + webix.uid()*/\n                  );\n                  // add the new ui to an array so we can add them all at the same time\n                  validationUI.push(Filter.ui);\n                  // store the filter's info so we can assign values and settings after the ui is rendered\n                  fieldValidations.push({\n                     filter: Filter,\n                     view: Filter.ids.querybuilder,\n                     columnName: col.id,\n                     validationRules: rule.rules,\n                     invalidMessage: rule.invalidMessage,\n                  });\n               });\n\n               // create a unique view id for popup\n               const popUpId =\n                  ids.rules + \"_\" + col.id; /* + \"_\" + webix.uid() */\n\n               // store the popup ids so we can remove the later\n               rulePops.push(popUpId);\n               // add the popup to the UI but don't show it\n               ab.Webix.ui({\n                  view: \"popup\",\n                  css: \"ab-rules-popup\",\n                  id: popUpId,\n                  body: {\n                     rows: validationUI,\n                  },\n               });\n            }\n         }\n\n         // group header\n         if (\n            settings.groupBy &&\n            (settings.groupBy || \"\").indexOf(col.id) > -1\n         ) {\n            const groupField = CurrentObject.fieldByID(col.fieldID);\n\n            if (groupField)\n               col.template = (obj, common) => {\n                  // return common.treetable(obj, common) + obj.value;\n                  if (obj.$group) {\n                     const rowData = ab.cloneDeep(obj);\n\n                     rowData[groupField.columnName] = rowData.value;\n\n                     return (\n                        common.treetable(obj, common) +\n                        groupField.format(rowData)\n                     );\n                  } else return groupField.format(obj);\n               };\n         }\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(CurrentObject.application);\n            f.filter.fieldsLoad(CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $DataTable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $DataTable.$view.complexValidations = complexValidations;\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n               let invalidMessage = \"\";\n\n               $DataTable.$view.complexValidations[key].forEach((filter) => {\n                  // convert rowData from { colName : data } to { id : data }\n                  const newData = {};\n\n                  (CurrentObject.fields() || []).forEach((field) => {\n                     newData[field.id] = data[field.columnName];\n                  });\n\n                  // for the case of \"this_object\" conditions:\n                  if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n                  // use helper funtion to check if valid\n                  const ruleValid = filter.filters(newData);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     invalidMessage = filter.invalidMessage;\n                  }\n               });\n\n               // we also need to define an error message\n               if (!isValid)\n                  ab.Webix.message({\n                     type: \"error\",\n                     text: invalidMessage,\n                  });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $DataTable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $DataTable.config.rulePops = rulePops;\n         $DataTable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($DataTable.config.rulePops)\n            $DataTable.config.rulePops.forEach((popup) => {\n               if ($$(popup)) $$(popup).destructor();\n            });\n         // remove any validation rules from the previous table\n         $DataTable.define(\"rules\", {});\n         $DataTable.refresh();\n      }\n\n      const addedColumns = [];\n      // {array} the .id of the columnHeaders we add based upon our settings.\n      // this will help us pick the lastColumn that is part of the\n      // object.\n\n      if (settings.labelAsField) {\n         // console.log(CurrentObject);\n         columnHeaders.unshift({\n            id: \"appbuilder_label_field\",\n            header: \"Label\",\n            fillspace: true,\n            template: (obj) => CurrentObject.displayData(obj),\n            // css: { 'text-align': 'center' }\n         });\n         addedColumns.push(\"appbuilder_label_field\");\n      }\n\n      if (settings.massUpdate && accessLevel === 2) {\n         columnHeaders.unshift({\n            id: \"appbuilder_select_item\",\n            header: { content: \"masterCheckbox\", contentId: \"mch\" },\n            width: 40,\n            template: \"<div class='singleSelect'>{common.checkbox()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         this.columnSplitLeft = 1;\n         addedColumns.push(\"appbuilder_select_item\");\n      } else this.columnSplitLeft = 0;\n\n      if (settings.detailsPage !== \"\" && !settings.hideButtons) {\n         columnHeaders.push({\n            id: \"appbuilder_view_detail\",\n            header: \"\",\n            width: 40,\n            template: (obj, common) =>\n               \"<div class='detailsView'><span class='webix_icon fa fa-eye'></span></div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_detail\");\n      }\n\n      if (settings.trackView !== 0 && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_view_track\",\n            header: \"\",\n            width: 40,\n            template:\n               \"<div class='track'><span class='track fa fa-history'></span></div>\",\n            css: { \"text-align\": \"center\", cursor: \"pointer\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_track\");\n      }\n\n      if (\n         settings.editPage !== \"\" &&\n         !settings.hideButtons &&\n         accessLevel === 2\n      ) {\n         columnHeaders.push({\n            id: \"appbuilder_view_edit\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='edit'>{common.editIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_view_edit\");\n      }\n\n      if (settings.allowDelete && accessLevel === 2) {\n         columnHeaders.push({\n            id: \"appbuilder_trash\",\n            header: \"\",\n            width: 40,\n            template: \"<div class='trash'>{common.trashIcon()}</div>\",\n            css: { \"text-align\": \"center\" },\n         });\n         // columnSplitRight++;\n         addedColumns.push(\"appbuilder_trash\");\n      }\n\n      // find our last displayed column (that isn't one we added);\n      let lastCol = null;\n\n      for (let i = columnHeaders.length - 1; i >= 0; i--) {\n         const col = columnHeaders[i];\n         if (!col.hidden && addedColumns.indexOf(col.id) === -1) {\n            lastCol = col;\n            break;\n         }\n      }\n\n      if (lastCol) {\n         lastCol.fillspace = true;\n         lastCol.minWidth = lastCol.width;\n         lastCol.width = 150; // set a width for last column but by default it will fill the available space or use the minWidth to take up more\n      }\n\n      $DataTable.refreshColumns(columnHeaders);\n\n      // the addedColumns represent the additional icons that can be added.\n      this.columnSplitRight = addedColumns.length;\n\n      // the .massUpdate gets added to Left so don't include that in split right:\n      if (addedColumns.indexOf(\"appbuilder_select_item\") > -1)\n         this.columnSplitRight -= 1;\n      // .columnSplitRight can't be < 0\n      if (this.columnSplitRight < 0) this.columnSplitRight = 0;\n\n      // freeze columns:\n      const frozenColumnID = settings.frozenColumnID;\n\n      if (frozenColumnID != \"\")\n         $DataTable.define(\n            \"leftSplit\",\n            $DataTable.getColumnIndex(frozenColumnID) + 1\n         );\n      else $DataTable.define(\"leftSplit\", this.columnSplitLeft);\n\n      this.freezeDeleteColumn();\n      $DataTable.refreshColumns();\n      // }\n   }\n\n   /**\n    * localSettingsSave()\n    * Persist our current working copy of our GridSettings to localStorage.\n    * @return {Promise}\n    */\n   async localSettingsSave() {\n      const ab = this.AB;\n      const savedLocalSettings =\n         (await ab.Storage.get(this.keyStorageSettings)) || {};\n      const _gridSettings = this._gridSettings;\n\n      savedLocalSettings[this.settingsID()] = _gridSettings[this.settingsID()]\n         ? _gridSettings[this.settingsID()]\n         : [];\n\n      for (const item in savedLocalSettings) {\n         savedLocalSettings[item].forEach((item) => {\n            // we cannot include field info because of the cicular structure\n            if (item?.footer?.field) delete item.footer.field;\n         });\n      }\n\n      await ab.Storage.set(this.keyStorageSettings, savedLocalSettings);\n   }\n\n   /**\n    * @method localSettings()\n    * An interface method to handle get/set operations on our local GridSettings\n    * storage.\n    * .localStorage() : a getter to return the current value\n    * .localStorage(value) : a setter to save value as our current value.\n    * @param {various} value\n    *        the value to set to our settings.\n    * @return {various}\n    */\n   localSettings(value = null) {\n      const _gridSettings = this._gridSettings;\n\n      if (value) _gridSettings[this.settingsID()] = value;\n      else return _gridSettings[this.settingsID()];\n   }\n\n   /**\n    * @method selectRow()\n    * Select the grid row that correspondes to the provided rowData.\n    * @param {json} rowData\n    *        A key=>value hash of data that matches an entry in the grid.\n    *        rowData.id should match an existing entry.\n    */\n   selectRow(rowData) {\n      let id = rowData?.id ?? rowData;\n      if (this.__timeout_selectRow) {\n         console.log(\"Duplicate selectRow():\", id);\n         clearTimeout(this.__timeout_selectRow);\n      }\n      this.__timeout_selectRow = setTimeout(() => {\n         const $DataTable = this.getDataTable();\n         if (!$DataTable) return;\n\n         if (!id) $DataTable.unselect();\n         else if ($DataTable.exists(id)) {\n            $DataTable.select(id, false);\n            $DataTable.showItem(id);\n         } else $DataTable.select(null, false);\n\n         this.__timeout_selectRow = null;\n      }, 15);\n   }\n\n   /**\n    * @method settingsID()\n    * return the unique key for this Grid + object combo to store data\n    * in our localStorage.\n    * @return {string}\n    */\n   settingsID() {\n      const CurrentObject = this.datacollection.datasource;\n\n      return `${this.id}-${CurrentObject ? CurrentObject.id : \"0\"}`;\n   }\n\n   /**\n    * @method toggleTab()\n    * recursively toggle tabs into view once a user chooses a detail/edit view\n    * to display.\n    * @param {ABView.id} parentTab\n    * @param {webix.view} wb\n    */\n   toggleTab(parentTab, wb) {\n      // find the tab || if we didn't pass and id we may have passed a domNode\n      const tab =\n         wb.getTopParentView().queryView({ id: parentTab }) || $$(parentTab);\n\n      if (!tab) return;\n\n      // set the tabbar to to the tab\n      const tabbar = tab.getParentView().getParentView();\n\n      if (!tabbar) return;\n\n      // if we have reached the top we won't have a tab\n      if (tabbar.setValue) tabbar.setValue(parentTab);\n\n      // find if it is in a multiview of a tab\n      const nextTab = tabbar.queryView({ view: \"scrollview\" }, \"parent\");\n\n      // if so then do this again\n      if (nextTab) this.toggleTab(nextTab, wb);\n   }\n\n   toggleUpdateDelete() {\n      const $DataTable = this.getDataTable();\n\n      let checkedItems = 0;\n\n      $DataTable.data.each((obj) => {\n         if (\n            typeof obj !== \"undefined\" &&\n            Object.prototype.hasOwnProperty.call(\n               obj,\n               \"appbuilder_select_item\"\n            ) &&\n            obj.appbuilder_select_item === 1\n         )\n            checkedItems++;\n      });\n\n      if (checkedItems > 0) this.enableUpdateDelete();\n      else this.disableUpdateDelete();\n   }\n\n   toolbarDeleteSelected($view) {\n      const $DataTable = this.getDataTable();\n      const CurrentObject = this.datacollection.datasource;\n      const deleteTasks = [];\n\n      $DataTable.data.each((row) => {\n         if (\n            typeof row !== \"undefined\" &&\n            // row.hasOwnProperty(\"appbuilder_select_item\") &&\n            Object.prototype.hasOwnProperty.call(\n               row,\n               \"appbuilder_select_item\"\n            ) &&\n            row.appbuilder_select_item === 1\n         ) {\n            // NOTE: store a fn() to run later.\n            deleteTasks.push(() => CurrentObject.model().delete(row.id));\n         }\n      });\n\n      const abWebix = this.AB.Webix;\n\n      if (deleteTasks.length > 0)\n         abWebix.confirm({\n            title: this.label(\"Delete Multiple Records\"),\n            text: this.label(\n               \"Are you sure you want to delete the selected records?\"\n            ),\n            callback: async (result) => {\n               if (result) {\n                  // Now run those functions\n                  await Promise.all(deleteTasks.map((t) => t()));\n\n                  // Anything we need to do after we are done.\n                  this.disableUpdateDelete();\n               }\n            },\n         });\n      else\n         abWebix.alert({\n            title: this.label(\"No Records Selected\"),\n            text: this.label(\n               \"You need to select at least one record...did you drink your coffee today?\"\n            ),\n         });\n   }\n\n   toolbarFilter($view) {\n      this.view.filterHelper.showPopup($view);\n   }\n\n   toolbarSort($view) {\n      this.PopupSortDataTableComponent.show($view);\n   }\n\n   toolbarExport($view) {\n      this.PopupExport.show($view);\n   }\n\n   toolbarMassUpdate($view) {\n      this.PopupMassUpdateComponent.show($view);\n   }\n\n   /**\n    * @function toolTip()\n    *\n    * Retrieve the items toolTip\n    */\n   toolTip(obj, common) {\n      const CurrentObject = this.datacollection.datasource;\n      const imageFieldColNames = CurrentObject.imageFields().map(\n         (f) => f.columnName\n      );\n\n      let tip = \"\";\n\n      const columnName = common.column.id.replace(\" \", \"\");\n\n      if (Array.isArray(obj[columnName])) {\n         obj[columnName].forEach(function (o) {\n            if (o.text) tip += o.text + \"<br/>\";\n         });\n      } else if (\n         typeof obj[columnName + \"__relation\"] !== \"undefined\" &&\n         typeof obj[columnName] === \"number\"\n      )\n         tip = obj[columnName + \"__relation\"].text;\n      else if (typeof obj[columnName + \"__relation\"] !== \"undefined\") {\n         let relationData = obj[columnName + \"__relation\"];\n\n         if (!Array.isArray(relationData)) relationData = [relationData];\n\n         (relationData || []).forEach(function (o) {\n            if (o) tip += o.text + \"<br/>\";\n         });\n      } else if (imageFieldColNames.indexOf(columnName) !== -1) {\n         if (!obj[columnName]) {\n            return \"\";\n         } else {\n            // TODO: we need to get this URL from the ABFieldImage object!\n            tip = `<img style='max-width: 500px; max-height: 500px;' src='/file/${obj[columnName]}' />`;\n         }\n      } else if (common.column.editor === \"date\")\n         tip = common.column.format(obj[columnName]);\n      else if (common.column.editor === \"richselect\")\n         CurrentObject.fields().forEach((f) => {\n            if (f.columnName === columnName) {\n               if (f.settings.options) {\n                  f.settings.options.forEach((o) => {\n                     if (o.id === obj[columnName]) {\n                        tip = o.text;\n                     }\n                  });\n               }\n            }\n         });\n      else tip = obj[columnName];\n\n      if (!tip) return \"\";\n      else return tip;\n   }\n\n   /**\n    * @function toolTipOnBeforeRender()\n    *\n    * Add visibility \"hidden\" to all tooltips before render so we can move to a new location without the visual jump\n    */\n   toolTipOnBeforeRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      node.style.visibility = \"hidden\";\n   }\n\n   /**\n    * @function toolTipOnAfterRender()\n    *\n    * If the tooltip is displaying off the screen we want to try to reposition it for a better experience\n    */\n   toolTipOnAfterRender(node) {\n      // var node = $$(ids.tooltip).getNode();\n      if (node.firstChild?.nodeName === \"IMG\") {\n         setTimeout(() => {\n            const imgBottom = parseInt(node.style.top.replace(\"px\", \"\")) + 500;\n            const imgRight = parseInt(node.style.left.replace(\"px\", \"\")) + 500;\n\n            if (imgBottom > window.innerHeight) {\n               const imgOffsetY = imgBottom - window.innerHeight;\n               const newTop =\n                  parseInt(node.style.top.replace(\"px\", \"\")) - imgOffsetY;\n               node.style.top = newTop + \"px\";\n            }\n\n            if (imgRight > window.innerWidth) {\n               const imgOffsetX = imgRight - window.innerWidth;\n               const newLeft =\n                  parseInt(node.style.left.replace(\"px\", \"\")) - imgOffsetX;\n               node.style.left = newLeft + \"px\";\n            }\n\n            node.style.visibility = \"visible\";\n         }, 250);\n      } else node.style.visibility = \"visible\";\n   }\n\n   get isCustomGroup() {\n      const dc = this.datacollection;\n      const CurrentObject = dc?.datasource;\n      const $DataTable = this.getDataTable();\n\n      return (\n         $DataTable?.config?.view === \"treetable\" && !CurrentObject?.isGroup\n      );\n   }\n\n   populateGroupData() {\n      if (!this.isCustomGroup) return;\n\n      this.busy();\n\n      const dc = this.datacollection;\n      const $DataTable = this.getDataTable();\n\n      $DataTable.clearAll();\n      $DataTable.parse(dc.getData() || []);\n\n      this.grouping();\n      this.ready();\n   }\n}\n","const ABViewGridCore = require(\"../../core/views/ABViewGridCore\");\nimport ABViewGridComponent from \"./viewComponent/ABViewGridComponent\";\nimport ABViewGridFilter from \"./viewProperties/ABViewPropertyFilterData\";\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewGrid extends ABViewGridCore {\n   /**\n    * @param {obj} values  key=>value hash of ABView values\n    * @param {ABApplication} application the application object this view is under\n    * @param {ABViewWidget} parent the ABViewWidget this view is a child of. (can be null)\n    */\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   ///\n   /// Instance Methods\n   ///\n\n   /**\n    * @method fromValues()\n    *\n    * initialze this object with the given set of values.\n    * @param {obj} values\n    */\n   fromValues(values) {\n      super.fromValues(values);\n\n      // filter property\n      this.filterHelper.fromSettings(this.settings.gridFilter);\n   }\n\n   propertyGroupByList(ids, groupBy) {\n      let colNames = groupBy || [];\n      if (typeof colNames == \"string\") {\n         colNames = colNames.split(\",\");\n      }\n\n      let options = $$(ids.groupBy).getList().data.find({});\n\n      $$(ids.groupByList).clearAll();\n      colNames.forEach((colName) => {\n         let opt = options.filter((o) => o.id == colName)[0];\n         if (opt) {\n            $$(ids.groupByList).add(opt);\n         }\n      });\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewGridComponent(this);\n   }\n\n   get filterHelper() {\n      if (this.__filterHelper == null) {\n         this.__filterHelper = new ABViewGridFilter(\n            this.AB,\n            `${this.id}_filterHelper`\n         );\n      }\n\n      return this.__filterHelper;\n   }\n\n   get linkPageHelper() {\n      if (this.__linkPageHelper == null)\n         this.__linkPageHelper = new ABViewPropertyLinkPage();\n\n      return this.__linkPageHelper;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let origWS = this.warningsSilent;\n      this.warningsSilent = true;\n      let DC = this.datacollection;\n      this.warningsSilent = origWS;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewGridPopupSortFields\n *\n * Manage the Sort Fields popup.\n *\n */\n\nimport ClassUI from \"../../../ui/ClassUI\";\n\nvar L = null;\n\nexport default class AB_Work_Object_Workspace_PopupSortFields extends ClassUI {\n   constructor(idBase) {\n      idBase = idBase || \"abviewgridpopupSortFields\";\n\n      super({\n         component: `${idBase}_popupSort`,\n         list: `${idBase}_popupSort_list`,\n         form: `${idBase}_popupSort_form`,\n      });\n\n      this.CurrentObject = null;\n      // {ABObject}\n      // The current ABObject we are working with.\n\n      this._blockOnChange = false;\n      // {bool}\n      // Should we skip the onChange handler processing at this time?\n\n      this._settings = null;\n      // {json}\n      // default sort settings.\n\n      if (!L) {\n         L = (...params) => {\n            return (this.AB ?? AB).Multilingual.label(...params);\n         };\n      }\n   }\n\n   uiForm() {\n      const compId = this.ids.component;\n      return {\n         view: \"form\",\n         id: this.ids.form,\n         borderless: true,\n         elements: [\n            {\n               view: \"button\",\n               type: \"form\",\n               css: \"webix_primary\",\n               value: L(\"Add new sort\"),\n               on: {\n                  onItemClick: (/* id, e, node */) => {\n                     this.clickAddNewSort();\n                     this.triggerOnChange();\n                  },\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `${compId} add sort button`\n                     );\n                  },\n               },\n            },\n         ],\n      };\n   }\n\n   ui() {\n      return {\n         view: \"popup\",\n         id: this.ids.component,\n         // autoheight:true,\n         width: 600,\n         body: this.uiForm(),\n         on: {\n            onShow: () => {\n               this.onShow();\n            },\n         },\n      };\n   }\n\n   // Our init() function for setting up our UI\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      (this.AB.Webix ?? webix).ui(this.ui());\n   }\n\n   /**\n    * @function clickAddNewSort\n    * When the user clicks the \"Add New Sort\" button, this routine will\n    * add another row to the sort form.\n    * @param {string} fieldId\n    *        The ABField.id of the field to auto select in this new row.\n    * @param {string} dir\n    *        The sort order to auto select in this new row.\n    */\n   // clickAddNewSort: function(by, dir, isMulti, id) {\n   clickAddNewSort(fieldId, dir) {\n      var self = this;\n      var sort_form = $$(this.ids.form);\n\n      var viewIndex = sort_form.getChildViews().length - 1;\n      var listFields = this.getFieldList(true);\n      sort_form.addView(\n         {\n            id: `sort_${viewIndex + 1}`,\n            cols: [\n               {\n                  view: \"combo\",\n                  width: 220,\n                  options: listFields,\n                  on: {\n                     onChange: function (columnId) {\n                        var el = this;\n                        self.onChangeCombo(columnId, el);\n                     },\n                  },\n               },\n               this._valueElement(),\n               {\n                  view: \"button\",\n                  css: \"webix_danger\",\n                  icon: \"fa fa-trash\",\n                  type: \"icon\",\n                  width: 30,\n                  on: {\n                     onItemClick: function () {\n                        sort_form.removeView(this.getParentView());\n                        self.refreshFieldList(true);\n                        self.triggerOnChange();\n                     },\n                  },\n               },\n            ],\n         },\n         viewIndex\n      );\n\n      // Select field\n      if (fieldId) {\n         var fieldsCombo = sort_form\n            .getChildViews()\n            [viewIndex].getChildViews()[0];\n         fieldsCombo.setValue(fieldId);\n      }\n      // select direction\n      if (dir) {\n         var dirElem = sort_form.getChildViews()[viewIndex].getChildViews()[1];\n         dirElem.setValue?.(dir);\n\n         // [ABFieldList] Sorting following order\n         dirElem.sort?.((a, b) => {\n            return (dir ?? \"\").indexOf(a.id ?? a) >\n               (dir ?? \"\").indexOf(b.id ?? b)\n               ? 1\n               : -1;\n         });\n      }\n   }\n\n   /**\n    * @function getFieldList\n    * return field list so we can present a custom UI for view\n    * @param {bool} excludeSelected\n    *        Should we ignore fields that already exist in the form?\n    * @return {array} [ { id, value } ]\n    *         an array that is compatible with the webix.list\n    *         widget.\n    */\n   getFieldList(excludeSelected) {\n      var sort_form = $$(this.ids.form),\n         listFields = [];\n\n      var allFields = this.CurrentObject.fields();\n      if (!allFields || !allFields.length) return listFields;\n\n      // Get all fields include hidden fields\n      allFields.forEach((f) => {\n         if (f.fieldIsSortable()) {\n            listFields.push({\n               id: f.id,\n               value: f.label,\n            });\n         }\n      });\n\n      // Remove selected field\n      if (excludeSelected) {\n         var childViews = sort_form.getChildViews();\n         if (childViews.length > 1) {\n            // Ignore 'Add new sort' button\n            childViews.forEach(function (cView, index) {\n               if (childViews.length - 1 <= index) return false;\n\n               var selectedValue = cView.getChildViews()[0].getValue();\n               if (selectedValue) {\n                  listFields = listFields.filter((f) => f.id != selectedValue);\n               }\n            });\n         }\n      }\n      return listFields;\n   }\n\n   /**\n    * @function objectLoad\n    * Ready the Popup according to the current object\n    * @param {ABObject} object  the currently selected object.\n    */\n   objectLoad(object) {\n      this.CurrentObject = object;\n   }\n\n   /**\n    * @method setSettings\n    * Initialize the form with a set of conditions.\n    * @param {Array} settings\n    *        The default settings for this form.\n    *        [\n    *           {\n    *              key: uuid,     // ABField.id\n    *              dir: string,   // 'asc' or 'desc'\n    *           }\n    *        ]\n    */\n   setSettings(settings) {\n      this._settings = this.AB.cloneDeep(settings);\n   }\n\n   /**\n    * @method getSettings\n    * return the current sort settings stored by this form.\n    * @return {Array} -\n    *         [\n    *            {\n    *               key: uuid,     // ABField.id\n    *               dir: string,   // 'asc' or 'desc'\n    *            }\n    *         ]\n    */\n   getSettings() {\n      var sort_form = $$(this.ids.form),\n         sortFields = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            var fieldId = cView.getChildViews()[0].getValue();\n            const dirElem = cView.getChildViews()[1];\n            var dir =\n               dirElem?.getValue?.() ??\n               dirElem?.data?.getRange?.()?.map((opt) => opt.id) ?? // Select list field type\n               \"\";\n            sortFields.push({\n               key: fieldId,\n               dir: dir,\n            });\n         });\n      }\n      return sortFields;\n   }\n\n   /**\n    * @method onChangeCombo()\n    * Update the display once they have chosen a field to sort by.\n    * We now need to offer the appropriate sort direction chooser.\n    * @param {string} fieldID\n    *        The value of the combo box now.\n    * @param {webix.$view} el\n    *        The current Webix.$view that was the combo box that just\n    *        changed.\n    */\n   onChangeCombo(fieldID, el) {\n      var allFields = this.CurrentObject.fields();\n      var chosenField = null,\n         sortDir = el.getParentView().getChildViews()[1],\n         // isMultiLingual = el.getParentView().getChildViews()[2],\n         // isMulti = 0,\n         options = null;\n\n      chosenField = allFields.find((f) => f.id == fieldID);\n      if (!chosenField) return;\n\n      switch (chosenField.key) {\n         case \"date\":\n            options = [\n               { id: \"asc\", value: L(\"Before -> After\") },\n               { id: \"desc\", value: L(\"After -> Before\") },\n            ];\n            break;\n         case \"number\":\n            options = [\n               { id: \"asc\", value: L(\"1 -> 9\") },\n               { id: \"desc\", value: L(\"9 -> 1\") },\n            ];\n            break;\n         case \"string\":\n         default:\n            options = [\n               { id: \"asc\", value: L(\"A -> Z\") },\n               { id: \"desc\", value: L(\"Z -> A\") },\n            ];\n            break;\n      }\n\n      if (chosenField.key == \"list\") {\n         AB.Webix.ui(this._valueListElement(chosenField), sortDir);\n      } else {\n         const valElem = this._valueElement();\n         valElem.options = options;\n         AB.Webix.ui(valElem, sortDir);\n      }\n\n      // if (columnConfig.settings.supportMultilingual)\n      //    isMulti = columnConfig.settings.supportMultilingual;\n\n      // isMultiLingual.setValue(isMulti);\n\n      this.refreshFieldList();\n      this.triggerOnChange();\n   }\n\n   /**\n    * @function onShow\n    * Rebuild the form when an onShow() is called.\n    */\n   onShow(view, options) {\n      var sort_form = $$(this.ids.form);\n\n      // clear field options in the form\n      webix.ui(this.uiForm(), sort_form);\n\n      var sorts = this._settings;\n      if (sorts && sorts.forEach) {\n         sorts.forEach((s) => {\n            this.clickAddNewSort(s.key, s.dir);\n         });\n      }\n\n      if (sorts == null || sorts.length == 0) {\n         this.clickAddNewSort();\n      }\n\n      const $popup = $$(this.ids.component);\n      $popup?.blockEvent();\n      $popup?.show(view, options);\n      $popup?.unblockEvent();\n   }\n\n   /**\n    * @method refreshFieldList\n    * return an updated field list so you cannot duplicate a sort\n    * @param {bool} ignoreRemoveViews\n    *\n    */\n   refreshFieldList(ignoreRemoveViews) {\n      var sort_form = $$(this.ids.form),\n         listFields = this.getFieldList(false),\n         selectedFields = [],\n         removeChildViews = [];\n\n      var childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach(function (cView, index) {\n            if (childViews.length - 1 <= index) return false;\n\n            let fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId });\n               fieldObj = listFields.filter((f) => {\n                  return f.id == fieldId;\n               });\n\n            if (fieldObj.length > 0) {\n               // Add selected field to list\n               selectedFields.push(fieldObj[0]);\n            } else {\n               // Add condition to remove\n               removeChildViews.push(cView);\n            }\n         });\n      }\n\n      // Remove filter conditions when column is deleted\n      if (!ignoreRemoveViews) {\n         removeChildViews.forEach((cView /*, index */) => {\n            sort_form.removeView(cView);\n         });\n      }\n\n      // Field list should not duplicate field items\n      childViews = sort_form.getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index) return false;\n\n            let fieldId = cView.getChildViews()[0].getValue(),\n               // fieldObj = $.grep(listFields, function (f) { return f.id == fieldId }),\n               fieldObj = listFields.filter((f) => {\n                  return f.id == fieldId;\n               });\n\n            // var selectedFieldsExcludeCurField = $(selectedFields).not(fieldObj);\n            var selectedFieldsExcludeCurField = selectedFields.filter((x) => {\n               if (Array.isArray(fieldObj) && fieldObj.indexOf(x) !== -1) {\n                  return false;\n               }\n               return true;\n            });\n\n            // var enableFields = $(listFields).not(selectedFieldsExcludeCurField).get();\n            var enableFields = listFields.filter((x) => {\n               if (\n                  Array.isArray(selectedFieldsExcludeCurField) &&\n                  selectedFieldsExcludeCurField.indexOf(x) !== -1\n               ) {\n                  return false;\n               }\n               return true;\n            });\n\n            // Update field list\n            cView.getChildViews()[0].define(\"options\", enableFields);\n            cView.getChildViews()[0].refresh();\n         });\n      }\n   }\n\n   /**\n    * @function triggerOnChange\n    * This parses the sort form to build in order the sorts then saves to the application object workspace\n    */\n   triggerOnChange() {\n      // block .onChange callback\n      if (this._blockOnChange) return;\n\n      this._settings = this.getSettings();\n\n      this.emit(\"changed\", this._settings);\n   }\n\n   blockOnChange() {\n      this._blockOnChange = true;\n   }\n\n   unblockOnChange() {\n      this._blockOnChange = false;\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    * @param {obj} $view\n    *        the webix.$view to hover the popup around.\n    * @param {uuid} fieldId\n    *        the ABField.id we want to prefill the sort with\n    * @param {json} options\n    *        Additional webix.show() options parameters.\n    */\n   show($view, fieldId, options) {\n      this.blockOnChange();\n\n      this.onShow($view, options || null);\n\n      if (fieldId) {\n         this.clickAddNewSort(fieldId);\n      }\n\n      this.unblockOnChange();\n   }\n\n   /**\n    * @function sort()\n    * client sort data in list\n    *\n    * @param {Object} a\n    * @param {Object} b\n    */\n   sort(a, b) {\n      let result = 0;\n\n      const childViews = $$(this.ids.form).getChildViews();\n      if (childViews.length > 1) {\n         // Ignore 'Add new sort' button\n         childViews.forEach((cView, index) => {\n            if (childViews.length - 1 <= index || result != 0) return;\n\n            const fieldId = cView.getChildViews()[0].getValue();\n            const dirElem = cView.getChildViews()[1];\n            const dir =\n               dirElem?.getValue?.() ??\n               dirElem?.data?.getRange?.()?.map((opt) => opt.id) ?? // Select list field type\n               \"\";\n\n            const field = this.CurrentObject.fieldByID(fieldId);\n            if (!field) return;\n\n            const by = field.columnName; // column name\n\n            let aValue = a[by],\n               bValue = b[by];\n\n            if (field.key == \"list\") {\n               aValue = dir.indexOf(aValue);\n               bValue = dir.indexOf(bValue);\n            }\n\n            if (Array.isArray(aValue)) {\n               aValue = (aValue || [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (Array.isArray(bValue)) {\n               bValue = (bValue ?? [])\n                  .map((item) => item.text || item)\n                  .join(\" \");\n            }\n\n            if (aValue != bValue) {\n               if (dir == \"asc\" || field.key == \"list\") {\n                  result = aValue > bValue ? 1 : -1;\n               } else {\n                  result = aValue < bValue ? 1 : -1;\n               }\n            }\n         });\n      }\n\n      return result;\n   }\n\n   _valueElement() {\n      return {\n         view: \"segmented\",\n         width: 200,\n         options: [\n            {\n               id: \"\",\n               value: L(\"Please select field\"),\n            },\n         ],\n         on: {\n            onChange: (/* newv, oldv */) => {\n               // 'asc' or 'desc' values\n               this.triggerOnChange();\n            },\n         },\n      };\n   }\n\n   _valueListElement(field) {\n      return {\n         view: \"list\",\n         template: \"<div class='webix_drag_handle'></div> #text#\",\n         type: {\n            height: 35,\n         },\n         height: 150,\n         select: true,\n         drag: \"order\",\n         data: field.options(),\n         on: {\n            onChange: () => {\n               this.triggerOnChange();\n            },\n            onAfterDrop: () => {\n               this.triggerOnChange();\n            },\n         },\n      };\n   }\n}\n","const ABViewImageCore = require(\"../../core/views/ABViewImageCore\");\nconst ABViewImageComponent = require(\"./viewComponent/ABViewImageComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewImage extends ABViewImageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewImageComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.settings.filename) {\n         this.warningsMessage(`has no image set`);\n      }\n   }\n};\n","const ABViewKanbanCore = require(\"../../core/views/ABViewKanbanCore\");\nconst ABViewKanbanComponent = require(\"./viewComponent/ABViewKanbanComponent\");\n\nconst ABViewPropertyLinkPage =\n   require(\"./viewProperties/ABViewPropertyLinkPage\").default;\n\nexport default class ABViewKanban extends ABViewKanbanCore {\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n\n   component() {\n      return new ABViewKanbanComponent(this);\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n}\n","/*\n * ABViewKanbanFormSidePanel\n *\n * Provide a form area for editing data in the Kan Ban view.\n *\n */\n\nconst ABViewComponent = require(\"./viewComponent/ABViewComponent\").default;\nconst ABViewForm = require(\"./ABViewForm\");\nconst ABViewFormButton = require(\"./ABViewFormButton\");\n\nvar L = null;\n// multilingual Label fn()\n\nmodule.exports = class ABWorkObjectKanBan extends ABViewComponent {\n   constructor(comKanBan, idBase, editFields) {\n      idBase = idBase || `${comKanBan.view?.id}_formSidePanel`;\n      super(idBase, {\n         form: \"\",\n      });\n\n      if (!L) {\n         L = (...params) => {\n            return this.AB.Multilingual.label(...params);\n         };\n      }\n\n      this.AB = comKanBan.AB;\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.editFields = editFields;\n      // {array}\n      // An array of {ABField.id} that determines which fields should show up\n      // in the editor.\n\n      this._mockApp = this.AB.applicationNew({});\n      // {ABApplication}\n      // Any ABViews we create are expected to be in relation to\n      // an ABApplication, so we create a \"mock\" app for our\n      // workspace views to use to display.\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n\n   ui() {\n      var ids = this.ids;\n\n      // Our webix UI definition:\n      return {\n         id: ids.component,\n         width: 300,\n         hidden: true,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"webix_dark\",\n               cols: [\n                  {\n                     view: \"label\",\n                     label: L(\"Edit Record\"),\n                  },\n                  {\n                     view: \"icon\",\n                     icon: \"wxi-close\",\n                     align: \"right\",\n                     click: (/* id */) => {\n                        this.hide();\n                     },\n                  },\n               ],\n            },\n            {\n               view: \"scrollview\",\n               body: {\n                  rows: [\n                     {\n                        id: ids.form,\n                        view: \"form\",\n                        borderless: true,\n                        rows: [],\n                     },\n                  ],\n               },\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object.id;\n   }\n\n   hide() {\n      $$(this.ids.component)?.hide();\n\n      this.emit(\"close\");\n   }\n\n   show(data) {\n      $$(this.ids.component)?.show();\n\n      this.refreshForm(data);\n   }\n\n   isVisible() {\n      return $$(this.ids.component)?.isVisible() ?? false;\n   }\n\n   refreshForm(data) {\n      var ids = this.ids;\n      let $formView = $$(ids.form);\n      let CurrentObject = this.CurrentObject;\n\n      if (!CurrentObject || !$formView) return;\n\n      data = data || {};\n\n      let formAttrs = {\n         id: `${this.ids.component}_sideform`,\n         key: ABViewForm.common().key,\n         settings: {\n            columns: 1,\n            labelPosition: \"top\",\n            showLabel: 1,\n            clearOnLoad: 0,\n            clearOnSave: 0,\n            labelWidth: 120,\n            height: 0,\n         },\n      };\n\n      // let form = new ABViewForm(formAttrs, this._mockApp);\n      let form = this.AB.viewNewDetatched(formAttrs);\n\n      form.objectLoad(CurrentObject);\n\n      // Populate child elements\n      CurrentObject.fields().forEach((f, index) => {\n         // if this is one of our .editFields\n         if (!this.editFields || this.editFields.indexOf(f.id) > -1) {\n            form.addFieldToForm(f, index);\n         }\n      });\n\n      // add default button (Save button)\n      form._views.push(\n         new ABViewFormButton(\n            {\n               settings: {\n                  includeSave: true,\n                  includeCancel: false,\n                  includeReset: false,\n               },\n               position: {\n                  y: CurrentObject.fields().length, // yPosition\n               },\n            },\n            this._mockApp,\n            form\n         )\n      );\n\n      // add temp id to views\n      form._views.forEach(\n         (v, index) => (v.id = `${form.id}_${v.key}_${index}`)\n      );\n\n      let formCom = form.component(this.AB._App);\n\n      // Rebuild form\n      webix.ui(formCom.ui().rows.concat({}), $formView);\n      webix.extend($formView, webix.ProgressBar);\n\n      formCom.init(\n         this.AB,\n         2,\n         {\n            onBeforeSaveData: () => {\n               // get update data\n               var formVals = form.getFormValues($formView, CurrentObject);\n\n               // validate data\n               if (!form.validateData($formView, CurrentObject, formVals))\n                  return false;\n\n               // show progress icon\n               $formView?.showProgress({ type: \"icon\" });\n\n               if (formVals.id) {\n                  CurrentObject.model()\n                     .update(formVals.id, formVals)\n                     .then((updateVals) => {\n                        this.emit(\"update\", updateVals);\n                        // _logic.callbacks.onUpdateData(updateVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():update(): Error updating value\",\n                           formVals,\n                        });\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n               // else add new row\n               else {\n                  CurrentObject.model()\n                     .create(formVals)\n                     .then((newVals) => {\n                        // _logic.callbacks.onAddData(newVals);\n                        this.emit(\"add\", newVals);\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     })\n                     .catch((err) => {\n                        // TODO : error message\n                        this.AB.notify.developer(err, {\n                           context:\n                              \"ABViewKanbanFormSidePanel:onBeforeSaveData():.create(): Error creating value\",\n                           formVals,\n                        });\n\n                        $formView?.hideProgress({ type: \"icon\" });\n                     });\n               }\n\n               return false;\n            },\n         },\n         2 /* NOTE: if you can see this KanBan, you should be able to see the side form? */\n      );\n\n      // display data\n      $formView.clear();\n      $formView.parse(data);\n\n      formCom.onShow(data);\n   }\n};\n","const ABViewLabelCore = require(\"../../core/views/ABViewLabelCore\");\nconst ABViewLabelComponent = require(\"./viewComponent/ABViewLabelComponent\");\n\nmodule.exports = class ABViewLabel extends ABViewLabelCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLabelComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (!this.text) {\n         this.warningsMessage(\"has no text value set.\");\n      }\n   }\n};\n","const ABViewLayoutCore = require(\"../../core/views/ABViewLayoutCore\");\nconst ABViewLayoutComponent = require(\"./viewComponent/ABViewLayoutComponent\");\n\nmodule.exports = class ABViewLayout extends ABViewLayoutCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewLayoutComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      if (this._views.length == 0) {\n         this.warningsMessage(\"has no columns set.\");\n      }\n   }\n};\n","const ABViewListCore = require(\"../../core/views/ABViewListCore\");\nconst ABViewListComponent = require(\"./viewComponent/ABViewListComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewList extends ABViewListCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewListComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewMenuCore = require(\"../../core/views/ABViewMenuCore\");\nconst ABViewMenuComponent = require(\"./viewComponent/ABViewMenuComponent\");\n\nmodule.exports = class ABViewMenu extends ABViewMenuCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewMenuComponent(this);\n   }\n};\n","const ABViewPDFImporterCore = require(\"../../core/views/ABViewPDFImporterCore\");\nconst ABViewPDFImporterComponent = require(\"./viewComponent/ABViewPDFImporterComponent\");\n\nmodule.exports = class ABViewPDFImporter extends ABViewPDFImporterCore {\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPDFImporterComponent(this);\n   }\n};\n","const ABViewPageCore = require(\"../../core/views/ABViewPageCore\");\n\nconst ABPropertyComponentDefaults = ABViewPageCore.defaultValues();\n\nmodule.exports = class ABViewPage extends ABViewPageCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} v1App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      var component = super.component();\n\n      component._ui = component.ui();\n\n      // wrap our ABViewContainer in our Page scrollview\n      component.ui = () => {\n         return {\n            view: \"scrollview\",\n            borderless: true,\n            css:\n               this.settings.pageBackground ||\n               ABPropertyComponentDefaults.pageBackground,\n            body: component._ui,\n         };\n      };\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: component.ui(),\n            init: (options, accessLevel) => {\n               accessLevel = accessLevel ?? this.getUserAccess();\n               return newComponent.init(this.AB, accessLevel, options);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no sub views\");\n      }\n\n      (this.pages() || []).forEach((p) => {\n         p.warningsEval();\n      });\n   }\n};\n","const ABViewPivotCore = require(\"../../core/views/ABViewPivotCore\");\nconst ABViewPivotComponent = require(\"./viewComponent/ABViewPivotComponent\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewPivot extends ABViewPivotCore {\n   constructor(values, application, parent, defaultValues) {\n      super(values, application, parent, defaultValues);\n   }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewPivotComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let DC = this.datacollection;\n      if (!DC) {\n         this.warningsMessage(\n            `can't resolve it's datacollection[${this.settings.dataviewID}]`\n         );\n      }\n   }\n};\n","const ABViewReportsManagerCore = require(\"../../core/views/ABViewReportsManagerCore\");\nconst ABViewReportsManagerComponent = require(\"./viewComponent/ABViewReportsManagerComponent\");\n\nmodule.exports = class ABViewReportsManager extends ABViewReportsManagerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   //\n   //\tEditor Related\n   //\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewReportsManagerComponent(this);\n   }\n};\n","const ABViewSchedulerCore = require(\"../../core/views/ABViewSchedulerCore\");\nconst ABViewSchedulerComponent = require(\"./viewComponent/ABViewSchedulerComponent\");\n\nmodule.exports = class ABViewScheduler extends ABViewSchedulerCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component() {\n      return new ABViewSchedulerComponent(this);\n   }\n\n   warningsEval() {\n      super.warningsEval();\n   }\n};\n","const ABViewTabCore = require(\"../../core/views/ABViewTabCore\");\n\nconst ABViewTabComponent = require(\"./viewComponent/ABViewTabComponent\");\n\nmodule.exports = class ABViewTab extends ABViewTabCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(v1App = false) {\n      let component = new ABViewTabComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         const newComponent = component;\n\n         component = {\n            ui: newComponent.ui(),\n            init: (options, accessLevel) => {\n               return newComponent.init(this.AB);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n\n   warningsEval() {\n      super.warningsEval();\n\n      let allViews = this.views();\n\n      if (allViews.length == 0) {\n         this.warningsMessage(\"has no tabs set\");\n      }\n\n      // NOTE: this is done in ABView:\n      // (this.views() || []).forEach((v) => {\n      //    v.warningsEval();\n      // });\n   }\n};\n","const ABViewTextCore = require(\"../../core/views/ABViewTextCore\");\n\nconst ABViewTextComponent = require(\"./viewComponent/ABViewTextComponent\");\n\nmodule.exports = class ABViewText extends ABViewTextCore {\n   /**\n    * @method component()\n    * return a UI component based upon this view.\n    * @return {obj} UI component\n    */\n   component(parentId) {\n      return new ABViewTextComponent(this, parentId);\n   }\n};\n","const ABViewWidgetCore = require(\"../../core/views/ABViewWidgetCore\");\n\nconst ABPropertyComponentDefaults = ABViewWidgetCore.defaultValues();\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewWidget extends ABViewWidgetCore {\n   // constructor(values, application, parent, defaultValues) {\n   //    super(values, application, parent, defaultValues);\n   // }\n\n   /**\n    * @function component()\n    * return a UI component based upon this view.\n    * @param {obj} App\n    * @return {obj} UI component\n    */\n   component(App) {\n      let base = super.component(App);\n\n      base.onShow = (viewId) => {\n         let dv = this.datacollection; // get from a function or a (get) property\n         if (dv && dv.dataStatus == dv.dataStatusFlag.notInitial) {\n            // load data when a widget is showing\n            dv.loadData();\n         }\n      };\n\n      return base;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCSVExporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVExporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               buttonFilter: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.clientFilter = null;\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            type: \"clean\",\n            borderless: true,\n            cols: [\n               {\n                  id: ids.buttonFilter,\n                  view: \"button\",\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"fa fa-filter\",\n                  borderless: true,\n                  width: 50,\n                  label: \"\",\n                  click: () => {\n                     this.showFilterPopup();\n                  },\n               },\n               {\n                  id: ids.button,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-download\",\n                  borderless: true,\n                  width: settings.width || defaultSettings.width,\n                  label: settings.buttonLabel ?? defaultSettings.buttonLabel,\n                  click: () => {\n                     this.downloadCsvFile();\n                  },\n               },\n               { fillspace: true },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      if (!this.clientFilter) {\n         const clientFilter = AB.filterComplexNew(this.ids.filterComplex);\n\n         const dc = this.datacollection;\n\n         if (dc) {\n            const obj = dc.datasource;\n\n            clientFilter.fieldsLoad(obj?.fields?.() ?? []);\n         }\n\n         clientFilter.init();\n         clientFilter.on(\"change\", (val) => {\n            this.onFilterChange(val);\n         });\n\n         this.clientFilter = clientFilter;\n      }\n   }\n\n   downloadCsvFile() {\n      let url = `/appbuilder/csv-export/${this.view.id}`;\n\n      const where = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      const whereWidget = this.view.settings?.where;\n      if ((whereWidget?.rules ?? []).length) {\n         where.rules.push(whereWidget);\n      }\n\n      const whereClient = this.clientFilter.getValue();\n      if ((whereClient?.rules ?? []).length) {\n         where.rules.push(whereClient);\n      }\n\n      if ((where?.rules || []).length) {\n         let qsWhere = JSON.stringify(where);\n\n         qsWhere = encodeURIComponent(qsWhere);\n         url = `${url}?where=${qsWhere}`;\n      }\n\n      window.open(url);\n   }\n\n   showFilterPopup() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      this.clientFilter.popUp($buttonFilter ? $buttonFilter.$view : null);\n   }\n\n   onFilterChange() {\n      const $buttonFilter = $$(this.ids.buttonFilter);\n\n      if (!$buttonFilter) return;\n\n      const where = this.clientFilter.getValue();\n\n      $buttonFilter.define(\"badge\", (where.rules || []).length || null);\n      $buttonFilter.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst CSVImporter = require(\"../../CSVImporter\");\n\nmodule.exports = class ABViewCSVImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABCSVImporter_${baseView.id}`,\n         Object.assign(\n            {\n               button: \"\",\n               popup: \"\",\n\n               form: \"\",\n               uploader: \"\",\n               uploadFileList: \"\",\n               separatedBy: \"\",\n               headerOnFirstLine: \"\",\n               columnList: \"\",\n\n               search: \"\",\n               datatable: \"\",\n\n               statusMessage: \"\",\n               progressBar: \"\",\n\n               linkedDataButton: \"\",\n               importButton: \"\",\n               rules: \"\",\n            },\n            ids\n         )\n      );\n\n      this.csvImporter = new CSVImporter((...args) => this.label(...args));\n      // {CSVImporter}\n      // An instance of the object that imports the CSV data.\n\n      this.validationError = false;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n   }\n\n   ui() {\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-upload\",\n                  label: this.label(\n                     settings.buttonLabel || defaultSettings.buttonLabel\n                  ),\n                  width: settings.width || defaultSettings.width,\n                  click: () => {\n                     this.showPopup();\n                  },\n               },\n               {\n                  fillspace: true,\n               },\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiConfig() {\n      const ids = this.ids;\n\n      return {\n         id: ids.form,\n         view: \"form\",\n         type: \"clean\",\n         borderless: true,\n         minWidth: 400,\n         gravity: 1,\n         elements: [\n            {\n               rows: [\n                  {\n                     id: ids.uploader,\n                     view: \"uploader\",\n                     name: \"csvFile\",\n                     css: \"webix_primary\",\n                     value: this.label(\"Choose a CSV file\"),\n                     accept: \"text/csv\",\n                     multiple: false,\n                     autosend: false,\n                     link: ids.uploadFileList,\n                     on: {\n                        onBeforeFileAdd: (fileInfo) => {\n                           this._csvFileInfo = fileInfo;\n\n                           return this.loadCsvFile();\n                        },\n                     },\n                  },\n                  {\n                     id: ids.uploadFileList,\n                     name: \"uploadedFile\",\n                     view: \"list\",\n                     type: \"uploader\",\n                     autoheight: true,\n                     borderless: true,\n                     onClick: {\n                        webix_remove_upload: (e, id /*, trg */) => {\n                           this.removeCsvFile(id);\n                        },\n                     },\n                  },\n                  {\n                     padding: 10,\n                     rows: [\n                        {\n                           id: ids.separatedBy,\n                           view: \"richselect\",\n                           name: \"separatedBy\",\n                           label: this.label(\"Separated by\"),\n                           labelWidth: 140,\n                           options: this.csvImporter.getSeparateItems(),\n                           value: \",\",\n                           on: {\n                              onChange: () => {\n                                 this.loadCsvFile();\n                              },\n                           },\n                        },\n                        {\n                           id: ids.headerOnFirstLine,\n                           view: \"checkbox\",\n                           name: \"headerOnFirstLine\",\n                           label: this.label(\"Header on first line\"),\n                           labelWidth: 140,\n                           disabled: true,\n                           value: true,\n                           on: {\n                              onChange: (/*newVal, oldVal*/) => {\n                                 this.populateColumnList();\n                              },\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     type: \"space\",\n                     rows: [\n                        {\n                           view: \"scrollview\",\n                           minHeight: 300,\n                           body: {\n                              padding: 10,\n                              id: ids.columnList,\n                              rows: [],\n                           },\n                        },\n                     ],\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiRecordsView() {\n      const ids = this.ids;\n\n      return {\n         gravity: 2,\n         rows: [\n            {\n               view: \"toolbar\",\n               css: \"bg_gray\",\n               cols: [\n                  { width: 5 },\n                  {\n                     id: ids.search,\n                     view: \"search\",\n                     value: \"\",\n                     label: \"\",\n                     placeholder: this.label(\"Search records...\"),\n                     keyPressTimeout: 200,\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.search($$(ids.search).getValue());\n                        },\n                     },\n                  },\n                  { width: 2 },\n               ],\n            },\n            {\n               id: ids.datatable,\n               view: \"datatable\",\n               resizeColumn: true,\n               editable: true,\n               editaction: \"dblclick\",\n               css: \"ab-csv-importer\",\n               borderless: false,\n               tooltip: (obj) => {\n                  const tooltip = obj._errorMsg\n                     ? obj._errorMsg\n                     : \"No validation errors\";\n                  return tooltip;\n               },\n               minWidth: 650,\n               columns: [],\n               on: {\n                  onValidationError: (id, obj, details) => {\n                     // console.log(`item ${id} invalid`);\n                     let errors = \"\";\n\n                     Object.keys(details).forEach((key) => {\n                        this.$view.complexValidations[key].forEach((err) => {\n                           errors += err.invalidMessage + \"</br>\";\n                        });\n                     });\n\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"invalid\",\n                        _errorMsg: errors,\n                     });\n                     $dt.unblockEvent();\n\n                     this.validationError = true;\n                  },\n                  onValidationSuccess: (id, obj, details) => {\n                     // console.log(`item ${id} valid`);\n                     const $dt = $$(ids.datatable);\n\n                     $dt.blockEvent();\n                     $dt.updateItem(id, {\n                        _status: \"valid\",\n                        _errorMsg: \"\",\n                     });\n                     $dt.unblockEvent();\n                     this.validationError = false;\n                  },\n                  onCheck: () => {\n                     const selected = $$(ids.datatable).find({\n                        _included: true,\n                     });\n                     const $importButton = $$(ids.importButton);\n\n                     $importButton.setValue(this.labelImport(selected));\n\n                     if (this.overLimitAlert(selected)) $importButton.disable();\n                     else $importButton.enable();\n                  },\n               },\n            },\n            {\n               id: ids.progressBar,\n               height: 6,\n            },\n            {\n               cols: [\n                  {\n                     id: ids.linkedDataButton,\n                     view: \"button\",\n                     label: this.label(\"Linked Data\"),\n                     type: \"icon\",\n                     icon: \"fa fa-info\",\n                     maxWidth: 180,\n                     click: () => {\n                        this.showLinkedData();\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     name: \"import\",\n                     id: ids.importButton,\n                     label: this.label(\"Import\"),\n                     css: \"webix_primary\",\n                     disabled: true,\n                     type: \"icon\",\n                     icon: \"fa fa-upload\",\n                     click: () => {\n                        this.import();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n\n      return {\n         id: ids.popup,\n         view: \"window\",\n         hidden: true,\n         position: \"center\",\n         modal: true,\n         resize: true,\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {},\n               {\n                  view: \"label\",\n                  label: this.label(\"CSV Importer\"),\n                  autowidth: true,\n               },\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  type: \"line\",\n                  cols: [\n                     this.uiConfig(),\n                     { width: 20 },\n                     this.uiRecordsView(),\n                     { width: 1 },\n                  ],\n               },\n               {\n                  id: ids.statusMessage,\n                  view: \"label\",\n                  align: \"right\",\n                  hidden: true,\n               },\n               {\n                  hidden: true,\n                  margin: 5,\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: this.label(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: () => {\n                           this.hide();\n                        },\n                     },\n                     /*,\n                        {\n                           view: \"button\",\n                           name: \"import\",\n                           id: ids.importButton,\n                           value: labels.component.import,\n                           css: \"webix_primary\",\n                           disabled: true,\n                           autowidth: true,\n                           type: \"form\",\n                           click: () => {\n                              _logic.import();\n                           }\n                        }*/\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n\n      // Populate values to rules\n\n      const dc = this.datacollection;\n\n      if (dc) this.objectLoad(dc.datasource);\n\n      const abWebix = AB.Webix;\n\n      abWebix.ui(this.uiPopup());\n\n      const $form = $$(ids.form);\n\n      if ($form) abWebix.extend($form, abWebix.ProgressBar);\n\n      const $progressBar = $$(ids.progressBar);\n\n      if ($progressBar) abWebix.extend($progressBar, abWebix.ProgressBar);\n   }\n\n   showPopup() {\n      const ids = this.ids;\n\n      $$(ids.popup)?.show();\n\n      this.formClear();\n\n      // open file dialog to upload\n      $$(ids.uploader).fileDialog();\n   }\n\n   hide() {\n      $$(this.ids.popup)?.hide();\n   }\n\n   formClear() {\n      const ids = this.ids;\n\n      this._dataRows = null;\n      this._csvFileInfo = null;\n\n      const $form = $$(ids.form);\n\n      $form.clearValidation();\n      $form.clear();\n\n      $$(ids.separatedBy).setValue(\",\");\n\n      this.AB.Webix.ui([], $$(ids.columnList));\n\n      $$(ids.headerOnFirstLine).disable();\n      $$(ids.importButton).disable();\n\n      $$(ids.search).setValue(\"\");\n      $$(ids.uploadFileList).clearAll();\n      $$(ids.datatable).clearAll();\n\n      const $statusMessage = $$(ids.statusMessage);\n\n      $statusMessage.setValue(\"\");\n      $statusMessage.hide();\n   }\n\n   search(searchText) {\n      const $datatable = $$(this.ids.datatable);\n\n      if (!$datatable) return;\n\n      searchText = (searchText || \"\").toLowerCase();\n\n      const matchFields = this.getMatchFields();\n\n      $datatable.filter((row) => {\n         let exists = false;\n\n         (matchFields || []).forEach((f) => {\n            if (exists) return;\n\n            exists =\n               (row[`${f.columnIndex}`] || \"\")\n                  .toString()\n                  .toLowerCase()\n                  .indexOf(searchText) > -1;\n         });\n\n         return exists;\n      });\n   }\n\n   statusTemplate(item) {\n      let template = \"\";\n\n      if (!item) return template;\n\n      switch (item._status) {\n         case \"in-progress\":\n            template = \"<span class='fa fa-refresh'></span>\";\n            break;\n         case \"invalid\":\n            template = \"<span class='fa fa-exclamation-triangle'></span>\";\n            break;\n         case \"valid\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"done\":\n            template = \"<span class='fa fa-check'></span>\";\n            break;\n         case \"fail\":\n            template = \"<span class='fa fa-remove'></span>\";\n            break;\n      }\n\n      return template;\n   }\n\n   async loadCsvFile() {\n      const _csvFileInfo = this._csvFileInfo;\n\n      if (!_csvFileInfo) return false;\n\n      const csvImporter = this.csvImporter;\n\n      if (!csvImporter.validateFile(_csvFileInfo)) {\n         this.AB.Webix.alert({\n            title: this.label(\"This file extension is not allowed\"),\n            text: this.label(\"Please only upload CSV files\"),\n            ok: this.label(\"Ok\"),\n         });\n\n         return false;\n      }\n\n      const ids = this.ids;\n\n      // show loading cursor\n      const $form = $$(ids.form);\n\n      $form?.showProgress?.({ type: \"icon\" });\n\n      // read CSV file\n      const $headerOnFirstLine = $$(ids.headerOnFirstLine);\n      const $importButton = $$(ids.importButton);\n\n      $headerOnFirstLine.enable();\n      $importButton.enable();\n\n      this._dataRows = await csvImporter.getDataRows(\n         _csvFileInfo,\n         $$(ids.separatedBy).getValue()\n      );\n\n      const _dataRows = this._dataRows;\n\n      let length = _dataRows.length;\n\n      if ($headerOnFirstLine.getValue()) length = _dataRows.length - 1;\n\n      $importButton.setValue(this.labelImport(length));\n      this.populateColumnList();\n      $form?.hideProgress?.();\n\n      return true;\n   }\n\n   removeCsvFile(fileId) {\n      $$(this.ids.uploadFileList).remove(fileId);\n      this.formClear();\n\n      return true;\n   }\n\n   populateColumnList() {\n      const self = this;\n      const ids = this.ids;\n      const abWebix = this.AB.Webix;\n\n      // clear list\n      const $columnList = $$(ids.columnList);\n\n      abWebix.ui([], $columnList);\n\n      const _dataRows = this._dataRows;\n\n      if (!_dataRows) return;\n\n      // check first line of CSV\n      const firstLine = _dataRows[0];\n\n      if (!firstLine) return;\n\n      const csvColumnList = [];\n      const fieldList = [];\n      const currentObject = this.CurrentObject;\n\n      if (currentObject)\n         fieldList.push(\n            ...currentObject.fields((f) => {\n               // available fields\n               if (\n                  this.settings.availableFieldIds?.length &&\n                  this.settings.availableFieldIds.indexOf(f.id) < 0\n               ) {\n                  return false;\n               }\n\n               // filter editable fields\n               const formComp = f.formComponent();\n\n               if (!formComp) return true;\n\n               const formConfig = formComp.common();\n\n               if (!formConfig) return true;\n\n               return formConfig.key != \"fieldreadonly\";\n            })\n         );\n\n      const csvImporter = this.csvImporter;\n\n      // check first line be header columns\n      if ($$(ids.headerOnFirstLine).getValue())\n         csvColumnList.push(\n            ...firstLine.map((colName, index) => {\n               return {\n                  id: index + 1, // webix .options list disallow value 0\n                  value: colName,\n                  key: csvImporter.getGuessDataType(_dataRows, index),\n               };\n            })\n         );\n      else\n         firstLine.forEach((e, i) => {\n            csvColumnList.push({\n               id: i + 1, // webix .options list disallow value 0\n               value: this.label(\"Column {0}\", [i + 1]),\n               key: csvImporter.getGuessDataType(_dataRows, i),\n            });\n         });\n\n      // Add unselect item\n      csvColumnList.unshift({\n         id: \"none\",\n         value: this.label(\"None\"),\n      });\n\n      // populate columns to UI\n      const uiColumns = [];\n      const selectedCsvCols = [];\n\n      fieldList.forEach((f) => {\n         // match up by data type\n         const matchCol = csvColumnList.filter(\n            (c) => c.key == f.key && selectedCsvCols.indexOf(c.id) < 0\n         )[0];\n\n         let selectVal = \"none\";\n\n         if (matchCol) {\n            selectVal = matchCol.id;\n\n            // cache\n            selectedCsvCols.push(selectVal);\n         }\n\n         let columnOptUI = {\n            view: \"richselect\",\n            gravity: 2,\n            options: csvColumnList,\n            fieldId: f.id,\n            abName: \"columnIndex\",\n            value: selectVal,\n            on: {\n               onChange: function () {\n                  self.toggleLinkFields(this);\n                  self.loadDataToGrid();\n               },\n            },\n         };\n\n         // Add date format options\n         if (f.key === \"date\") {\n            const dateSeparatorOptions = [\"/\", \"-\", \".\", \",\", \" \"];\n            const dayFormatOptions = [\n               { value: this.label(\"1 to 31\"), id: \"D\" },\n               { value: this.label(\"01 to 31\"), id: \"DD\" },\n            ];\n            const monthFormatOptions = [\n               { value: this.label(\"1 to 12\"), id: \"M\" },\n               { value: this.label(\"01 to 12\"), id: \"MM\" },\n            ];\n            const yearFormatOptions = [\n               { value: this.label(\"00 to 99\"), id: \"YY\" },\n               { value: this.label(\"2000 to 2099\"), id: \"YYYY\" },\n            ];\n            const dateOrderOptions = [\n               {\n                  value: this.label(\"D-M-Y\"),\n                  id: 1,\n               },\n               {\n                  value: this.label(\"M-D-Y\"),\n                  id: 2,\n               },\n               {\n                  value: this.label(\"Y-M-D\"),\n                  id: 3,\n               },\n               {\n                  value: this.label(\"Y-D-M\"),\n                  id: 4,\n               },\n            ];\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Separator\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"separator\",\n                     abName: \"columnDateFormat\",\n                     options: dateSeparatorOptions,\n                     value: \"/\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Day\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"day\",\n                     abName: \"columnDateFormat\",\n                     options: dayFormatOptions,\n                     value: \"D\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Month\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"month\",\n                     abName: \"columnDateFormat\",\n                     options: monthFormatOptions,\n                     value: \"M\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Year\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"year\",\n                     abName: \"columnDateFormat\",\n                     options: yearFormatOptions,\n                     value: \"YY\",\n                  },\n                  {\n                     view: \"richselect\",\n                     label: this.label(\"Order\"),\n                     labelWidth: 100,\n                     on: {\n                        onChange: () => {\n                           this.loadDataToGrid();\n                        },\n                     },\n                     name: \"order\",\n                     abName: \"columnDateFormat\",\n                     options: dateOrderOptions,\n                     value: 1,\n                  },\n               ],\n            };\n         }\n\n         // Add connected field options\n         if (f.isConnection) {\n            let linkFieldOptions = [];\n\n            if (f.datasourceLink) {\n               linkFieldOptions = f.datasourceLink\n                  .fields((fld) => !fld.isConnection)\n                  .map((fld) => {\n                     return {\n                        id: fld.id,\n                        value: fld.label,\n                     };\n                  });\n            }\n\n            columnOptUI = {\n               gravity: 2,\n               rows: [\n                  columnOptUI,\n                  {\n                     view: \"richselect\",\n                     label: \"=\",\n                     labelWidth: 20,\n                     abName: \"columnLinkData\",\n                     hidden: true,\n                     options: linkFieldOptions,\n                     value: linkFieldOptions[0] ? linkFieldOptions[0].id : null,\n                  },\n               ],\n            };\n         }\n\n         uiColumns.push({\n            view: \"layout\",\n            borderless: true,\n            cols: [\n               {\n                  view: \"template\",\n                  gravity: 1,\n                  borderless: true,\n                  css: { \"padding-top\": 10 },\n                  template: `<span class=\"fa fa-${f.icon}\"></span> ${f.label}`,\n               },\n               columnOptUI,\n            ],\n         });\n      });\n      abWebix.ui(uiColumns, $columnList);\n\n      this.loadDataToGrid();\n   }\n\n   toggleLinkFields($columnOption) {\n      if (!$columnOption) return;\n\n      const $optionPanel = $columnOption.getParentView();\n      const $linkFieldOption = $optionPanel.queryView(\n         { abName: \"columnLinkData\" },\n         \"all\"\n      )[0];\n\n      if (!$linkFieldOption) return;\n\n      if ($columnOption.getValue() === \"none\") $linkFieldOption.hide();\n      else $linkFieldOption.show();\n   }\n\n   overLimitAlert(data) {\n      const limit = 1000;\n\n      if (data.length > limit) {\n         // we only allow 1000 record imports\n         this.AB.Webix.alert({\n            title: this.label(\"Too many records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"Due to browser limitations we only allow imports of {0} records. Please upload a new CSV or deselect records to import.\",\n               [limit]\n            ),\n         });\n\n         return true;\n      }\n\n      return false;\n   }\n\n   loadDataToGrid() {\n      const ids = this.ids;\n      const $datatable = $$(ids.datatable);\n      const ab = this.AB;\n\n      if (!$datatable) return;\n\n      $datatable.clearAll();\n\n      // show loading cursor\n      $datatable.showProgress?.({ type: \"icon\" });\n\n      /** Prepare Columns */\n      const matchFields = this.getMatchFields();\n      const columns = [];\n\n      // add \"status\" column\n      columns.push({\n         id: \"_status\",\n         header: \"\",\n         template: this.statusTemplate,\n         width: 30,\n      });\n\n      // add \"checkbox\" column\n      columns.push({\n         id: \"_included\",\n         header: { content: \"masterCheckbox\" },\n         template: \"{common.checkbox()}\",\n         width: 30,\n      });\n\n      const fieldValidations = [];\n      const rulePops = [];\n\n      // populate columns\n      (matchFields || []).forEach((f) => {\n         let validationRules = f.field.settings.validationRules;\n         // parse the rules because they were stored as a string\n         // check if rules are still a string...if so lets parse them\n         if (validationRules && typeof validationRules === \"string\")\n            validationRules = JSON.parse(validationRules);\n\n         if (validationRules?.length) {\n            const validationUI = [];\n\n            // there could be more than one so lets loop through and build the UI\n            validationRules.forEach((rule) => {\n               const Filter = ab.filterComplexNew(\n                  `${f.field.id}_${ab.Webix.uid()}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               validationUI.push(Filter.ui);\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.field.id,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n                  columnIndex: f.columnIndex,\n               });\n            });\n\n            // create a unique view id for popup\n            const popUpId = `${ids.rules}_${f.field.id}_${ab.Webix.uid()}`;\n\n            // store the popup ids so we can remove the later\n            rulePops.push(popUpId);\n            // add the popup to the UI but don't show it\n            ab.Webix.ui({\n               view: \"popup\",\n               css: \"ab-rules-popup\",\n               id: popUpId,\n               body: {\n                  rows: validationUI,\n               },\n            });\n         }\n\n         const editor = f.field?.key == \"number\" ? \"number\" : \"text\";\n\n         columns.push({\n            id: f.columnIndex,\n            header: f.field.label,\n            editor: editor,\n            template: (obj, common, value /*, col, ind */) =>\n               value.replace(/[<]/g, \"&lt;\"),\n            minWidth: 150,\n            fillspace: true,\n         });\n      });\n\n      if (fieldValidations.length) {\n         // we need to store the rules for use later so lets build a container array\n         const complexValidations = [];\n\n         fieldValidations.forEach((f) => {\n            // init each ui to have the properties (app and fields) of the object we are editing\n            // f.filter.applicationLoad(App);\n            f.filter.fieldsLoad(this.CurrentObject.fields());\n            // now we can set the value because the fields are properly initialized\n            f.filter.setValue(f.validationRules);\n            // if there are validation rules present we need to store them in a lookup hash\n            // so multiple rules can be stored on a single field\n            if (!Array.isArray(complexValidations[f.columnName]))\n               complexValidations[f.columnName] = [];\n\n            // now we can push the rules into the hash\n            complexValidations[f.columnName].push({\n               filters: $$(f.view).getFilterHelper(),\n               values: $datatable.getSelectedItem(),\n               invalidMessage: f.invalidMessage,\n               columnIndex: f.columnIndex,\n            });\n         });\n\n         const rules = {};\n\n         // store the rules in a data param to be used later\n         $datatable.$view.complexValidations = complexValidations;\n\n         // use the lookup to build the validation rules\n         Object.keys(complexValidations).forEach((key) => {\n            rules[key] = (value, data) => {\n               // default valid is true\n               let isValid = true;\n\n               $datatable.$view.complexValidations[key].forEach((filter) => {\n                  const rowValue = {};\n                  // use helper funtion to check if valid\n                  // map the column names to the index numbers of data\n                  // reformat data to display\n\n                  (matchFields || []).forEach((f) => {\n                     const record = data[f.columnIndex];\n\n                     if (\n                        f.field.key === \"date\" &&\n                        record.includes(\"Invalid date\")\n                     )\n                        isValid = false;\n\n                     rowValue[f.field.id] = record;\n                  });\n\n                  const ruleValid = filter.filters(rowValue);\n\n                  // if invalid we need to tell the field\n                  if (!ruleValid) {\n                     isValid = false;\n                     // this.AB.Webix.message({\n                     //    type: \"error\",\n                     //    text: invalidMessage\n                     // });\n                  }\n               });\n\n               return isValid;\n            };\n         });\n         // define validation rules\n         $datatable.define(\"rules\", rules);\n         // store the array of view ids on the webix object so we can get it later\n         $datatable.config.rulePops = rulePops;\n         $datatable.refresh();\n      } else {\n         // check if the previous datatable had rule popups and remove them\n         if ($datatable.config.rulePops) {\n            $datatable.config.rulePops.forEach((popup) => {\n               const $popup = $$(popup);\n\n               if (!$popup) return;\n\n               $popup.destructor();\n            });\n         }\n\n         // remove any validation rules from the previous table\n         $datatable.define(\"rules\", {});\n         $datatable.refresh();\n      }\n\n      /** Prepare Data */\n      const parsedData = [];\n\n      (this._dataRows || []).forEach((row, index) => {\n         const rowValue = {\n            id: index + 1,\n         };\n\n         // reformat data to display\n         (matchFields || []).forEach((f) => {\n            const data = row[f.columnIndex - 1];\n\n            if (f.field.key === \"date\") {\n               // let dateFormat = moment(data, f.format).format(\n               //    \"YYYY-MM-DD\"\n               // );\n               // debugger;\n               let dateFormat = ab.rules.toDate(data, {\n                  format: f.format,\n               });\n               dateFormat = ab.rules.toDateFormat(dateFormat, {\n                  format: \"YYYY-MM-DD\",\n               });\n\n               if (dateFormat === \"Invalid date\")\n                  dateFormat = dateFormat + \" - \" + data;\n\n               rowValue[f.columnIndex] = dateFormat;\n            } else rowValue[f.columnIndex] = data; // array to object\n         });\n\n         // insert \"true\" value of checkbox\n         rowValue[\"_included\"] = true;\n\n         parsedData.push(rowValue);\n      });\n\n      // skip the first line\n      const isSkipFirstLine = $$(ids.headerOnFirstLine).getValue();\n\n      if (isSkipFirstLine && parsedData.length > 1) parsedData.shift();\n\n      const $importButton = $$(ids.importButton);\n\n      $importButton.setValue(this.labelImport(parsedData));\n      $datatable.refreshColumns(columns);\n      $datatable.parse(parsedData);\n\n      if (this.overLimitAlert(parsedData)) $importButton.disable();\n      else $importButton.enable();\n\n      // hide loading cursor\n      $datatable.hideProgress?.();\n   }\n\n   refreshRemainingTimeText(startUpdateTime, total, index) {\n      const ids = this.ids;\n\n      // Calculate remaining time\n      const spentTime = new Date() - startUpdateTime; // milliseconds that has passed since last completed record since start\n\n      const averageRenderTime = spentTime / index; // average milliseconds per single render at this point\n\n      const remainTime = averageRenderTime * (total - index);\n\n      let result = \"\";\n\n      // Convert milliseconds to a readable string\n      const days = (remainTime / 86400000).toFixed(0);\n      const hours = (remainTime / 3600000).toFixed(0);\n      const minutes = (remainTime / 60000).toFixed(0);\n      const seconds = (remainTime / 1000).toFixed(0);\n\n      if (seconds < 1) result = \"\";\n      else if (seconds < 60)\n         result = this.label(\"Approximately {0} second(s) remaining\", [\n            seconds,\n         ]);\n      // result = `Approximately ${seconds} second${\n      //    seconds > 1 ? \"s\" : \"\"\n      // }`;\n      else if (minutes == 1)\n         result = this.label(\"Approximately 1 minute {0} seconds remaining\", [\n            seconds - 60,\n         ]);\n      // result = `Approximately 1 minute ${seconds - 60} seconds`;\n      else if (minutes < 60)\n         result = this.label(\"Approximately {0} minutes remaining\", [minutes]);\n      else if (hours < 24)\n         result = this.label(\"Approximately {0} hour(s) remaining\", [hours]);\n      else result = this.label(\"Approximately {0} day(s) remaining\", [days]);\n\n      if (result) {\n         $$(ids.importButton)?.setValue(result);\n      } else {\n         const selected = $$(ids.datatable)?.find({ _included: true });\n         $$(ids.importButton)?.setValue(this.labelImport(selected));\n      }\n   }\n\n   /**\n    * @method getMatchFields\n    *\n    * @return {Object} - [\n    *                      {\n    *                         columnIndex: {number},\n    *                         field: {ABField},\n    *                         searchField: {ABField} [optional]\n    *                      },\n    *                      ...\n    *                    ]\n    */\n   getMatchFields() {\n      const result = [];\n      const ids = this.ids;\n\n      // get richselect components\n      const $selectorViews = $$(ids.columnList)\n         .queryView({ abName: \"columnIndex\" }, \"all\")\n         .filter((selector) => selector.getValue() != \"none\");\n\n      ($selectorViews || []).forEach(($selector) => {\n         const currentObject = this.CurrentObject;\n\n         if (!currentObject) return;\n\n         // webix .options list disallow value 0\n         const field = currentObject.fieldByID($selector.config.fieldId);\n\n         if (!field) return;\n\n         const colIndex = $selector.getValue();\n         const fieldData = {\n            columnIndex: colIndex,\n            field: field,\n         };\n\n         if (field.key === \"date\") {\n            const $optionPanel = $selector.getParentView();\n            const $dateFormatSelectors = $optionPanel.queryView(\n               { abName: \"columnDateFormat\" },\n               \"all\"\n            );\n\n            // define the column to compare data to search .id\n            if ($dateFormatSelectors) {\n               $dateFormatSelectors.forEach((selector) => {\n                  fieldData[selector.config.name] = selector.getValue();\n               });\n\n               // convert all dates into mysql date format YYYY-DD-MM\n               let format;\n\n               switch (fieldData.order) {\n                  case \"1\":\n                     format =\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"2\":\n                     format =\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.year;\n                     break;\n                  case \"3\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.month +\n                        fieldData.separator +\n                        fieldData.day;\n                     break;\n                  case \"4\":\n                     format =\n                        fieldData.year +\n                        fieldData.separator +\n                        fieldData.day +\n                        fieldData.separator +\n                        fieldData.month;\n               }\n\n               fieldData.format = format;\n            }\n         }\n\n         if (field.isConnection) {\n            const $optionPanel = $selector.getParentView();\n            const $linkDataSelector = $optionPanel.queryView(\n               { abName: \"columnLinkData\" },\n               \"all\"\n            )[0];\n\n            // define the column to compare data to search .id\n            if ($linkDataSelector) {\n               const searchField = field.datasourceLink.fieldByID(\n                  $linkDataSelector.getValue()\n               );\n\n               fieldData.searchField = searchField;\n            }\n         }\n\n         result.push(fieldData);\n      });\n\n      return result;\n   }\n\n   labelImport(selected) {\n      let length = selected;\n\n      if (Array.isArray(selected)) length = selected.length;\n\n      return this.label(\"Import {0} Records\", [length]);\n   }\n\n   /**\n    * @method import\n    *\n    * @return {Promise}\n    */\n   async import() {\n      // if (dv == null) return Promise.resolve();\n\n      // // get ABObject\n      // let obj = dv.datasource;\n\n      // Make sure we are connected to an Object\n      const currentObject = this.CurrentObject;\n\n      if (!currentObject) return;\n\n      // get ABModel\n      // let model = dv.model;\n      // if (model == null) return Promise.resolve();\n\n      const ids = this.ids;\n      const $importButton = $$(ids.importButton);\n\n      $importButton.disable();\n\n      // Show loading cursor\n      const $form = $$(ids.form);\n      const $progressBar = $$(ids.progressBar);\n\n      $form.showProgress({ type: \"icon\" });\n      $progressBar.showProgress({\n         type: \"top\",\n         position: 0.0001,\n      });\n\n      // get richselect components\n      const matchFields = this.getMatchFields();\n\n      // Get object's model\n      const objModel = currentObject.model();\n      const $datatable = $$(ids.datatable);\n      const selectedRows = $datatable.find({ _included: true });\n\n      let _currProgress = 0;\n\n      const increaseProgressing = () => {\n         _currProgress += 1;\n         $progressBar.showProgress({\n            type: \"bottom\",\n            position: _currProgress / selectedRows.length,\n         });\n      };\n      const itemFailed = (itemId, errMessage) => {\n         if ($datatable) {\n            // set \"fail\" status\n            $datatable.addRowCss(itemId, \"row-fail\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"fail\",\n               _errorMsg: errMessage,\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n\n         console.error(errMessage);\n      };\n      const abWebix = this.AB.Webix;\n      const itemInvalid = (itemId, errors = []) => {\n         if ($datatable) {\n            // combine all error messages to display in tooltip\n            const errorMsg = [];\n            // mark which column are invalid\n            errors.forEach((err) => {\n               if (!err?.name) return;\n\n               const fieldInfo = matchFields.filter(\n                  (f) => f.field && f.field.columnName == err.name\n               )[0];\n\n               errorMsg.push(err.name + \": \" + err.message);\n               // we also need to define an error message\n               // abWebix.message({\n               //    type: \"error\",\n               //    text: err.name + \": \" + err.message\n               // });\n            });\n\n            // set \"fail\" status\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"invalid\",\n               _errorMsg: errorMsg.join(\"</br>\"),\n            });\n            $datatable.unblockEvent();\n            $datatable.addRowCss(itemId, \"webix_invalid\");\n         }\n         // increaseProgressing();\n      };\n      const itemPass = (itemId) => {\n         if ($datatable) {\n            // set \"done\" status\n            $datatable.removeRowCss(itemId, \"row-fail\");\n            $datatable.addRowCss(itemId, \"row-pass\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"done\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n         }\n\n         increaseProgressing();\n      };\n      const itemValid = (itemId) => {\n         if ($datatable) {\n            // mark all columns valid (just in case they were invalid before)\n            // matchFields.forEach((f) => {\n            //    $datatable.removeCellCss(\n            //       itemId,\n            //       f.columnIndex,\n            //       \"webix_invalid_cell\"\n            //    );\n            // });\n            // highlight the row\n            $datatable.removeRowCss(itemId, \"webix_invalid\");\n            $datatable.blockEvent();\n            $datatable.updateItem(itemId, {\n               _status: \"\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n            // $datatable.addRowCss(itemId, \"row-pass\");\n         }\n      };\n      const $statusMessage = $$(ids.statusMessage);\n      const uiCleanUp = () => {\n         // To Do anyUI updates\n         // console.log(\"ui clean up now\");\n         $importButton.enable();\n\n         // Hide loading cursor\n         $form.hideProgress();\n         $progressBar.hideProgress();\n\n         $statusMessage.setValue(\"\");\n         $statusMessage.hide();\n\n         const selected = $datatable.find({ _included: true });\n\n         $importButton.setValue(this.labelImport(selected));\n         this.emit(\"done\");\n      };\n\n      const validRows = [];\n\n      let allValid = true;\n\n      // Pre Check Validations of whole CSV import\n      // update row to green if valid\n      // update row to red if !valid\n      (selectedRows || []).forEach((data, index) => {\n         const newRowData = this.getParentValues();\n\n         matchFields.forEach((f) => {\n            if (!f.field?.key) return;\n\n            switch (f.field.key) {\n               // case \"connectObject\":\n               //    // skip\n               //    break;\n               case \"number\":\n                  if (typeof data[f.columnIndex] !== \"number\") {\n                     newRowData[f.field.columnName] = (\n                        data[f.columnIndex] || \"\"\n                     ).replace(/[^-0-9.]/gi, \"\");\n\n                     break;\n                  }\n\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n\n               default:\n                  newRowData[f.field.columnName] = data[f.columnIndex];\n\n                  break;\n            }\n         });\n\n         let isValid = false;\n         let errorMsg = \"\";\n\n         // first check legacy and server side validation\n         const validator = currentObject.isValidData(newRowData);\n\n         isValid = validator.pass();\n         errorMsg = validator.errors;\n\n         if (isValid)\n            // now check complex field validation rules\n            isValid = $datatable.validate(data.id);\n         else {\n            allValid = false;\n\n            itemInvalid(data.id, errorMsg);\n         }\n\n         if (isValid) {\n            itemValid(data.id);\n            validRows.push({ id: data.id, data: newRowData });\n         } else allValid = false;\n\n         // $datatable.unblockEvent();\n      });\n\n      if (!allValid) {\n         // To Do anyUI updates\n         // $importButton.enable();\n         //\n         // // Hide loading cursor\n         // $form.hideProgress();\n         // $progressBar.hideProgress();\n         // $statusMessage.setValue(\"\");\n         // $statusMessage.hide();\n         //\n         // // _logic.hide();\n         //\n         // if (_logic.callbacks && _logic.callbacks.onDone)\n         //    _logic.callbacks.onDone();\n         uiCleanUp();\n\n         abWebix.alert({\n            title: this.label(\"Invalid Data\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\n               \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n            ),\n         });\n\n         return;\n      }\n\n      // if pass, then continue to process each row\n      // ?? : can we process in Parallel?\n      // ?? : implement hash Lookups for connected Fields\n      const hashLookups = {};\n      // {obj}  /*  { connectField.id : { 'searchWord' : \"uuid\"}}\n      // use this hash to reduce the # of lookups needed to fill in our\n      // connected entries\n\n      const connectedFields = matchFields.filter(\n         (f) => f && f.field?.isConnection && f.searchField\n      );\n\n      const throttledSize = 10;\n      let startUpdateTime;\n      let numDone = 0;\n\n      try {\n         // forEach connectedFields in csv\n         const allLookups = [];\n\n         (connectedFields || []).forEach((f) => {\n            const connectField = f.field;\n            // const searchWord = newRowData[f.columnIndex];\n            const connectObject = connectField.datasourceLink;\n\n            if (!connectObject) return;\n\n            const connectModel = connectObject.model();\n\n            if (!connectModel) return;\n\n            const linkIdKey = connectField.indexField\n               ? connectField.indexField.columnName\n               : connectField.object.PK();\n\n            // prepare default hash entry:\n            hashLookups[connectField.id] = {};\n\n            // load all values of connectedField entries\n            const gethashLookup = async () => {\n               try {\n                  const list = await connectModel.findAll({\n                     where: {}, // !!!\n                     populate: false,\n                  });\n                  const data = list.data || list;\n\n                  (data || []).forEach((row) => {\n                     // store in hash[field.id] = { 'searchKey' : \"uuid\" }\n\n                     hashLookups[connectField.id][\n                        row[f.searchField.columnName]\n                     ] = row[linkIdKey];\n                  });\n               } catch (err) {\n                  console.error(err);\n               }\n            };\n\n            allLookups.push(gethashLookup());\n         });\n\n         await Promise.all(allLookups);\n\n         // forEach validRow\n         validRows.forEach((data) => {\n            const newRowData = data.data;\n\n            // update the datagrid row to in-progress\n            $datatable.blockEvent();\n            $datatable.updateItem(data.id, {\n               _status: \"in-progress\",\n               _errorMsg: \"\",\n            });\n            $datatable.unblockEvent();\n\n            // forEach ConnectedField\n            (connectedFields || []).forEach((f) => {\n               // find newRowData[field.columnName] = { field.PK : hash[field.id][searchWord] }\n               const connectField = f.field;\n               const linkIdKey = connectField.indexField\n                  ? connectField.indexField.columnName\n                  : connectField.object.PK();\n               const uuid =\n                  hashLookups[connectField.id][\n                     newRowData[connectField.columnName]\n                  ];\n\n               if (!uuid) {\n                  itemInvalid(data.id, [{ name: connectField.columnName }]);\n                  allValid = false;\n               }\n\n               newRowData[connectField.columnName] = {};\n               newRowData[connectField.columnName][linkIdKey] = uuid;\n            });\n         });\n\n         if (!allValid) {\n            abWebix.alert({\n               title: this.label(\"Invalid Data\"),\n               ok: this.label(\"Ok\"),\n               text: this.label(\n                  \"The highlighted row has invalid data. Please edit in the window or update the CSV and try again.\"\n               ),\n            });\n            uiCleanUp();\n\n            return;\n         }\n\n         // NOTE: Parallel exectuion of all these:\n         const allSaves = [];\n         const createRecord = (objModel, newRowsData, element, total) =>\n            new Promise((resolve, reject) => {\n               element.doRecordRulesPre(newRowsData);\n\n               const processResult = async () => {\n                  try {\n                     const result = await objModel.batchCreate({\n                        batch: newRowsData,\n                     });\n                     const resultErrors = result.errors;\n\n                     // Show errors of each row\n                     Object.keys(resultErrors).forEach((rowIndex) => {\n                        const error = resultErrors[rowIndex];\n\n                        if (error) {\n                           itemFailed(\n                              rowIndex,\n                              error.message || error.sqlMessage || error\n                           );\n                        }\n                     });\n\n                     const resultData = result.data;\n                     const penddingRecordRules = [];\n\n                     Object.keys(resultData).forEach((rowIndex) => {\n                        penddingRecordRules.push(\n                           new Promise((resolve, reject) => {\n                              // Process Record Rule\n                              const processRowData = async () => {\n                                 try {\n                                    await element.doRecordRules(\n                                       resultData[rowIndex]\n                                    );\n\n                                    itemPass(rowIndex);\n                                    resolve();\n                                 } catch (err) {\n                                    itemFailed(rowIndex, err);\n                                    reject(\"that didn't work\");\n                                 }\n                              };\n\n                              processRowData();\n                           })\n                        );\n                     });\n\n                     const waitPenddingRecordRules = async () => {\n                        try {\n                           await Promise.all(penddingRecordRules);\n\n                           newRowsData.forEach((row) => {\n                              // itemPass(row.id);\n                              numDone++;\n                              if (numDone % throttledSize == 0) {\n                                 this.refreshRemainingTimeText(\n                                    startUpdateTime,\n                                    validRows.length,\n                                    numDone\n                                 );\n                              }\n                           });\n\n                           if (numDone === total) {\n                              uiCleanUp();\n                              $importButton.disable();\n                           }\n\n                           resolve();\n                        } catch (err) {\n                           // newRowsData.forEach((row) => {\n                           //    itemFailed(row.id, err);\n                           // });\n                           // throw err;\n                           reject(err);\n                        }\n                     };\n\n                     await waitPenddingRecordRules();\n                  } catch (err) {\n                     console.error(err);\n                     reject(err);\n                  }\n               };\n\n               processResult();\n            });\n\n         validRows.forEach((data) => {\n            allSaves.push({ id: data.id, data: data.data });\n         });\n\n         // we are going to store these promises in an array of\n         // arrays with 50 in each sub array\n         const throttledSaves = [];\n         const total = allSaves.length;\n\n         let index = 0;\n\n         while (allSaves.length) {\n            throttledSaves[index] = allSaves.splice(0, throttledSize);\n\n            index++;\n         }\n\n         // execute the array of array of 100 promises one at at time\n         const performThrottledSaves = (\n            currentRecords,\n            remainingRecords,\n            importer,\n            total\n         ) =>\n            new Promise((resolve, reject) => {\n               // execute the next 100\n               // const requests = currentRecords.map((data) => {\n               //    return createRecord(\n               //       objModel,\n               //       data.record,\n               //       data.data,\n               //       importer\n               //    );\n               // });\n\n               const processRequest = async () => {\n                  try {\n                     await createRecord(\n                        objModel,\n                        currentRecords,\n                        importer,\n                        total\n                     );\n\n                     // when done get the next 10\n                     const nextRecords = remainingRecords.shift();\n\n                     // if there are any remaining in the group call performThrottledSaves\n                     if (nextRecords?.length) {\n                        await performThrottledSaves(\n                           nextRecords,\n                           remainingRecords,\n                           importer,\n                           total\n                        );\n                     } else {\n                        // uiCleanUp();\n                        resolve();\n                     }\n                  } catch (err) {\n                     // Handle errors here\n                     reject(err);\n                  }\n               };\n\n               processRequest();\n            });\n\n         // now we are going to processes these new containers one at a time\n         // $datatable.blockEvent();\n         // this is when the real work starts so lets begin our countdown timer now\n         startUpdateTime = new Date();\n         // get the first group of Promises out of the collection\n         const next = throttledSaves.shift();\n\n         // execute our Promise iterator\n         await performThrottledSaves(next, throttledSaves, this.view, total);\n      } catch (err) {\n         // resolve Error UI\n         abWebix.alert({\n            title: this.label(\"Error Creating Records\"),\n            ok: this.label(\"Ok\"),\n            text: this.label(\"One or more records failed upon creation.\"),\n         });\n         // $datatable.unblockEvent();\n         uiCleanUp();\n         console.error(err);\n      }\n   }\n\n   // Display linked data\n   uiLinkedData() {\n      const dcLink = this.datacollection?.datacollectionLink;\n      const linkedData = dcLink?.getCursor();\n      if (!linkedData) return;\n\n      return {\n         view: \"window\",\n         modal: true,\n         resize: false,\n         head: {\n            view: \"toolbar\",\n            cols: [\n               {},\n               {\n                  view: \"button\",\n                  width: 35,\n                  css: \"webix_transparent\",\n                  type: \"icon\",\n                  icon: \"nomargin fa fa-times\",\n                  click: () => {\n                     this.hideLinkedData();\n                  },\n               },\n            ],\n         },\n         body: {\n            view: \"property\",\n            id: \"sets\",\n            editable: false,\n            width: 400,\n            height: 200,\n            elements: [\n               { label: this.label(\"Linked Data\"), type: \"label\" },\n               {\n                  label: \"ID\",\n                  type: \"text\",\n                  value: linkedData.uuid ?? linkedData.id,\n               },\n               {\n                  label: \"Label\",\n                  type: \"text\",\n                  value: dcLink.datasource.displayData(linkedData),\n               },\n            ],\n         },\n      };\n   }\n\n   showLinkedData() {\n      const ui = this.uiLinkedData();\n      this._info_popup = this.AB.Webix.ui(ui);\n      this._info_popup.show($$(this.ids.linkedDataButton).$view, {\n         pos: \"top\",\n      });\n   }\n\n   hideLinkedData() {\n      this._info_popup?.hide();\n   }\n\n   getParentValues() {\n      const result = {};\n\n      // get ABDatacollection\n      const dc = this.datacollection;\n      const currentObject = this.CurrentObject;\n\n      // Set parent's data collection cursor\n      const dcLink = dc?.datacollectionLink;\n      const linkConnectFields = [];\n\n      let objectLink;\n      let linkValues;\n\n      if (dcLink?.getCursor()) {\n         objectLink = dcLink.datasource;\n\n         linkConnectFields.push(\n            ...currentObject.fields(\n               (f) => f.isConnection && f.settings.linkObject === objectLink.id\n            )\n         );\n\n         linkValues = dcLink.getCursor();\n      }\n\n      // Set parent's data collection cursor\n      if (objectLink && linkConnectFields.length && linkValues) {\n         linkConnectFields.forEach((f) => {\n            const linkColName = f.indexField\n               ? f.indexField.columnName\n               : objectLink.PK();\n\n            result[f.columnName] = result[f.columnName] ?? {};\n            result[f.columnName][linkColName] =\n               linkValues[linkColName] ?? linkValues.id;\n         });\n      }\n\n      return result;\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartAreaComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartArea_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.areaType,\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         series: [\n            {\n               alpha: 0.7,\n               value: \"#value#\",\n               color: \"#ee4339\",\n            },\n            {\n               alpha: 0.4,\n               value: \"#value2#\",\n               color: \"#a7ee70\",\n            },\n         ],\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartBarComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartBar_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.barType,\n         preset: settings.barPreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue, //\"#stepValue#\",\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend:\n            settings.barType === \"bar\" || !settings.barType\n               ? settings.isLegend\n                  ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n                  : \"\"\n               : settings.isLegend\n               ? {\n                    template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                    values: [], // TODO : bug in webix 5.1.7\n                 }\n               : null,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewChartComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChart_${baseView.id}`, ids);\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      const $component = $$(this.ids.component);\n      const abWebix = this.AB.Webix;\n\n      if ($component) abWebix.extend($component, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const dc = this.datacollection;\n\n      if (dc) {\n         const eventNames = [\n            \"changeCursor\",\n            \"cursorStale\",\n            \"create\",\n            \"update\",\n            \"delete\",\n            \"initializedData\",\n         ];\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            // QUESTION: is this a problem if the check !(key in (...)) finds\n            // an event that some OTHER widget has added and not this one?\n            if (\n               dc.datacollectionLink &&\n               !(key in (dc.datacollectionLink._events ?? []))\n            )\n               baseView.eventAdd({\n                  emitter: dc.datacollectionLink,\n                  eventName: key,\n                  listener: () => {\n                     baseView.refreshData();\n                  },\n               });\n         });\n\n         eventNames.forEach((evtName) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: evtName,\n               listener: () => {\n                  baseView.refreshData();\n               },\n            });\n         });\n      }\n\n      baseView.refreshData();\n   }\n\n   onShow() {\n      super.onShow();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewChartContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewChartContainer_${baseView.id}`,\n         Object.assign(\n            {\n               chartContainer: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiChartComponent) {\n      const _ui = super.ui([\n         Object.assign({ id: this.ids.chartContainer }, uiChartComponent ?? {}),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n   }\n\n   onShow() {\n      super.onShow();\n      // if (!this._isShow) {\n\n      // Mark this widget is showing\n      const baseView = this.view;\n\n      baseView._isShow = true;\n\n      this.refreshData(baseView.parent.getDCChart());\n      // }\n   }\n\n   refreshData(dcChart) {\n      const $chartContainer = $$(this.ids.chartContainer);\n      const $chartComponent = $$(this.ids.component);\n\n      if ($chartContainer?.data) $chartContainer.data.sync(dcChart);\n\n      setTimeout(() => {\n         $chartComponent?.adjust();\n         $chartContainer?.adjust();\n      }, 160);\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartLineComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartLine_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.lineType,\n         preset: settings.linePreset,\n         value: \"#value#\",\n         color: \"#color#\",\n         yAxis: {\n            start: 0,\n            step: settings.stepValue,\n            end: settings.maxValue, //\"#maxValue#\"\n         },\n         xAxis: {\n            template: settings.isLegend\n               ? `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`\n               : \"\",\n         },\n         legend: settings.isLegend\n            ? {\n                 template: `<div style='font-size:${settings.labelFontSize}px;'>#label#</div>`,\n                 values: [], // TODO : bug in webix 5.1.7\n              }\n            : null,\n         height: settings.chartHeight,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewChartContainerComponent = require(\"./ABViewChartContainerComponent\");\n\nmodule.exports = class ABViewChartPieComponent extends (\n   ABViewChartContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewChartPie_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const settings = this.settings;\n\n      return super.ui({\n         view: \"chart\",\n         type: settings.pieType,\n         value: \"#value#\",\n         color: \"#color#\",\n         legend: settings.isLegend\n            ? {\n                 width: this.view.parent.settings.labelWidth,\n                 template: `<div style='font-size: ${settings.labelFontSize}px;'>#label#</div>`,\n              }\n            : null,\n         pieInnerText: `<div style='font-size: ${settings.innerFontSize}px;'>#value#</div>`,\n         shadow: 1,\n         height: settings.height,\n         // width: settings.chartWidth,\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewCommentComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewComment_${baseView.id}`,\n         Object.assign(\n            {\n               comment: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const _ui = super.ui([\n         {\n            id: this.ids.comment,\n            view: \"comments\",\n            users: baseView.getUserData(),\n            currentUser: baseView.getCurrentUserId(),\n            height: this.settings.height,\n            data: this.getCommentData(),\n            on: {\n               onBeforeAdd: (id, obj, index) => {\n                  this.addComment(obj.text, new Date());\n               },\n               // NOTE: no update event of comment widget !!\n               // Updating event handles in .init function\n               // https://docs.webix.com/api__ui.comments_onbeforeeditstart_event.html#comment-4509366150\n\n               // onAfterEditStart: function (rowId) {\n               //    let item = this.getItem(rowId);\n\n               //    _logic.updateComment(rowId, item);\n               // },\n               onAfterDelete: (rowId) => {\n                  this.deleteComment(rowId);\n               },\n            },\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      baseView.__dvEvents = baseView.__dvEvents || {};\n\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if ($comment) {\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) {\n            // Updating comment event\n            if (!baseView.__dvEvents.onStoreUpdated)\n               baseView.__dvEvents.onStoreUpdated =\n                  $commentList.data.attachEvent(\n                     \"onStoreUpdated\",\n                     (rowId, data, operate) => {\n                        if (operate === \"update\") {\n                           this.updateComment(rowId, (data || {}).text);\n                        }\n                     }\n                  );\n\n            // Implement progress bar\n            webix.extend($commentList, webix.ProgressBar);\n         }\n      }\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      // bind dc to component\n      // dv.bind($$(ids.comment));\n\n      if (!baseView.__dvEvents.create)\n         baseView.__dvEvents.create = dv.on(\"create\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.update)\n         baseView.__dvEvents.update = dv.on(\"update\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.delete)\n         baseView.__dvEvents.delete = dv.on(\"delete\", () =>\n            this.refreshComment()\n         );\n\n      if (!baseView.__dvEvents.loadData)\n         baseView.__dvEvents.loadData = dv.on(\"loadData\", () =>\n            this.refreshComment()\n         );\n\n      $comment.refresh();\n   }\n\n   getCommentData() {\n      const baseView = this.view;\n      const dv = this.datacollection;\n\n      if (!dv) return null;\n\n      const userCol = baseView.getUserField();\n      const commentCol = baseView.getCommentField();\n      const dateCol = baseView.getDateField();\n\n      if (!userCol || !commentCol) return null;\n\n      const userColName = userCol.columnName;\n      const commentColName = commentCol.columnName;\n      const dateColName = dateCol ? dateCol.columnName : null;\n      const dataObject = dv.getData();\n      const dataList = [];\n\n      dataObject.forEach((item, index) => {\n         if (item[commentColName]) {\n            const user = baseView.getUserData().find((user) => {\n               return user.value === item[userColName];\n            });\n            const data = {\n               id: item.id,\n               user_id: user ? user.id : 0,\n               date: item[dateColName] ? new Date(item[dateColName]) : null,\n               default_date: new Date(item[\"created_at\"]),\n               text: item[commentColName],\n            };\n\n            dataList.push(data);\n         }\n      });\n\n      dataList.sort(function (a, b) {\n         if (dateColName)\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n         else\n            return (\n               new Date(a.default_date).getTime() -\n               new Date(b.default_date).getTime()\n            );\n      });\n\n      return dataList;\n   }\n\n   refreshComment() {\n      const baseView = this.view;\n\n      if (baseView.__refreshTimeout) clearTimeout(baseView.__refreshTimeout);\n\n      this.busy();\n\n      const ids = this.ids;\n\n      baseView.__refreshTimeout = setTimeout(() => {\n         const $comment = $$(ids.comment);\n\n         if (!$comment) return;\n\n         // clear comments\n         const $commentList = $comment.queryView({ view: \"list\" });\n\n         if ($commentList) $commentList.clearAll();\n\n         // populate comments\n         const commentData = this.getCommentData();\n\n         if (commentData) {\n            $comment.parse(commentData);\n         }\n\n         // scroll to the last item\n         if ($commentList) $commentList.scrollTo(0, Number.MAX_SAFE_INTEGER);\n\n         delete baseView.__refreshTimeout;\n\n         this.ready();\n      }, 90);\n   }\n\n   addComment(commentText, dateTime) {\n      this.saveData(commentText, dateTime);\n   }\n\n   async updateComment(rowId, commentText) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return; // already notified\n\n      const commentField = baseView.getCommentField();\n\n      if (!commentField) return; // already notified\n\n      const values = {};\n\n      values[commentField.columnName] = commentText ?? \"\";\n\n      return await model.update(rowId, values);\n   }\n\n   async deleteComment(rowId) {\n      const baseView = this.view;\n      const model = baseView.model();\n\n      if (!model) return;\n\n      return await model.delete(rowId);\n   }\n\n   busy() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.disable();\n\n      if ($commentList.showProgress)\n         $commentList.showProgress({ type: \"icon\" });\n   }\n\n   ready() {\n      const ids = this.ids;\n      const $comment = $$(ids.comment);\n\n      if (!$comment) return;\n\n      const $commentList = $comment.queryView({ view: \"list\" });\n\n      if (!$commentList) return;\n\n      $commentList.enable();\n\n      if ($commentList.hideProgress) $commentList.hideProgress();\n   }\n\n   async saveData(commentText, dateTime) {\n      if (!commentText) return;\n\n      const dv = this.datacollection;\n\n      if (!dv) return;\n\n      const baseView = this.view;\n      const model = baseView.model();\n      const ab = this.AB;\n\n      if (!model) {\n         ab.notify.builder(\n            {},\n            {\n               message:\n                  \"ABViewComment.saveData(): could not pull a model to work with.\",\n               viewName: baseView.label,\n            }\n         );\n\n         return;\n      }\n\n      const comment = {};\n      const userField = baseView.getUserField();\n\n      if (userField) comment[userField.columnName] = ab.Account.username();\n\n      const commentField = baseView.getCommentField();\n\n      if (commentField) comment[commentField.columnName] = commentText;\n\n      const dateField = baseView.getDateField();\n\n      if (dateField) comment[dateField.columnName] = dateTime;\n\n      // add parent cursor to default\n      const dvLink = dv.datacollectionLink;\n\n      if (dvLink?.getCursor()) {\n         const objectLink = dvLink.datasource;\n         const fieldLink = dv.fieldLink;\n\n         if (objectLink && fieldLink) {\n            comment[fieldLink.columnName] = {};\n            comment[fieldLink.columnName][objectLink.PK()] =\n               dvLink.getCursor().id;\n         }\n      }\n\n      return await model.create(comment);\n   }\n};\n","/**\n * ABViewComponent\n * A common UI component class for our UI widgets.\n */\nimport ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewComponent extends ClassUI {\n   constructor(baseView, idBase, ids) {\n      super(idBase || `ABView_${baseView.id}`, ids);\n\n      this.view = baseView;\n      this.settings = baseView.settings;\n      this.AB = baseView.AB;\n      this.datacollection = baseView.datacollections || baseView.datacollection;\n\n      this.__events = [];\n      // {array}\n      // A collection of any listeners we are managing.\n      // {\n      //   emitter:   {EventEmitter} the object we are listening on\n      //   eventName: {string} the event key we are listening for\n      //   listener:  {fn} the function to call on\n      // }\n\n      this.CurrentObjectID = null;\n      // {string}\n      // the ABObject.id of the object we are working with.\n\n      this.CurrentDatacollectionID = null;\n      // {string}\n      // the ABDataCollection.id of the DC we are working with\n   }\n\n   /**\n    * @method CurrentObject()\n    * A helper to return the current ABObject we are working with.\n    * @return {ABObject}\n    */\n   get CurrentObject() {\n      return this.AB.objectByID(this.CurrentObjectID);\n   }\n   /**\n    * @method CurrentDatacollection()\n    * A helper to return the current ABDataCollection we are working with.\n    * @return {ABDataCollection}\n    */\n   get CurrentDatacollection() {\n      return this.AB.datacollectionByID(this.CurrentDatacollectionID);\n   }\n\n   ui(uiComponents = []) {\n      // an ABView is a collection of rows:\n      const _ui = {\n         id: this.ids.component,\n         view: \"layout\",\n         type: \"space\",\n         rows: uiComponents,\n      };\n\n      // if this form is empty, then force a minimal row height\n      // so the component isn't completely hidden on the screen.\n      // (important in the editor so we don't loose the ability to edit the\n      // component)\n      if (!_ui.rows.length) _ui.height = 30;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      this.AB = AB;\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      this.CurrentDatacollectionID = datacollection?.id;\n   }\n\n   objectLoad(object) {\n      this.CurrentObjectID = object?.id;\n   }\n\n   /**\n    * @method eventAdd()\n    * Create a new listener on an object. Note, this will prevent multiple\n    * listeners being applied to the same Object.\n    * @param {object} evt\n    *        The definition of the event we are adding:\n    *        {\n    *           emitter:   {EventEmitter} the object we are listening on\n    *           eventName: {string} the event key we are listening for\n    *           listener:   {fn} the function to call on\n    *        }\n    */\n   eventAdd(evt) {\n      if (!evt || !evt.emitter || !evt.listener) return;\n\n      // make sure we haven't done this before:\n      const __events = this.__events;\n      const exists = __events.filter(\n         (e) => e.emitter === evt.emitter && e.eventName === evt.eventName\n         // && e.listener === evt.listener\n      );\n\n      if (!exists.length) {\n         // add to array\n         __events.push({\n            emitter: evt.emitter,\n            eventName: evt.eventName,\n            listener: evt.listener,\n         });\n\n         // listening this event\n         evt.emitter.on(evt.eventName, evt.listener);\n      }\n   }\n\n   /**\n    * @method eventsClear()\n    * Remove all the attached event listeners and reset our tracking.\n    */\n   eventsClear() {\n      this.__events.forEach((evt) => {\n         evt.emitter.removeListener(evt.eventName, evt.listener);\n      });\n\n      this.__events = [];\n   }\n\n   /**\n    * @method waitInitializingDCEvery()\n    * Wait until the DC is initialized, checking every millisecond as specified by the parameter\n    * @param {number} milliSeconds\n    * The amount of milliseconds to recheck DC status.\n    * @param {object} dc\n    * the AB DC instance.\n    */\n\n   async waitInitializingDCEvery(milliSeconds, dc) {\n      if (!this.__isShowing || dc == null) return;\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      // load data when a widget is showing\n      if (dc.dataStatus === dc.dataStatusFlag.notInitial) await dc.loadData();\n\n      return await new Promise((resolve) => {\n         if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n            resolve();\n\n            return;\n         }\n\n         const interval = setInterval(() => {\n            if (dc.dataStatus === dc.dataStatusFlag.initialized) {\n               clearInterval(interval);\n\n               resolve();\n            }\n         }, milliSeconds);\n      });\n   }\n\n   /**\n    * @method onShow()\n    * perform any preparations necessary when showing this component.\n    */\n   onShow() {\n      // check if tab has a hint\n      if (this?.view?.settings?.hintID) {\n         // fetch the steps for the hint\n         let hint = this.AB.hintID(this.view.settings.hintID);\n         if (hint.settings.active) {\n            hint.createHintUI();\n         }\n      }\n      // if we manage a datacollection, then make sure it has started\n      // loading it's data when we are showing our component.\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (Array.isArray(dc)) {\n         dc.forEach((item) => {\n            if (item.dataStatus === item.dataStatusFlag.notInitial)\n               // load data when a widget is showing\n               item.loadData();\n         });\n      } else {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            dc.loadData();\n      }\n   }\n}\n","const ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewConditionalContainerComponent extends (\n   ABViewContainerComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewConditionalContainer_${baseView.id}`,\n         Object.assign(\n            {\n               batch: \"\",\n            },\n            ids\n         )\n      );\n\n      this._ifComponent = null;\n      this._elseComponent = null;\n\n      // Set filter value\n      this.__filterComponent = baseView.AB.filterComplexNew(\n         `${baseView.id}_filterComponent`\n      );\n      // this.__filterComponent.applicationLoad(application);\n      this.populateFilterComponent();\n   }\n\n   ui() {\n      const _uiConditionalContainer = {\n         id: this.ids.batch,\n         view: \"multiview\",\n         cells: [\n            {\n               batch: \"wait\",\n               view: \"layout\",\n               rows: [\n                  {\n                     view: \"label\",\n                     label: this.label(\"Please wait...\"),\n                  },\n               ],\n            },\n         ],\n      };\n      const _ui = super.ui([_uiConditionalContainer]);\n\n      _uiConditionalContainer.cells.push(\n         Object.assign({ batch: \"if\" }, this.ifComponent.ui()),\n         Object.assign({ batch: \"else\" }, this.elseComponent.ui())\n      );\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB, accessLevel);\n\n      await Promise.all([\n         this.ifComponent.init(AB, accessLevel),\n         this.elseComponent.init(AB, accessLevel),\n      ]);\n\n      this.populateFilterComponent();\n\n      const dc = this.datacollection;\n\n      if (dc) {\n         const baseView = this.view;\n\n         // listen DC events\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"loadData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         baseView.eventAdd({\n            emitter: dc,\n            eventName: \"initializedData\",\n            listener: () => this.displayView(), // Q? does this need to remain empty param?\n         });\n\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dc,\n               eventName: key,\n               listener: (...p) => this.displayView(...p),\n            });\n         });\n      }\n\n      this.displayView();\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.populateFilterComponent();\n      this.displayView();\n   }\n\n   get ifComponent() {\n      return (this._ifComponent =\n         this._ifComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"If\")\n            .component());\n   }\n\n   get elseComponent() {\n      return (this._elseComponent =\n         this._elseComponent ||\n         this.view\n            .views()\n            .find((v) => v?.name === \"Else\")\n            .component());\n   }\n\n   displayView(currData) {\n      const dc = this.datacollection;\n      const ids = this.ids;\n      const $batch = $$(ids.batch);\n\n      if (dc) {\n         if (!currData) currData = dc.getCursor();\n\n         // show 'waiting' panel\n         if (\n            !currData &&\n            (dc.dataStatus === dc.dataStatusFlag.notInitial ||\n               dc.dataStatus === dc.dataStatusFlag.initializing)\n         ) {\n            $batch?.showBatch(\"wait\");\n\n            return;\n         }\n      }\n\n      const isValid = this.__filterComponent.isValid(currData);\n\n      if (isValid) {\n         // if (isValid && currData) {\n         $batch?.showBatch(\"if\");\n         this.ifComponent?.onShow?.();\n      } else {\n         $batch?.showBatch(\"else\");\n         this.elseComponent?.onShow?.();\n      }\n   }\n\n   populateFilterComponent() {\n      const dc = this.datacollection;\n      const __filterComponent = this.__filterComponent;\n\n      if (dc?.datasource) __filterComponent.fieldsLoad(dc.datasource.fields());\n      else __filterComponent.fieldsLoad([]);\n\n      __filterComponent.setValue(\n         this.settings.filterConditions ??\n            this.view.constructor.defaultValues().filterConditions\n      );\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewContainerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewContainer_${baseView.id}`, ids);\n\n      this.idBase = idBase;\n      this.options = null;\n\n      this.viewComponents = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child views that we manage\n\n      this.viewComponentIDs = {\n         /* view.id : {viewComponent} */\n      };\n      // {hash}\n      // a reference of all our child.ui().ids of the views we manage\n\n      this._handlerChangePage = (pageId) => {\n         baseView.changePage(pageId);\n      };\n   }\n\n   ui(uiComponents) {\n      // Generate rows & cols of views to .layout\n      const views = this.view.viewsSortByPosition();\n      const rowViews = this.getElements(views);\n      const _ui = super.ui(uiComponents || rowViews);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // make sure each of our child views get .init() called\n   async init(AB, accessLevel = 0, options = {}) {\n      await super.init(AB);\n\n      this.options = options;\n\n      const allInits = [];\n\n      // // register our callbacks:\n      // if (options) {\n      //    for (var c in _logic.callbacks) {\n      //       _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n      //    }\n      // }\n\n      // see access by CSS class\n      $$(this.ids.component)?.define(\"css\", `accessLevel-${accessLevel}`);\n\n      const viewComponents = this.viewComponents;\n\n      // attach all the .UI views:\n      for (const key in viewComponents) {\n         // skip when the view is removed.\n         if (\n            !viewComponents[key] ??\n            !this.view.views((v) => v.id === key).length\n         )\n            continue;\n\n         // Initial component along with options in case there are callbacks we need to listen for\n         if (accessLevel) {\n            allInits.push(viewComponents[key].init(AB, accessLevel, options));\n\n            continue;\n         }\n\n         $$(this.viewComponentIDs[key])?.hide();\n      }\n\n      await Promise.all(allInits);\n   }\n\n   getElements(views) {\n      const rows = [];\n      const componentMap = {};\n\n      let curRowIndex;\n      let curColIndex;\n\n      const settings = this.settings;\n      const defaultSettings = this.view.constructor.defaultValues();\n\n      views.forEach((v) => {\n         // let component = v.component(/* App, idPrefix */);\n         // NOTE: PONG - Just temporary to be compatible old & new versions\n         let component;\n\n         try {\n            component = v.component(this.idBase);\n            // make sure any existing handlers for changePage are removed.\n            v.removeAllListeners(\"changePage\");\n         } catch (err) {\n            component = v.component(this.idBase);\n\n            const ui = component.ui;\n\n            component.ui = (() => ui).bind(component);\n         }\n\n         this.viewComponents[v.id] = component;\n\n         ////\n         //// TODO: figure out the embedded Callbacks => emit()\n         ////\n         // if key == \"form\" or \"button\" register the callbacks to the parent\n         // NOTE this will only work on the last form of a page!\n         // if (v.key == \"form\" && v._logic.callbacks) {\n         //    _logic.callbacks = v._logic.callbacks;\n         // }\n\n         // Create a new row\n         if (v.position.y == null || v.position.y !== curRowIndex) {\n            curRowIndex = v.position.y || rows.length;\n            curColIndex = 0;\n\n            const rowNew = {\n               cols: [],\n            };\n\n            // Create columns following setting value\n            const colNumber = settings.columns || defaultSettings.columns;\n\n            for (let i = 0; i < colNumber; i++)\n               rowNew.cols.push({\n                  gravity: settings.gravity?.[i]\n                     ? parseInt(settings.gravity[i])\n                     : defaultSettings.gravity,\n               });\n\n            rows.push(rowNew);\n         }\n\n         // Get the last row\n         const rowIndx = rows.length - 1;\n         const curRow = rows[rowIndx];\n         const newPos = v.position.x ?? 0;\n         const mapKey = `${rowIndx}-${newPos}`;\n\n         let getGrav = 1;\n\n         if (componentMap[mapKey])\n            console.error(\n               `Component[${component?.ids?.component}] is overwriting component[${componentMap[mapKey].ids?.component}]. <-- Reorder them to fix.`\n            );\n\n         componentMap[mapKey] = component;\n\n         if (curRow.cols[newPos]?.gravity)\n            getGrav = curRow.cols[newPos].gravity;\n\n         const _ui = component.ui();\n\n         this.viewComponentIDs[v.id] = _ui.id;\n         _ui.gravity = getGrav;\n\n         // Add ui of sub-view to column\n         curRow.cols[newPos] = _ui;\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: this._handlerChangePage,\n         });\n\n         curColIndex++;\n      });\n\n      return rows;\n   }\n\n   onShow() {\n      super.onShow();\n\n      // calll .onShow in child components\n      Object.values(this.viewComponents).forEach((val) => {\n         val.onShow?.();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewDetailComponent = require(\"./ABViewDetailComponent\");\nconst ABViewPropertyLinkPage =\n   require(\"../viewProperties/ABViewPropertyLinkPage\").default;\n\nmodule.exports = class ABViewDataviewComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDataview_${baseView.id}`,\n         Object.assign(\n            {\n               dataview: \"\",\n            },\n            ids\n         )\n      );\n\n      this.linkPage = null;\n   }\n\n   ui() {\n      // NOTE: need to initial the detail component here\n      // because its dom width & height values are used .template function\n      this.initDetailComponent();\n\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            id: ids.dataview,\n            view: \"dataview\",\n            scroll: \"y\",\n            sizeToContent: true,\n            css: \"borderless transparent\",\n            xCount: this.settings.xCount,\n            template: (item) => this.itemTemplate(item),\n            on: {\n               onAfterRender: () => {\n                  this.applyClickEvent();\n                  this.addCyAttribute();\n               },\n            },\n         },\n      ]);\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n      if (!dc) return;\n\n      // Initial the link page helper\n      this.linkPage = this.linkPageHelper.component();\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      const ids = this.ids;\n      const $dataView = $$(ids.dataview);\n      AB.Webix.extend($dataView, AB.Webix.ProgressBar);\n      dc.bind($dataView);\n\n      window.addEventListener(\"resize\", () => {\n         clearTimeout(this._resizeEvent);\n         this._resizeEvent = setTimeout(() => {\n            this.resize($dataView.getParentView());\n            delete this._resizeEvent;\n         }, 20);\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      this.resize();\n   }\n\n   resize(base_element) {\n      const $dataview = $$(this.ids.dataview);\n      $dataview.resize();\n\n      const item_width = this.getItemWidth(base_element);\n      $dataview.customize({ width: item_width });\n      $dataview.getTopParentView?.().resize?.();\n   }\n\n   initDetailComponent() {\n      const detailUI = this.getDetailUI();\n      this._detail_ui = this.AB.Webix.ui(detailUI);\n\n      // 2 - Always allow access to components inside data view\n      this.detailComponent.init(null, 2);\n   }\n\n   getDetailUI() {\n      const detailCom = this.detailComponent;\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n\n      const _ui = detailCom.ui();\n      // adjust the UI to make sure it will look like a \"card\"\n      _ui.type = \"clean\";\n      _ui.css = \"ab-detail-view\";\n\n      if (detailsPage || editPage) {\n         _ui.css += ` ab-detail-hover ab-record-#itemId#`;\n\n         if (detailsPage) _ui.css += \" ab-detail-page\";\n         if (editPage) _ui.css += \" ab-edit-page\";\n      }\n\n      return _ui;\n   }\n\n   itemTemplate(item) {\n      const detailCom = this.detailComponent;\n      const $dataview = $$(this.ids.dataview);\n      const $detail_item = this._detail_ui;\n\n      // Mock up data to initialize height of item\n      if (!item || !Object.keys(item).length) {\n         item = item ?? {};\n         this.datacollection?.datasource?.fields().forEach((f) => {\n            switch (f.key) {\n               case \"string\":\n               case \"LongText\":\n                  item[f.columnName] = \"Lorem Ipsum\";\n                  break;\n               case \"date\":\n               case \"datetime\":\n                  item[f.columnName] = new Date();\n                  break;\n               case \"number\":\n                  item[f.columnName] = 7;\n                  break;\n            }\n         });\n      }\n      detailCom.displayData(item);\n\n      const itemWidth =\n         $dataview.data.count() > 0\n            ? $dataview.type.width\n            : ($detail_item.$width - 20) / this.settings.xCount;\n\n      const itemHeight =\n         $dataview.data.count() > 0\n            ? $dataview.type.height\n            : $detail_item.getChildViews()?.[0]?.$height;\n\n      const tmp_dom = document.createElement(\"div\");\n      tmp_dom.appendChild($detail_item.$view);\n\n      $detail_item.define(\"width\", itemWidth - 24);\n      $detail_item.define(\"height\", itemHeight + 15);\n      $detail_item.adjust();\n\n      // Add cy attributes\n      this.addCyItemAttributes(tmp_dom, item);\n\n      return tmp_dom.innerHTML.replace(/#itemId#/g, item.id);\n   }\n\n   getItemWidth(base_element) {\n      const $dataview = $$(this.ids.dataview);\n\n      let currElem = base_element ?? $dataview;\n      let parentWidth = currElem?.$width;\n      while (currElem) {\n         if (\n            currElem.config.view == \"scrollview\" ||\n            currElem.config.view == \"layout\"\n         )\n            parentWidth =\n               currElem?.$width < parentWidth ? currElem?.$width : parentWidth;\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      if (!parentWidth)\n         parentWidth = $dataview?.getParentView?.().$width || window.innerWidth;\n\n      if (parentWidth > window.innerWidth) parentWidth = window.innerWidth;\n\n      // check if the browser window minus webix default padding is the same as the parent window\n      // if so we need to check to see if there is a sidebar and reduce the usable space by the\n      // width of the sidebar\n      if (window.innerWidth - 19 <= parentWidth) {\n         const $sidebar = this.getTabSidebar();\n         if ($sidebar) {\n            parentWidth -= $sidebar.$width;\n         }\n      }\n\n      const recordWidth = Math.floor(parentWidth / this.settings.xCount);\n\n      return recordWidth;\n   }\n\n   getTabSidebar() {\n      const $dataview = $$(this.ids.dataview);\n      let $sidebar;\n      let currElem = $dataview;\n      while (currElem && !$sidebar) {\n         $sidebar = (currElem.getChildViews?.() ?? []).filter(\n            (item) => item?.config?.view == \"sidebar\"\n         )[0];\n\n         currElem = currElem?.getParentView?.();\n      }\n\n      return $sidebar;\n   }\n\n   applyClickEvent() {\n      const editPage = this.settings.editPage;\n      const detailsPage = this.settings.detailsPage;\n      if (!detailsPage && !editPage) return;\n\n      const $dataview = $$(this.ids.dataview);\n      if (!$dataview) return;\n\n      $dataview.$view.onclick = (e) => {\n         let clicked = false;\n         let divs = e.path ?? [];\n\n         // NOTE: Some web browser clients do not support .path\n         if (!divs.length) {\n            divs.push(e.target);\n            divs.push(e.target.parentNode);\n         }\n\n         if (editPage) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem_header\") > -1\n               ) {\n                  clicked = true;\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(editPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n                  break;\n               }\n            }\n         }\n\n         if (detailsPage && !clicked) {\n            for (let p of divs) {\n               if (\n                  p.className &&\n                  p.className.indexOf(\"webix_accordionitem\") > -1\n               ) {\n                  p.parentNode.parentNode.classList.forEach((c) => {\n                     if (c.indexOf(\"ab-record-\") > -1) {\n                        // var record = parseInt(c.replace(\"ab-record-\", \"\"));\n                        const record = c.replace(\"ab-record-\", \"\");\n                        this.linkPage.changePage(detailsPage, record);\n                        // com.logic.toggleTab(detailsTab, ids.component);\n                     }\n                  });\n\n                  break;\n               }\n            }\n         }\n      };\n   }\n\n   addCyAttribute() {\n      const baseView = this.view;\n      const $dataview = $$(this.ids.dataview);\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n\n      $dataview.$view.setAttribute(\n         \"data-cy\",\n         `dataview container ${name} ${baseView.id}`\n      );\n   }\n\n   addCyItemAttributes(dom, item) {\n      const baseView = this.view;\n      const uuid = item.uuid;\n      const name = (baseView.name ?? \"\").replace(\".dataview\", \"\");\n      dom.querySelector(\".webix_accordionitem_body\")?.setAttribute(\n         \"data-cy\",\n         `dataview item ${name} ${uuid} ${baseView.id}`\n      );\n      dom.querySelector(\".webix_accordionitem_button\")?.setAttribute(\n         \"data-cy\",\n         `dataview item button ${name} ${uuid} ${baseView.id}`\n      );\n   }\n\n   get detailComponent() {\n      return (this._detailComponent =\n         this._detailComponent ??\n         new ABViewDetailComponent(\n            this.view,\n            `${this.ids.component}_detail_view`\n         ));\n   }\n\n   get linkPageHelper() {\n      return (this.__linkPageHelper =\n         this.__linkPageHelper || new ABViewPropertyLinkPage());\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCheckboxComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail checkbox ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id ?? baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      let checkbox = \"\";\n\n      // Check\n      if (val && JSON.parse(val))\n         checkbox =\n            '<span class=\"check webix_icon fa fa-check-square-o\"></span>';\n      // Uncheck\n      else checkbox = '<span class=\"check webix_icon fa fa-square-o\"></span>';\n\n      super.setValue(checkbox);\n   }\n};\n","const ABObjectQuery = require(\"../../ABObjectQuery\");\nconst ABViewContainerComponent = require(\"./ABViewContainerComponent\");\n\nmodule.exports = class ABViewDetailComponent extends ABViewContainerComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetail_${baseView.id}`, ids);\n      this.idBase = idBase;\n   }\n\n   ui() {\n      let _ui = super.ui();\n\n      // this wrapper allows the detail view to have a\n      // card appearance as well as enables the edit and\n      // details functions to work when clicked\n      return {\n         type: \"form\",\n         id: this.ids.component,\n         borderless: true,\n         rows: [\n            {\n               body: _ui,\n            },\n         ],\n      };\n   }\n\n   onShow() {\n      const baseView = this.view;\n\n      try {\n         const dataCy = `Detail ${baseView.name?.split(\".\")[0]} ${baseView.id}`;\n\n         $$(this.ids.component).$view.setAttribute(\"data-cy\", dataCy);\n      } catch (e) {\n         console.warn(\"Problem setting data-cy\", e);\n      }\n\n      // listen DC events\n      const dv = this.datacollection;\n\n      if (dv) {\n         const currData = dv.getCursor();\n\n         if (currData) this.displayData(currData);\n\n         [\"changeCursor\", \"cursorStale\", \"collectionEmpty\"].forEach((key) => {\n            this.eventAdd({\n               emitter: dv,\n               eventName: key,\n               listener: (...p) => this.displayData(...p),\n            });\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"create\",\n            listener: (createdRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === createdRow.id)\n                  this.displayData(createdRow);\n            },\n         });\n\n         this.eventAdd({\n            emitter: dv,\n            eventName: \"update\",\n            listener: (updatedRow) => {\n               const currCursor = dv.getCursor();\n\n               if (currCursor?.id === updatedRow.id)\n                  this.displayData(updatedRow);\n            },\n         });\n      }\n\n      super.onShow();\n   }\n\n   displayData(rowData = {}) {\n      const views = (this.view.views() || []).sort((a, b) => {\n         if (!a?.field?.() || !b?.field?.()) return 0;\n\n         // NOTE: sort order of calculated fields.\n         // FORMULA field type should be calculated before CALCULATE field type\n         if (a.field().key === \"formula\" && b.field().key === \"calculate\")\n            return -1;\n         else if (a.field().key === \"calculate\" && b.field().key === \"formula\")\n            return 1;\n\n         return 0;\n      });\n\n      views.forEach((f) => {\n         let val;\n\n         if (f.field) {\n            const field = f.field();\n\n            if (!field) return;\n\n            // get value of relation when field is a connect field\n            switch (field.key) {\n               case \"connectObject\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"list\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  if (field.settings.isMultiple === 0) {\n                     let myVal = \"\";\n\n                     field.settings.options.forEach((options) => {\n                        if (options.id === val) myVal = options.text;\n                     });\n\n                     if (field.settings.hasColors) {\n                        let myHex = \"#66666\";\n                        let hasCustomColor = \"\";\n\n                        field.settings.options.forEach((h) => {\n                           if (h.text === myVal) {\n                              myHex = h.hex;\n                              hasCustomColor = \"hascustomcolor\";\n                           }\n                        });\n\n                        myVal = `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"background-color: ${myHex} !important;\"><span>${myVal}</span></span>`;\n                     }\n\n                     val = myVal;\n                  } else {\n                     const items = [];\n\n                     let myVal = \"\";\n\n                     val.forEach((value) => {\n                        let hasCustomColor = \"\";\n                        let optionHex = \"\";\n\n                        if (field.settings.hasColors && value.hex) {\n                           hasCustomColor = \"hascustomcolor\";\n                           optionHex = `background: ${value.hex};`;\n                        }\n\n                        field.settings.options.forEach((options) => {\n                           if (options.id === value.id) myVal = options.text;\n                        });\n                        items.push(\n                           `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${myVal}</span></span>`\n                        );\n                     });\n\n                     val = items.join(\"\");\n                  }\n\n                  break;\n\n               case \"user\":\n                  val = field.pullRelationValues(rowData);\n\n                  break;\n\n               case \"file\":\n                  val = rowData?.[field.columnName];\n\n                  if (!val) {\n                     val = \"\";\n\n                     break;\n                  }\n\n                  break;\n\n               case \"formula\":\n                  if (rowData) {\n                     // const dv = this.datacollection;\n                     // const ds = dv ? dv.datasource : null;\n                     // const needRecalculate =\n                     //    !ds || ds instanceof ABObjectQuery ? false : true;\n\n                     // NOTE: Could not to re-calculate because `__relation` data is extracted from full data at the moment\n                     // rowData.__relation format\n                     // {\n                     //    id: \"string\"\n                     //    text: \"string\"\n                     //    translations: []\n                     //    uuid:  \"0cb52669-d626-4c9d-85ea-2d931751d0ce\"\n                     //    value: \"LABEL\"\n                     // }\n                     const needRecalculate = false;\n\n                     val = field.format(rowData, needRecalculate);\n                  }\n\n                  break;\n\n               default:\n                  val = field.format(rowData);\n               // break;\n            }\n         }\n\n         // set value to each components\n         const vComponent = f.component(this.idBase);\n\n         // vComponent?.onShow();\n\n         vComponent?.setValue?.(val);\n         vComponent?.displayText?.(rowData);\n      });\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailConnectComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailConnect_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n\n      return super.ui({\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const columnName =\n                  baseView.field((fld) => fld.id === settings.fieldId)\n                     ?.columnName ?? \"\";\n               const dataCy = `detail connected ${columnName} ${\n                  settings.fieldId\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   setValue(val) {\n      const vals = [];\n\n      if (Array.isArray(val))\n         val.forEach((record) => {\n            vals.push(\n               `<span class=\"webix_multicombo_value\">${record.text}</span>`\n            );\n         });\n      else vals.push(`<span class=\"webix_multicombo_value\">${val.text}</span>`);\n\n      super.setValue(vals.join(\"\"));\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailCustomComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailCustom_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const detailView = baseView.detailComponent();\n\n      let template = field ? field.columnHeader().template({}) : \"\";\n\n      return super.ui({\n         minHeight: 45,\n         height: 60,\n         template,\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail custom ${field?.columnName} ${\n                  field?.id\n               } ${baseView.parentDetailComponent()?.id || baseView.parent.id}`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      });\n   }\n\n   onShow() {\n      super.onShow();\n\n      const baseView = this.view;\n      const field = baseView.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const detailCom = baseView.detailComponent(),\n         rowData = detailCom.datacollection.getCursor() || {},\n         node = $detailItem.$view;\n\n      field.customDisplay(rowData, null, node, {\n         editable: false,\n      });\n      // Hack: remove the extra webix_template class here, which adds padding so\n      // the item is not alligned with the others\n      node\n         .getElementsByClassName(\"webix_template\")[1]\n         ?.removeAttribute(\"class\");\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) return;\n\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const rowData = {};\n\n      rowData[field.columnName] = val;\n\n      field.setValue($detailItem, rowData);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailImageComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailImage_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const _ui = {\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail image ${field?.columnName} ${field?.id} ${\n                  baseView.parentDetailComponent()?.id || baseView.parent.id\n               }`;\n\n               $$(this.ids.detailItem)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n\n   setValue(val) {\n      const field = this.view.field();\n\n      if (!field) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const parsedImageUrl = val || field.settings.defaultImageUrl;\n\n      if (!parsedImageUrl) {\n         super.setValue(\"\");\n\n         return;\n      }\n\n      const imageUrl = field.urlImage(parsedImageUrl);\n      const settings = this.settings;\n      const width = settings.width || field.settings.imageWidth || 200;\n      const height = settings.height\n         ? `${settings.height}px`\n         : field.settings.imageHeight\n         ? `${field.settings.imageHeight}px`\n         : \"100%\";\n      const imageTemplate = [\n         `<div class=\"ab-image-data-field\">`,\n         `<div style=\"float: left; background-size: cover; background-position: center center; background-image:url('${imageUrl}');  width: ${width}px; height: ${height}; position:relative;\">`,\n         `<a href=\"${imageUrl}\" target=\"_blank\" title=\"\" class=\"fa fa-download ab-image-data-field-download\"></a>`,\n         `</div></div>`,\n      ].join(\"\");\n\n      super.setValue(imageTemplate);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SAFE_HTML_TAGS = [\n   \"abbr\",\n   \"acronym\",\n   \"b\",\n   \"blockquote\",\n   \"br\",\n   \"code\",\n   \"div\",\n   \"em\",\n   \"i\",\n   \"li\",\n   \"ol\",\n   \"p\",\n   \"span\",\n   \"strong\",\n   \"table\",\n   \"td\",\n   \"tr\",\n   \"ul\",\n   \"h1\",\n   \"h2\",\n   \"h3\",\n   \"h4\",\n   \"h5\",\n];\n\nmodule.exports = class ABViewDetailItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDetailItem_${baseView.id}`,\n         Object.assign(\n            {\n               detailItem: \"\",\n               detailItemLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui(uiDetailItemComponent = {}) {\n      const baseView = this.view;\n\n      // setup 'label' of the element\n      const settings = baseView.detailComponent()?.settings ?? {};\n      const field = baseView.field();\n\n      const isLabelTop = settings.labelPosition == \"top\";\n\n      const group = [];\n      /** @const group will be used later as rows or cols depending on label position */\n      if (settings.showLabel) {\n         const templateLabel = isLabelTop\n            ? \"<label style='display:block; text-align: left; line-height: 32px;' class='webix_inp_top_label'>#label#</label>\"\n            : \"<label style='display: inline-block; float: left; line-height: 32px; width:#width#px;'>#label#</label>\";\n\n         const labelUi = {\n            id: this.ids.detailItemLabel,\n            view: \"template\",\n            borderless: true,\n            height: 38,\n            template: templateLabel,\n            data: { label: field?.label ?? \"\" },\n         };\n         if (!isLabelTop) labelUi.width = settings.labelWidth + 24; // Add 24px to compensate for webix padding\n         group.push(labelUi);\n      }\n\n      let height;\n      if (field?.settings?.useHeight === 1)\n         height = parseInt(field.settings.imageHeight) || height;\n\n      const valueUi = Object.assign(\n         {\n            id: this.ids.detailItem,\n            view: \"template\",\n            borderless: true,\n            autowidth: true,\n            height,\n            isUsers: field?.key === \"user\",\n            template: isLabelTop\n               ? \"<div style='min-height: 38px'>#display#</div>\"\n               : \"<div class='ab-detail-component-holder'>#display#</div>\",\n            data: { display: \"\" }, // show empty data in template\n         },\n         uiDetailItemComponent\n      );\n      // height = 0 behaves a bit differently then autoheight here.\n      if (!valueUi.height || valueUi.height == 0) {\n         delete valueUi.height;\n         valueUi.autoheight = true;\n      }\n      group.push(valueUi);\n      const itemUi = {};\n      settings.labelPosition == \"top\"\n         ? (itemUi.rows = group)\n         : (itemUi.cols = group);\n      const _ui = super.ui([itemUi]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   // async init(AB) {\n   //    await super.init(AB);\n   // }\n\n   setValue(val, detailId) {\n      const $detailItem = $$(detailId ?? this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      const field = this.view.field();\n\n      switch (field?.key) {\n         case \"string\":\n         case \"LongText\": {\n            const strVal = val\n               // Sanitize all of HTML tags\n               .replace(/[<]/gm, \"&lt;\")\n               // Allow safe HTML tags\n               .replace(\n                  new RegExp(`(&lt;(/)?(${SAFE_HTML_TAGS.join(\"|\")}))`, \"gm\"),\n                  \"<$2$3\"\n               );\n\n            $detailItem.setValues({ display: strVal });\n            break;\n         }\n         default:\n            $detailItem.setValues({ display: val });\n            break;\n      }\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTextComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailText_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const field = this.view.field();\n      const _ui = {\n         css: \"ab-text\",\n         on: {\n            //Add data-cy attribute for Cypress Testing\n            onAfterRender: () => {\n               const dataCy = `detail text ${field?.columnName} ${field?.id} ${\n                  this.view.parentDetailComponent()?.id || this.view.parent.id\n               }`;\n\n               $$(this.ids.component)?.$view.setAttribute(\"data-cy\", dataCy);\n            },\n         },\n      };\n      const settings = this.settings;\n\n      if (settings.height) _ui.height = settings.height;\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewDetailItemComponent = require(\"./ABViewDetailItemComponent\");\n\nmodule.exports = class ABViewDetailTreeComponent extends (\n   ABViewDetailItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewDetailTree_${baseView.id}`, ids);\n   }\n\n   get className() {\n      return \"ab-detail-tree\";\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      // add div of tree to detail\n      this.setValue(`<div class=\"${this.className}\"></div>`);\n   }\n\n   getDomTree() {\n      const $detailItem = $$(this.ids.detailItem);\n\n      if (!$detailItem) return;\n\n      return $detailItem.$view.getElementsByClassName(this.className)[0];\n   }\n\n   setValue(val) {\n      // convert value to array\n      const vals = [];\n\n      if (val && !Array.isArray(val)) vals.push(val);\n\n      setTimeout(() => {\n         // get tree dom\n         const domTree = this.getDomTree();\n\n         if (!domTree) return false;\n\n         const field = this.view.field();\n         const branches = [];\n\n         if (typeof field.settings.options.data === \"undefined\")\n            field.settings.options = new this.AB.Webix.TreeCollection({\n               data: field.settings.options,\n            });\n\n         field.settings.options.data.each(function (obj) {\n            if (vals.indexOf(obj.id) !== -1) {\n               let html = \"\";\n               let rootid = obj.id;\n\n               while (this.getParentId(rootid)) {\n                  field.settings.options.data.each(function (par) {\n                     if (\n                        field.settings.options.data.getParentId(rootid) ===\n                        par.id\n                     ) {\n                        html = `${par.text}: ${html}`;\n                     }\n                  });\n\n                  rootid = this.getParentId(rootid);\n               }\n\n               html += obj.text;\n               branches.push(html);\n            }\n         });\n\n         const myHex = \"#4CAF50\";\n\n         let nodeHTML = \"<div class='list-data-values'>\";\n\n         branches.forEach(function (item) {\n            nodeHTML += `<span class=\"selectivity-multiple-selected-item rendered\" style=\"background-color: ${myHex} !important;\">${item}</span>`;\n         });\n\n         nodeHTML += \"</div>\";\n         domTree.innerHTML = nodeHTML;\n\n         let height = 33;\n\n         if (domTree.scrollHeight > 33) height = domTree.scrollHeight;\n\n         const $detailItem = $$(this.ids.detailItem);\n\n         $detailItem.config.height = height;\n         $detailItem.resize();\n      }, 50);\n   }\n};\n","const Docxtemplater = require(\"../../../../js/docxtemplater.v3.0.12.min.js\");\nconst ImageModule = require(\"../../../../js/docxtemplater-image-module.v3.0.2.min.js\");\nconst JSZipUtils = require(\"jszip-utils/dist/jszip-utils.min.js\");\nconst JSZip = require(\"../../../../js/jszip.min.js\");\nconst sizeOf = require(\"image-size\");\n\nconst ABFieldConnect = require(\"../../dataFields/ABFieldConnect\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst ABObjectQuery = require(\"../../ABObjectQuery\");\n\nconst ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewDocxBuilderComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewDocxBuilder_${baseView.id}`,\n         Object.assign(\n            {\n               downloadButton: \"\",\n               noFileLabel: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const buttonWidth = settings.width ?? defaultSettings.width;\n\n      let autowidth = false;\n\n      if (buttonWidth === 0) autowidth = true;\n\n      let leftSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n      let rightSpacer = {\n         type: \"spacer\",\n         width: 1,\n      };\n\n      switch (settings.buttonPosition ?? defaultSettings.buttonPosition) {\n         case \"left\":\n            break;\n         case \"center\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            rightSpacer = {\n               type: \"spacer\",\n            };\n            break;\n         case \"right\":\n            leftSpacer = {\n               type: \"spacer\",\n            };\n            break;\n      }\n\n      const buttonLabelText =\n         baseView.buttonlabel ||\n         settings.buttonlabel ||\n         defaultSettings.buttonlabel; // Use || to check empty string \"\"\n      const ids = this.ids;\n      const _ui = super.ui([\n         {\n            view: \"toolbar\",\n            css:\n               settings.toolbarBackground ?? defaultSettings.toolbarBackground,\n            cols: [\n               leftSpacer,\n               {\n                  id: ids.downloadButton,\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  type: \"icon\",\n                  icon: \"fa fa-file-word-o\",\n                  label: buttonLabelText,\n                  width: settings.width || defaultSettings.width,\n                  autowidth: autowidth,\n                  click: () => {\n                     this.renderFile();\n                  },\n                  on: {\n                     // Add data-cy attribute for cypress tests\n                     onAfterRender: () => {\n                        const name = baseView.name?.replace(\".docxBuilder\", \"\");\n                        const dataCy = `docx download ${name} ${baseView.id}`;\n                        $$(ids.downloadButton)\n                           ?.$view.querySelector(\"button\")\n                           .setAttribute(\"data-cy\", dataCy);\n                     },\n                  },\n               },\n               {\n                  id: ids.noFileLabel,\n                  view: \"label\",\n                  label: this.label(\"No template file\"),\n               },\n               {\n                  type: \"spacer\",\n               },\n               rightSpacer,\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $downloadButton = $$(ids.downloadButton);\n      const $noFileLabel = $$(ids.noFileLabel);\n\n      if (this.view.settings.filename) {\n         $downloadButton.show();\n         $noFileLabel.hide();\n      } else {\n         $downloadButton.hide();\n         $noFileLabel.show();\n      }\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const tasks = [];\n\n      this.view.datacollections.forEach((dc) => {\n         if (dc.dataStatus === dc.dataStatusFlag.notInitial)\n            // load data when a widget is showing\n            tasks.push(dc.loadData());\n      });\n\n      // Show loading cursor\n      if (tasks.length > 0) this.busy();\n\n      await Promise.all(tasks);\n\n      // Hide loading cursor\n      this.ready();\n   }\n\n   busy() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.disable();\n      $downloadButton.define(\"icon\", \"fa fa-refresh fa-spin\");\n      $downloadButton.refresh();\n   }\n\n   ready() {\n      const $downloadButton = $$(this.ids.downloadButton);\n\n      if (!$downloadButton) return;\n\n      $downloadButton.enable();\n      $downloadButton.define(\"icon\", \"fa fa-file-word-o\");\n      $downloadButton.refresh();\n   }\n\n   async renderFile() {\n      this.busy();\n\n      const reportValues = await this.getReportData();\n\n      // console.log(\"DOCX data: \", reportValues);\n\n      // Download images\n      const images = await this.downloadImages();\n\n      // Download the template file\n      const contentTemplateFile = await this.downloadTemplateFile();\n\n      // Generate Docx file\n      const blobFile = this.generateDocxFile(\n         contentTemplateFile,\n         reportValues,\n         images\n      );\n\n      const baseView = this.view;\n\n      // Let user download the output file\n      baseView.letUserDownload(blobFile, baseView.filelabel);\n\n      // Final step\n      this.ready();\n   }\n\n   async getReportData() {\n      const result = {};\n      const tasks = [];\n\n      // Get current cursor\n      const datacollections = this.view.datacollections;\n      const isDcLabelAdded = datacollections.length > 1;\n\n      datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach(async (dc) => {\n            tasks.push(\n               new Promise((resolve, reject) => {\n                  const obj = dc.datasource;\n                  const objModel = obj.model();\n                  const dcCursor = dc.getCursor();\n                  const dcValues = [];\n                  // const dataList = [];\n\n                  // merge cursor to support dc and tree cursor in the report\n                  // if (dcCursor) {\n                  //    const treeCursor = dc.getCursor(true);\n\n                  //    dataList.push(this.AB.merge({}, dcCursor, treeCursor));\n                  // } else {\n                  //    dataList.push(...this.AB.cloneDeep(dc.getData()));\n                  // }\n\n                  let where = {};\n                  if (dcCursor) {\n                     where = {\n                        glue: \"and\",\n                        rules: [\n                           {\n                              key: obj.PK(),\n                              rule: \"equals\",\n                              value: dcCursor[obj.PK()],\n                           },\n                        ],\n                     };\n                  } else {\n                     where = this.AB.merge(\n                        where,\n                        dc.settings?.objectWorkspace?.filterConditions ?? {}\n                     );\n                  }\n\n                  // Pull data that have full relation values.\n                  // NOTE: When get data from DataCollection, those data is pruned.\n                  objModel\n                     .findAll({\n                        disableMinifyRelation: true,\n                        populate: true,\n                        skip: 0,\n                        where,\n                     })\n                     .then((dataList) => {\n                        // update property names to column labels to match format names in docx file\n                        const mlFields = obj.multilingualFields();\n\n                        dataList?.data.forEach((data) => {\n                           let resultData;\n\n                           // For support label of columns every languages\n                           obj.fields().forEach((f) => {\n                              const fieldLabels = [];\n\n                              // Query Objects\n                              if (obj instanceof ABObjectQuery) {\n                                 if (typeof f.object.translations === \"string\")\n                                    f.object.translations = JSON.parse(\n                                       f.object.translations\n                                    );\n\n                                 if (typeof f.translations === \"string\")\n                                    f.translations = JSON.parse(f.translations);\n\n                                 (f.object.translations || []).forEach(\n                                    (objTran) => {\n                                       const fieldTran = (\n                                          f.translations || []\n                                       ).filter(\n                                          (fieldTran) =>\n                                             fieldTran.language_code ===\n                                             objTran.language_code\n                                       )[0];\n\n                                       if (!fieldTran) return;\n\n                                       const objectLabel = objTran.label;\n                                       const fieldLabel = fieldTran.label;\n\n                                       // Replace alias with label of object\n                                       fieldLabels.push(\n                                          `${objectLabel}.${fieldLabel}`\n                                       );\n                                    }\n                                 );\n                              }\n                              // Normal Objects\n                              else if (typeof f.translations === \"string\")\n                                 f.translations = JSON.parse(f.translations);\n\n                              f.translations.forEach((tran) => {\n                                 fieldLabels.push(tran.label);\n                              });\n\n                              resultData = Object.assign(\n                                 resultData ?? {},\n                                 this.setReportValues(\n                                    data,\n                                    f,\n                                    fieldLabels,\n                                    mlFields\n                                 ) ?? {}\n                              );\n\n                              // Keep ABObject into .scope of DOCX templater\n                              resultData._object = obj;\n                           });\n\n                           dcValues.push(resultData);\n                        });\n\n                        // If data sources have more than 1 or the result data more than 1 items, then add label of data source\n                        const datacollectionData =\n                           dcValues.length > 1 ? dcValues : dcValues[0];\n\n                        if (\n                           isDcLabelAdded ||\n                           (Array.isArray(datacollectionData) &&\n                              datacollectionData.length > 1)\n                        )\n                           (dc.translations || []).forEach((tran) => {\n                              result[tran.label] = datacollectionData;\n                           });\n                        else Object.assign(result, datacollectionData);\n\n                        resolve();\n                     });\n               })\n            );\n         });\n\n      await Promise.all(tasks);\n\n      return result;\n   }\n\n   setReportValues(data, field, fieldLabels = [], multilinguageFields) {\n      const result = {};\n\n      let val = null;\n\n      result.id = data.id;\n      result[`${field.columnName}_ORIGIN`] = data[field.columnName]; // Keep origin value for compare value with custom index\n\n      const baseView = this.view;\n\n      // Translate multilinguage fields\n      if (multilinguageFields.length) {\n         const transFields = (multilinguageFields || []).filter(\n            (fieldName) => data[fieldName] != null\n         );\n\n         baseView.translate(data, data, transFields, baseView.languageCode);\n      }\n\n      // Pull value\n      if (field instanceof ABFieldConnect) {\n         // If field is connected field, then\n         // {\n         //    fieldName: {Object} or [Array]\n         // }\n         val = data[this.AB.rules.toFieldRelationFormat(field.columnName)];\n\n         if (val?.forEach)\n            val.forEach((v) => {\n               if (!v) return;\n\n               // Sentry Fix: sometimes v is just the uuid\n               // Q: what should we do in this case?\n               if (typeof v == \"string\") return;\n\n               // format relation data\n               if (field.datasourceLink) {\n                  field.datasourceLink\n                     .fields((f) => !f.isConnection)\n                     .forEach((f) => {\n                        v[`${f.columnName}_ORIGIN`] = v[f.columnName];\n\n                        v[f.columnName] = f.format(v, {\n                           languageCode: baseView.languageCode,\n                        });\n                     });\n               }\n\n               // Keep ABObject to relation data\n               if (v && typeof v === \"object\") v._object = field.datasourceLink;\n            });\n\n         // TODO\n         // data[label + '_label'] = field.format(baseData);\n      } else\n         val = field.format(data, {\n            languageCode: baseView.languageCode,\n         });\n\n      // Set value to report with every languages of label\n      fieldLabels.forEach((label) => {\n         if (val) result[label] = val;\n         else if (!result[label]) result[label] = \"\";\n      });\n\n      // normalize child items\n      if (data.data?.length) {\n         result.data = result.data || [];\n\n         (data.data || []).forEach((childItem, index) => {\n            // add new data item\n            result.data[index] = this.setReportValues(\n               childItem,\n               field,\n               fieldLabels,\n               multilinguageFields\n            );\n         });\n      }\n\n      return result;\n   }\n\n   async downloadImages() {\n      const images = {};\n      const tasks = [];\n      const addDownloadTask = (fieldImage, data = []) => {\n         data.forEach((d) => {\n            const imageVal = fieldImage.format(d);\n\n            if (imageVal && !images[imageVal]) {\n               tasks.push(\n                  new Promise((resolve, reject) => {\n                     const imgUrl = fieldImage.urlImage(imageVal); // `/opsportal/image/${this.application.name}/${imageVal}`;\n\n                     JSZipUtils.getBinaryContent(imgUrl, (error, content) => {\n                        if (error) return reject(error);\n\n                        // store binary of image\n                        images[imageVal] = content;\n\n                        resolve();\n                     });\n                  })\n               );\n            }\n\n            // download images of child items\n            addDownloadTask(fieldImage, d.data || []);\n         });\n      };\n\n      this.view.datacollections\n         .filter((dc) => dc?.datasource)\n         .forEach((dc) => {\n            const obj = dc.datasource;\n\n            let currCursor = dc.getCursor();\n\n            if (currCursor) {\n               // Current cursor\n               const treeCursor = dc.getCursor(true);\n\n               currCursor = [this.AB.merge({}, currCursor, treeCursor)];\n            } // List of data\n            else currCursor = dc.getData();\n\n            obj.fields((f) => f instanceof ABFieldImage).forEach((f) => {\n               addDownloadTask(f, currCursor);\n            });\n         });\n\n      await Promise.all(tasks);\n\n      return images;\n   }\n\n   downloadTemplateFile() {\n      const url = this.view.downloadUrl();\n\n      return new Promise((resolve, reject) => {\n         JSZipUtils.getBinaryContent(url, (error, content) => {\n            if (error) return reject(error);\n\n            resolve(content);\n         });\n      });\n   }\n\n   generateDocxFile(contentFile, data, images) {\n      const summaries = {}; // { varName: sum number, ..., varName2: number2 }\n      const zip = new JSZip(contentFile);\n      const doc = new Docxtemplater();\n      const imageModule = new ImageModule({\n         centered: false,\n         getImage: (tagValue, tagName) => {\n            // NOTE: .getImage of version 3.0.2 does not support async\n            //       we can buy newer version to support it\n            //       https://docxtemplater.com/modules/image/\n\n            return images[tagValue] || \"\";\n         },\n         getSize: (imgBuffer, tagValue, tagName) => {\n            const defaultVal = [300, 160];\n            const baseView = this.view;\n            const dc = baseView.datacollection;\n\n            if (!dc) {\n               const dcs = baseView.datacollections;\n\n               if (dcs) {\n                  dcs.forEach((dc) => {\n                     let obj = dc.datasource;\n\n                     if (!obj) return false;\n\n                     // This is a query object\n                     if (tagName.indexOf(\".\") > -1) {\n                        let tagNames = tagName.split(\".\");\n\n                        if (!obj.objects) return false; // not a query\n\n                        obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                        if (!obj) return false;\n\n                        tagName = tagNames[1]; // Field name\n                     }\n\n                     const imageField = obj.fields(\n                        (f) => f.columnName === tagName\n                     )[0];\n\n                     if (!imageField?.settings) return false;\n\n                     if (\n                        imageField.settings.useWidth &&\n                        imageField.settings.imageWidth\n                     )\n                        defaultVal[0] = imageField.settings.imageWidth;\n\n                     if (\n                        imageField.settings.useHeight &&\n                        imageField.settings.imageHeight\n                     )\n                        defaultVal[1] = imageField.settings.imageHeight;\n\n                     return false;\n                  });\n               }\n            } else {\n               let obj = dc.datasource;\n\n               if (!obj) return defaultVal;\n\n               // This is a query object\n               if (tagName.indexOf(\".\") > -1) {\n                  const tagNames = tagName.split(\".\");\n\n                  obj = obj.objects((o) => o.label === tagNames[0])[0]; // Label of object\n\n                  if (!obj) return defaultVal;\n\n                  tagName = tagNames[1]; // Field name\n               }\n\n               const imageField = obj.fields(\n                  (f) => f.columnName === tagName\n               )[0];\n\n               if (!imageField?.settings) return defaultVal;\n\n               if (\n                  imageField.settings.useWidth &&\n                  imageField.settings.imageWidth\n               )\n                  defaultVal[0] = imageField.settings.imageWidth;\n\n               if (\n                  imageField.settings.useHeight &&\n                  imageField.settings.imageHeight\n               )\n                  defaultVal[1] = imageField.settings.imageHeight;\n            }\n            // Find aspect ratio image dimensions\n            try {\n               var img = new Uint8Array(imgBuffer);\n               var image = sizeOf(img);\n               var ratio = Math.min(\n                  defaultVal[0] / image.width,\n                  defaultVal[1] / image.height\n               );\n\n               return [image.width * ratio, image.height * ratio];\n            } catch (err) {\n               // if invalid image, then should return 0, 0 sizes\n               return defaultVal;\n            }\n         },\n         // getSize: function (imgBuffer, tagValue, tagName) {\n         //    if (imgBuffer) {\n         //       var maxWidth = 300;\n         //       var maxHeight = 160;\n\n         //       // Find aspect ratio image dimensions\n         //       try {\n         //          var image = sizeOf(imgBuffer);\n         //          var ratio = Math.min(maxWidth / image.width, maxHeight / image.height);\n\n         //          return [image.width * ratio, image.height * ratio];\n         //       }\n         //       // if invalid image, then should return 0, 0 sizes\n         //       catch (err) {\n         //          return [0, 0];\n         //       }\n\n         //    }\n         //    else {\n         //       return [0, 0];\n         //    }\n         // }\n      });\n\n      try {\n         doc.attachModule(imageModule)\n            .loadZip(zip)\n            .setData(data)\n            .setOptions({\n               parser: function (tag) {\n                  return {\n                     get: function (scope, context) {\n                        // NOTE: AppBuilder custom filter : no return empty items\n                        if (tag.indexOf(\"data|\") === 0) {\n                           const prop = (tag.split(\"|\")[1] || \"\").trim();\n\n                           return (scope[\"data\"] || []).filter(function (item) {\n                              return item[prop] ? true : false;\n                           });\n                        }\n                        // Mark number to add to a variable\n                        else if (tag.indexOf(\"|$sum?\") > -1) {\n                           const prop = tag.split(\"|$sum?\")[0];\n                           const varName = tag.split(\"|$sum?\")[1];\n\n                           let number = scope[prop];\n\n                           if (typeof number === \"string\")\n                              number = number.replace(\n                                 /[^\\d.]/g, // return only number and dot\n                                 \"\"\n                              );\n\n                           if (!summaries[varName]) summaries[varName] = 0.0;\n\n                           summaries[varName] += parseFloat(number);\n\n                           return scope[prop];\n                        }\n                        // Show sum value ^\n                        else if (tag.indexOf(\"$sum?\") === 0) {\n                           const varName = tag.replace(\"$sum?\", \"\");\n\n                           return summaries[varName] || 0;\n                        }\n                        // // Sum number of .data (Grouped query)\n                        // else if (tag.indexOf(\"$sum|\") === 0) {\n                        //    const prop = (\n                        //       tag.split(\"|\")[1] || \"\"\n                        //    ).trim();\n\n                        //    let sum = 0;\n                        //    (scope[\"data\"] || []).forEach(\n                        //       (childItem) => {\n                        //          if (!childItem[prop]) return;\n\n                        //          let number = childItem[prop];\n                        //          if (typeof number === \"string\") {\n                        //             number = number.replace(\n                        //                /[^\\d.]/g, // return only number and dot\n                        //                \"\"\n                        //             );\n                        //          }\n\n                        //          try {\n                        //             sum += parseFloat(\n                        //                number || 0\n                        //             );\n                        //          } catch (e) {}\n                        //       }\n                        //    );\n\n                        //    // Print number with commas\n                        //    if (sum) {\n                        //       sum = sum\n                        //          .toString()\n                        //          .replace(\n                        //             /\\B(?=(\\d{3})+(?!\\d))/g,\n                        //             \",\"\n                        //          );\n                        //    }\n\n                        //    return sum;\n                        // }\n                        // NOTE: AppBuilder custom filter of another data source\n                        else if (tag.indexOf(\"$\") === 0) {\n                           const props = tag.replace(\"$\", \"\").split(\"|\");\n                           const propSource = props[0].trim();\n                           const propFilter = props[1].trim(); // column name of ABFieldConnect\n\n                           if (!propSource || !propFilter) return \"\";\n\n                           // Pull Index field of connect field\n                           let indexColName;\n\n                           const obj = scope._object;\n\n                           if (obj) {\n                              const connectedField = obj.fields(\n                                 (f) => f.columnName === propFilter\n                              )[0];\n\n                              if (connectedField) {\n                                 const indexField = connectedField.indexField;\n\n                                 indexColName = indexField\n                                    ? indexField.columnName\n                                    : null;\n                              }\n                           }\n\n                           let sourceVals = data[propSource];\n\n                           if (sourceVals && !Array.isArray(sourceVals))\n                              sourceVals = [sourceVals];\n\n                           const getVal = (data) =>\n                              data[`${indexColName}_ORIGIN`] || // Pull origin data to compare by custom index\n                              data[indexColName] ||\n                              data.id ||\n                              data;\n\n                           return (sourceVals || []).filter(function (item) {\n                              // Pull data of parent to compare\n                              let comparer = scope[propFilter];\n\n                              if (Array.isArray(comparer))\n                                 return (\n                                    comparer.filter(\n                                       (c) => getVal(c) === getVal(item)\n                                    ).length > 0\n                                 );\n                              else return getVal(item) === getVal(comparer);\n                           });\n                        }\n                        // ์NOTE : Custom filter\n                        else if (tag.indexOf(\"?\") > -1) {\n                           const result = scope;\n                           const prop = tag.split(\"?\")[0];\n                           const condition = tag.split(\"?\")[1];\n\n                           if (prop && condition) {\n                              let data = scope[prop];\n\n                              if (data) {\n                                 if (!Array.isArray(data)) data = [data];\n\n                                 return data.filter((d) =>\n                                    eval(condition.replace(/\\./g, \"d.\"))\n                                 );\n                              }\n                           }\n                           return result;\n                        } else if (tag === \".\") return scope;\n                        else return scope[tag];\n                     },\n                  };\n               },\n            })\n            .render(); // render the document\n      } catch (error) {\n         return error;\n      }\n\n      // Output the document using Data-URI\n      const docxFile = doc.getZip().generate({\n         type: \"blob\",\n         mimeType:\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      });\n\n      return docxFile;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormButton extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormButton_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = baseView.settings ?? {};\n\n      const alignment =\n         settings.alignment || baseView.constructor.defaultValues().alignment;\n\n      const _ui = {\n         cols: [],\n      };\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"right\") {\n         _ui.cols.push({});\n      }\n\n      // delete button\n      if (settings.includeDelete) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.deleteLabel || this.label(\"Delete\"),\n               css: \"webix_danger\",\n               click: function () {\n                  self.onDelete(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button delete ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // cancel button\n      if (settings.includeCancel) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.cancelLabel || this.label(\"Cancel\"),\n               click: function () {\n                  self.onCancel(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button cancel ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // reset button\n      if (settings.includeReset) {\n         _ui.cols.push(\n            {\n               view: \"button\",\n               autowidth: true,\n               value: settings.resetLabel || this.label(\"Reset\"),\n               click: function () {\n                  self.onClear(this);\n               },\n               on: {\n                  onAfterRender: function () {\n                     this.getInputNode().setAttribute(\n                        \"data-cy\",\n                        `button reset ${form.id}`\n                     );\n                  },\n               },\n            },\n            {\n               width: 10,\n            }\n         );\n      }\n\n      // save button\n      if (settings.includeSave) {\n         _ui.cols.push({\n            view: \"button\",\n            type: \"form\",\n            css: \"webix_primary\",\n            autowidth: true,\n            value: settings.saveLabel || this.label(\"Save\"),\n            click: function () {\n               self.onSave(this);\n            },\n            on: {\n               onAfterRender: function () {\n                  this.getInputNode().setAttribute(\n                     \"data-cy\",\n                     `button save ${form.id}`\n                  );\n               },\n            },\n         });\n      }\n\n      // spacer\n      if (alignment === \"center\" || alignment === \"left\") _ui.cols.push({});\n\n      return super.ui(_ui);\n   }\n\n   onCancel(cancelButton) {\n      const baseView = this.view;\n      const settings = baseView.settings ?? {};\n\n      // get form component\n      const form = baseView.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      dc?.setCursor(null);\n\n      cancelButton?.getFormView?.().clear();\n\n      if (settings.afterCancel) form.changePage(settings.afterCancel);\n      // If the redirect page is not defined, then redirect to parent page\n      else {\n         const noPopupFilter = (p) => p.settings && p.settings.type != \"popup\";\n\n         const pageCurr = this.view.pageParent();\n         if (pageCurr) {\n            const pageParent = pageCurr.pageParent(noPopupFilter) ?? pageCurr;\n\n            if (pageParent) form.changePage(pageParent.id);\n         }\n      }\n   }\n\n   onClear(resetButton) {\n      // get form component\n      const form = this.view.parentFormComponent();\n\n      // get ABDatacollection\n      const dc = form.datacollection;\n\n      // clear cursor of DC\n      if (dc) {\n         dc.setCursor(null);\n      }\n\n      resetButton?.getFormView?.().clear();\n   }\n\n   onSave(saveButton) {\n      if (!saveButton) {\n         console.error(\"Require the button element\");\n         return;\n      }\n      // get form component\n      const form = this.view.parentFormComponent();\n      const formView = saveButton.getFormView();\n\n      // disable the save button\n      saveButton.disable?.();\n\n      // save data\n      form\n         .saveData(formView)\n         .then(() => {\n            saveButton.enable?.();\n\n            //Focus on first focusable component\n            form.focusOnFirst();\n         })\n         .catch((err) => {\n            console.error(err);\n            // Catch uncaught error reported in Sentry and add context\n            // APPBUILDER-WEB-1A3(https://appdev-designs.sentry.io/issues/4631880265/)\n            try {\n               saveButton.enable?.();\n            } catch (e) {\n               this.AB.notify.developer(e, {\n                  context:\n                     \"formButton.onSave > catch err > saveButton.enable()\",\n                  buttonID: this?.view?.id,\n                  formID: this?.view?.parent?.id,\n               });\n            }\n         });\n   }\n\n   onDelete(deleteButton) {\n      this.AB.Webix.confirm({\n         title: this.label(\"Delete data\"),\n         text: this.label(\"Do you want to delete this data?\"),\n         callback: async (confirm) => {\n            if (!confirm) return;\n\n            deleteButton.disable?.();\n\n            try {\n               // get form component\n               const form = this.view.parentFormComponent();\n               const $formView = deleteButton.getFormView();\n\n               // delete a record row\n               await form.deleteData($formView);\n            } catch (err) {\n               console.error(err);\n            } finally {\n               deleteButton.enable?.();\n            }\n         },\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormCheckboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCheckbox_${baseView.id}`, ids);\n   }\n\n   ui() {\n      return super.ui({\n         view: \"checkbox\",\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABViewFormItem = require(\"../ABViewFormItem\");\nconst ABViewFormConnect = require(\"../ABViewFormConnect\");\nconst ABViewFormCustom = require(\"../ABViewFormCustom\");\nconst ABViewFormTextbox = require(\"../ABViewFormTextbox\");\nconst ABViewFormJson = require(\"../ABViewFormJson\");\n\nasync function timeout(ms) {\n   return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst fieldValidations = [];\n\nmodule.exports = class ABViewFormComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewForm_${baseView.id}`,\n         Object.assign(\n            {\n               form: \"\",\n\n               layout: \"\",\n               filterComplex: \"\",\n            },\n            ids\n         )\n      );\n\n      this.timerId = null;\n      this._showed = false;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const superComponent = baseView.superComponent();\n      const rows = superComponent.ui().rows ?? [];\n      const fieldValidationsHolder = this.uiValidationHolder();\n      const _ui = super.ui([\n         {\n            id: this.ids.form,\n            view: \"form\",\n            abid: baseView.id,\n            rows: rows.concat(fieldValidationsHolder),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiValidationHolder() {\n      const result = [\n         {\n            hidden: true,\n            rows: [],\n         },\n      ];\n\n      // NOTE: this._currentObject can be set in the KanBan Side Panel\n      const baseView = this.view;\n      const object = this.datacollection?.datasource ?? baseView._currentObject;\n\n      if (!object) return result;\n\n      const validationUI = [];\n      const existsFields = baseView.fieldComponents();\n\n      object\n         // Pull fields that have validation rules\n         .fields((f) => f?.settings?.validationRules)\n         .forEach((f) => {\n            const view = existsFields.find(\n               (com) => f.id === com.settings.fieldId\n            );\n            if (!view) return;\n\n            // parse the rules because they were stored as a string\n            // check if rules are still a string...if so lets parse them\n            if (typeof f.settings.validationRules === \"string\") {\n               f.settings.validationRules = JSON.parse(\n                  f.settings.validationRules\n               );\n            }\n\n            // there could be more than one so lets loop through and build the UI\n            f.settings.validationRules.forEach((rule, indx) => {\n               const Filter = this.AB.filterComplexNew(\n                  `${f.columnName}_${indx}`\n               );\n               // add the new ui to an array so we can add them all at the same time\n               if (typeof Filter.ui === \"function\") {\n                  validationUI.push(Filter.ui());\n               } else {\n                  // Legacy v1 method:\n                  validationUI.push(Filter.ui);\n               }\n\n               // store the filter's info so we can assign values and settings after the ui is rendered\n               fieldValidations.push({\n                  filter: Filter,\n                  view: Filter.ids.querybuilder,\n                  columnName: f.columnName,\n                  validationRules: rule.rules,\n                  invalidMessage: rule.invalidMessage,\n               });\n            });\n         });\n\n      result.rows = validationUI;\n\n      return result;\n   }\n\n   async init(AB, accessLevel, options = {}) {\n      await super.init(AB);\n\n      this.view.superComponent().init(AB, accessLevel, options);\n\n      this.initCallbacks(options);\n      this.initEvents();\n      this.initValidationRules();\n\n      const abWebix = this.AB.Webix;\n      const $form = $$(this.ids.form);\n\n      if ($form) {\n         abWebix.extend($form, abWebix.ProgressBar);\n      }\n\n      if (accessLevel < 2) $form.disable();\n   }\n\n   initCallbacks(options = {}) {\n      // ? We need to determine from these options whether to clear on load?\n      if (options?.clearOnLoad) {\n         // does this need to be a function?\n         this.view.settings.clearOnLoad = options.clearOnLoad();\n      }\n      // Q: Should we use emit the event instead ?\n      const baseView = this.view;\n\n      if (options.onBeforeSaveData)\n         baseView._callbacks.onBeforeSaveData = options.onBeforeSaveData;\n      else baseView._callbacks.onBeforeSaveData = () => true;\n   }\n\n   initEvents() {\n      // bind a data collection to form component\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // listen DC events\n      [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n         this.eventAdd({\n            emitter: dc,\n            eventName: key,\n            listener: (rowData) => {\n               const baseView = this.view;\n               const linkViaOneConnection = baseView.fieldComponents(\n                  (comp) => comp instanceof ABViewFormConnect\n               );\n               // clear previous xxx->one selections and add new from\n               // cursor change\n               linkViaOneConnection.forEach((f) => {\n                  const field = f.field();\n                  if (\n                     field?.settings?.linkViaType == \"one\" &&\n                     field?.linkViaOneValues\n                  ) {\n                     delete field.linkViaOneValues;\n                     const relationVals =\n                        rowData?.[field.relationName()] ??\n                        rowData?.[field.columnName];\n                     if (relationVals) {\n                        if (Array.isArray(relationVals)) {\n                           const valArray = [];\n                           relationVals.forEach((v) => {\n                              valArray.push(\n                                 field.getRelationValue(v, { forUpdate: true })\n                              );\n                           });\n                           field.linkViaOneValues = valArray.join(\",\");\n                        } else {\n                           field.linkViaOneValues = field.getRelationValue(\n                              relationVals,\n                              { forUpdate: true }\n                           );\n                        }\n                     }\n                  }\n               });\n\n               this.displayData(rowData);\n            },\n         });\n      });\n\n      const ids = this.ids;\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializingData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.disable();\n\n               $form.showProgress?.({ type: \"icon\" });\n            }\n         },\n      });\n\n      this.eventAdd({\n         emitter: dc,\n         eventName: \"initializedData\",\n         listener: () => {\n            const $form = $$(ids.form);\n\n            if ($form) {\n               $form.enable();\n\n               $form.hideProgress?.();\n            }\n         },\n      });\n\n      // I think this case is currently handled by the DC.[changeCursor, cursorStale]\n      // events:\n      // this.eventAdd({\n      //    emitter: dc,\n      //    eventName: \"ab.datacollection.update\",\n      //    listener: (msg, data) => {\n      //       if (!data?.objectId) return;\n\n      //       const object = dc.datasource;\n\n      //       if (!object) return;\n\n      //       if (\n      //          object.id === data.objectId ||\n      //          object.fields((f) => f.settings.linkObject === data.objectId)\n      //             .length > 0\n      //       ) {\n      //          const currData = dc.getCursor();\n\n      //          if (currData) this.displayData(currData);\n      //       }\n      //    },\n      // });\n\n      // bind the cursor event of the parent DC\n      const linkDv = dc.datacollectionLink;\n\n      if (linkDv)\n         // update the value of link field when data of the parent dc is changed\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            this.eventAdd({\n               emitter: linkDv,\n               eventName: key,\n               listener: (rowData) => {\n                  this.displayParentData(rowData);\n               },\n            });\n         });\n   }\n\n   initValidationRules() {\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      if (!fieldValidations.length) return;\n\n      // we need to store the rules for use later so lets build a container array\n      const complexValidations = [];\n\n      fieldValidations.forEach((f) => {\n         // init each ui to have the properties (app and fields) of the object we are editing\n         f.filter.applicationLoad(dc.datasource.application);\n         f.filter.fieldsLoad(dc.datasource.fields());\n         // now we can set the value because the fields are properly initialized\n         f.filter.setValue(f.validationRules);\n\n         // if there are validation rules present we need to store them in a lookup hash\n         // so multiple rules can be stored on a single field\n         if (!Array.isArray(complexValidations[f.columnName]))\n            complexValidations[f.columnName] = [];\n\n         // now we can push the rules into the hash\n         complexValidations[f.columnName].push({\n            filters: $$(f.view).getFilterHelper(),\n            // values: $$(ids.form).getValues(),\n            invalidMessage: f.invalidMessage,\n         });\n      });\n\n      const ids = this.ids;\n\n      // use the lookup to build the validation rules\n      Object.keys(complexValidations).forEach((key) => {\n         // get our field that has validation rules\n         const formField = $$(ids.form).queryView({\n            name: key,\n         });\n\n         // store the rules in a data param to be used later\n         formField.$view.complexValidations = complexValidations[key];\n         // define validation rules\n         formField.define(\"validate\", function (nval, oval, field) {\n            // get field now that we are validating\n            const fieldValidating = $$(ids.form).queryView({\n               name: field,\n            });\n\n            // default valid is true\n            let isValid = true;\n\n            // check each rule that was stored previously on the element\n            fieldValidating.$view.complexValidations.forEach((filter) => {\n               const object = dc.datasource;\n               const data = this.getValues();\n\n               // convert rowData from { colName : data } to { id : data }\n               const newData = {};\n\n               (object.fields() || []).forEach((field) => {\n                  newData[field.id] = data[field.columnName];\n               });\n\n               // for the case of \"this_object\" conditions:\n               if (data.uuid) newData[\"this_object\"] = data.uuid;\n\n               // use helper funtion to check if valid\n               const ruleValid = filter.filters(newData);\n\n               // if invalid we need to tell the field\n               if (!ruleValid) {\n                  isValid = false;\n                  // we also need to define an error message\n                  fieldValidating.define(\n                     \"invalidMessage\",\n                     filter.invalidMessage\n                  );\n               }\n            });\n\n            return isValid;\n         });\n\n         formField.refresh();\n      });\n   }\n\n   async onShow(data) {\n      this.saveButton?.disable();\n\n      this._showed = true;\n\n      const baseView = this.view;\n\n      // call .onShow in the base component\n      const superComponent = baseView.superComponent();\n      await superComponent.onShow();\n\n      const $form = $$(this.ids.form);\n      const dc = this.datacollection;\n\n      if (dc) {\n         // clear current cursor on load\n         // if (this.settings.clearOnLoad || _logic.callbacks.clearOnLoad() ) {\n         const settings = this.settings;\n\n         if (settings.clearOnLoad) {\n            dc.setCursor(null);\n         }\n\n         // pull data of current cursor\n         const rowData = dc.getCursor();\n\n         if ($form) dc.bind($form);\n\n         // do this for the initial form display so we can see defaults\n         await this.displayData(rowData);\n      }\n      // show blank data in the form\n      else await this.displayData(data ?? {});\n\n      //Focus on first focusable component\n      this.focusOnFirst();\n\n      if ($form) $form.adjust();\n\n      // Load data of DCs that are use in record rules here\n      // no need to wait until they are done. (Let the save button enable)\n      // It will be re-check again when saving.\n      baseView.loadDcDataOfRecordRules();\n\n      this.saveButton?.enable();\n   }\n\n   async displayData(rowData) {\n      // If setTimeout is already scheduled, no need to do anything\n      if (this.timerId) return;\n      else this.timerId = await timeout(80);\n\n      const baseView = this.view;\n      const customFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormCustom ||\n            // rich text\n            (comp instanceof ABViewFormTextbox &&\n               comp.settings.type === \"rich\") ||\n            (comp instanceof ABViewFormJson && comp.settings.type === \"filter\")\n      );\n\n      const normalFields = baseView.fieldComponents(\n         (comp) =>\n            comp instanceof ABViewFormItem &&\n            !(comp instanceof ABViewFormCustom)\n      );\n\n      // Set default values\n      if (!rowData) {\n         customFields.forEach((f) => {\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            // var colName = field.columnName;\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            const defaultRowData = {};\n\n            field.defaultValue(defaultRowData);\n            field.setValue($$(comp.ids.formItem), defaultRowData);\n\n            comp?.refresh?.(defaultRowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            const colName = field.columnName;\n\n            // set value to each components\n            const values = {};\n\n            field.defaultValue(values);\n            $$(comp.ids.formItem)?.setValue(values[colName] ?? \"\");\n         });\n\n         // select parent data to default value\n         const dc = this.datacollection;\n         const linkDv = dc.datacollectionLink;\n\n         if (linkDv) {\n            const parentData = linkDv.getCursor();\n\n            this.displayParentData(parentData);\n         }\n      }\n\n      // Populate value to custom fields\n      else {\n         customFields.forEach((f) => {\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            if (this._showed) comp?.onShow?.();\n\n            // set value to each components\n            f?.field()?.setValue($$(comp.ids.formItem), rowData);\n\n            comp?.refresh?.(rowData);\n         });\n\n         normalFields.forEach((f) => {\n            if (f.key === \"button\") return;\n\n            const field = f.field();\n            if (!field) return;\n\n            const comp = baseView.viewComponents[f.id];\n            if (!comp) return;\n\n            field.setValue($$(comp.ids.formItem), rowData);\n         });\n      }\n\n      this.timerId = null;\n   }\n\n   displayParentData(rowData) {\n      const dc = this.datacollection;\n\n      // If the cursor is selected, then it will not update value of the parent field\n      const currCursor = dc.getCursor();\n      if (currCursor) return;\n\n      const relationField = dc.fieldLink;\n      if (!relationField) return;\n\n      const baseView = this.view;\n      // Pull a component of relation field\n      const relationFieldCom = baseView.fieldComponents((comp) => {\n         if (!(comp instanceof ABViewFormItem)) return false;\n\n         return comp.field()?.id === relationField.id;\n      })[0];\n      if (!relationFieldCom) return;\n\n      const relationFieldView = baseView.viewComponents[relationFieldCom.id];\n      if (!relationFieldView) return;\n\n      const $relationFieldView = $$(relationFieldView.ids.formItem),\n         relationName = relationField.relationName();\n\n      // pull data of parent's dc\n      const formData = {};\n\n      formData[relationName] = rowData;\n\n      // set data of parent to default value\n      relationField.setValue($relationFieldView, formData);\n   }\n\n   detatch() {\n      // TODO: remove any handlers we have attached.\n   }\n\n   focusOnFirst() {\n      const baseView = this.view;\n\n      let topPosition = 0;\n      let topPositionId = \"\";\n\n      baseView.views().forEach((item) => {\n         if (item.key === \"textbox\" || item.key === \"numberbox\")\n            if (item.position.y === topPosition) {\n               topPosition = item.position.y;\n               topPositionId = item.id;\n            }\n      });\n\n      const childComponent = baseView.viewComponents[topPositionId];\n\n      if (childComponent && $$(childComponent.ids.formItem))\n         $$(childComponent.ids.formItem).focus();\n   }\n\n   get saveButton() {\n      return $$(this.ids.form)?.queryView({\n         view: \"button\",\n         type: \"form\",\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormConnectComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormConnect_${baseView.id}`,\n         Object.assign(\n            {\n               popup: \"\",\n               editpopup: \"\",\n            },\n            ids\n         )\n      );\n\n      this.addPageComponent = null;\n      this.editPageComponent = null;\n   }\n\n   get field() {\n      return this.view.field();\n   }\n\n   get multiselect() {\n      return this.field?.settings.linkType == \"many\";\n   }\n\n   ui() {\n      const field = this.field;\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const settings = this.settings;\n\n      if (!field) {\n         console.error(`This field could not found : ${settings.fieldId}`);\n\n         return super.ui({\n            view: \"label\",\n            label: \"\",\n         });\n      }\n\n      const multiselect = this.multiselect; // field.settings.linkType == \"many\";\n      const formSettings = form?.settings || {};\n      const ids = this.ids;\n\n      let _ui = {\n         id: ids.formItem,\n         view: multiselect ? \"multicombo\" : \"combo\",\n         name: field.columnName,\n         required:\n            field?.settings?.required || parseInt(settings?.required) || false,\n         // label: field.label,\n         // labelWidth: settings.labelWidth,\n         dataFieldId: field.id,\n         on: {\n            onItemClick: (id, e) => {\n               if (\n                  e.target.classList.contains(\"editConnectedPage\") &&\n                  e.target.dataset.itemId\n               ) {\n                  const rowId = e.target.dataset.itemId;\n                  if (!rowId) return;\n                  this.goToEditPage(rowId);\n               }\n            },\n            onChange: (data) => {\n               this._onChange(data);\n            },\n         },\n      };\n\n      if (formSettings.showLabel) {\n         _ui.label = field.label;\n         _ui.labelWidth = formSettings.labelWidth;\n         _ui.labelPosition = formSettings.labelPosition;\n      }\n\n      this.initAddEditTool();\n\n      _ui.suggest = {\n         button: true,\n         selectAll: multiselect ? true : false,\n         body: {\n            data: [],\n            template: `${\n               baseView?.settings?.editForm\n                  ? '<i data-item-id=\"#id#\" class=\"fa fa-cog editConnectedPage\"></i>'\n                  : \"\"\n            }#value#`,\n         },\n         on: {\n            onShow: () => {\n               field.populateOptionsDataCy($$(ids.formItem), field, form);\n            },\n         },\n         // Support partial matches\n         filter: ({ value }, search) =>\n            value.toLowerCase().includes(search.toLowerCase()),\n      };\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            if (settings.disable === 1) return;\n\n            const rowData = {};\n            const $formItem = $$(ids.formItem);\n\n            if ($formItem) {\n               const node = $formItem.$view;\n\n               field.customEdit(rowData, /* App,*/ node);\n            }\n         },\n      };\n\n      let apcUI = this.addPageComponent?.ui;\n      if (apcUI) {\n         // reset some component vals to make room for button\n         _ui.label = \"\";\n         _ui.labelWidth = 0;\n\n         // add click event to add new button\n         apcUI.on = {\n            onItemClick: (/*id, evt*/) => {\n               // let $form = $$(id).getFormView();\n               this.addPageComponent?.onClick(form.datacollection);\n\n               return false;\n            },\n         };\n\n         if (_ui.labelPosition == \"top\") {\n            _ui.labelPosition = \"left\";\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     view: \"label\",\n                     label: field.label,\n                     // height: 22,\n                     align: \"left\",\n                  },\n                  {\n                     cols: [apcUI, _ui],\n                  },\n               ],\n            };\n         } else {\n            _ui = {\n               inputId: ids.formItem,\n               rows: [\n                  {\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: field.label,\n                           width: formSettings.labelWidth,\n                           align: \"left\",\n                        },\n                        apcUI,\n                        _ui,\n                     ],\n                  },\n               ],\n            };\n         }\n\n         _ui = super.ui(_ui);\n      } else {\n         _ui = {\n            inputId: ids.formItem,\n            rows: [_ui],\n         };\n\n         _ui = super.ui(_ui);\n\n         delete _ui.rows[0].id;\n      }\n\n      return _ui;\n   }\n\n   async _onChange(data) {\n      const ids = this.ids;\n      const field = this.field;\n      const baseView = this.view;\n\n      if (this.multiselect) {\n         if (typeof data == \"string\") {\n            data = data.split(\",\");\n         }\n      }\n\n      let selectedValues;\n      if (Array.isArray(data)) {\n         selectedValues = [];\n         data.forEach((record) => {\n            selectedValues.push(record.id || record);\n            // let recordObj = record;\n            // if (typeof record != \"object\") {\n            //    // we need to convert either index or uuid to full data object\n            //    recordObj = field.getItemFromVal(record);\n            // }\n            // if (recordObj?.id) selectedValues.push(recordObj.id);\n         });\n      } else {\n         selectedValues = data;\n         if (typeof data != \"object\") {\n            // we need to convert either index or uuid to full data object\n            selectedValues = field.getItemFromVal(data);\n         }\n         // selectedValues = field.pullRecordRelationValues(selectedValues);\n         if (selectedValues?.id) {\n            selectedValues = selectedValues.id;\n         } else {\n            selectedValues = data;\n         }\n      }\n\n      // We can now set the new value but we need to block event listening\n      // so it doesn't trigger onChange again\n      const $formItem = $$(ids.formItem);\n\n      // Q: if we don't have a $formItem, is any of the rest valid?\n      if ($formItem) {\n         // for xxx->one connections we need to populate again before setting\n         // values because we need to use the selected values to add options\n         // to the UI\n         if (this?.field?.settings?.linkViaType == \"one\") {\n            this.busy();\n            await field.getAndPopulateOptions(\n               $formItem,\n               baseView.options,\n               field,\n               baseView.parentFormComponent()\n            );\n            this.ready();\n         }\n\n         $formItem.blockEvent();\n\n         const prepedVals = selectedValues.join\n            ? selectedValues.join()\n            : selectedValues;\n\n         $formItem.setValue(prepedVals);\n         $formItem.unblockEvent();\n      }\n   }\n\n   async init(AB, options) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if ($formItem) webix.extend($formItem, webix.ProgressBar);\n\n      this.initAddEditTool();\n   }\n\n   initAddEditTool() {\n      const baseView = this.view;\n\n      // Initial add/edit page tools\n      const addFormID = baseView?.settings?.formView;\n      if (addFormID && baseView && !this.addPageComponent) {\n         this.addPageComponent = baseView.addPageTool.component(\n            this.AB,\n            `${baseView.id}_${addFormID}`\n         );\n         this.addPageComponent.applicationLoad(baseView.application);\n         this.addPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n\n      const editFormID = baseView?.settings?.editForm;\n      if (editFormID && baseView && !this.editPageComponent) {\n         this.editPageComponent = baseView.editPageTool.component(\n            this.AB,\n            `${baseView.id}_${editFormID}`\n         );\n         this.editPageComponent.applicationLoad(baseView.application);\n         this.editPageComponent.init({\n            onSaveData: this.callbackSaveData.bind(this),\n            onCancelClick: this.callbackCancel.bind(this),\n            clearOnLoad: this.callbackClearOnLoad.bind(this),\n         });\n      }\n   }\n\n   async callbackSaveData(saveData) {\n      if (saveData == null) return;\n      else if (!Array.isArray(saveData)) saveData = [saveData];\n\n      const ids = this.ids;\n      const field = this.field;\n\n      // find the select component\n      const $formItem = $$(ids.formItem);\n      if (!$formItem) return;\n\n      // Refresh option list\n      this.busy();\n      field.clearStorage(this.view.settings.filterConditions);\n      const data = await field.getAndPopulateOptions(\n         $formItem,\n         this.view.options,\n         field,\n         this.view.parentFormComponent()\n      );\n      this.ready();\n\n      // field.once(\"option.data\", (data) => {\n      data.forEach((item) => {\n         item.value = item.text;\n      });\n\n      $formItem.getList().clearAll();\n      $formItem.getList().define(\"data\", data);\n\n      if (field.settings.linkType === \"many\") {\n         let selectedItems = $formItem.getValue();\n         saveData.forEach((sData) => {\n            if (selectedItems.indexOf(sData.id) === -1)\n               selectedItems = selectedItems\n                  ? `${selectedItems},${sData.id}`\n                  : sData.id;\n         });\n\n         $formItem.setValue(selectedItems);\n      } else {\n         $formItem.setValue(saveData[0].id);\n      }\n      // close the popup when we are finished\n      // $$(ids.popup)?.close();\n      // $$(ids.editpopup)?.close();\n      // });\n\n      // field.getOptions(this.settings.filterConditions, \"\");\n      // .then(function (data) {\n      //    // we need new option that will be returned from server (above)\n      //    // so we will not set this and then just reset it.\n      // });\n   }\n\n   callbackCancel() {\n      $$(this.ids?.popup)?.close?.();\n\n      return false;\n   }\n\n   callbackClearOnLoad() {\n      return true;\n   }\n\n   getValue(rowData) {\n      return this.field.getValue($$(this.ids.formItem), rowData);\n   }\n\n   formBusy($form) {\n      if (!$form) return;\n\n      $form.disable?.();\n      $form.showProgress?.({ type: \"icon\" });\n   }\n\n   formReady($form) {\n      if (!$form) return;\n\n      $form.enable?.();\n      $form.hideProgress?.();\n   }\n\n   goToEditPage(rowId) {\n      const settings = this.settings;\n\n      if (!settings.editForm) return;\n\n      const editForm = this.view.application.urlResolve(settings.editForm);\n\n      if (!editForm) return;\n\n      const $form = $$(this.ids.formItem).getFormView() || null;\n\n      // Open the form popup\n      this.editPageComponent.onClick().then(() => {\n         const dc = editForm.datacollection;\n\n         if (dc) {\n            dc.setCursor(rowId);\n\n            this.__editFormDcEvent =\n               this.__editFormDcEvent ||\n               dc.on(\"initializedData\", () => {\n                  dc.setCursor(rowId);\n               });\n         }\n      });\n   }\n\n   async onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const field = this.field;\n\n      if (!field) return;\n\n      const node = $formItem.$view;\n\n      if (!node) return;\n\n      const $node = $$(node);\n\n      if (!$node) return;\n\n      const settings = this.settings;\n      let filterConditions = {\n         glue: \"and\",\n         rules: [],\n      };\n\n      if (settings?.filterConditions?.rules?.length) {\n         filterConditions = this.AB.cloneDeep(\n            this.view.settings.filterConditions\n         );\n      }\n\n      // NOTE: compatible with version 1. This code should not be here too long.\n      if (\n         !filterConditions?.rules?.length &&\n         settings?.objectWorkspace?.filterConditions?.rules?.length\n      ) {\n         filterConditions = this.AB.cloneDeep(\n            settings.objectWorkspace.filterConditions\n         );\n      }\n\n      // Add the filter connected value\n      if ((settings?.filterConnectedValue ?? \"\").indexOf(\":\") > -1) {\n         const values = settings.filterConnectedValue.split(\":\"),\n            uiConfigName = values[0],\n            connectFieldId = values[1];\n\n         filterConditions.rules.push({\n            key: connectFieldId,\n            rule: \"filterByConnectValue\",\n            value: uiConfigName,\n         });\n      }\n\n      const getFilterByConnectValues = (conditions, depth = 0) => {\n         return [\n            ...conditions.rules\n               .filter((e) => e.rule === \"filterByConnectValue\")\n               .map((e) => {\n                  const filterByConnectValue = Object.assign({}, e);\n\n                  filterByConnectValue.depth = depth;\n\n                  return filterByConnectValue;\n               }),\n         ].concat(\n            ...conditions.rules\n               .filter((e) => e.glue)\n               .map((e) => getFilterByConnectValues(e, depth + 1))\n         );\n      };\n\n      const baseView = this.view;\n      const filterByConnectValues = getFilterByConnectValues(\n         filterConditions\n      ).map((e) => {\n         for (const key in baseView.parent.viewComponents) {\n            if (\n               !(\n                  baseView.parent.viewComponents[key] instanceof\n                  this.constructor\n               )\n            )\n               continue;\n\n            const $ui = $$(\n               baseView.parent.viewComponents[key]\n                  .ui()\n                  .rows.find((vc) => vc.inputId)?.inputId\n            );\n\n            if ($ui?.config?.name === e.value) {\n               // we need to use the element id stored in the settings to find out what the\n               // ui component id is so later we can use it to look up its current value\n               e.filterValue = $ui;\n\n               break;\n            }\n         }\n\n         const ab = this.AB;\n         const field = ab\n            .objectByID(settings.objectId)\n            .fieldByID(settings.fieldId);\n         const linkedObject = ab.objectByID(field.settings.linkObject);\n         const linkedField = linkedObject.fieldByID(e.key);\n\n         if (linkedField?.settings?.isCustomFK) {\n            // finally if this is a custom foreign key we need the stored columnName by\n            // default uuid is passed for all non CFK\n            e.filterColumn = ab\n               .objectByID(linkedField.settings.linkObject)\n               .fields(\n                  (filter) =>\n                     filter.id === linkedField.settings.indexField ||\n                     linkedField.settings.indexField2\n               )[0].columnName;\n         } else e.filterColumn = null;\n\n         return e;\n      });\n\n      baseView.options = {\n         formView: settings.formView,\n         filters: filterConditions,\n         // NOTE: settings.objectWorkspace.xxx is a depreciated setting.\n         // We will be phasing this out.\n         sort: settings.sortFields ?? settings.objectWorkspace?.sortFields,\n         editable: settings.disable === 1 ? false : true,\n         editPage:\n            !settings.editForm || settings.editForm === \"none\" ? false : true,\n         filterByConnectValues,\n      };\n\n      // if this field's options are filtered off another field's value we need\n      // to make sure the UX helps the user know what to do.\n      // fetch the options and set placeholder text for this view\n      if (baseView.options.editable) {\n         const parentFields = [];\n\n         filterByConnectValues.forEach((fv) => {\n            if (fv.filterValue && fv.key) {\n               const $filterValueConfig = $$(fv.filterValue.config.id);\n\n               let parentField = null;\n\n               if (!$filterValueConfig) {\n                  // this happens in the Interface Builder when only the single form UI is displayed\n                  parentField = {\n                     id: \"perentElement\",\n                     label: this.label(\"PARENT ELEMENT\"),\n                  };\n               } else {\n                  const value = field.getValue($filterValueConfig);\n\n                  if (!value) {\n                     // if there isn't a value on the parent select element set this one to readonly and change placeholder text\n                     parentField = {\n                        id: fv.filterValue.config.id,\n                        label: $filterValueConfig.config.label,\n                     };\n                  }\n\n                  $filterValueConfig.attachEvent(\n                     \"onChange\",\n                     async (e) => {\n                        const parentVal = $filterValueConfig.getValue();\n\n                        if (parentVal) {\n                           $node.define(\"disabled\", false);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Select items\")\n                           );\n                           this.busy();\n                           await field.getAndPopulateOptions(\n                              $node,\n                              baseView.options,\n                              field,\n                              baseView.parentFormComponent()\n                           );\n                           this.ready();\n                        } else {\n                           $node.define(\"disabled\", true);\n                           $node.define(\n                              \"placeholder\",\n                              this.label(\"Must select item from '{0}' first.\", [\n                                 $filterValueConfig.config.label,\n                              ])\n                           );\n                        }\n\n                        // TODO: Do we need to clear selected value?\n                        // $node.setValue(\"\");\n                        $node.refresh();\n                     },\n                     false\n                  );\n               }\n\n               if (\n                  parentField &&\n                  parentFields.findIndex((e) => e.id === parentField.id) < 0\n               )\n                  parentFields.push(parentField);\n            }\n         });\n\n         if (parentFields.length && !$node.getValue()) {\n            $node.define(\"disabled\", true);\n            $node.define(\n               \"placeholder\",\n               this.label(`Must select item from '{0}' first.`, [\n                  parentFields.map((e) => e.label).join(\", \"),\n               ])\n            );\n         } else {\n            $node.define(\"disabled\", false);\n            $node.define(\"placeholder\", this.label(\"Select items\"));\n         }\n      } else {\n         $node.define(\"placeholder\", \"\");\n         $node.define(\"disabled\", true);\n      }\n\n      $node.refresh();\n\n      // Add data-cy attributes\n      const dataCy = `${field.key} ${field.columnName} ${field.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      this.busy();\n      try {\n         await field.getAndPopulateOptions(\n            // $node,\n            $formItem,\n            baseView.options,\n            field,\n            baseView.parentFormComponent()\n         );\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewFormConnectComponent > onShow() error calling field.getAndPopulateOptions\",\n         });\n      }\n      this.ready();\n\n      // Need to refresh selected values when they are custom index\n      this._onChange($formItem.getValue());\n   }\n\n   busy() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.disable();\n      $formItem?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      const $formItem = $$(this.ids.formItem);\n\n      $formItem?.enable();\n      $formItem?.hideProgress?.();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst ABFieldImage = require(\"../../dataFields/ABFieldImage\");\nconst FocusableTemplate = require(\"../../../../webix_custom_components/focusableTemplate\");\n\nconst DEFAULT_HEIGHT = 80;\n\nmodule.exports = class ABViewFormCustomComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormCustom_${baseView.id}`, ids);\n   }\n\n   get new_width() {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = baseView.settings ?? {};\n\n      let newWidth = formSettings.labelWidth;\n\n      if (settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      return newWidth;\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n      const form = baseView.parentFormComponent();\n      const formSettings = form?.settings ?? {};\n      const settings = field?.settings ?? baseView.settings ?? {};\n\n      const requiredClass =\n         field?.settings?.required || this.settings.required\n            ? \"webix_required\"\n            : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"box-sizing: border-box; display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"box-sizing: border-box; width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 8px 0 0; text-overflow:ellipsis; overflow:hidden; white-space:nowrap; color: #313131;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let height = 38;\n      let width = this.new_width;\n\n      if (typeof field == \"undefined\") {\n         console.warn(\n            `BaseView[${baseView.id}] returned an undefined field()`,\n            baseView.toObj()\n         );\n      }\n\n      if (field instanceof ABFieldImage) {\n         if (settings.useHeight) {\n            if (formSettings.labelPosition === \"top\") {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n               height += 38;\n            } else {\n               height = parseInt(settings.imageHeight) || DEFAULT_HEIGHT;\n            }\n         } else if (formSettings.labelPosition === \"top\") {\n            height = DEFAULT_HEIGHT + 38;\n         } else {\n            if (DEFAULT_HEIGHT > 38) {\n               height = DEFAULT_HEIGHT;\n            }\n         }\n         width =\n            settings.useWidth && settings.imageWidth ? settings.imageWidth : 0;\n      } else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         height = DEFAULT_HEIGHT;\n\n      let template = `<div class=\"customField ${formSettings.labelPosition}\">${\n         formSettings.labelPosition == \"top\" ? \"\" : templateLabel\n      }#template#</div>`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field?.label ?? \"\")\n         .replace(\n            /#template#/g,\n            field\n               ?.columnHeader({\n                  width: width,\n                  height: height,\n                  editable: true,\n               })\n               .template({}) ?? \"\"\n         );\n\n      if (settings.useWidth == 0) {\n         template = template.replace(\n            /\"ab-image-data-field\" style=\"float: left; width: 100%/g,\n            '\"ab-image-data-field\" style=\"float: left; width: calc(100% - ' +\n               formSettings.labelWidth +\n               \"px)\"\n         );\n      }\n\n      return super.ui({\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         css: \"ab-custom-field\",\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            view: new FocusableTemplate(this.AB._App).key,\n            css: \"customFieldCls\",\n            borderless: true,\n            template: template,\n            height: height,\n            onClick: {\n               customField: (evt, e, trg) => {\n                  if (settings.disable === 1) return;\n\n                  let rowData = {};\n\n                  const formView =\n                     this?.parentFormComponent?.() ||\n                     this.view?.parentFormComponent?.();\n\n                  if (formView) {\n                     const dv = formView.datacollection;\n                     if (dv) rowData = dv.getCursor() || {};\n                  }\n\n                  // var node = $$(ids.formItem).$view;\n                  let node = $$(trg).getParentView().$view;\n                  field?.customEdit(\n                     rowData,\n                     this.AB_App,\n                     node,\n                     this.ids.formItem,\n                     evt\n                  );\n               },\n            },\n         },\n      });\n   }\n\n   onShow() {\n      const ids = this.ids;\n      const $formItem = $$(ids.formItem);\n\n      if (!$formItem) return;\n\n      const baseView = this.view;\n      const field = baseView.field(),\n         rowData = {},\n         node = $formItem.$view;\n\n      // Add data-cy attributes\n      const dataCy = `${baseView.key} ${field.key} ${field.columnName} ${baseView.id} ${baseView.parent.id}`;\n      node.setAttribute(\"data-cy\", dataCy);\n\n      const options = {\n         formId: ids.formItem,\n         editable: baseView.settings.disable === 1 ? false : true,\n      };\n\n      if (field instanceof ABFieldImage) {\n         options.height = field.settings.useHeight\n            ? parseInt(field.settings.imageHeight) || DEFAULT_HEIGHT\n            : DEFAULT_HEIGHT;\n         options.width = field.settings.useWidth\n            ? parseInt(field.settings.imageWidth) || 0\n            : 0;\n      }\n\n      field.customDisplay(rowData, this.AB._App, node, options);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormDatepickerComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormDatepicker_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const self = this;\n      const field = this.view.field();\n\n      const _ui = {\n         view: \"datepicker\",\n         suggest: {\n            body: {\n               view:\n                  this.AB.Account?._config?.languageCode == \"th\"\n                     ? \"thaicalendar\"\n                     : \"calendar\",\n               type: field.settings?.dateFormat === 1 ? \"time\" : \"\",\n               timepicker:\n                  field.key === \"datetime\" && field.settings?.timeFormat !== 1\n                     ? true\n                     : false,\n               editable: true,\n               on: {\n                  onAfterDateSelect: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onTodaySet: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n                  onDateClear: function (date) {\n                     this.getParentView().setMasterValue({\n                        value: date,\n                     });\n                  },\n               },\n            },\n            on: {\n               onShow: function () {\n                  const text = this.getMasterValue();\n                  const field = self.view.field();\n                  if (!text || !field) return true;\n\n                  const vals = {};\n                  vals[field.columnName] = text;\n                  const date = self.getValue(vals);\n\n                  const $calendar = this.getChildViews()[0];\n                  $calendar.setValue(date);\n               },\n            },\n         },\n      };\n\n      if (!field) return _ui;\n\n      // Ignore date - Only time picker\n      if (field.settings?.dateFormat === 1) _ui.type = \"time\";\n\n      // Date & Time picker\n      if (field.key === \"datetime\" && field.settings?.timeFormat !== 1)\n         _ui.timepicker = true;\n\n      // allows entering characters in datepicker input, false by default\n      _ui.editable = true;\n\n      // default value\n      if (_ui.value && !(_ui.value instanceof Date))\n         _ui.value = new Date(_ui.value);\n\n      // if we have webix locale set, will use the date format form there.\n      if (!window.webixLocale) _ui.format = field.getFormat();\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      const text = rowData[field.columnName];\n      if (!field || !text) return null;\n\n      // Sentry Fix: caught an error where this.AB was not set, but this.view was...\n      // attempt to catch this situation and post more data:\n      if (!this.AB) {\n         if (this.view.AB) {\n            this.AB = this.view.AB;\n         } else {\n            let errNoAB = new Error(\n               \"ABViewFormDatePicerComponent:getValue(): AB was not set.\"\n            );\n            // sentry logs the console before the error, so dump the offending view here:\n            console.log(\"view:\", JSON.stringify(this.view.toObj()));\n            throw errNoAB;\n         }\n      }\n      const date = this.AB.Webix.Date.strToDate(field.getFormat())(text);\n\n      if (\n         this.AB.Account?._config?.languageCode == \"th\" &&\n         field.settings?.dateFormat !== 1\n      )\n         date.setFullYear(date.getFullYear() - 543);\n\n      return date;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewFormItemComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormItem_${baseView.id}`,\n         Object.assign({ formItem: \"\" }, ids)\n      );\n   }\n\n   ui(uiFormItemComponent = {}) {\n      // setup 'label' of the element\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field?.() || null,\n         label = \"\";\n      const settings = form?.settings || {};\n      const _uiFormItem = {\n         id: this.ids.formItem,\n         labelPosition: settings.labelPosition,\n         labelWidth: settings.labelWidth,\n         label,\n      };\n\n      if (field) {\n         _uiFormItem.name = field.columnName;\n\n         // default value\n         const data = {};\n\n         field.defaultValue(data);\n\n         if (data[field.columnName]) _uiFormItem.value = data[field.columnName];\n\n         if (settings.showLabel) _uiFormItem.label = field.label;\n\n         if (field.settings.required || baseView.settings?.required)\n            _uiFormItem.required = 1;\n\n         if (baseView.settings?.disable === 1) _uiFormItem.disabled = true;\n\n         // add data-cy to form element for better testing code\n         _uiFormItem.on = {\n            onAfterRender() {\n               if (this.getList) {\n                  const popup = this.getPopup();\n\n                  if (!popup) return;\n\n                  this.getList().data.each((option) => {\n                     if (!option) return;\n\n                     // our option.ids are based on builder input and can include the ' character\n                     const node = popup.$view.querySelector(\n                        `[webix_l_id='${(option?.id ?? \"\")\n                           .toString()\n                           .replaceAll(\"'\", \"\\\\'\")}']`\n                     );\n\n                     if (!node) return;\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `${field.key} options ${option.id} ${field.id} ${\n                           form?.id || \"nf\"\n                        }`\n                     );\n                  });\n               }\n\n               this.getInputNode?.().setAttribute?.(\n                  \"data-cy\",\n                  `${field.key} ${field.columnName} ${field.id} ${\n                     form?.id || \"nf\"\n                  }`\n               );\n            },\n         };\n\n         // this may be needed if we want to format data at this point\n         // if (field.format) data = field.format(data);\n\n         _uiFormItem.validate = (val, data, colName) => {\n            const validator = this.AB.Validation.validator();\n\n            field.isValidData(data, validator);\n\n            return validator.pass();\n         };\n      }\n\n      const _ui = super.ui([\n         Object.assign({}, _uiFormItem, uiFormItemComponent),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormJsonComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormJson_${baseView.id}`, ids);\n      if (this.settings.type == \"filter\") {\n         this.rowFilter = this.AB.filterComplexNew(\n            `${baseView.id}_filterComplex`,\n            {\n               isSaveHidden: true,\n               height: 300,\n               borderless: false,\n               showObjectName: true,\n            }\n         );\n      }\n   }\n\n   getFilterField(instance) {\n      if (\n         instance?.settings?.filterField &&\n         instance?.view?.parent?.viewComponents\n      ) {\n         let filterField = \"\";\n         for (const [key, value] of Object.entries(\n            instance.view.parent.viewComponents\n         )) {\n            if (value.settings.fieldId == instance.settings.filterField) {\n               filterField = value;\n            }\n         }\n\n         if (filterField?.ids?.formItem) {\n            return filterField.ids.formItem;\n         } else {\n            return \"\";\n         }\n      } else {\n         return \"\";\n      }\n   }\n\n   get getSystemObjects() {\n      // get list of all objects in the app\n      let objects = this.AB.objects();\n      // reformat objects into simple array for Webix multicombo\n      // if you do not the data causes a maximum stack error\n      let objectsArray = [];\n      objects.forEach((obj) => {\n         objectsArray.push({ id: obj.id, label: obj.label });\n      });\n      // return the simple array\n      return objectsArray;\n   }\n\n   refreshFilter(values) {\n      if (values) {\n         let fieldDefs = [];\n         values.forEach((obj) => {\n            let object = this.AB.objectByID(obj);\n            let fields = object.fields();\n            if (fields.length) {\n               fields.forEach((f) => {\n                  fieldDefs.push(f);\n               });\n            }\n         });\n         this.rowFilter.fieldsLoad(fieldDefs);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      } else {\n         this.rowFilter.fieldsLoad([]);\n         if ($$(this.ids.formItem).config.value)\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n      }\n   }\n\n   getValue() {\n      return this.rowFilter.getValue();\n   }\n\n   setValue(formVals) {\n      $$(this.ids.formItem).config.value = formVals;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type\n      ) {\n         case \"string\":\n            _ui.view = \"textarea\";\n            _ui.disabled = true;\n            _ui.height = 200;\n            _ui.format = {\n               parse: function (parsed) {\n                  try {\n                     parsed = JSON.parse(parsed);\n                  } catch (err) {\n                     // already parsed\n                  }\n                  return parsed;\n               },\n               edit: function (stringify) {\n                  try {\n                     stringify = JSON.stringify(stringify);\n                  } catch (err) {\n                     // already a string\n                  }\n                  return stringify;\n               },\n            };\n            break;\n         case \"systemObject\":\n            _ui.view = \"multicombo\";\n            _ui.placeholder = this.label(\"Select one or more system objects\");\n            _ui.button = false;\n            _ui.stringResult = false;\n            _ui.suggest = {\n               selectAll: true,\n               body: {\n                  data: this.getSystemObjects,\n                  template: webix.template(\"#label#\"),\n               },\n            };\n            break;\n         case \"filter\":\n            _ui.view = \"forminput\";\n            _ui.css = \"ab-custom-field\";\n            _ui.body = this.rowFilter.ui;\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   init() {\n      // if (this.settings.type == \"filter\") {\n      //    this.rowFilter.init({ showObjectName: true });\n      // }\n   }\n\n   onShow() {\n      const _ui = this.ui();\n      if (this?.settings?.type == \"filter\") {\n         let filterField = this.getFilterField(this);\n         if (!$$(filterField)) return;\n         $$(filterField).detachEvent(\"onChange\");\n         $$(filterField).attachEvent(\"onChange\", (values) => {\n            this.refreshFilter(values);\n         });\n         this.rowFilter.init({ showObjectName: true });\n         this.rowFilter.on(\"changed\", (val) => {\n            this.setValue(val);\n         });\n         if ($$(this.ids.formItem).config.value) {\n            this.rowFilter.setValue($$(this.ids.formItem).config.value);\n         } else {\n            this.rowFilter.setValue(\"\");\n         }\n      }\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\nconst NumberTextInput = require(\"../../../../webix_custom_components/numbertext\");\n\nmodule.exports = class ABViewFormNumberComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormNumber_${baseView.id}`, ids);\n\n      this._numberTextInputKey = null;\n   }\n\n   get numberTextInputKey() {\n      return (this._numberTextInputKey =\n         this._numberTextInputKey || new NumberTextInput(this.AB._App).key);\n   }\n\n   ui() {\n      return super.ui({\n         view: this.settings.isStepper ? \"counter\" : this.numberTextInputKey,\n         type: \"number\",\n         validate: (val) => !isNaN(val * 1),\n      });\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormReadonlyComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewFormReadonly_${baseView.id}`,\n         Object.assign(\n            {\n               template: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {\n         view: \"forminput\",\n         labelWidth: 0,\n         paddingY: 0,\n         paddingX: 0,\n         readonly: true,\n         css: \"ab-readonly-field\",\n         // name: component.ui.name,\n         // label:  field.label,\n         // labelPosition: settings.labelPosition, // webix.forminput does not have .labelPosition T T\n         // labelWidth: settings.labelWidth,\n         body: {\n            id: this.ids.template,\n            view: \"label\",\n            borderless: true,\n            css: { \"background-color\": \"#fff\" },\n            label: \"\",\n         },\n      };\n\n      const settings = baseView.parentFormComponent().settings || {};\n\n      if (settings.showLabel == true && settings.labelPosition == \"top\") {\n         _ui.body.height = 80;\n      } else if (field.settings.useHeight) {\n         _ui.body.height = parseInt(field.settings.imageHeight) || 38;\n      } else _ui.body.height = 38;\n\n      return super.ui(_ui);\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n      $form?.attachEvent(\"onChange\", (newv, oldv) => {\n         const rowData = $form?.getValues() ?? {};\n\n         this.refresh(rowData);\n      });\n   }\n\n   onShow() {\n      const $formItem = $$(this.ids.formItem);\n      if (!$formItem) return;\n\n      const $form = $formItem.getFormView();\n      const rowData = $form?.getValues() ?? {};\n\n      this.refresh(rowData);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field();\n      if (!field) return null;\n\n      return rowData[field.columnName];\n   }\n\n   refresh(rowData) {\n      const baseView = this.view;\n      const form = baseView.parentFormComponent(),\n         field = baseView.field();\n\n      const formSettings = form.settings || {};\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label\">${field.label}</label>`;\n         else\n            templateLabel = `<label style=\"width: ${formSettings.labelWidth}px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\">${field.label}</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n      else if (formSettings.showLabel && formSettings.labelPosition === \"top\")\n         newWidth = 0;\n\n      const template =\n         `<div class=\"readonlyField\">${templateLabel}#template#</div>`.replace(\n            /#template#/g,\n            field\n               .columnHeader({\n                  width: newWidth,\n                  editable: true,\n               })\n               .template(rowData)\n         );\n\n      // Re-build template element\n      $$(this.ids.template)?.setHTML(template);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectMultipleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectMultiple_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = this.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n\n      const ids = this.ids;\n      const _ui = {\n         id: ids.formItem,\n         view: settings.type || baseView.constructor.defaultValues().type,\n         options: options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text,\n               hex: opt.hex,\n            };\n         }),\n      };\n\n      switch (_ui.view) {\n         case \"multicombo\":\n            _ui.tagMode = false;\n            _ui.css = \"hideWebixMulticomboTag\";\n            _ui.tagTemplate = (values) => {\n               const selectedOptions = [];\n               const $formItem = $$(ids.formItem) ?? $$(_ui.id);\n\n               values.forEach((val) => {\n                  selectedOptions.push($formItem.getList().getItem(val));\n               });\n\n               let vals = selectedOptions;\n\n               if (field.getSelectedOptions)\n                  vals = field.getSelectedOptions(field, selectedOptions);\n\n               const items = [];\n\n               vals.forEach((val) => {\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (field.settings.hasColors && val.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${val.hex};`;\n                  }\n\n                  const text = val.text ? val.text : val.value;\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${val.id}\"><span>${text}</span><span class=\"webix_multicombo_delete\" role=\"button\" aria-label=\"Remove item\"></span></span>`\n                  );\n               });\n\n               return items.join(\"\");\n            };\n\n            break;\n\n         case \"checkbox\":\n            // radio element could not be empty options\n            _ui.options.push({\n               id: \"temp\",\n               value: this.label(\"Option\"),\n            });\n\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      const field = this.view.field(),\n         $formItem = $$(this.ids.formItem);\n\n      return field.getValue($formItem, rowData);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormSelectSingleComponentComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormSelectSingle_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field(),\n         settings = baseView.settings;\n      const options = [];\n\n      if (field?.key === \"user\") options.push(...field.getUsers());\n      else if (field)\n         options.push(...(field.settings.options ?? settings.options ?? []));\n      else options.push(...(settings.options ?? []));\n\n      const _ui = {\n         view: settings.type || baseView.constructor.defaultValues().type,\n      };\n\n      if (field?.settings.hasColors) {\n         _ui.css = \"combowithcolors\";\n         _ui.options = {\n            view: \"suggest\",\n            body: {\n               view: \"list\",\n               data: options.map((opt) => {\n                  return {\n                     id: opt.id,\n                     value: opt.text || opt.value,\n                     hex: field.settings.hasColors ? opt.hex : \"\",\n                  };\n               }),\n               template: function (value) {\n                  const items = [];\n\n                  let hasCustomColor = \"\";\n                  let optionHex = \"\";\n\n                  if (value.hex) {\n                     hasCustomColor = \"hascustomcolor\";\n                     optionHex = `background: ${value.hex};`;\n                  }\n\n                  items.push(\n                     `<span class=\"webix_multicombo_value ${hasCustomColor}\" style=\"${optionHex}\" optvalue=\"${value.id}\"><span>${value.value}</span></span>`\n                  );\n\n                  return items.join(\"\");\n               },\n            },\n         };\n      } else\n         _ui.options = options.map((opt) => {\n            return {\n               id: opt.id,\n               value: opt.text || opt.value,\n            };\n         });\n\n      // radio element could not be empty options\n      if (_ui.view === \"radio\" && _ui.options.length < 1)\n         _ui.options.push({\n            id: \"temp\",\n            value: this.label(\"Option\"),\n         });\n\n      return super.ui(_ui);\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTextboxComponent extends (\n   ABViewFormItemComponent\n) {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTextbox_${baseView.id}`, ids);\n      this.type =\n         this.settings.type ||\n         this.view.settings.type ||\n         this.view.constructor.defaultValues().type;\n   }\n\n   ui() {\n      const _ui = {};\n\n      switch (this.type) {\n         case \"single\":\n            _ui.view = \"text\";\n            break;\n         case \"multiple\":\n            _ui.view = \"textarea\";\n            _ui.height = 200;\n            break;\n         case \"rich\":\n            _ui.view = \"forminput\";\n            _ui.height = 200;\n            _ui.css = \"ab-rich-text\";\n            _ui.body = {\n               view: \"tinymce-editor\",\n               value: \"\",\n               cdn: \"/js/webix/extras/tinymce\",\n               config: {\n                  plugins: \"link\",\n                  menubar: \"format edit\",\n                  toolbar:\n                     \"undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | fontsizeselect | link\",\n               },\n            };\n            break;\n      }\n\n      return super.ui(_ui);\n   }\n\n   async onShow() {\n      if (this.type !== \"rich\") return;\n      await this.initTinyMCE();\n      const _ui = this.ui();\n      const _uiFormItem = _ui.rows[0];\n      let $formItem = $$(this.ids.formItem);\n\n      // WORKAROUND : to fix breaks TinyMCE when switch pages/tabs\n      // https://forum.webix.com/discussion/6772/switching-tabs-breaks-tinymce\n      if ($formItem) {\n         // recreate rich editor\n         $formItem = this.AB.Webix.ui(_uiFormItem, $formItem);\n\n         // Add dataCy to TinyMCE text editor\n         const baseView = this.view;\n\n         $formItem\n            .getChildViews()[0]\n            .getEditor(true)\n            .then((editor) => {\n               const dataCy = `${baseView.key} rich ${_uiFormItem.name} ${\n                  baseView.id ?? \"\"\n               } ${baseView.parent?.id ?? \"\"}`;\n\n               editor.contentAreaContainer.setAttribute(\"data-cy\", dataCy);\n            });\n      }\n   }\n\n   /**\n    * Ensure TinyMCE has been loaded and initialized.\n    */\n   async initTinyMCE() {\n      await this.AB.custom[\"tinymce-editor\"].init();\n   }\n};\n","const ABViewFormItemComponent = require(\"./ABViewFormItemComponent\");\n\nmodule.exports = class ABViewFormTreeComponent extends ABViewFormItemComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewFormTree_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n      const field = baseView.field();\n\n      const _ui = {};\n\n      // this field may be deleted\n      if (!field) return super.ui(_ui);\n\n      const formSettings = baseView.parentFormComponent().settings || {};\n\n      const requiredClass =\n         field.settings.required === 1 ? \"webix_required\" : \"\";\n\n      let templateLabel = \"\";\n\n      if (formSettings.showLabel) {\n         if (formSettings.labelPosition === \"top\")\n            templateLabel = `<label style=\"display:block; text-align: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"webix_inp_top_label ${requiredClass}\">#label#</label>`;\n         else\n            templateLabel = `<label style=\"width: #width#px; display: inline-block; line-height: 32px; float: left; margin: 0; padding:1px 7.5px 0 3px; text-overflow:ellipsis; overflow:hidden; white-space:nowrap;\" class=\"${requiredClass}\">#label#</label>`;\n      }\n\n      let newWidth = formSettings.labelWidth;\n\n      if (this.settings.formView) newWidth += 40;\n\n      const template = `${templateLabel}#template#`\n         .replace(/#width#/g, formSettings.labelWidth)\n         .replace(/#label#/g, field.label)\n         .replace(\n            /#template#/g,\n            field.columnHeader({\n               width: newWidth,\n            }).template\n         );\n\n      _ui.view = \"template\";\n      _ui.css = \"webix_el_box\";\n      _ui.height =\n         field.settings.useHeight === 1\n            ? parseInt(field.settings.imageHeight)\n            : 38;\n      _ui.borderless = true;\n\n      _ui.template = `<div class=\"customField\">${template}</div>`;\n\n      _ui.onClick = {\n         customField: (id, e, trg) => {\n            const rowData = {},\n               node = $$(this.ids.formItem).$view;\n\n            rowData[field.columnName] = this.getValue();\n            field.customEdit(rowData, this.AB._App, node, this);\n         },\n      };\n\n      return super.ui(_ui);\n   }\n\n   getValue(rowData) {\n      let vals = $$(this.ids.formItem).getValues();\n\n      // Pass empty string if the returned values is empty array\n      if (Array.isArray(vals) && vals.length === 0) vals = \"\";\n\n      return vals;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewImageComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewImage_${baseView.id}`,\n         Object.assign({ image: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         {\n            cols: [\n               {\n                  id: this.ids.image,\n                  view: \"template\",\n                  template: \"\",\n                  height: settings.height,\n                  width: settings.width,\n               },\n               {},\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $image = $$(this.ids.image);\n      if (!$image) return;\n\n      const settings = this.settings;\n\n      if (settings.filename)\n         $image.define(\n            \"template\",\n            `<img src=\"/file/${settings.filename}\" height=\"${settings.height}\" width=\"${settings.width}\">`\n         );\n      else $image.define(\"template\", \"\");\n\n      $image.refresh();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFormSidePanel = require(\"../ABViewKanbanFormSidePanel\");\n\nmodule.exports = class ABViewKanbanComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewKanBan_${baseView.id}`,\n         Object.assign(\n            {\n               kanbanView: \"\",\n\n               kanban: \"\",\n               resizer: \"\",\n               formSidePanel: \"\",\n            },\n            ids\n         )\n      );\n\n      this.FormSide = new ABFormSidePanel(\n         this,\n         this.ids.formSidePanel,\n         this.settings.editFields\n      );\n\n      this.CurrentVerticalField = null;\n      this.CurrentHorizontalField = null;\n      this.CurrentOwnerField = null;\n\n      this.TextTemplate = baseView.TextTemplate;\n\n      this._updatingOwnerRowId = null;\n      this._ABFieldConnect = null;\n      this._ABFieldUser = null;\n      this._ABFieldList = null;\n   }\n\n   get ABFieldConnect() {\n      return (this._ABFieldConnect =\n         this._ABFieldConnect ||\n         this.AB.Class.ABFieldManager.fieldByKey(\"connectObject\"));\n   }\n\n   get ABFieldUser() {\n      return (this._ABFieldUser =\n         this._ABFieldUser || this.AB.Class.ABFieldManager.fieldByKey(\"user\"));\n   }\n\n   get ABFieldList() {\n      return (this._ABFieldList =\n         this._ABFieldList || this.AB.Class.ABFieldManager.fieldByKey(\"list\"));\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      this.linkPage = this.view.linkPageHelper.component();\n\n      const _ui = super.ui([\n         {\n            id: ids.kanbanView,\n            cols: [\n               {\n                  id: ids.kanban,\n                  view: \"kanban\",\n                  cols: [],\n                  userList: {\n                     view: \"menu\",\n                     // yCount: 8,\n                     // scroll: false,\n                     template: '<i class=\"fa fa-user\"></i> #value#',\n                     width: 150,\n                     on: {\n                        onSelectChange: function () {\n                           // get this row id from onAvatarClick event\n                           if (!self._updatingOwnerRowId) return;\n\n                           const userId = this.getSelectedId(false);\n                           if (!userId) return;\n\n                           self.updateOwner(self._updatingOwnerRowId, userId);\n                        },\n                     },\n                  },\n                  editor: false, // we use side bar\n                  users: [],\n                  tags: [],\n                  data: [],\n                  on: {\n                     onListAfterSelect: (itemId, list) => {\n                        this.CurrentDatacollection?.setCursor(itemId);\n                        this.emit(\"select\", itemId);\n\n                        // link pages events\n                        const editPage = this.settings.editPage;\n                        if (editPage)\n                           this.linkPage.changePage(editPage, itemId);\n\n                        const detailsPage = this.settings.detailsPage;\n                        if (detailsPage)\n                           this.linkPage.changePage(detailsPage, itemId);\n                     },\n                     onAfterStatusChange: (rowId, status /*, list */) => {\n                        this.updateStatus(rowId, status);\n                     },\n                     onAvatarClick: (rowId /*, ev, node, list */) => {\n                        // keep this row id for update owner data in .userList\n                        this._updatingOwnerRowId = rowId;\n                     },\n                  },\n               },\n               {\n                  id: ids.resizer,\n                  view: \"resizer\",\n                  css: \"bg_gray\",\n                  width: 11,\n                  hidden: true,\n               },\n               this.FormSide.ui(),\n            ],\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const abWebix = this.AB.Webix;\n\n      if (this.$kb) abWebix.extend(this.$kb, abWebix.ProgressBar);\n\n      this.FormSide.init(AB);\n      this.FormSide.on(\"add\", (newVals) => {\n         this.saveData(newVals);\n      });\n      this.FormSide.on(\"update\", (updateVals) => {\n         this.saveData(updateVals);\n      });\n\n      let dc = this.view.datacollection;\n      if (dc) this.datacollectionLoad(dc);\n\n      this.linkPage.init({\n         view: this.view,\n         datacollection: dc,\n      });\n\n      this.show();\n   }\n\n   get $kb() {\n      return (this._kb = this._kb || $$(this.ids.kanban));\n   }\n\n   kanbanListTemplate() {\n      return {\n         icons: [\n            // { icon: \"mdi mdi-comment\", show: function (obj) { return !!obj.comments }, template: \"#comments.length#\" },\n            {\n               icon: \"fa fa-trash-o\",\n               click: (rowId /*, e */) => {\n                  this.removeCard(rowId);\n               },\n            },\n         ],\n         // avatar template\n         templateAvatar: (obj) => {\n            if (\n               this.CurrentOwnerField &&\n               obj[this.CurrentOwnerField.columnName]\n            )\n               return this.CurrentOwnerField.format(obj);\n            else return \"<span class='webix_icon fa fa-user'></span>\";\n         },\n         // template for item body\n         // show item image and text\n         templateBody: (data) => {\n            // if (!this.settings.template)\n            if (!this.TextTemplate.text)\n               return this.CurrentObject?.displayData(data);\n\n            // return our default text template\n            return this.TextTemplate.displayText(data);\n         },\n      };\n   }\n\n   /**\n    * @function hide()\n    *\n    * hide this component.\n    */\n   hide() {\n      $$(this.ids.kanbanView)?.hide();\n   }\n\n   /**\n    * @function show()\n    * Show this component.\n    */\n   async show() {\n      const ids = this.ids;\n\n      $$(ids.kanbanView)?.show();\n\n      this.FormSide.hide();\n\n      $$(ids.resizer)?.hide();\n\n      var CurrentObject = this.CurrentObject;\n      if (!CurrentObject) {\n         CurrentObject = this.datacollection?.datasource;\n      }\n      if (!CurrentObject) return;\n\n      // Get vertical grouping field and populate to kanban list\n      // NOTE: this field should be the select list type\n      const CurrentVerticalField = CurrentObject.fieldByID(\n         this.settings.verticalGroupingField\n      );\n      if (!CurrentVerticalField) return;\n\n      this.CurrentVerticalField = CurrentVerticalField;\n\n      let horizontalOptions = [];\n\n      const CurrentHorizontalField = CurrentObject.fieldByID(\n         this.settings.horizontalGroupingField\n      );\n\n      this.CurrentHorizontalField = CurrentHorizontalField;\n\n      if (\n         CurrentHorizontalField &&\n         CurrentHorizontalField instanceof this.ABFieldConnect\n      )\n         // Pull horizontal options\n         horizontalOptions = await CurrentHorizontalField.getOptions();\n\n      // Option format -  { id: \"1543563751920\", text: \"Normal\", hex: \"#4CAF50\" }\n      const verticalOptions = (CurrentVerticalField.settings.options || []).map(\n         (opt) => {\n            // Vertical & Horizontal fields\n            if (CurrentVerticalField && CurrentHorizontalField) {\n               let rows = [],\n                  // [{\n                  //    id: '',\n                  //    text: ''\n                  // }]\n                  horizontalVals = [];\n\n               // pull options of the Horizontal field\n               if (CurrentHorizontalField instanceof this.ABFieldList) {\n                  // make a copy of the settings.\n                  horizontalVals = (\n                     CurrentHorizontalField.settings.options || []\n                  ).map((o) => o);\n               } else if (CurrentHorizontalField instanceof this.ABFieldUser) {\n                  horizontalVals = CurrentHorizontalField.getUsers().map(\n                     (u) => {\n                        return {\n                           id: u.id,\n                           text: u.text || u.value,\n                        };\n                     }\n                  );\n               } else if (CurrentHorizontalField instanceof this.ABFieldConnect)\n                  horizontalVals = horizontalOptions.map(({ id, text }) => ({\n                     id,\n                     text,\n                  }));\n\n               horizontalVals.push({\n                  id: null,\n                  text: this.label(\"Other\"),\n               });\n\n               horizontalVals.forEach((val) => {\n                  const statusOps = {};\n\n                  statusOps[CurrentVerticalField.columnName] = opt.id;\n                  statusOps[CurrentHorizontalField.columnName] = val.id;\n\n                  // Header\n                  rows.push({\n                     template: val.text,\n                     height: 20,\n                     css: \"progress_header\",\n                  });\n\n                  // Kanban list\n                  rows.push({\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  });\n               });\n\n               return {\n                  header: opt.text,\n                  body: {\n                     margin: 0,\n                     rows: rows,\n                  },\n               };\n            }\n            // Vertical field only\n            else if (CurrentVerticalField) {\n               const statusOps = {};\n\n               statusOps[CurrentVerticalField.columnName] = opt.id;\n\n               return {\n                  header: opt.text,\n                  body: {\n                     view: \"kanbanlist\",\n                     status: statusOps,\n                     type: this.kanbanListTemplate(),\n                  },\n               };\n            }\n         }\n      );\n\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      // Rebuild kanban that contains options\n      // NOTE: webix kanban does not support dynamic vertical list\n      abWebix.ui(verticalOptions, $$(ids.kanban));\n      $$(ids.kanban).reconstruct();\n\n      // Owner field\n      const CurrentOwnerField = CurrentObject.fieldByID(\n         this.settings.ownerField\n      );\n\n      this.CurrentOwnerField = CurrentOwnerField;\n\n      if (CurrentOwnerField) {\n         const $menuUser = $$(ids.kanban).getUserList();\n\n         $menuUser.clearAll();\n\n         if (CurrentOwnerField instanceof this.ABFieldUser) {\n            const users = ab.Account.userList().map((u) => {\n               return {\n                  id: u.username,\n                  value: u.username,\n               };\n            });\n\n            $menuUser.parse(users);\n         } else if (CurrentOwnerField instanceof this.ABFieldConnect) {\n            const options = await CurrentOwnerField.getOptions();\n\n            try {\n               $menuUser.parse(\n                  options.map((opt) => {\n                     return {\n                        id: opt.id,\n                        value: opt.text,\n                     };\n                  })\n               );\n            } catch (e) {\n               // TODO: remove this.  Trying to catch a random webix error:\n               // Cannot read properties of null (reading 'driver')\n               console.error(e);\n               console.warn(options);\n            }\n         }\n      }\n   }\n\n   busy() {\n      this.$kb?.showProgress?.({ type: \"icon\" });\n   }\n\n   ready() {\n      this.$kb?.hideProgress?.();\n   }\n\n   objectLoad(object) {\n      super.objectLoad(object);\n\n      this.TextTemplate.objectLoad(object);\n      this.FormSide.objectLoad(object);\n   }\n\n   /**\n    * @method datacollectionLoad\n    *\n    * @param datacollection {ABDatacollection}\n    */\n   datacollectionLoad(datacollection) {\n      super.datacollectionLoad(datacollection);\n\n      const DC = this.CurrentDatacollection || datacollection;\n\n      if (DC) {\n         DC.bind(this.$kb);\n\n         const obj = DC.datasource;\n\n         if (obj) this.objectLoad(obj);\n\n         return;\n      }\n\n      this.$kb.unbind();\n   }\n\n   async updateStatus(rowId, status) {\n      if (!this.CurrentVerticalField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      let patch = {};\n\n      // update multi-values\n      if (status instanceof Object) patch = status;\n      // update single value\n      else patch[this.CurrentVerticalField.columnName] = status;\n\n      // update empty value\n      let needRefresh = false;\n\n      for (const key in patch)\n         if (!patch[key]) {\n            patch[key] = \"\";\n\n            // WORKAROUND: if update data is empty, then it will need to refresh\n            // the kanban after update\n            needRefresh = true;\n         }\n\n      try {\n         await this.CurrentObject?.model().update(rowId, patch);\n\n         this.ready();\n\n         if (needRefresh) this.show();\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = $$(this.ids.kanban).getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateStatus(): Error saving item:\",\n            rowId,\n            patch,\n         });\n      }\n   }\n\n   async updateOwner(rowId, val) {\n      if (!this.CurrentOwnerField) return;\n\n      // Show loading cursor\n      this.busy();\n\n      const patch = {};\n\n      patch[this.CurrentOwnerField.columnName] = val;\n\n      try {\n         const updatedRow = await this.CurrentObject?.model().update(\n            rowId,\n            patch\n         );\n\n         // update card\n         this.$kb?.updateItem(rowId, updatedRow);\n\n         // update form data\n         if (this.FormSide.isVisible()) {\n            const data = this.$kb.getItem(rowId);\n\n            this.FormSide.refresh(data);\n         }\n\n         this.ready();\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context: \"ABViewKanban:updateOwner(): Error saving item:\",\n            rowId,\n            val,\n         });\n\n         this.ready();\n      }\n   }\n\n   saveData(data) {\n      // update\n      if (data.id && this.$kb.exists(data.id))\n         this.$kb.updateItem(data.id, data);\n      // insert\n      else this.$kb.add(data);\n   }\n\n   unselect() {\n      if (this.$kb)\n         this.$kb.eachList((list /*, status*/) => {\n            list?.unselect?.();\n         });\n   }\n\n   addCard() {\n      this.unselect();\n\n      // show the side form\n      this.FormSide.show();\n      $$(this.ids.resizer).show();\n   }\n\n   async removeCard(rowId) {\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      abWebix.confirm({\n         title: this.label(\"Remove card\"),\n         text: this.label(\"Do you want to delete this card?\"),\n         callback: async (result) => {\n            if (!result) return;\n\n            this.busy();\n\n            try {\n               const response = await this.CurrentObject?.model().delete(rowId);\n\n               if (response.numRows > 0) {\n                  this.$kb.remove(rowId);\n               } else {\n                  abWebix.alert({\n                     text: this.label(\n                        \"No rows were effected. This does not seem right.\"\n                     ),\n                  });\n               }\n            } catch (err) {\n               ab.notify.developer(err, {\n                  message: \"ABViewKanban:removeCard(): Error deleting item:\",\n                  rowId,\n               });\n            }\n\n            this.ready();\n         },\n      });\n   }\n\n   /**\n    * @method setFields()\n    * Save the current view options.\n    * @param options - {\n    *       verticalGrouping:    {ABField} - required\n    *       horizontalGrouping:  {ABField} - optional\n    *       ownerField:          {ABField} - optional\n    * }\n    */\n   setFields(options) {\n      this.CurrentVerticalField = options.verticalGrouping;\n      this.CurrentHorizontalField = options.horizontalGrouping;\n      this.CurrentOwnerField = options.ownerField;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLabelComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLabel_${baseView.id}`, ids);\n   }\n\n   ui() {\n      const baseView = this.view;\n\n      const _ui = super.ui([\n         this.uiFormatting({\n            view: \"label\",\n            // css: 'ab-component-header ab-ellipses-text',\n            label: baseView.text || \"*\",\n            align: this.settings.alignment,\n            type: {\n               height: \"auto\",\n            },\n         }),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   /**\n    * @method uiFormatting\n    * a common routine to properly update the displayed label\n    * UI with the css formatting for the given .settings\n    * @param {obj} _ui the current webix.ui definition\n    * @return {obj} a properly formatted webix.ui definition\n    */\n   uiFormatting(ui) {\n      // add different css settings based upon it's format\n      // type.\n      switch (parseInt(this.settings.format)) {\n         // normal\n         case 0:\n            ui.css = \"ab-component-label ab-ellipses-text\";\n            break;\n\n         // title\n         case 1:\n            ui.css = \"ab-component-header ab-ellipses-text\";\n            break;\n\n         // description\n         case 2:\n            ui.css = \"ab-component-description ab-ellipses-text\";\n            break;\n      }\n\n      return ui;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewLayoutComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(baseView, idBase || `ABViewLayout_${baseView.id}`, ids);\n\n      const viewComponents = this.viewComponents ?? {}; // { viewId: viewComponent, ..., viewIdn: viewComponent }\n\n      baseView.views().forEach((v) => {\n         viewComponents[v.id] = v.component();\n      });\n\n      this.viewComponents = viewComponents;\n   }\n\n   ui() {\n      const viewComponents = this.viewComponents;\n      const uiComponents = Object.keys(viewComponents)\n         .map((vId) => viewComponents[vId].ui())\n         .filter((ui) => ui);\n\n      if (uiComponents.length == 0) {\n         uiComponents.push({});\n         uiComponents.push({\n            view: \"label\",\n            label: this.label(\"no content\"),\n         });\n         uiComponents.push({});\n      }\n\n      const _ui = super.ui([\n         {\n            view: \"layout\",\n            cols: uiComponents,\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      await super.init(AB);\n\n      const baseView = this.view;\n\n      // make sure each of our child views get .init() called\n      baseView.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n\n         // initial sub-component\n         component?.init(AB, accessLevel);\n\n         // Trigger 'changePage' event to parent\n         baseView.eventAdd({\n            emitter: v,\n            eventName: \"changePage\",\n            listener: (pageId) => {\n               baseView.changePage(pageId);\n            },\n         });\n      });\n   }\n\n   onShow() {\n      // calll .onShow in child components\n      this.view.views().forEach((v) => {\n         const component = this.viewComponents[v.id];\n         component?.onShow();\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewListComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewList_${baseView.id}`,\n         Object.assign({ list: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _uiList = {\n         id: this.ids.list,\n         view: \"dataview\",\n         type: {\n            width: 1000,\n            height: 30,\n         },\n         template: (item) => {\n            const field = this.view.field();\n\n            if (!field) return \"\";\n\n            return field.format(item);\n         },\n      };\n\n      // set height or autoHeight\n      if (settings.height !== 0) _uiList.height = settings.height;\n      else _uiList.autoHeight = true;\n\n      const _ui = super.ui([_uiList]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const dc = this.datacollection;\n\n      if (!dc) return;\n\n      // bind dc to component\n      dc.bind($$(this.ids.list));\n      // $$(ids.list).sync(dv);\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewMenuComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewMenu_${baseView.id}`,\n         Object.assign(\n            {\n               menu: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const settings = this.settings;\n      const _ui = super.ui([\n         parseInt(settings.menuInToolbar) ? this.uiToolbar() : this.uiMenu(),\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   uiMenu() {\n      const baseView = this.view;\n      const settings = this.settings;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const css = `${settings.buttonStyle || defaultSettings.buttonStyle} ${\n         settings.menuAlignment || defaultSettings.menuAlignment\n      } `;\n\n      return {\n         id: this.ids.menu,\n         view: \"menu\",\n         autoheight: true,\n         autowidth: true,\n         datatype: \"json\",\n         css: css,\n         layout: settings.orientation || defaultSettings.orientation,\n         on: {\n            onMenuItemClick: (id /*, e, node */) => {\n               this.onClick(id);\n            },\n            onAfterRender: () => {\n               this.defineCypress();\n            },\n         },\n         type: {\n            subsign: true,\n         },\n      };\n   }\n\n   uiToolbar() {\n      const settings = this.settings;\n      const baseView = this.view;\n      const defaultSettings = baseView.constructor.defaultValues();\n      const _uiMenu = this.uiMenu();\n\n      let elems = [];\n      let menuIncluded = false;\n\n      // Legacy support: use old settings values if translated values are not set\n      const menuTextLeft = baseView.menuTextLeft ?? settings.menuTextLeft;\n      const menuTextCenter = baseView.menuTextCenter ?? settings.menuTextCenter;\n      const menuTextRight = baseView.menuTextRight ?? settings.menuTextRight;\n\n      if (settings.menuPosition === \"left\") {\n         menuIncluded = true;\n         elems.push(_uiMenu);\n      } else if (menuTextLeft?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextLeft,\n            align: \"left\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"center\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextCenter?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push(\n            {},\n            {\n               view: \"label\",\n               label: menuTextCenter,\n               align: \"center\",\n               width: width,\n            },\n            {}\n         );\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (settings?.menuPosition === \"right\") {\n         menuIncluded = true;\n\n         elems.push(_uiMenu);\n      } else if (menuTextRight?.length) {\n         const width = menuTextLeft.length * 15;\n\n         elems.push({\n            view: \"label\",\n            label: menuTextRight,\n            align: \"right\",\n            width: width,\n         });\n      } else\n         elems.push({\n            view: \"label\",\n            label: \"\",\n            autowidth: true,\n         });\n\n      if (menuIncluded === false) elems = [_uiMenu];\n\n      return {\n         view: \"toolbar\",\n         css: settings.menuTheme ?? defaultSettings.menuTheme,\n         padding: settings.menuPadding\n            ? parseInt(settings.menuPadding)\n            : defaultSettings.menuPadding,\n         elements: elems,\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $menu = $$(this.ids.menu);\n      const baseView = this.view;\n\n      if ($menu) {\n         const settings = this.settings;\n\n         baseView.ClearPagesInView($menu);\n\n         if (settings.order?.length) {\n            baseView.AddPagesToView($menu, settings.order);\n            // Force onAfterRender to fire\n            $menu.refresh();\n         }\n      }\n   }\n\n   onClick(itemId) {\n      const $menu = $$(this.ids.menu);\n      let $item;\n      try {\n         $item = $menu.getMenuItem(itemId);\n      } catch (err) {\n         this.AB.notify.developer(err, {\n            context:\n               \"ABViewMenuComponent > onClick error gettint menu / menu item\",\n            itemId,\n            menu: {\n               id: this.view.id,\n               settings: this.view.settings,\n            },\n         });\n         return;\n      }\n      const baseView = this.view;\n\n      // switch tab view\n      if ($item.type === \"tab\") {\n         baseView.changePage($item.pageId);\n\n         const redirectPage = baseView.application.pages(\n            (p) => p.id === $item.pageId,\n            true\n         )[0];\n\n         if (!redirectPage) return;\n\n         const tabView = redirectPage.views((v) => v.id === $item.id, true)[0];\n\n         if (!tabView) return;\n\n         const tab = tabView.parent;\n\n         if (!tab) return;\n\n         this.toggleParent(tab);\n\n         // if (!$$(tabView.id) || !$$(tabView.id).isVisible()) {\n         const showIt = setInterval(() => {\n            if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n               clearInterval(showIt);\n\n               return;\n            }\n\n            tab.emit(\"changeTab\", tabView.id);\n         }, 100);\n         // }\n      }\n      // switch page\n      else baseView.changePage(itemId);\n   }\n\n   toggleParent(element) {\n      if (!element.parent) return false;\n\n      const parentElem = element.parent;\n\n      if (!parentElem?.parent) return false;\n\n      parentElem.parent.emit(\"changeTab\", parentElem.id);\n      this.toggleParent(parentElem.parent);\n   }\n\n   defineCypress() {\n      const $menu = $$(this.ids.menu);\n\n      if (!$menu) return;\n\n      $menu.data.each((item) => {\n         const node = $menu.getItemNode(item.id);\n\n         if (!node) return;\n\n         // get linked page/tab info so we can use its name in the data-cy\n         const viewInfo = this.AB.definitionByID(item.id);\n\n         node.setAttribute(\n            \"data-cy\",\n            `menu-item ${viewInfo?.name} ${item.id} ${this.view.id}`\n         );\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nconst SMALL_PAGE_WIDTH = 150;\nconst BIG_PAGE_WIDTH = 250;\n\nmodule.exports = class ABViewPDFImporterComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPDFImporter_${baseView.id}`,\n         Object.assign(\n            {\n               fileUploader: \"\",\n               uploadList: \"\",\n               dataview: \"\",\n               fullImagePopup: \"\",\n               fullImageCarousel: \"\",\n               fullImageSelectToggle: \"\",\n               fullImageLabel: \"\",\n               selectAll: \"\",\n               unselectAll: \"\",\n               submit: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const self = this;\n      const _ui = super.ui([\n         {\n            rows: [\n               {\n                  cols: [\n                     {\n                        id: ids.fileUploader,\n                        view: \"uploader\",\n                        name: \"records\",\n                        link: ids.uploadList,\n                        label: this.label(\"Upload a PDF file\"),\n                        inputWidth: 200,\n                        width: 210,\n                        accept: \"application/pdf\",\n                        multiple: false,\n                        autosend: false,\n                        type: \"icon\",\n                        icon: \"fa fa-file-pdf-o\",\n                        on: {\n                           onBeforeFileAdd: (fileInfo) => {\n                              this._csvFileInfo = fileInfo;\n                              if (!this._csvFileInfo) return false;\n\n                              this.loadFile();\n\n                              return true;\n                           },\n                        },\n                     },\n                     {\n                        id: ids.uploadList,\n                        view: \"list\",\n                        type: \"uploader\",\n                        autoheight: true,\n                        borderless: true,\n                        onClick: {\n                           webix_remove_upload: (e, id) => {\n                              this.removeFile(id);\n                           },\n                        },\n                     },\n                     {\n                        width: 10,\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th-large\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displayBig();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-th\",\n                        maxWidth: 30,\n                        click: () => {\n                           this.displaySmall();\n                        },\n                     },\n                  ],\n               },\n               {\n                  height: 10,\n               },\n               {\n                  id: ids.dataview,\n                  view: \"dataview\",\n                  borderless: true,\n                  css: \"pdf-data-view\",\n                  multiselect: false,\n                  select: false,\n                  type: {\n                     template: (item) => {\n                        return this.pageTemplate(item);\n                     },\n                     width: \"auto\",\n                     height: \"auto\",\n                  },\n                  on: {\n                     onSelectChange: (pageIds) => {\n                        this.renderPageImages();\n                     },\n                     onItemClick: function (id, e, node) {\n                        // Unselect\n                        if (e?.target?.className?.includes?.(\"unselect-page\")) {\n                           self.unselect(id);\n                        }\n                        // Select\n                        else if (\n                           e?.target?.className?.includes?.(\"select-page\")\n                        ) {\n                           self.select(id);\n                        }\n                        // Zoom\n                        else if (e?.target?.className?.includes?.(\"pdf-zoom\")) {\n                           self._fullImagePopup.show();\n                           $$(self.ids.fullImageCarousel).setActiveIndex(\n                              parseInt(id ?? 0) - 1\n                           );\n                           self.refreshFullImage();\n                        }\n                     },\n                  },\n               },\n               {\n                  height: 10,\n               },\n               {\n                  cols: [\n                     {\n                        id: ids.selectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-check-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Select All\"),\n                        click: () => {\n                           this.selectAll();\n                        },\n                     },\n                     {\n                        id: ids.unselectAll,\n                        view: \"button\",\n                        type: \"icon\",\n                        icon: \"fa fa-square-o\",\n                        maxWidth: 160,\n                        label: this.label(\"Unselect All\"),\n                        click: () => {\n                           this.unselectAll();\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.submit,\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        type: \"icon\",\n                        icon: \"fa fa-floppy-o\",\n                        disabled: true,\n                        maxWidth: 180,\n                        label: this.label(\"Submit\"),\n                        click: () => {\n                           this.submit();\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n      ]);\n\n      return _ui;\n   }\n\n   uiPopup() {\n      const ids = this.ids;\n      return {\n         id: ids.fullImagePopup,\n         view: \"window\",\n         modal: true,\n         position: \"center\",\n         headHeight: 25,\n         head: {\n            cols: [\n               { fillspace: true },\n               {\n                  view: \"button\",\n                  type: \"icon\",\n                  icon: \"fa fa-times\",\n                  maxWidth: 25,\n                  height: 25,\n                  click: () => {\n                     $$(ids.fullImagePopup)?.hide();\n                  },\n               },\n            ],\n         },\n         body: {\n            rows: [\n               {\n                  id: ids.fullImageCarousel,\n                  view: \"carousel\",\n                  width: 600,\n                  height: 500,\n                  navigation: {\n                     items: true,\n                     buttons: true,\n                     type: \"side\",\n                  },\n                  cols: [],\n                  on: {\n                     onShow: () => {\n                        this.refreshFullImage();\n                     },\n                  },\n               },\n               {\n                  view: \"layout\",\n                  cols: [\n                     {\n                        id: ids.fullImageSelectToggle,\n                        view: \"toggle\",\n                        type: \"icon\",\n                        offIcon: \"fa fa-square-o\",\n                        onIcon: \"fa fa-check-square-o\",\n                        offLabel: this.label(\"Unselected\"),\n                        onLabel: this.label(\"Selected\"),\n                        width: 130,\n                        on: {\n                           onChange: (isSelected) => {\n                              const activeIndex = $$(\n                                 this.ids.fullImageCarousel\n                              ).getActiveIndex();\n                              const pageNumber = activeIndex + 1;\n\n                              if (isSelected) this.select(pageNumber);\n                              else this.unselect(pageNumber);\n                           },\n                        },\n                     },\n                     {\n                        fillspace: true,\n                     },\n                     {\n                        id: ids.fullImageLabel,\n                        view: \"label\",\n                        width: 120,\n                        label: `${this.label(\"Page Number\")}: ${\"#\"}`,\n                     },\n                  ],\n               },\n            ],\n         },\n      };\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const $dataview = $$(this.ids.dataview);\n      if ($dataview) this.AB.Webix.extend($dataview, webix.ProgressBar);\n\n      if (!this._fullImagePopup) {\n         const fullImagePopup = this.uiPopup();\n         this._fullImagePopup = this.AB.Webix.ui(fullImagePopup);\n      }\n   }\n\n   onShow() {\n      this.initPdfjs();\n      super.onShow();\n   }\n\n   /**\n    * Loads the pdfjs dependecies. We defer loading since it is a large library\n    * that is not needed in the initial page load.\n    */\n   async initPdfjs() {\n      if (this.pdfjs && window.pdfjsWorker) return;\n      this.busy();\n      this.pdfjs = (\n         await import(\n            /* webpackPrefetch: true */\n            \"../../../../init/pdfjs\"\n         )\n      ).default;\n\n      this.ready();\n   }\n\n   async _readFileBuffer() {\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo || !_csvFileInfo.file)\n         return Promise.resolve(new ArrayBuffer(0));\n\n      const fileReader = new FileReader();\n\n      return new Promise((resolve, reject) => {\n         fileReader.onload = (event) => {\n            const fileBuffer = event.target.result;\n            resolve(fileBuffer);\n         };\n         fileReader.onerror = (event) => {\n            reject(event);\n         };\n         fileReader.readAsArrayBuffer(_csvFileInfo.file);\n      });\n   }\n\n   async _toBlob(pageNumber, canvas) {\n      if (!canvas) return;\n\n      return new Promise((resolve, reject) => {\n         canvas.toBlob((blob) => {\n            const file = new File([blob], `${pageNumber}.png`, {\n               type: \"image/png\",\n            });\n\n            resolve(file);\n         }, \"image/png\");\n      });\n   }\n\n   async _uploadImage(pageNumber) {\n      // Create a temporary CANVAS dom to render page image with specify the height\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const canvasId = `${this.view.id}_temp_canvas`;\n      const canvas =\n         document.getElementById(canvasId) ?? document.createElement(\"canvas\");\n      canvas.id = canvasId;\n      canvas.width = $carousel.config.width - 20;\n\n      await this.showPage(pageNumber, canvas);\n      const fileBlob = await this._toBlob(pageNumber, canvas);\n\n      return new Promise((resolve, reject) => {\n         // Create a uploader to upload images\n         const $uploader = this.AB.Webix.ui({\n            view: \"uploader\",\n            apiOnly: true,\n            upload: this.field.urlUpload(),\n            inputName: \"file\",\n            multiple: false,\n            on: {\n               // when upload is complete:\n               onFileUpload: (item, response) => {\n                  // RETURN HERE\n                  resolve(response?.data?.uuid);\n               },\n               // if an error was returned\n               onFileUploadError: (item, response) => {\n                  reject(response);\n               },\n               onUploadComplete: () => $uploader.destructor(),\n            },\n         });\n\n         $uploader.addFile(fileBlob, fileBlob.size);\n      });\n   }\n\n   _increaseProgressValue() {\n      const $dataview = $$(this.ids.dataview);\n      const maxProgressStep = ($dataview.getSelectedId(true) ?? []).length * 2;\n\n      this._progressSteps = this._progressSteps ?? 0;\n      this._progressSteps++;\n\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: this._progressSteps / maxProgressStep,\n      });\n   }\n\n   async loadFile() {\n      this.clearDataview();\n\n      const _csvFileInfo = this._csvFileInfo;\n      if (!_csvFileInfo) return;\n\n      const fileBuffer = await this._readFileBuffer();\n      this._pdfDoc = await this.pdfjs.getDocument(fileBuffer).promise;\n\n      const total_page = this._pdfDoc.numPages;\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n      const carousel_list = [];\n      for (let pageNumber = 1; pageNumber <= total_page; pageNumber++) {\n         $dataview.add({\n            id: pageNumber,\n            pageNumber,\n         });\n\n         carousel_list.push({\n            template: (item) => {\n               return this.fullImageTemplate(item);\n            },\n            data: {\n               pageNumber,\n            },\n         });\n      }\n\n      this.renderPageImages();\n      if ($carousel) this.AB.Webix.ui(carousel_list, $carousel);\n\n      // Select all of images by default\n      this.selectAll();\n\n      $$(this.ids.submit)?.enable();\n   }\n\n   removeFile(id) {\n      $$(this.ids.uploadList)?.remove(id);\n\n      delete this._pdfDoc;\n      delete this._csvFileInfo;\n      this.clearDataview();\n\n      $$(this.ids.submit)?.disable();\n\n      return true;\n   }\n\n   pageTemplateId(pageNumber) {\n      return `pdf-importer-${this.view.id}-${pageNumber}`;\n   }\n\n   pageTemplate(item) {\n      const $dataview = $$(this.ids.dataview);\n      let selectedPageIds = $dataview.getSelectedId(true);\n\n      return `\n      <div>\n         <div class=\"pdf-data-view-item\">\n            <div>\n            ${\n               selectedPageIds.filter((pageId) => pageId == item.id).length\n                  ? '<i class=\"unselect-page fa fa-check-square-o\"></i>'\n                  : '<i class=\"select-page fa fa-square-o\"></i>'\n            }\n            </div>\n            <div style=\"width: 15px;\">\n               ${item.pageNumber}\n            </div>\n         </div>\n         <div class=\"pdf-zoom pdf-data-view-image\">\n            <canvas class=\"pdf-zoom\" width=\"${\n               this.pageItemWidth\n            }\" id=\"${this.pageTemplateId(item.pageNumber)}\"></canvas>\n            <div class=\"pdf-zoom pdf-data-view-image-icon\">\n               <i class=\"pdf-zoom fa fa-search-plus fa-4x\"></i>\n            </div>\n         </div>\n      </div>\n      `;\n   }\n\n   renderPageImages() {\n      const $dataview = $$(this.ids.dataview);\n      $dataview?.find({}).forEach((item) => {\n         const canvas_dom = document.querySelector(\n            `#${this.pageTemplateId(item.pageNumber)}`\n         );\n         this.showPage(item.pageNumber, canvas_dom);\n      });\n   }\n\n   async showPage(pageNumber, canvas_dom) {\n      if (!this._pdfDoc) return;\n\n      pageNumber = parseInt(pageNumber);\n      const page = await this._pdfDoc.getPage(pageNumber);\n      const pdf_original_width = page.getViewport({ scale: 1 }).width;\n      const scale_required = canvas_dom.width / pdf_original_width;\n\n      // get viewport to render the page at required scale\n      const viewport = page.getViewport({ scale: scale_required });\n      canvas_dom.height = viewport.height;\n\n      return page.render({\n         canvasContext: canvas_dom.getContext(\"2d\"),\n         viewport: viewport,\n      }).promise;\n   }\n\n   clearDataview() {\n      const $dataview = $$(this.ids.dataview);\n      const $carousel = $$(this.ids.fullImageCarousel);\n\n      $dataview?.clearAll();\n      if ($carousel)\n         this.AB.Webix.ui(\n            [\n               {\n                  view: \"label\",\n                  align: \"center\",\n                  height: $carousel.height,\n                  label: this.label(\"No image\"),\n               },\n            ],\n            $carousel\n         );\n   }\n\n   displaySmall() {\n      this._isDisplayBig = false;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   displayBig() {\n      this._isDisplayBig = true;\n      $$(this.ids.dataview)?.render();\n      this.renderPageImages();\n   }\n\n   get pageItemWidth() {\n      return this._isDisplayBig ? BIG_PAGE_WIDTH : SMALL_PAGE_WIDTH;\n   }\n\n   select(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds.push(pageNumber);\n      selectedIds = selectedIds.filter((pageId) => pageId);\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   unselect(pageNumber) {\n      const $dataview = $$(this.ids.dataview);\n\n      let selectedIds = $dataview.getSelectedId(true);\n\n      selectedIds = selectedIds.filter(\n         (pageId) => pageId && pageId != pageNumber\n      );\n\n      if (selectedIds.length) $dataview.select(selectedIds);\n      else $dataview.unselectAll();\n   }\n\n   selectAll() {\n      $$(this.ids.dataview)?.selectAll();\n   }\n\n   unselectAll() {\n      $$(this.ids.dataview)?.unselectAll();\n   }\n\n   fullImageTemplateId(pageNumber) {\n      return `${this.pageTemplateId(pageNumber)}_full_size`;\n   }\n\n   fullImageTemplate(item) {\n      const $carousel = $$(this.ids.fullImageCarousel);\n      return `<canvas width=\"${\n         $carousel.config.width - 20\n      }\" id=\"${this.fullImageTemplateId(item.pageNumber)}\"></canvas>`;\n   }\n\n   refreshFullImage() {\n      const ids = this.ids;\n      const activeIndex = $$(ids.fullImageCarousel).getActiveIndex();\n      const pageNumber = activeIndex + 1;\n      const canvas_dom = document.querySelector(\n         `#${this.fullImageTemplateId(pageNumber)}`\n      );\n      this.showPage(pageNumber, canvas_dom);\n\n      const selectedPageIds = $$(ids.dataview).getSelectedId(true);\n      const isSelected =\n         selectedPageIds.filter((pageId) => pageId == pageNumber).length > 0;\n      $$(ids.fullImageSelectToggle).setValue(isSelected);\n\n      $$(ids.fullImageLabel).setValue(\n         `${this.label(\"Page Number\")}: ${pageNumber}`\n      );\n   }\n\n   get object() {\n      return this.view.datacollection?.datasource;\n   }\n\n   get field() {\n      return this.object?.fields?.(\n         (f) => f.id == this.view.settings.fieldID\n      )[0];\n   }\n\n   busy() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.disable();\n      $uploadList?.disable();\n      $submit?.disable();\n      $selectAll?.disable();\n      $unselectAll?.disable();\n      $selectToggle?.disable();\n      $dataview?.showProgress?.({\n         type: \"bottom\",\n         position: 0.001,\n      });\n   }\n\n   ready() {\n      const ids = this.ids;\n\n      const $fileUploader = $$(ids.fileUploader);\n      const $uploadList = $$(ids.uploadList);\n      const $dataview = $$(ids.dataview);\n      const $submit = $$(ids.submit);\n      const $selectAll = $$(ids.selectAll);\n      const $unselectAll = $$(ids.unselectAll);\n      const $selectToggle = $$(ids.fullImageSelectToggle);\n\n      $fileUploader?.enable();\n      $uploadList?.enable();\n      $submit?.enable();\n      $selectAll?.enable();\n      $unselectAll?.enable();\n      $selectToggle?.enable();\n      $dataview?.hideProgress?.();\n\n      delete this._progressSteps;\n   }\n\n   async submit() {\n      const field = this.field;\n      if (!this._pdfDoc || !field) return;\n\n      this.busy();\n\n      const ids = this.ids;\n      const $dataview = $$(ids.dataview);\n      const selectedPageIds = $dataview.getSelectedId(true) ?? [];\n      const model = field.object.model();\n      const dcLink = this.datacollection.datacollectionLink;\n      const newValues = [];\n\n      for (let i = 0; i < selectedPageIds.length; i++) {\n         const pageNumber = selectedPageIds[i];\n         if (pageNumber == null || pageNumber == \"\") return;\n\n         const uploadId = await this._uploadImage(pageNumber);\n\n         this._increaseProgressValue();\n\n         // Insert Data\n         const values = field.object.defaultValues();\n         values[field.columnName] = uploadId;\n\n         // Set linked data from the parent DC\n         const linkValues = dcLink?.getCursor();\n         if (linkValues) {\n            const objectLink = dcLink?.datasource;\n\n            const connectFields = field.object.connectFields();\n            connectFields.forEach((f) => {\n               if (\n                  objectLink.id == f.settings.linkObject &&\n                  values[f.columnName] === undefined\n               ) {\n                  const linkColName = f.indexField\n                     ? f.indexField.columnName\n                     : objectLink.PK();\n\n                  values[f.columnName] = {};\n                  values[f.columnName][linkColName] =\n                     linkValues[linkColName] ?? linkValues.id;\n               }\n            });\n         }\n\n         newValues.push(await model.create(values));\n\n         this._increaseProgressValue();\n      }\n\n      this.view.doSubmitRules(newValues);\n\n      // NOTE: trigger this event to ABViewPropertyAddPage\n      if (newValues) this.view.emit(\"saved\", newValues);\n\n      this.ready();\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\nconst ABFieldCalculate = require(\"../../dataFields/ABFieldCalculate\");\nconst ABFieldFormula = require(\"../../dataFields/ABFieldFormula\");\nconst ABFieldNumber = require(\"../../dataFields/ABFieldNumber\");\n/* global pivot */\nmodule.exports = class ABViewPivotComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewPivot_${baseView.id}`,\n         Object.assign({ pivot: \"\" }, ids)\n      );\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const uiPivot = {\n         id: this.ids.pivot,\n         view: \"pivot\",\n         readonly: true,\n         removeMissed: settings.removeMissed,\n         totalColumn: settings.totalColumn,\n         separateLabel: settings.separateLabel,\n         min: settings.min,\n         max: settings.max,\n         height: settings.height,\n         fields: this._getFields(),\n         format: (value) => {\n            const decimalPlaces = settings.decimalPlaces ?? 2;\n\n            return value && value != \"0\"\n               ? parseFloat(value).toFixed(decimalPlaces || 0)\n               : value;\n         },\n         override: new Map([\n            [\n               pivot.services.Backend,\n               class MyBackend extends pivot.services.Backend {\n                  async data() {\n                     const dc = self.datacollection;\n                     if (!dc) return webix.promise.resolve([]);\n\n                     const object = dc.datasource;\n                     if (!object) return webix.promise.resolve([]);\n\n                     switch (dc.dataStatus) {\n                        case dc.dataStatusFlag.notInitial:\n                           await dc.loadData();\n                           break;\n                     }\n\n                     const data = dc.getData();\n                     const dataMapped = data.map((d) => {\n                        const result = {};\n\n                        object.fields().forEach((f) => {\n                           if (\n                              f instanceof ABFieldCalculate ||\n                              f instanceof ABFieldFormula ||\n                              f instanceof ABFieldNumber\n                           )\n                              result[f.columnName] = d[f.columnName];\n                           else result[f.columnName] = f.format(d);\n                        });\n\n                        return result;\n                     });\n\n                     return webix.promise.resolve(dataMapped);\n                  }\n               },\n            ],\n            [\n               pivot.views.table,\n               class CustomTable extends pivot.views.table {\n                  CellFormat(value) {\n                     const decimalPlaces = settings.decimalPlaces ?? 2;\n                     if (!value) value = value === 0 ? \"0\" : \"\";\n                     return value\n                        ? parseFloat(value).toFixed(decimalPlaces)\n                        : value;\n                  }\n               },\n            ],\n         ]),\n      };\n\n      if (settings.structure) uiPivot.structure = settings.structure;\n\n      const _ui = super.ui([uiPivot]);\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   _getFields() {\n      const dc = this.datacollection;\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = object.fields().map((f) => {\n         let fieldType = \"text\";\n\n         switch (f.key) {\n            case \"calculate\":\n            case \"formula\":\n            case \"number\":\n               fieldType = \"number\";\n               break;\n            case \"date\":\n            case \"datetime\":\n               fieldType = \"date\";\n               break;\n         }\n\n         return {\n            id: f.columnName,\n            value: f.label,\n            type: fieldType,\n         };\n      });\n\n      return fields;\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewReportsManagerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewReportManager_${baseView.id}`,\n         Object.assign(\n            {\n               reportManager: \"\",\n            },\n            ids\n         )\n      );\n\n      this.readonly = false;\n   }\n\n   ui() {\n      const self = this;\n      const settings = this.settings;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldText = dc?.datasource.fieldByID(\n         settings.dataviewFields.text\n      )?.columnName;\n      const fieldQueries = dc?.datasource.fieldByID(\n         settings.dataviewFields.queries\n      )?.columnName;\n      const ids = this.ids;\n      class MyBackend extends reports.services.Backend {\n         async getModules() {\n            if (dc == null) return [];\n\n            await self.waitInitializingDCEvery(1000, dc);\n\n            return dc.getData().map((e) => {\n               return {\n                  id: e.id,\n                  name: e[fieldName],\n                  text: JSON.stringify(e[fieldText]),\n                  updated: e[\"updated_at\"],\n               };\n            });\n         }\n\n         async addModule(data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            const response = await dc.model.create(parsedData);\n\n            return {\n               id: response.id,\n            };\n         }\n\n         async updateModule(id, data) {\n            const parsedData = {};\n\n            parsedData[fieldName] = data.name;\n            parsedData[fieldText] = data.text;\n\n            let response = {};\n\n            response = await dc.model.update(id, parsedData);\n\n            return { id: response.id };\n         }\n\n         async deleteModule(id) {\n            await dc.model.delete(id);\n\n            return { id: id };\n         }\n\n         async getModels() {\n            const reportModels = {};\n\n            // If no selected DC then get all DCs\n            (settings.datacollectionIDs.length > 0\n               ? settings.datacollectionIDs\n               : self.view.application.datacollectionIDs\n            ).forEach((dcID) => {\n               const dc = ab.datacollectionByID(dcID);\n\n               if (!dc) return;\n\n               const obj = dc.datasource;\n\n               if (!obj) return;\n\n               const reportFields = self.getReportFields(dc);\n\n               // get connected data collections\n               // let linkedFields = [];\n               // (obj.connectFields() || []).forEach((f, index) => {\n               //    let connectedDcs = ab.datacollections(\n               //       (dColl) =>\n               //          dColl &&\n               //          dColl.datasource &&\n               //          dColl.datasource.id === f.settings.linkObject\n               //    );\n               //    (connectedDcs || []).forEach((linkedDc) => {\n               //       linkedFields.push({\n               //          id: index + 1,\n               //          name: linkedDc.label,\n               //          source: dc.id,\n               //          target: linkedDc.id\n               //       });\n               //    });\n               // });\n\n               // // MOCK UP for testing\n               // let linkedFields = [\n               //    {\n               //       id: \"id\",\n               //       name: \"id\",\n               //       source: \"39378ee0-38f0-4b9d-a5aa-dddc61137fcd\", // Player\n               //       target: \"0de82362-4ab5-4f0f-8cfa-d1288d173cba\" // Team\n               //    }\n               // ];\n\n               reportModels[dc.id] = {\n                  id: dc.id,\n                  name: dc.label,\n                  data: reportFields,\n                  refs: [],\n               };\n            });\n\n            return reportModels;\n         }\n\n         async getQueries() {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return [];\n\n            return (\n               (\n                  await dc.model.findAll({\n                     where: {\n                        uuid: moduleID,\n                     },\n                  })\n               ).data[0][fieldQueries] || []\n            );\n         }\n\n         async addQuery(data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryID = abWebix.uid();\n\n            queries.push(Object.assign({ id: queryID }, data));\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id: queryID };\n         }\n\n         async updateQuery(id, data) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = [...(moduleData[fieldQueries] || [])];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            queries[queryIndex] = Object.assign({ id }, data);\n\n            const parsedData = {};\n\n            parsedData[fieldQueries] = queries.sort((a, b) => {\n               if (a.name < b.name) return -1;\n\n               if (a.name > b.name) return 1;\n\n               return 0;\n            });\n\n            await dc.model.update(moduleID, parsedData);\n\n            return { id };\n         }\n\n         async deleteQuery(id) {\n            const moduleID = $$(ids.reportManager).getState().moduleId || \"\";\n\n            if (moduleID === \"\") return {};\n\n            const moduleData = (\n               await dc.model.findAll({\n                  where: {\n                     uuid: moduleID,\n                  },\n               })\n            ).data[0];\n\n            if (moduleData == null) return {};\n\n            const queries = moduleData[fieldQueries] || [];\n            const queryIndex = queries.findIndex((e) => e.id === id);\n\n            if (queryIndex >= 0) {\n               const parsedData = {};\n\n               parsedData[fieldQueries] = queries\n                  .filter((e, i) => i !== queryIndex)\n                  .sort((a, b) => {\n                     if (a.name < b.name) return -1;\n\n                     if (a.name > b.name) return 1;\n\n                     return 0;\n                  });\n\n               await dc.model.update(moduleID, parsedData);\n            }\n\n            return { id: id };\n         }\n\n         async getData(config) {\n            let result = [];\n            let pullDataTasks = [];\n            let dcIds = [];\n            let dcData = {};\n            let reportFields = [];\n\n            // pull data of the base and join DCs\n            dcIds.push(config.data);\n            (config.joins || []).forEach((j) => {\n               dcIds.push(j.sid);\n               dcIds.push(j.tid);\n            });\n            dcIds = ab.uniq(dcIds);\n            dcIds.forEach((dcId) => {\n               pullDataTasks.push(\n                  new Promise((resolve, reject) => {\n                     const getData = async () => {\n                        try {\n                           dcData[dcId] = (await self.getData(dcId)) || [];\n\n                           resolve();\n                        } catch (err) {\n                           reject(err);\n                        }\n                     };\n\n                     getData();\n                  })\n               );\n            });\n\n            dcIds.forEach((dcId) => {\n               const dataCol = ab.datacollectionByID(dcId);\n\n               if (!dataCol) return;\n\n               reportFields = reportFields.concat(\n                  self.getReportFields(dataCol).map((f) => {\n                     // change format of id to match the report widget\n                     f.id = `${dcId}.${f.id}`; // dc_id.field_id\n                     return f;\n                  })\n               );\n            });\n\n            await Promise.all(pullDataTasks);\n\n            // the data result equals data of the base DC\n            result = dcData[config.data] || [];\n\n            if (config.joins?.length)\n               (config.joins || []).forEach((j) => {\n                  const sourceDc = ab.datacollectionByID(j.sid);\n                  if (!sourceDc) return;\n\n                  const sourceObj = sourceDc.datasource;\n                  if (!sourceObj) return;\n\n                  const targetDc = ab.datacollectionByID(j.tid);\n                  if (!targetDc) return;\n\n                  const targetObj = targetDc.datasource;\n                  if (!targetObj) return;\n\n                  const sourceLinkField = sourceObj.fieldByID(j.sf);\n                  const targetLinkField = targetObj.fieldByID(j.tf);\n                  if (!sourceLinkField && !targetLinkField) return;\n\n                  const sourceData = dcData[j.sid] || [];\n                  const targetData = dcData[j.tid] || [];\n\n                  sourceData.forEach((sData) => {\n                     targetData.forEach((tData) => {\n                        let sVal =\n                           sData[\n                              sourceLinkField\n                                 ? `${j.sid}.${sourceLinkField.columnName}.id`\n                                 : `${j.sid}.id`\n                           ] || [];\n\n                        let tVal =\n                           tData[\n                              targetLinkField\n                                 ? `${j.tid}.${targetLinkField.columnName}.id`\n                                 : `${j.tid}.id`\n                           ] || [];\n\n                        if (!Array.isArray(sVal)) sVal = [sVal];\n\n                        if (!Array.isArray(tVal)) tVal = [tVal];\n\n                        // Add joined row to the result array\n                        const matchedVal = sVal.filter(\n                           (val) => tVal.indexOf(val) > -1\n                        );\n\n                        if (matchedVal?.length) {\n                           const updateRows =\n                              result.filter(\n                                 (r) =>\n                                    r[`${j.sid}.id`] === sData[`${j.sid}.id`] &&\n                                    !r[`${j.tid}.id`]\n                              ) || [];\n\n                           if (updateRows?.length)\n                              (updateRows || []).forEach((r) => {\n                                 for (const key in tData)\n                                    if (key !== \"id\") r[key] = tData[key];\n                              });\n                           else\n                              result.push(\n                                 Object.assign(\n                                    ab.cloneDeep(sData),\n                                    ab.cloneDeep(tData)\n                                 )\n                              );\n                        }\n                     });\n                  });\n               });\n\n            // filter & sort\n            const queryVal = JSON.parse(config.query || \"{}\");\n\n            if (queryVal?.rules?.length)\n               queryVal.rules.forEach((r) => {\n                  if (!r || !r.type || !r.condition) return;\n\n                  switch (r.type) {\n                     case \"date\":\n                        // Convert string to Date object\n                        if (r.condition.filter) {\n                           if (typeof r.condition.filter === \"string\")\n                              r.condition.filter = ab.rules.toDate(\n                                 r.condition.filter\n                              );\n\n                           if (\n                              r.condition.filter.start &&\n                              typeof r.condition.filter.start === \"string\"\n                           )\n                              r.condition.filter.start = ab.rules.toDate(\n                                 r.condition.filter.start\n                              );\n\n                           if (\n                              r.condition.filter.end &&\n                              typeof r.condition.filter.end === \"string\"\n                           )\n                              r.condition.filter.end = ab.rules.toDate(\n                                 r.condition.filter.end\n                              );\n                        }\n\n                        break;\n                  }\n               });\n\n            // create a new query widget to get the filter function\n            const filterElem = abWebix.ui({\n               view: \"query\",\n               fields: reportFields,\n               value: queryVal,\n            });\n\n            // create a new data collection and apply the query filter\n            const tempDc = new abWebix.DataCollection();\n\n            tempDc.parse(result);\n\n            // filter\n            let filterFn;\n\n            try {\n               filterFn = filterElem.getFilterFunction();\n            } catch (error) {\n               // continue regardless of error\n            }\n\n            if (filterFn) tempDc.filter(filterFn);\n\n            // sorting\n            (config.sort || []).forEach((sort) => {\n               if (sort.id)\n                  tempDc.sort({\n                     as: \"string\",\n                     dir: sort.mod || \"asc\",\n                     by: `#${sort.id}#`,\n                  });\n            });\n\n            result = tempDc.serialize();\n\n            // clear\n            filterElem.destructor();\n            tempDc.destructor();\n\n            // group by\n            if (config?.group?.length) {\n               result = _.groupBy(result, (e) => {\n                  return config.group\n                     .map((column) => {\n                        const parsedColumn = column.split(\".\");\n                        const originalColumn =\n                           parsedColumn.length > 2\n                              ? `${parsedColumn[1]}.${parsedColumn[2]}`\n                              : column;\n                        const reportField = reportFields.find(\n                           (reportField) => reportField.id === originalColumn\n                        );\n\n                        switch (reportField.type) {\n                           case \"date\": {\n                              const dateStringData = abWebix.i18n.dateFormatStr(\n                                 e[originalColumn]\n                              );\n                              const parsedDateStringData =\n                                 dateStringData.split(\"/\");\n\n                              switch (parsedColumn[0]) {\n                                 case \"day\":\n                                    e[column] = parsedDateStringData[1];\n\n                                    return parsedDateStringData[1];\n\n                                 case \"month\":\n                                    e[column] = parsedDateStringData[0];\n\n                                    return parsedDateStringData[0];\n\n                                 case \"year\":\n                                    e[column] = parsedDateStringData[2];\n\n                                    return parsedDateStringData[2];\n\n                                 case \"yearmonth\": {\n                                    e[\n                                       column\n                                    ] = `${parsedDateStringData[0]}/${parsedDateStringData[2]}`;\n\n                                    return e[column];\n                                 }\n\n                                 default:\n                                    e[column] = dateStringData;\n\n                                    return dateStringData;\n\n                                 // switch (reportField.abField.key) {\n                                 //    case \"datetime\":\n                                 //       return abWebix.i18n.fullDateFormatStr(\n                                 //          e[originalColumn]\n                                 //       );\n\n                                 //    default:\n                                 //       break;\n                                 // }\n                              }\n                           }\n\n                           default:\n                              return e[originalColumn]?.toString?.();\n                        }\n                     })\n                     .join(\"\");\n               });\n\n               result = Object.values(result).map((groupedData) => {\n                  const groupedResult = {};\n\n                  (config.columns || []).forEach((col) => {\n                     const agg = col.split(\".\")[0];\n                     const rawCol = col.replace(\n                        /sum.|avg.|count.|max.|min./g,\n                        \"\"\n                     );\n\n                     switch (agg) {\n                        case \"sum\":\n                           groupedResult[col] = ab.sumBy(groupedData, rawCol);\n                           break;\n                        case \"avg\":\n                           groupedResult[col] = ab.meanBy(groupedData, rawCol);\n                           break;\n                        case \"count\":\n                           groupedResult[col] = (groupedData || []).length;\n                           break;\n                        case \"max\":\n                           groupedResult[col] =\n                              (ab.maxBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        case \"min\":\n                           groupedResult[col] =\n                              (ab.minBy(groupedData, rawCol) || {})[rawCol] ||\n                              \"\";\n                           break;\n                        default:\n                           groupedResult[col] = groupedData[0][col];\n                           break;\n                     }\n                  });\n\n                  return groupedResult;\n               });\n            }\n\n            return result;\n         }\n\n         async getOptions(fields) {\n            return [];\n         }\n         async getFieldData(fieldId) {\n            return [];\n         }\n      }\n      class MyLocal extends reports.services.Local {\n         constructor(app) {\n            super(app);\n\n            this._currentModuleID = \"\";\n         }\n\n         getQueries() {\n            const currentModuleID = $$(ids.reportManager).getState().moduleId;\n\n            if (this._currentModuleID !== currentModuleID) {\n               this._currentModuleID = currentModuleID;\n               this._queries = null;\n            }\n\n            return super.getQueries();\n         }\n      }\n      class MyEditor extends reports.views.editor {\n         init() {\n            super.init();\n\n            if (!self.readonly || settings.editMode === 1) return;\n\n            const $tabbar = this.$$(\"tabbar\");\n\n            if (settings.hideCommonTab === 1) {\n               const listener = () => {\n                  $tabbar.callEvent(\"onChange\", [\"data\"]);\n                  $tabbar.disableOption(\"common\");\n                  self.removeListener(\"editMode.tabbar.query\", listener);\n               };\n\n               self.on(\"editMode.tabbar.query\", listener);\n            }\n\n            if (settings.hideDataTab === 1) $tabbar.disableOption(\"other\");\n\n            if (settings.hideViewTab === 1) $tabbar.disableOption(\"structure\");\n\n            this.on(this.app, \"editMode.button.back\", () => {\n               this.Reset(true);\n            });\n         }\n\n         Reset(forceReset = false) {\n            const id = this.AppState.moduleId;\n            const condition = self.readonly && !(settings.editMode === 1);\n\n            if (!condition || id == null || forceReset) super.Reset();\n\n            this.Local.getModule(id);\n         }\n\n         TrackChanges() {\n            super.TrackChanges();\n\n            if (settings.hideCommonTab) self.emit(\"editMode.tabbar.query\");\n         }\n      }\n      class MyToolBar extends reports.views.toolbar {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly && !(settings.editMode === 1)) {\n               ui.elements[5].cols = ui.elements[5].cols.map((e) =>\n                  Object.assign(e, {\n                     hidden: self.readonly && !(settings.editMode === 1),\n                  })\n               );\n\n               ui.elements[5].cols.push(\n                  {},\n                  {\n                     view: \"button\",\n                     type: \"icon\",\n                     icon: \"wxi-angle-double-left\",\n                     label: self.label(\"Back\"),\n                     localId: \"forceReset\",\n                     click: () => {\n                        return this.app.callEvent(\"editMode.button.back\", []);\n                     },\n                  }\n               );\n            }\n\n            return ui;\n         }\n      }\n      class MyEditorCommon extends reports.views[\"editor/common\"] {\n         config() {\n            const ui = super.config();\n\n            if (!self.readonly) return ui;\n\n            return Object.assign({}, ui, {\n               elements: ui.elements.map((e, i) =>\n                  Object.assign(\n                     {\n                        hidden: !(i >= 2 && i < 5),\n                     },\n                     e\n                  )\n               ),\n            });\n         }\n\n         ShowDeleteButton() {\n            super.ShowDeleteButton();\n\n            if (self.readonly) this.$$(\"delete\").hide();\n         }\n      }\n      class MyEditorData extends reports.views[\"editor/data\"] {\n         config() {\n            const ui = super.config();\n\n            if (self.readonly) {\n               ui.rows[0].rows[0].hidden = true;\n\n               ui.rows[0].rows.unshift({\n                  label: \"Filtering query\",\n                  view: \"label\",\n                  width: 120,\n               });\n            }\n\n            return ui;\n         }\n      }\n      class MyTable extends reports.views.table {\n         // NOTE: fix format of date column type\n         GetColumnConfig(a) {\n            let config = {\n               id: a.id,\n               header:\n                  !a.meta.header || a.meta.header === \"none\"\n                     ? a.meta.name || a.name\n                     : [\n                          a.meta.name || a.name,\n                          {\n                             content:\n                                a.header === \"text\"\n                                   ? \"textFilter\"\n                                   : \"richSelectFilter\",\n                          },\n                       ],\n               type: a.type,\n               sort: \"date\",\n               width: a.width || 200,\n            };\n\n            const abField = self.AB.datacollectionByID(\n               a.mid\n            )?.datasource.fields((field) => field.columnName === a.name)[0];\n\n            switch (a.type) {\n               case \"date\":\n                  config.format = (val) => {\n                     // check valid date\n                     if (val?.getTime && !isNaN(val.getTime()))\n                        return abField?.key === \"datetime\"\n                           ? abWebix.i18n.fullDateFormatStr(val)\n                           : abWebix.i18n.dateFormatStr(val);\n                     else return \"\";\n                  };\n\n                  break;\n\n               default:\n                  config = super.GetColumnConfig(a);\n\n                  break;\n            }\n\n            return config;\n         }\n\n         async GetTableData(mod) {\n            const data = await super.GetTableData(mod);\n            const buckets = mod.buckets;\n\n            if (!buckets) return data;\n\n            if (buckets.length === 0) return data;\n\n            const columnIDs = mod.columns.map((e) => e.id);\n            const parsedBuckets = mod.buckets.filter((bucket) =>\n               columnIDs.includes(bucket.column)\n            );\n\n            if (parsedBuckets.length === 0) return data;\n\n            const records = data[0].map((e) => {\n               const parseRecord = {};\n\n               parsedBuckets.forEach((bucket) => {\n                  const options = bucket.options;\n\n                  for (let i = 0; i < options.length; i++)\n                     if (\n                        options[i].values?.includes(e[bucket.column]) ||\n                        i === options.length - 1\n                     ) {\n                        parseRecord[bucket.column] = options[i].id;\n\n                        break;\n                     }\n               });\n\n               return Object.assign({}, e, parseRecord);\n            });\n\n            return [records, data[1]];\n         }\n      }\n\n      const _ui = super.ui([\n         {\n            id: ids.reportManager,\n            view: \"reports\",\n            toolbar: true,\n            override: new Map([\n               [reports.services.Backend, MyBackend],\n               [reports.services.Local, MyLocal],\n               [reports.views.editor, MyEditor],\n               [reports.views.toolbar, MyToolBar],\n               [reports.views[\"editor/common\"], MyEditorCommon],\n               [reports.views[\"editor/data\"], MyEditorData],\n               [reports.views.table, MyTable],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n      delete _ui.height;\n\n      return _ui;\n   }\n\n   async init(AB, accessLevel) {\n      this.AB = AB;\n      this.readonly = accessLevel < 2;\n\n      const $reportManager = $$(this.ids.reportManager);\n      const state = $reportManager.getState();\n\n      state.readonly = this.readonly;\n      state.mode =\n         this.readonly && this.settings.editMode === 1 ? \"edit\" : \"list\";\n   }\n\n   getReportFields(dc) {\n      if (!dc) return [];\n\n      const object = dc.datasource;\n      if (!object) return [];\n\n      const fields = [];\n\n      object.fields().forEach((f) => {\n         const columnFormat = f.columnHeader();\n\n         if (!f.isConnection) {\n            let type = \"text\";\n\n            switch (f.key) {\n               case \"boolean\":\n               case \"number\":\n               case \"date\":\n                  type = f.key;\n\n                  break;\n\n               case \"datetime\":\n                  type = \"date\";\n\n                  break;\n\n               default:\n                  break;\n            }\n\n            fields.push({\n               id: f.columnName,\n               name: f.label,\n               filter: f.fieldIsFilterable(),\n               edit: false,\n               type: type,\n               format: columnFormat.format,\n               options: columnFormat.options,\n               ref: \"\",\n               key: false,\n               show: true,\n               abField: f,\n            });\n\n            return;\n         }\n\n         if (f.isSource()) {\n            const linkedDcs = this.view.application.datacollectionsIncluded(\n               (dc) =>\n                  this.settings.datacollectionIDs.includes(dc.id) &&\n                  dc.settings.datasourceID === f.settings.linkObject\n            );\n\n            (linkedDcs || []).forEach((linkDc) => {\n               fields.push({\n                  id: f.id,\n                  name: f.label,\n                  filter: false,\n                  edit: false,\n                  type: \"reference\",\n                  ref: linkDc.id,\n                  key: false,\n                  show: false,\n               });\n            });\n         }\n      });\n\n      return fields;\n   }\n\n   async getData(datacollectionId) {\n      const datacollection = this.AB.datacollectionByID(datacollectionId);\n      if (!datacollection) return [];\n\n      const object = datacollection.datasource;\n      if (!object) return [];\n\n      await this.waitInitializingDCEvery(1000, datacollection);\n\n      const reportFields = this.getReportFields(datacollection);\n      const reportData = [];\n      const rawData = datacollection.getData();\n\n      (rawData || []).forEach((row) => {\n         const reportRow = { id: row.id };\n\n         reportRow[`${datacollection.id}.id`] = row.id;\n\n         object.fields().forEach((field) => {\n            const columnName = field.columnName;\n            const col = `${datacollection.id}.${columnName}`;\n\n            if (field) {\n               // FK value of the connect field\n               if (field.isConnection) {\n                  let $pk = field.datasourceLink.PK();\n                  if (Array.isArray(row[columnName]))\n                     reportRow[`${col}.id`] = row[columnName].map(\n                        (link) => link[$pk] || link.id || link\n                     );\n                  else if (row[columnName])\n                     reportRow[`${col}.id`] =\n                        row[columnName][$pk] ||\n                        row[columnName].id ||\n                        row[columnName];\n               } else reportRow[col] = field.format(row);\n            } else reportRow[col] = row[columnName];\n\n            const rField = reportFields.find(\n               (f) => f.id === columnName || f.id === field.id\n            );\n\n            if (!rField) return;\n\n            switch (rField.type) {\n               case \"text\":\n               case \"reference\":\n                  reportRow[col] = (reportRow[col] || \"\").toString();\n                  break;\n\n               case \"number\":\n                  reportRow[col] = parseFloat(\n                     (reportRow[col] || 0).toString().replace(/[^\\d.-]/g, \"\")\n                  );\n                  break;\n\n               case \"date\":\n                  reportRow[col] = row[columnName];\n                  if (reportRow[col]) {\n                     if (!(reportRow[col] instanceof Date))\n                        reportRow[col] = this.AB.rules.toDate(row[columnName]);\n                  } else reportRow[col] = \"\";\n                  break;\n            }\n         });\n\n         reportData.push(reportRow);\n      });\n\n      return reportData;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewSchedulerComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewScheduler_${baseView.id}`,\n         Object.assign(\n            {\n               scheduler: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const ab = this.AB;\n      const self = this;\n      const abWebix = this.AB.Webix;\n      const settings = this.settings;\n      const dc = this.datacollection;\n      const fieldName = dc?.datasource.fieldByID(\n         settings.dataviewFields.name\n      )?.columnName;\n      const fieldStart = dc?.datasource.fieldByID(\n         settings.dataviewFields.start\n      )?.columnName;\n      const fieldEnd = dc?.datasource.fieldByID(\n         settings.dataviewFields.end\n      )?.columnName;\n      const fieldAllDay = dc?.datasource.fieldByID(\n         settings.dataviewFields.allDay\n      )?.columnName;\n      const fieldRepeat = dc?.datasource.fieldByID(\n         settings.dataviewFields.repeat\n      )?.columnName;\n      const fieldCalendar = dc?.datasource.fieldByID(\n         settings.dataviewFields.calendar\n      )?.columnName;\n      const fieldEventColor = dc?.datasource.fieldByID(\n         settings.dataviewFields.color\n      )?.columnName;\n      const fieldNotes = dc?.datasource.fieldByID(\n         settings.dataviewFields.notes\n      )?.columnName;\n      const fieldOriginID = dc?.datasource.fieldByID(\n         settings.dataviewFields.originID\n      )?.columnName;\n      const fieldSectionID = dc?.datasource.fieldByID(\n         settings.dataviewFields.sectionID\n      )?.columnName;\n      const fieldUnitID = dc?.datasource.fieldByID(\n         settings.dataviewFields.unitID\n      )?.columnName;\n      const dcCalendar = ab.datacollectionByID(\n         this.settings.calendarDataviewID\n      );\n      const fieldTitle = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.title\n      )?.columnName;\n      const fieldCalendarColor = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.color\n      )?.columnName;\n      const fieldActive = dcCalendar?.datasource.fieldByID(\n         settings.calendarDataviewFields.active\n      )?.columnName;\n      const timelineOptions = [];\n\n      Object.keys(settings.timeline).forEach((key) => {\n         if (settings.timeline[key] === 0) return;\n\n         timelineOptions.push({\n            id: `${key}`,\n            value: `${key.charAt(0).toUpperCase()}${key.slice(1)}`,\n         });\n      });\n\n      const _ui = super.ui([\n         {\n            padding: 6,\n            cols: [\n               { view: \"label\", width: 150, label: \"Export events data to: \" },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"Excel\"),\n                  hidden: settings.export.excel === 0,\n                  click: () => {\n                     abWebix.toExcel(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"CSV\"),\n                  hidden: settings.export.csv === 0,\n                  click: () => {\n                     abWebix.toCSV(ids.scheduler);\n                  },\n               },\n               {\n                  view: \"button\",\n                  width: 100,\n                  value: this.label(\"PDF\"),\n                  hidden: settings.export.pdf === 0,\n                  click: () => {\n                     abWebix.toPDF(ids.scheduler, { autowidth: true });\n                  },\n               },\n               {},\n            ],\n         },\n         {\n            id: ids.scheduler,\n            view: \"scheduler\",\n            date: new Date(),\n            readonly: settings.readonly === 1,\n            timeline: settings.timeline.timeline === 1,\n            override: new Map([\n               [\n                  scheduler.services.Backend,\n                  class MyBackend extends reports.services.Backend {\n                     async addCalendar(obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        const response = await dcCalendar.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async addEvent(obj) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        const response = await dc.model.create(data);\n\n                        return { id: response.id };\n                     }\n                     async calendars() {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dcCalendar == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dcCalendar);\n\n                        return dcCalendar.getData().map((e) => {\n                           return {\n                              id: e.id,\n                              text: e[fieldTitle],\n                              color: e[fieldCalendarColor],\n                              active: e[fieldActive],\n                           };\n                        });\n                     }\n                     async events(params) {\n                        // if we manage a datacollection, then make sure it has started\n                        // loading it's data when we are showing our component.\n                        if (dc == null) return [];\n\n                        await self.waitInitializingDCEvery(1000, dc);\n\n                        const units = await this.units();\n                        const sections = await this.sections();\n\n                        return dc.getData().map((e) => {\n                           let unitID = units.find(\n                              (u) => u.id === e[fieldUnitID]\n                           )?.id;\n                           let sectionID = sections.find(\n                              (s) => s.id === e[fieldSectionID]\n                           )?.id;\n\n                           if (sectionID == null || unitID == null) {\n                              sectionID = sectionID || \"No Section\";\n                              unitID = unitID || \"No Unit\";\n\n                              // const data = {};\n\n                              // data[fieldSectionID] = sectionID;\n                              // data[fieldUnitID] = unitID;\n\n                              // dc.model.update(e.id, data);\n                           }\n\n                           return {\n                              id: e.id,\n                              text: e[fieldName],\n                              start_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldStart]),\n                              end_date: abWebix.Date.dateToStr(\n                                 \"%Y-%m-%d %H:%i:%s\"\n                              )(e[fieldEnd]),\n                              all_day: e[fieldAllDay],\n                              recurring: e[fieldRepeat],\n                              calendar: e[fieldCalendar],\n                              color: e[fieldEventColor],\n                              section: sectionID,\n                              units: unitID,\n                              details: e[fieldNotes],\n                              origin_id: e[fieldOriginID],\n                           };\n                        });\n                     }\n                     async removeCalendar(id) {\n                        await dcCalendar.model.delete(id);\n                     }\n                     async removeEvent(id) {\n                        await dc.model.delete(id);\n                     }\n                     async sections() {\n                        return [\n                           { text: \"No Section\", id: \"No Section\" },\n                        ].concat(\n                           settings.timelineSectionList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 text: e,\n                              };\n                           })\n                        );\n                     }\n                     async units() {\n                        return [{ id: \"No Unit\", value: \"No Unit\" }].concat(\n                           settings.unitList.split(\", \").map((e) => {\n                              return {\n                                 id: e,\n                                 value: e,\n                              };\n                           })\n                        );\n                     }\n                     async updateCalendar(id, obj) {\n                        if (dcCalendar == null) return {};\n\n                        const data = {};\n\n                        data[fieldTitle] = obj.text;\n                        data[fieldCalendarColor] = obj.color;\n                        data[fieldActive] = obj.active;\n\n                        await dcCalendar.model.update(id, data);\n                     }\n                     async updateEvent(id, obj, mode, date) {\n                        if (dc == null) return {};\n\n                        const data = {};\n\n                        data[fieldName] = obj.text;\n                        data[fieldStart] = new Date(obj.start_date);\n                        data[fieldEnd] = new Date(obj.end_date);\n                        data[fieldAllDay] = obj.all_day;\n                        data[fieldRepeat] = obj.recurring;\n                        data[fieldCalendar] = obj.calendar;\n                        data[fieldEventColor] = obj.color;\n                        data[fieldSectionID] = obj.section || \"No Section\";\n                        data[fieldUnitID] = obj.units || \"No Unit\";\n                        data[fieldNotes] = obj.details;\n                        data[fieldOriginID] = obj.origin_id;\n\n                        await dc.model.update(id, data);\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/nav\"],\n                  class CustomBarsView extends scheduler.views[\"bars/nav\"] {\n                     config() {\n                        const uiNav = super.config();\n                        uiNav.width = 160;\n                        uiNav.options = timelineOptions;\n                        return uiNav;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"bars/navpopup\"],\n                  class CustomNavPopupView extends scheduler.views[\n                     \"bars/navpopup\"\n                  ] {\n                     config() {\n                        const uiNavPopup = super.config();\n\n                        const options = timelineOptions.map((e) =>\n                           Object.assign({ icon: `shi-${e.id}` }, e)\n                        );\n\n                        if (this.app.config.calendars)\n                           uiNavPopup.body.body.rows[0].data = options;\n                        else uiNavPopup.body.data = options;\n\n                        return uiNavPopup;\n                     }\n                  },\n               ],\n               [\n                  scheduler.views[\"modes/day/multiday\"],\n                  class CustomModesDayMultiday extends scheduler.views[\n                     \"modes/day/multiday\"\n                  ] {\n                     LimitData(data) {\n                        // Get an error the case when the data parameter is undefined.\n                        super.LimitData(data || []);\n                     }\n                  },\n               ],\n            ]),\n         },\n      ]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async onShow() {\n      super.onShow();\n\n      const ids = this.ids;\n      const $component = $$(ids.component);\n\n      if ($component != null && !this.__isShowing) {\n         this.__isShowing = true;\n\n         $component.reconstruct();\n      }\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTabComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewTab_${baseView.id}`,\n         Object.assign(\n            {\n               tab: \"\",\n\n               sidebar: \"\",\n               expandMenu: \"\",\n               collapseMenu: \"\",\n\n               popupTabManager: \"\",\n               popupTabManagerForm: \"\",\n               popupTabManagerSaveButton: \"\",\n            },\n            ids\n         )\n      );\n\n      this.viewComponents =\n         this.viewComponents ||\n         baseView\n            .views((v) => v.getUserAccess())\n            .map((v) => {\n               return {\n                  view: v,\n                  // component: v.component(App)\n               };\n            });\n   }\n\n   ui() {\n      const ids = this.ids;\n      const baseView = this.view;\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      let _ui = null;\n\n      // We are going to make a custom icon using the first letter of a menu item for menu items that don't have an icon\n      // to do this we need to modify the default template with the method webix recommended form this snippet https://snippet.webix.com/b566d9f8\n      abWebix.type(abWebix.ui.tree, {\n         baseType: \"sideBar\", // inherit everything else from sidebar type\n         name: \"customIcons\",\n         icon: (obj, common) => {\n            if (obj.icon.length)\n               return [\n                  \"<span class='webix_icon webix_sidebar_icon fa fa-fw fa-\",\n                  obj.icon,\n                  \"'></span>\",\n               ].join(\"\");\n\n            return [\n               \"<span class='webix_icon webix_sidebar_icon sidebarCustomIcon'>\",\n               obj.value.charAt(0).toUpperCase(),\n               \"</span>\",\n            ].join(\"\");\n         },\n      });\n\n      const viewComponents = this.viewComponents;\n      const settings = this.settings;\n\n      if (viewComponents.length > 0) {\n         if (settings.stackTabs) {\n            // define your menu items from the view components\n            const menuItems = viewComponents.map((vc) => {\n               const view = vc.view;\n\n               return {\n                  id: `${view.id}_menu`,\n                  value: view.label,\n                  icon: view.tabicon ? view.tabicon : \"\",\n               };\n            });\n\n            if (menuItems.length) {\n               // create a menu item for the collapse option to use later\n               const collapseMenu = {\n                  id: ids.collapseMenu,\n                  value: this.label(\"Collapse Menu\"),\n                  icon: \"chevron-circle-left\",\n               };\n\n               // create a menu item from the expand option to use later\n               const expandMenu = {\n                  id: ids.expandMenu,\n                  value: this.label(\"Expand Menu\"),\n                  icon: \"chevron-circle-right\",\n                  hidden: true,\n               };\n\n               // find out what the first option is so we can set it later\n               let selectedItem = `${viewComponents[0].view.id}_menu`;\n\n               const abStorage = ab.Storage;\n               const sidebar = {\n                  view: \"sidebar\",\n                  type: \"customIcons\", // define the sidebar type with the new template created above\n                  id: ids.sidebar,\n                  height: settings.height,\n                  width: settings.sidebarWidth ? settings.sidebarWidth : 0,\n                  scroll: true,\n                  position: settings.sidebarPos ? settings.sidebarPos : \"left\",\n                  css: settings.darkTheme ? \"webix_dark\" : \"\",\n                  data: menuItems.concat(collapseMenu), // add you menu items along with the collapse option to start\n                  on: {\n                     onItemClick: (id) => {\n                        // when a menu item is clicked\n                        if (id === ids.collapseMenu) {\n                           // if it was the collapse menu item\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the collapse option from the menu\n                              $sidebar.remove(ids.collapseMenu);\n                              // add the expand option to the menu\n                              $sidebar.add(expandMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else if (id === ids.expandMenu) {\n                           setTimeout(() => {\n                              const $sidebar = $$(ids.sidebar);\n\n                              // remove the expand option from the menu\n                              $sidebar.remove(ids.expandMenu);\n                              // add the collapse option to the menu\n                              $sidebar.add(collapseMenu);\n                              // toggle the sidebar state\n                              $sidebar.toggle();\n                              // we just clicked the collapse...but we don't wanted highlighted\n                              // so highlight the previously selected menu item\n                              $sidebar.select(selectedItem);\n                              // store this state in local storage the user preference is\n                              // remembered next time they see this sidebar\n                              abStorage.set(\n                                 `${ids.tab}-state`,\n                                 $sidebar.getState()\n                              );\n                           }, 0);\n                        } else {\n                           // store the selecte menu item just in case someone toggles the menu later\n                           selectedItem = id;\n                           // if the menu item is a regular menu item\n                           // call the onShow with the view id to load the view\n\n                           id = id.replace(\"_menu\", \"\");\n                           let node = $$(id);\n                           if (node) {\n                              node.show(false, false);\n                           } else {\n                              // How often does this occure?\n                              let msg = `ABViewTabComponent[${this.name}][${this.id}] could not resolve UI panel for provided menu [${selectedItem}].`;\n                              this.AB.notify(\"developer\", msg, {});\n                           }\n                           // $$(id).show(false, false);\n\n                           // onShow(id);\n                        }\n                     },\n                     onSelectChange: () => {\n                        addDataCy();\n                     },\n                     onAfterRender: () => {\n                        addDataCy();\n                     },\n                  },\n               };\n\n               const multiview = {\n                  view: \"multiview\",\n                  id: ids.tab,\n                  keepViews: true,\n                  minWidth: settings.minWidth,\n                  cells: viewComponents.map((view) => {\n                     const tabUi = {\n                        id: view.view.id,\n                        // ui will be loaded when its tab is opened\n                        view: \"layout\",\n                        rows: [],\n                     };\n\n                     return tabUi;\n                  }),\n                  on: {\n                     onViewChange: (prevId, nextId) => {\n                        this.onShow(nextId);\n                     },\n                  },\n               };\n\n               const addDataCy = function () {\n                  const $sidebar = $$(ids.sidebar);\n\n                  // set ids of controller buttons\n                  const collapseNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.collapseMenu}\"]`\n                  );\n\n                  if (collapseNode)\n                     collapseNode.setAttribute(\n                        \"data-cy\",\n                        `tab-collapseMenu-${ids.collapseMenu}`\n                     );\n\n                  const expandNode = $sidebar?.$view.querySelector(\n                     `[webix_tm_id=\"${ids.expandMenu}\"]`\n                  );\n\n                  if (expandNode)\n                     expandNode.setAttribute(\n                        \"data-cy\",\n                        `tab-expandMenu-${ids.expandMenu}`\n                     );\n\n                  baseView.views((view) => {\n                     const node = $sidebar?.$view?.querySelector(\n                        `[webix_tm_id=\"${view.id}_menu\"]`\n                     );\n\n                     if (!node) {\n                        return;\n                     }\n\n                     node.setAttribute(\n                        \"data-cy\",\n                        `tab-${view.name.replace(\" \", \"\")}-${view.id}-${\n                           baseView.id\n                        }`\n                     );\n                  });\n               };\n\n               let columns = [sidebar, multiview];\n\n               if (settings.sidebarPos === \"right\") {\n                  columns = [multiview, sidebar];\n               }\n\n               _ui = {\n                  cols: columns,\n               };\n            } else\n               _ui = {\n                  view: \"spacer\",\n               };\n         } else {\n            const cells = baseView\n               .views((view) => {\n                  const accessLevel = view.getUserAccess();\n\n                  if (accessLevel > 0) {\n                     return view;\n                  }\n               })\n               .map((view) => {\n                  const tabUi = {\n                     id: view.id,\n                     // ui will be loaded when its tab is opened\n                     view: \"layout\",\n                     rows: [],\n                  };\n\n                  let tabTemplate = \"\";\n\n                  // tab icon\n                  if (view.tabicon) {\n                     if (settings.iconOnTop)\n                        tabTemplate = [\n                           \"<div class='ab-tabIconContainer'><span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span><br/>\",\n                           view.label,\n                           \"</div>\",\n                        ].join(\"\");\n                     else\n                        tabTemplate = [\n                           \"<span class='fa fa-lg fa-fw fa-\",\n                           view.tabicon,\n                           \"'></span> \",\n                           view.label,\n                        ].join(\"\");\n                  }\n\n                  // no icon\n                  else tabTemplate = view.label;\n\n                  return {\n                     header: tabTemplate,\n                     body: tabUi,\n                  };\n               });\n\n            // if there are cells to display then return a tabview\n            if (cells.length) {\n               _ui = {\n                  rows: [\n                     {\n                        view: \"tabview\",\n                        id: ids.tab,\n                        minWidth: settings.minWidth,\n                        height: settings.height,\n                        tabbar: {\n                           height: 60,\n                           type: \"bottom\",\n                           css: settings.darkTheme ? \"webix_dark\" : \"\",\n                           on: {\n                              onAfterRender: () => {\n                                 baseView.views((view) => {\n                                    const node = $$(\n                                       ids.tab\n                                    )?.$view?.querySelector(\n                                       `[button_id=\"${view.id}\"]`\n                                    );\n\n                                    if (!node) return;\n\n                                    node.setAttribute(\n                                       \"data-cy\",\n                                       `tab ${view.name} ${view.id} ${baseView.id}`\n                                    );\n                                 });\n                              },\n                           },\n                        },\n                        multiview: {\n                           on: {\n                              onViewChange: (prevId, nextId) => {\n                                 this.onShow(nextId);\n                              },\n                           },\n                        },\n                        cells: cells,\n                     },\n                  ],\n               };\n            }\n            // else we return a spacer\n            else\n               _ui = {\n                  view: \"spacer\",\n               };\n         }\n      } else\n         _ui = {\n            view: \"spacer\",\n         };\n\n      _ui = super.ui([_ui]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   async init(AB) {\n      await super.init(AB);\n\n      const ids = this.ids;\n      const $tab = $$(ids.tab);\n      const ab = this.AB;\n      const abWebix = ab.Webix;\n\n      if ($tab) abWebix.extend($tab, abWebix.ProgressBar);\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // vc.component.init(AB);\n\n         // Trigger 'changePage' event to parent\n         this.eventAdd({\n            emitter: vc.view,\n            eventName: \"changePage\",\n            listener: (...p) => this.changePage(...p),\n         });\n      });\n\n      // Trigger 'changeTab' event to parent\n      this.eventAdd({\n         emitter: baseView,\n         eventName: \"changeTab\",\n         listener: (...p) => this.changeTab(...p),\n      });\n\n      // initialize the sidebar and figure out if it should be collased or not\n      const $sidebar = $$(ids.sidebar);\n\n      if (!$sidebar) return;\n\n      const state = await ab.Storage.get(`${ids.tab}-state`);\n\n      if (!state) return;\n\n      // create a menu item for the collapse option to use later\n      const collapseMenu = {\n         id: ids.collapseMenu,\n         value: this.label(\"Collapse Menu\"),\n         icon: \"chevron-circle-left\",\n      };\n\n      // create a menu item from the expand option to use later\n      const expandMenu = {\n         id: ids.expandMenu,\n         value: this.label(\"Expand Menu\"),\n         icon: \"chevron-circle-right\",\n         hidden: true,\n      };\n\n      // this will collapse or expand the sidebar\n      $sidebar.setState(state);\n\n      const checkCollapseMenu = $sidebar.getItem(ids.collapseMenu) ?? null;\n      const checkExpandMenu = $sidebar.getItem(ids.expandMenu) ?? null;\n\n      // if the state is collapsed we need to make sure the expand option is available\n      if (state.collapsed) {\n         if (checkCollapseMenu && checkExpandMenu)\n            // $sidebar.remove(ids.collapseMenu);\n            $sidebar.add(expandMenu);\n      } else if (checkCollapseMenu && checkExpandMenu)\n         // $sidebar.remove(ids.collapseMenu);\n         $sidebar.add(collapseMenu);\n   }\n\n   changePage(pageId) {\n      const $tab = $$(this.ids.tab);\n\n      $tab?.blockEvent();\n      this.view.changePage(pageId);\n      $tab?.unblockEvent();\n   }\n\n   changeTab(tabViewId) {\n      const baseView = this.view;\n      const $tabViewId = $$(tabViewId);\n\n      // switch tab view\n      this.toggleParent(baseView.parent);\n\n      if (this.settings.stackTabs)\n         if (!$tabViewId.isVisible()) {\n            const showIt = setInterval(() => {\n               if ($tabViewId.isVisible()) clearInterval(showIt);\n\n               $tabViewId.show(false, false);\n            }, 200);\n         } else $$(this.ids.tab).setValue(tabViewId);\n   }\n\n   toggleParent(view) {\n      const $viewID = $$(view.id);\n\n      if (view.key === \"tab\" || view.key === \"viewcontainer\") {\n         $viewID?.show(false, false);\n      }\n      if (view.parent) {\n         this.toggleParent(view.parent);\n      }\n   }\n\n   onShow(viewId) {\n      const ids = this.ids;\n\n      let defaultViewIsSet = false;\n\n      const $sidebar = $$(ids.sidebar);\n\n      // if no viewId is given, then try to get the currently selected ID\n      if (!viewId && $sidebar)\n         viewId = $sidebar.getSelectedId().replace(\"_menu\", \"\");\n\n      const baseView = this.view;\n      const viewComponents = this.viewComponents;\n\n      viewComponents.forEach((vc) => {\n         // set default view id\n         const currView = baseView.views((view) => {\n            return view.id === vc.view.id;\n         });\n\n         let accessLevel = 0;\n\n         if (currView.length) accessLevel = currView[0].getUserAccess();\n\n         // choose the 1st View if we don't have one we are looking for.\n         if (!viewId && !defaultViewIsSet && accessLevel > 0) {\n            viewId = vc.view.id;\n\n            defaultViewIsSet = true;\n         }\n\n         // create view's component once\n         const $tab = $$(ids.tab);\n         const settings = this.settings;\n\n         if (!vc?.component && vc?.view?.id === viewId) {\n            // show loading cursor\n            if ($tab?.showProgress) $tab.showProgress({ type: \"icon\" });\n\n            vc.component = vc.view.component();\n\n            const $viewID = $$(vc.view.id);\n            const ab = this.AB;\n            const abWebix = ab.Webix;\n\n            if (settings.stackTabs) {\n               // update multiview UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-multiview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            } else {\n               // update tab UI\n               abWebix.ui(\n                  {\n                     // able to 'scroll' in tab view\n                     id: vc.view.id,\n                     view: \"scrollview\",\n                     css: \"ab-tabview-scrollview\",\n                     body: vc.component.ui(),\n                  },\n                  $viewID\n               );\n            }\n\n            // for tabs we need to look at the view's accessLevels\n            accessLevel = vc.view.getUserAccess();\n\n            vc.component.init(ab, accessLevel);\n\n            // done\n            setTimeout(() => {\n               // $$(v.view.id).adjust();\n\n               $tab?.hideProgress?.();\n               // check if tab has a hint\n               // if (vc?.view?.settings?.hintID) {\n               //    // fetch the steps for the hint\n               //    let hint = ab.hintID(vc.view.settings.hintID);\n               //    hint.createHintUI();\n               // }\n            }, 10);\n         }\n\n         // show UI\n         if (vc?.view?.id === viewId && vc?.component?.onShow)\n            vc.component.onShow();\n\n         if (settings.stackTabs && vc?.view?.id === viewId) {\n            $$(viewId)?.show(false, false);\n            $sidebar?.select(`${viewId}_menu`);\n         }\n      });\n   }\n};\n","const ABViewComponent = require(\"./ABViewComponent\").default;\n\nmodule.exports = class ABViewTextComponent extends ABViewComponent {\n   constructor(baseView, idBase, ids) {\n      super(\n         baseView,\n         idBase || `ABViewText_${baseView.id}`,\n         Object.assign(\n            {\n               text: \"\",\n            },\n            ids\n         )\n      );\n   }\n\n   ui() {\n      const ids = this.ids;\n      const settings = this.settings;\n\n      const _uiText = {\n         id: ids.text,\n         view: \"template\",\n         minHeight: 10,\n         css: \"ab-custom-template\",\n         borderless: true,\n      };\n\n      if (settings.height) _uiText.height = settings.height;\n      else _uiText.autoheight = true;\n\n      const _ui = super.ui([_uiText]);\n\n      delete _ui.type;\n\n      return _ui;\n   }\n\n   displayText(value) {\n      const ids = this.ids;\n      const result = this.view.displayText(value, ids.text);\n\n      const $text = $$(ids.text);\n\n      if (!$text) return;\n\n      $text.define(\"template\", result);\n      $text.refresh();\n   }\n\n   onShow() {\n      super.onShow();\n\n      // listen DC events\n      const dataview = this.datacollection;\n      const baseView = this.view;\n\n      if (dataview && baseView.parent.key !== \"dataview\") {\n         [\"changeCursor\", \"cursorStale\"].forEach((key) => {\n            baseView.eventAdd({\n               emitter: dataview,\n               eventName: key,\n               listener: (...p) => this.displayText(...p),\n            });\n         });\n      }\n\n      this.displayText();\n   }\n};\n","import ClassUI from \"../../../../ui/ClassUI\";\n\nexport default class ABViewProperty extends ClassUI {\n   // constructor() {}\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {};\n   }\n\n   /** == Property == */\n   /**\n    * @function propertyComponent\n    * return the view and logic to display in property panel\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   static propertyComponent() {\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n\n   fromSettings(settings) {\n      this.settings = settings;\n   }\n\n   toSettings() {\n      return this.settings || {};\n   }\n\n   /** == UI == */\n   /**\n    * @function component\n    * return the view and logic to display in display widget\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    *\n    * @return {Object} - {\n    * \t\t\t\t\t\tui: webix element,\n    * \t\t\t\t\t\tinit: function,\n    * \t\t\t\t\t\tlogic: object\n    * \t\t\t\t\t}\n    */\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      let ui = {\n         view: \"template\",\n         template: \"No UI\",\n      };\n\n      let init = (options) => {\n         // register callbacks:\n         for (var c in logic.callbacks) {\n            logic.callbacks[c] = options[c] || logic.callbacks[c];\n         }\n      };\n\n      let logic = {\n         callbacks: {},\n      };\n\n      return {\n         ui: ui,\n         init: init,\n         logic: logic,\n      };\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewFormButton from \"../ABViewFormButton\";\nimport ABViewPDFImporter from \"../ABViewPDFImporter\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyAddPage extends ABViewProperty {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         formView: \"none\", // id of form to add new data\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formView: `${idBase}_formView`,\n      };\n\n      let ui = {\n         id: ids.formView,\n         name: \"formView\",\n         view: \"richselect\",\n         label: L(\"Add New Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formView).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            let pagesHasForm = view\n               .pageRoot()\n               .pages((p) => {\n                  return p.views((v) => {\n                     return (\n                        v &&\n                        v.key == \"form\" &&\n                        v.datacollection &&\n                        v.datacollection.datasource &&\n                        v.datacollection.datasource.id ==\n                           view.field().settings.linkObject\n                     );\n                  }, true).length;\n               }, true)\n               .map((p) => {\n                  return {\n                     id: p.id,\n                     value: p.label,\n                  };\n               });\n\n            editForms = editForms.concat(pagesHasForm);\n\n            let $selector = $$(ids.formView);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.formView || this.default.formView\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            settings.formView = $$(ids.formView).getValue();\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.formView =\n         settings.formView || this.constructor.default.formView;\n   }\n\n   getIds(idBase, App) {\n      return {\n         popup: App._App.unique(`${idBase}_popup_add_new`),\n         field: idBase.split(\"_\")[1],\n         button: App._App.unique(`${idBase}_popup_add_new_button`),\n      };\n   }\n\n   component(App, idBase) {\n      // This can be overwritten by creating a different getIds before calling .super\n      let ids = this.getIds(idBase, App);\n\n      let ui = \"\";\n\n      if (\n         this.settings.formView &&\n         this.settings.formView != this.constructor.default.formView\n      ) {\n         // let iDiv = document.createElement(\"div\");\n         // iDiv.className = \"ab-connect-add-new\";\n         const dataCy = `add new CR button ${this.settings.formView} ${ids.field}`;\n         // iDiv.innerHTML = `<a href=\"javascript:void(0);\" class=\"fa fa-plus ab-connect-add-new-link\" data-cy=\"${dataCy}\"></a>`;\n         // iDiv.appendChild(node);\n         // ui = iDiv.outerHTML;\n         ui = {\n            id: ids.button,\n            view: \"button\",\n            type: \"icon\",\n            icon: \"fa fa-plus\",\n            width: 32,\n            height: 32,\n            css: \"webix_primary ab-connect-add-new-link\",\n            on: {\n               onAfterRender: () => {\n                  $$(ids.button)\n                     ?.$view.querySelector(\"button\")\n                     .setAttribute(\"data-cy\", dataCy);\n               },\n            },\n         };\n      }\n\n      let _logic = {\n         callbacks: {\n            onSaveData: (saveData) => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n            },\n            onCancel: () => {\n               if ($$(ids.popup)) $$(ids.popup).close();\n\n               return false;\n            },\n            onClearOnLoad: () => {\n               return true;\n            },\n            clearOnLoad: () => {\n               return true;\n            },\n         },\n\n         applicationLoad: (application) => {\n            this._application = application;\n         },\n\n         onClick: (dc) => {\n            let pageId = this.settings.formView;\n            let page = this._application.pages((p) => p.id == pageId, true)[0];\n\n            return _logic.openFormPopup(page, dc);\n         },\n\n         /**\n          * @method openFormPopup\n          *\n          * @param page {ABViewPage}\n          * @param dc {ABDataCollection}\n          */\n         openFormPopup: (page, dc) => {\n            return new Promise((resolve, reject) => {\n               if (this._application == null) return resolve();\n\n               if ($$(ids.popup)) {\n                  $$(ids.popup).show();\n                  return resolve();\n               }\n\n               // Clone page so we modify without causing problems\n               let pageClone = page.clone(null, null, { ignoreSubPages: true });\n               pageClone.id = this._application.AB.uuid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               // pageClone.id = pageClone.id + \"-\" + webix.uid(); // lets take the stored id can create a new dynamic one so our views don't duplicate\n               let popUpComp = pageClone.component();\n               let ui = popUpComp.ui();\n\n               // Listen 'saved' event of the form widget\n               const saveViews =\n                  pageClone.views(\n                     (v) =>\n                        v instanceof ABViewFormButton ||\n                        v instanceof ABViewPDFImporter,\n                     true\n                  ) ?? [];\n\n               saveViews.forEach((view) => {\n                  const v =\n                     view instanceof ABViewFormButton ? view.parent : view;\n                  v.on(\"saved\", (savedData) => {\n                     _logic?.callbacks?.onSaveData(savedData);\n                     // ? is there ever a case where we want to keep an add popup open after saving?\n                     // ! setting this to always close\n\n                     if ($$(ids.popup)) {\n                        $$(ids.popup).close();\n                     } else {\n                        var popup = this.getTopParentView();\n                        popup.close();\n                     }\n                  });\n               });\n\n               let popupTemplate = {\n                  view: \"window\",\n                  id: ids.popup,\n                  modal: true,\n                  position: \"center\",\n                  // position:function(stthis.__addPageToolate){\n                  // \tstate.left = x + 20this.__addPageTool; // offset the popups\n                  // \tstate.top = y + 20;this.__addPageTool\n                  // },\n                  resize: true,\n                  width: parseInt(this.settings.popupWidth) || 700,\n                  height: parseInt(this.settings.popupHeight) + 44 || 450,\n                  css: \"ab-main-container\",\n                  head: {\n                     view: \"toolbar\",\n                     css: \"webix_dark\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: page.label,\n                           css: \"modal_title\",\n                           align: \"center\",\n                        },\n                        {\n                           view: \"button\",\n                           label: L(\"Close\"),\n                           autowidth: true,\n                           align: \"center\",\n                           click: function () {\n                              var popup = this.getTopParentView();\n                              popup.close();\n                           },\n                        },\n                     ],\n                  },\n                  body: {\n                     view: \"scrollview\",\n                     scroll: true,\n                     body: ui,\n                  },\n               };\n\n               // Create popup\n               webix.ui(popupTemplate).show();\n\n               // Initial UI components\n               const accessLevel = 3; // TODO: Is it correct\n               popUpComp.init(this._application.AB, accessLevel, {\n                  onSaveData: _logic.callbacks.onSaveData,\n                  onCancelClick: _logic.callbacks.onCancel,\n                  clearOnLoad: _logic.callbacks.clearOnLoad,\n                  onClearOnLoad: _logic.callbacks.onClearOnLoad,\n               });\n\n               popUpComp.onShow();\n\n               setTimeout(async () => {\n                  _logic.setDefaultValue(dc, pageClone);\n\n                  resolve();\n               }, 100);\n            });\n         },\n\n         setDefaultValue: (dc, page) => {\n            if (!dc) return;\n\n            let obj = dc.datasource;\n            if (!obj) return;\n\n            let linkedData = dc.getCursor();\n            if (!linkedData) return;\n\n            page.views().forEach((v) => {\n               if (!v || v.key != \"form\") return;\n\n               v.views().forEach((fView) => {\n                  if (fView.key != \"connect\" || fView.settings == null) return;\n\n                  let field = fView.field();\n                  if (field == null) return;\n\n                  let objLink = field.datasourceLink;\n                  if (objLink == null || objLink.id != obj.id) return;\n\n                  let data = {};\n                  let relationName = field.relationName();\n                  data[relationName] = {\n                     id: linkedData.id,\n                  };\n\n                  // Add custom index values\n                  let indexes = obj.indexes() || [];\n                  indexes.forEach((idx) => {\n                     (idx.fields || []).forEach((f) => {\n                        data[relationName][f.columnName] =\n                           linkedData[f.columnName];\n                     });\n                  });\n\n                  // Set label of selected item\n                  if (linkedData.text) {\n                     data[relationName].text = linkedData.text;\n                     data[relationName].value = data[relationName].text;\n                  } else {\n                     let rawData = {};\n                     rawData[relationName] = linkedData;\n                     data[relationName].text = field.format(rawData);\n                     data[relationName].value = data[relationName].text;\n                  }\n\n                  let comp = v.viewComponents[fView.id];\n                  if (!comp) return;\n\n                  const ui = typeof comp.ui == \"function\" ? comp.ui() : comp.ui;\n                  const inputId = ui?.inputId || ui?.rows?.[0]?.inputId;\n\n                  if (inputId) field.setValue($$(inputId), data);\n               });\n            });\n         },\n      };\n\n      let init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n         if (ui) {\n            for (let c in options) {\n               ui.on[c] = options[c];\n            }\n         }\n      };\n\n      return {\n         ui: ui,\n         init: init,\n\n         applicationLoad: _logic.applicationLoad,\n         onClick: _logic.onClick,\n         openFormPopup: _logic.openFormPopup,\n      };\n   }\n}\n","import ABViewPropertyAddPage from \"./ABViewPropertyAddPage\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nexport default class ABViewPropertyEditPage extends ABViewPropertyAddPage {\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         editForm: \"none\", // The url pointer of ABViewForm\n      };\n   }\n\n   static propertyComponent(App, idBase) {\n      let ids = {\n         formEdit: `${idBase}_editForm`,\n      };\n\n      let ui = {\n         id: ids.formEdit,\n         name: \"editForm\",\n         view: \"richselect\",\n         label: L(\"Edit Form\"),\n         labelWidth: this.AB.UISettings.config().labelWidthXLarge,\n         on: {\n            onChange: (newVal, oldVal) => {\n               if (newVal == L(\"No add new option\")) {\n                  $$(ids.formEdit).setValue(\"\");\n               }\n\n               _logic.callbacks.onSave();\n            },\n         },\n      };\n\n      let _init = (options) => {\n         for (let c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      let _logic = {\n         callbacks: {\n            onSave: function () {\n               console.warn(\"NO onSave()!\");\n            },\n            clearOnLoad: () => {\n               return false; // always false, we're trying to edit data\n            },\n         },\n\n         setSettings: (view, settings = {}) => {\n            if (view == null) return;\n            settings.clearOnLoad = false; // doesn't work\n\n            // Set the options of the possible edit forms\n            let editForms = [\n               {\n                  id: \"none\",\n\n                  value: L(\"No add new option\"),\n               },\n            ];\n\n            (view.pageRoot().pages(() => true, true) || []).forEach((p) => {\n               if (!p) return;\n\n               p.views(() => true, true).forEach((v) => {\n                  if (\n                     v &&\n                     v.key == \"form\" &&\n                     v.datacollection &&\n                     v.datacollection.datasource &&\n                     v.datacollection.datasource.id ==\n                        view.field().settings.linkObject\n                  ) {\n                     editForms.push({\n                        id: v.urlPointer(),\n                        value: `${p.label} - ${v.label}`,\n                     });\n                  }\n               });\n            });\n\n            let $selector = $$(ids.formEdit);\n            if ($selector) {\n               $selector.define(\"options\", editForms);\n               $selector.define(\n                  \"value\",\n                  settings.editForm || this.default.editForm\n               );\n               $selector.refresh();\n            }\n         },\n\n         getSettings: (view) => {\n            let settings = view.settings || {};\n\n            let $selector = $$(ids.formEdit);\n            let $selectPopup = $selector.getPopup();\n            let selectedItem = ($selectPopup.config.body.data || []).filter(\n               (opt) => opt.id == $selector.getValue()\n            )[0];\n            if (selectedItem) {\n               settings.editForm = selectedItem.id; // The url pointer of ABViewForm\n            }\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: ui,\n         init: _init,\n         setSettings: _logic.setSettings,\n         getSettings: _logic.getSettings,\n      };\n   }\n\n   fromSettings(settings = {}) {\n      this.settings = this.settings || {};\n      this.settings.editForm =\n         settings.editForm || this.constructor.default.editForm;\n   }\n\n   component(App, idBase) {\n      // Overwrite the popup-lookup function\n      function getIds(idBase, App) {\n         return {\n            popup: App._App.unique(`${idBase}_popup_edit_form`),\n            field: idBase.split(\"_\")[1],\n         };\n      }\n      this.getIds = getIds;\n\n      // call to addpage\n      let comp = super.component(App, idBase);\n\n      comp.onClick = () => {\n         if (\n            !this._application ||\n            !this.settings.editForm ||\n            this.settings.editForm == this.constructor.default.editForm\n         )\n            return Promise.resolve();\n\n         let form = this._application.urlResolve(this.settings.editForm);\n         if (!form) return Promise.resolve();\n\n         let page = form.pageParent();\n         if (!page) return Promise.resolve();\n\n         return comp.openFormPopup(page);\n      };\n\n      return comp;\n   }\n}\n","/*\n * ABViewPropertyFilterData\n * This is a displayable ui component that will manage displaying a\n * means of searching for the user.\n *\n * This component will emit: \"filter.data\" when one of the filter options\n * have been enabled.\n *    \"filter.data\" has 2 parameters: fnFilter, filterRules\n *       fnFilter {function} when passed a row of data from the grid,\n *                return true/false if it passes the filter.\n *       filterRules {array} of each of the filter rules that have been\n *                created. Note: the fnFilter still checks the validity\n *                of the row based on these rules.\n *                (this is used for the parent component to indicate how\n *                many rules are currently applied to the data being displayed)\n */\nconst ABMLClass = require(\"../../ABMLClass\");\nimport ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\n// const ABViewGridFilterRule = require(\"../../../rules/ABViewGridFilterRule\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass FilterRuleSettings extends ABMLClass {\n   constructor() {\n      super([\"label\"], AB);\n   }\n\n   fromSettings(settings) {\n      super.fromValues(settings);\n      this.filters = settings.filters;\n   }\n\n   toSettings() {\n      let obj = super.toObj();\n      obj.filters = this.filters;\n      return obj;\n   }\n}\n\nclass ABViewPropertyFilterDataComponent extends ABViewComponent {\n   constructor(viewPropertyFilterData, idBase) {\n      var base = idBase || viewPropertyFilterData.idBase;\n      super(base, {});\n   }\n}\n\nexport default class ABViewPropertyFilterData extends ABViewProperty {\n   constructor(AB, idBase) {\n      super(idBase, {\n         buttonAddfilter: \"\",\n         filterPanel: \"\",\n         globalFilterFormContainer: \"\",\n         globalFilterForm: \"\",\n         filterMenutoolbar: \"\",\n         resetFilterButton: \"\",\n      });\n\n      this.AB = AB;\n      this.idBase = idBase;\n      this.object = null;\n      // this.queryRules = [];\n\n      this.__externalSearchText = null;\n      // {string}\n      // External sources of text filters are stored here. This is most likely\n      // from the global search toolbar entry.\n      this.rowFilter = this.AB.filterComplexNew(`${this.ids.component}_filter`);\n      // {RowFilter}\n      // When .userFilterPosition == \"toolbar\" we use this RowFilter to\n      // display a form in a popup where the toolbar button is.\n\n      this.rowFilterForm = this.AB.filterComplexNew(\n         `${this.ids.component}_filter_form`\n      );\n      // {RowFilter}\n      // When .userFilterPosition == \"form\" we use this RowFilter to\n      // display a form under the toolbar.\n\n      this._handler_rowFilterChanged = (value) => {\n         let filterRules = value.rules || [];\n\n         // if ($$(ids.buttonFilter)) {\n         //    $$(ids.buttonFilter).define('badge', filterRules.length || null);\n         //    $$(ids.buttonFilter).refresh();\n         // }\n\n         // be notified when there is a change in the filter\n         this.triggerCallback((rowData) => {\n            return this.rowFilter.isValid(rowData);\n         }, filterRules);\n      };\n\n      this._handler_rowFilterFormChanged = () => {\n         this.triggerCallback();\n      };\n\n      this.initialized = false;\n      // {bool}\n      // make sure this is not .init() more than once\n   }\n\n   /**\n    * @property default\n    * return default settings\n    *\n    * @return {Object}\n    */\n   static get default() {\n      return {\n         filterOption: 1,\n         // {integer}\n         // 0 - Not allow\n         // 1 - Enable user filter\n         // 2 - Predefined filter menu\n         // 3 - Global filter input\n\n         // filterOptions == 1 options\n         userFilterPosition: \"toolbar\",\n         // {string} the location of the filter:\n         //    \"toolbar\" : there will be an \"Add Filters\" button on\n         //                the toolbar that will trigger the form popup\n         //    \"form\"    : there will be a button under the toolbar that\n         //                will bring up the form popup.\n\n         isGlobalToolbar: 1,\n         // {boolean|truthy}\n         // when \"toolbar\" is chosen for userFilterPosition, this setting\n         // allows us to also include the search criteria specified in\n         // the search box on the toolbar.\n\n         // filterOptions == 2 options\n         // predefined filters created by the builders. There will be\n         // an area under the toolbar that displays buttons to choose\n         // between one of the predefined queryRules.\n         // queryRules: [], // An array of ABViewGridFilterRule object\n\n         // filterOptions == 3 options\n         // globalFilterPosition: \"default\",\n         // {string} [ \"default\", \"single\" ]\n         //    \"default\" : shows default grid with all potential matches\n         //    \"single\"  : grid only shows when it has a match.  only 1\n         //                match is shown. ( is this true?? )\n      };\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      settings.filterOption =\n         typeof settings.filterOption != \"undefined\"\n            ? settings.filterOption\n            : ABViewPropertyFilterData.default.filterOption;\n\n      settings.isGlobalToolbar =\n         typeof settings.isGlobalToolbar != \"undefined\"\n            ? settings.isGlobalToolbar\n            : ABViewPropertyFilterData.default.isGlobalToolbar;\n\n      this.settings = settings;\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.object = object;\n\n      if (this.rowFilter) {\n         // this.rowFilter.applicationLoad(object.application);\n         this.rowFilter.fieldsLoad(object.fields());\n      }\n\n      if (this.rowFilterForm) {\n         // this.rowFilterForm.applicationLoad(object.application);\n         this.rowFilterForm.fieldsLoad(object.fields());\n      }\n   }\n\n   viewLoad(view) {\n      this.view = view;\n   }\n\n   /** == UI == */\n   ui() {\n      var self = this;\n      var ids = this.ids;\n\n      return {\n         id: ids.filterPanel,\n         type: \"space\",\n         borderless: true,\n         padding: 0,\n         hidden: true,\n         rows: [\n            {\n               id: ids.globalFilterFormContainer,\n               hidden: true,\n               cols: [\n                  {\n                     id: ids.globalFilterForm,\n                     view: \"text\",\n                     placeholder: L(\"Search or scan a barcode to see results\"),\n                     on: {\n                        onTimedKeyPress: () => {\n                           this.triggerCallback();\n                        },\n                     },\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     width: 28,\n                     type: \"icon\",\n                     icon: \"fa fa-times\",\n                     click: function () {\n                        var $form = $$(ids.globalFilterForm);\n                        $form.setValue(\"\");\n                        $form.focus();\n                        $form.callEvent(\"onTimedKeyPress\");\n                     },\n                  },\n               ],\n            },\n            {\n               id: ids.buttonAddfilter,\n               view: \"button\",\n               css: \"webix_primary\",\n               value: L(\"Add Filter\"),\n               click: () => {\n                  this.rowFilterForm.popUp($$(ids.buttonAddfilter).getNode(), {\n                     pos: \"bottom\",\n                  });\n               },\n            },\n            {\n               view: \"toolbar\",\n               id: ids.filterMenutoolbar,\n               css: \"ab-data-toolbar\",\n               hidden: true,\n               cols: [\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     id: ids.resetFilterButton,\n                     label: L(\"Reset Filter\"),\n                     icon: \"fa fa-ban\",\n                     type: \"icon\",\n                     // badge: 0,\n                     autowidth: true,\n                     click: function () {\n                        self.resetFilter();\n                     },\n                  },\n               ],\n            },\n         ],\n      };\n   }\n\n   async init(AB) {\n      if (AB) {\n         this.AB = AB;\n      }\n\n      var ids = this.ids;\n      // this.filter_popup = webix.ui({\n      //    view: \"popup\",\n      //    id: ids.component,\n      //    width: 600,\n      //    height: 400,\n      //    hidden: true,\n      //    body: this.rowFilter.ui,\n      // });\n\n      this.rowFilter.init();\n      this.rowFilter.removeListener(\"changed\", this._handler_rowFilterChanged);\n      this.rowFilter.on(\"changed\", this._handler_rowFilterChanged);\n\n      this.rowFilterForm.init();\n      this.rowFilterForm.removeListener(\n         \"changed\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"changed\", this._handler_rowFilterFormChanged);\n      this.rowFilterForm.removeListener(\n         \"save\",\n         this._handler_rowFilterFormChanged\n      );\n      this.rowFilterForm.on(\"save\", this._handler_rowFilterFormChanged);\n\n      $$(ids.filterPanel)?.hide();\n      $$(ids.buttonAddfilter)?.hide();\n      $$(ids.filterMenutoolbar)?.hide();\n      $$(ids.globalFilterFormContainer)?.hide();\n\n      switch (this.settings.filterOption) {\n         case 0:\n            break;\n         case 1:\n            switch (this.settings.userFilterPosition) {\n               case \"form\":\n                  $$(ids.buttonAddfilter)?.show();\n                  $$(ids.filterPanel)?.show();\n                  break;\n               case \"toolbar\":\n                  $$(ids.filterPanel)?.hide();\n                  break;\n            }\n            break;\n         case 2:\n            $$(ids.filterPanel)?.show();\n            var $filterMenutoolbar = $$(ids.filterMenutoolbar);\n            if ($filterMenutoolbar) {\n               $filterMenutoolbar.show();\n\n               // populate filter items\n               if (this.settings?.queryRules) {\n                  (this.settings.queryRules || []).forEach((qr) => {\n                     let Rule = new FilterRuleSettings();\n                     Rule.fromSettings(qr);\n                     var filterRuleButton = {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        label: Rule.label,\n                        icon: \"fa fa-filter\",\n                        type: \"icon\",\n                        // badge: 0,\n                        autowidth: true,\n                        click: () => {\n                           this.emit(\"filter.data\", null, Rule.filters);\n                           // this.selectFilter(qr.filter);\n                        },\n                     };\n                     $filterMenutoolbar.addView(filterRuleButton);\n                  });\n               }\n            }\n            break;\n         case 3:\n            $$(ids.globalFilterFormContainer)?.show();\n            $$(ids.filterPanel)?.show();\n            break;\n      }\n   }\n\n   filterRules() {\n      let rowFilterRules = null;\n\n      switch (this.settings.userFilterPosition) {\n         case \"form\":\n            rowFilterRules = this.rowFilterForm.getValue();\n            break;\n         case \"toolbar\":\n            rowFilterRules = this.rowFilter.getValue();\n            break;\n      }\n\n      return rowFilterRules;\n   }\n\n   /**\n    * @method getFilter()\n    * Return a fn() that returns {truthy} with a given row of\n    * data.\n    */\n   getFilter() {\n      // default filter\n      if (this.__currentFilter == null) {\n         // if empty search text in global single mode, then no display rows\n         if (\n            this.settings.filterOption == 3 &&\n            this.settings.globalFilterPosition == \"single\"\n         )\n            this.__currentFilter = (/* row */) => {\n               return false;\n            };\n         // always true, show every rows\n         else\n            this.__currentFilter = (/* row */) => {\n               return true;\n            };\n      }\n\n      return this.__currentFilter;\n   }\n\n   /**\n    * @method triggerCallback()\n    * We compile our current search options and emit them back to our\n    * parent container.\n    */\n   triggerCallback(/*fnFilter, filterRules*/) {\n      let searchRules = this.searchText(this.__externalSearchText);\n      let rowFilterRules = this.filterRules();\n\n      let badgeCount = 0;\n      if (rowFilterRules?.rules?.length) {\n         badgeCount = rowFilterRules?.rules?.length;\n         if (searchRules) {\n            badgeCount++;\n            rowFilterRules = {\n               glue: \"and\",\n               rules: [rowFilterRules, searchRules],\n            };\n         }\n      } else {\n         rowFilterRules = searchRules;\n      }\n\n      this.emit(\"filter.data\", null, rowFilterRules);\n\n      if (badgeCount == 0) badgeCount = false;\n      const $button = $$(this.ids.buttonAddfilter);\n      if ($button) {\n         $button.config.badge = badgeCount;\n         $button.refresh();\n      }\n   }\n\n   resetFilter() {\n      this.triggerCallback(() => true, []);\n   }\n\n   /**\n    * @method externalSearchText()\n    * Save any search criteria established from outside this filterHelper.\n    * NOTE: The ABViewGrid has a toolbar search entry that will provide\n    * this value.\n    * @param {string} search\n    *        The typed in search criteria.\n    */\n   externalSearchText(search = null) {\n      this.__externalSearchText = search;\n      this.triggerCallback(); // update each time\n   }\n\n   /**\n    * @method searchText()\n    * Retrieve the typed in search terms from the user, and convert them\n    * into a set of Rules that will modify our results.\n    * If an external search param is provided, use that instead.\n    * @param {string} externalText\n    * @return {json} The QB Rule condition for the search criteria\n    */\n   searchText(externalText) {\n      var search;\n      if (externalText) {\n         search = externalText;\n      } else {\n         search = ($$(this.ids.globalFilterForm)?.getValue() ?? \"\").trim();\n      }\n      if (!search) return null; // <-- includes \"\"\n\n      // find the individual \"terms\" that we should search for\n      let terms = search.trim().toLowerCase().split(\" \");\n\n      // build a set of conditions for each term\n      var allTerms = [];\n\n      var allFields = this.object?.fields() || [];\n\n      terms.forEach((t) => {\n         var fieldTerms = [];\n\n         // for each field, add a match condition for that field\n         // (if the field applies)\n         allFields.forEach((f) => {\n            if (f.fieldIsFilterable()) {\n               switch (f.key) {\n                  case \"number\":\n                  case \"string\":\n                  case \"LongText\":\n                  case \"email\":\n                     fieldTerms.push({\n                        key: f.id,\n                        rule: \"contains\",\n                        value: t,\n                     });\n                     break;\n\n                  case \"list\":\n                     var options = f.options();\n                     options.forEach((o) => {\n                        if (o.text.indexOf(t) > -1) {\n                           fieldTerms.push({\n                              key: f.id,\n                              rule: \"equals\",\n                              value: o.id,\n                           });\n                        }\n                     });\n                     break;\n               }\n            }\n         });\n\n         if (fieldTerms.length > 0) {\n            allTerms.push({\n               glue: \"or\",\n               rules: fieldTerms,\n            });\n         }\n      });\n\n      if (allTerms.length > 0) {\n         var searchRules = {\n            glue: \"and\",\n            rules: allTerms,\n         };\n         return searchRules;\n      } else {\n         return null;\n      }\n   }\n\n   showPopup($view) {\n      // this.filter_popup.show($view, null, { pos: \"top\" });\n      this.rowFilter.popUp($view, null, { pos: \"center\" });\n   }\n}\n","import ABViewProperty from \"./ABViewProperty\";\nimport ABViewComponent from \"../viewComponent/ABViewComponent\";\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nclass ABViewPropertyLinkPageComponent extends ABViewComponent {\n   constructor(linkPageHelper, idBase) {\n      let base = idBase || `ABViewPropertyLinkPage_xxx`;\n      super(base, {});\n\n      this.linkPageHelper = linkPageHelper;\n      this.AB = linkPageHelper.AB;\n\n      this.view = null;\n      // {ABViewXXXX}\n      // the ABView object this link references.\n\n      this.datacollection = null;\n      // {ABDataCollection}\n      // The related Datacollection to this view that drives it's data.\n      // we usually have to set the cursor before the view displays the\n      // appropriate data.\n   }\n\n   ui() {\n      return {};\n   }\n\n   init(options) {\n      if (options.view) this.view = options.view;\n\n      if (options.datacollection) this.datacollection = options.datacollection;\n   }\n\n   changePage(pageId, rowId) {\n      if (this.datacollection) {\n         this.datacollection.once(\"changeCursor\", () => {\n            this.view?.changePage(pageId);\n         });\n         this.datacollection.setCursor(rowId);\n      } else {\n         this.view?.changePage(pageId);\n      }\n   }\n}\n\nexport default class ABViewPropertyLinkPage extends ABViewProperty {\n   // constructor() {\n   //    super();\n   // }\n\n   /** == UI == */\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   component(v1App = false) {\n      let component = new ABViewPropertyLinkPageComponent(this);\n\n      // if this is our v1Interface\n      if (v1App) {\n         var newComponent = component;\n         component = {\n            ui: newComponent.ui(),\n            init: (...params) => {\n               return newComponent.init(...params);\n            },\n            onShow: (...params) => {\n               return newComponent.onShow?.(...params);\n            },\n            changePage: (...params) => {\n               return newComponent.changePage(...params);\n            },\n         };\n      }\n\n      return component;\n   }\n}\n","//\n// ABViewQueryBuilderObjectFieldConditions\n//\n// A UI component that is responsible for displaying a QueryBuilder based upon\n// the fields of a given ABObject.\n//\n// This object is also responsible for saving it's state to a settings value,\n// and generating the settings value to be saved.\n\nmodule.exports = class ABViewQueryBuilderObjectFieldConditions {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(label) {\n      this.label = label;\n      this.ui = null;\n   }\n\n   /**\n    * cleanRules\n    * walk through all the QueryBuilder (QB) rules and make conversions\n    * of the data into their proper formats.\n    * @param {obj} rules  the {rules} obj that is returned from the QB object\n    * @param {array} fields  an array of field definitions from the QB object\n    * @param {bool} dateToString  convert Dates to String format?\n    */\n   cleanRules(rules, fields, dateToString) {\n      if (typeof dateToString == \"undefined\") dateToString = true;\n\n      // walk the given condition rules / values, walk them and make sure\n      // any given rules have properly formatted values.\n      function processCondition(rule) {\n         // make sure rule is provided\n         if (rule) {\n            if (rule.glue && rule.rules) {\n               rule.rules.forEach((r) => {\n                  processCondition(r);\n               });\n            } else {\n               // converting a single rule:\n\n               var field = fields.filter((f) => {\n                  return f.id == rule.key;\n               })[0];\n               if (field) {\n                  switch (field.type) {\n                     case \"number\":\n                     case \"formula\":\n                        // when getting data from the server, the numbers are\n                        // sent back as strings (\"100.25\").\n                        // make sure to convert strings to numbers:\n                        if (typeof rule.value == \"string\") {\n                           if (rule.value.indexOf(\".\") == -1) {\n                              rule.value = parseInt(rule.value);\n                           } else {\n                              rule.value = parseFloat(rule.value);\n                           }\n                        }\n                        break;\n                     case \"date\":\n                        // in some cases we want to convert the Date() object returned\n                        // by QueryBuilder into a string for saving on the Server.\n                        if (dateToString) {\n                           // if we have a Date() obj returned from QueryBuilder,\n                           // convert to a string format:\n                           if (rule.value instanceof Date) {\n                              rule.value = webix.i18n.dateFormatStr(rule.value);\n                           }\n                        } else {\n                           // in other cases we want to convert the string returned\n                           // by the server into a Date() for the QB\n                           if (typeof rule.value == \"string\") {\n                              rule.value = new Date(rule.value);\n                           }\n                        }\n\n                        break;\n                  }\n               }\n            }\n         }\n      }\n      processCondition(rules);\n   }\n\n   // component\n   // initialize the UI display for this popup editor.\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      var L = App.Label;\n\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: myUnique(\"qbObjectFieldConditions\"),\n         queryBuilder: myUnique(\"qBuilder\"),\n         queryBuilderContainer: myUnique(\"qBuilderContainer\"),\n         queryBuilderLayout: myUnique(\"qBuilderLayout\"),\n         showQBButton: myUnique(\"showQBButton\"),\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"layout\",\n         id: ids.queryBuilderLayout,\n         hidden: true,\n         type: \"line\",\n         rows: [\n            {\n               id: ids.showQBButton,\n               cols: [\n                  { fillspace: true },\n                  {\n                     view: \"button\",\n                     css: \"webix_primary\",\n                     name: \"addqb\",\n                     value: L(\"Add Custom Conditions\"),\n                     autowidth: true,\n                     click: function () {\n                        $$(ids.queryBuilderContainer).show();\n                        $$(ids.showQBButton).hide();\n                        // _logic.buttonCancel();\n                     },\n                  },\n                  { fillspace: true },\n               ],\n            },\n            {\n               hidden: true,\n               id: ids.queryBuilderContainer,\n               cols: [\n                  {\n                     view: \"querybuilder\",\n                     id: ids.queryBuilder,\n                     fields: this.conditionFields(),\n                  },\n               ],\n            },\n         ],\n      };\n\n      // tack on a label if provided.\n      if (this.label) {\n         this.ui.rows[1].cols.unshift({\n            view: \"label\",\n            css: \"ab-text-bold\",\n            label: this.label,\n            width: this.AB.UISettings.config().labelWidthLarge,\n         });\n      }\n\n      // for setting up UI\n      this.init = (options) => {\n         options = options || {};\n\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         /**\n          * cleanRules\n          * walk through all the QueryBuilder (QB) rules and make conversions\n          * of the data into their proper formats.\n          * @param {obj} rules  the {rules} obj that is returned from the QB object\n          * @param {array} fields  an array of field definitions from the QB object\n          * @param {bool} dateToString  convert Dates to String format?\n          */\n         cleanRules: (rules, fields, dateToString) => {\n            this.cleanRules(rules, fields, dateToString);\n         },\n\n         getValue: () => {\n            var values = null;\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               values = QB.getValue();\n            }\n\n            // convert dates to simpler format:\n            // by default we're getting long values: \"Mon Feb 2, 2018 GMT xxxxxxx\",\n            // and webix doesn't seem to understand them when we send them back.\n            // so save simple date values: \"mm/dd/yyyy\"\n            if (values) {\n               _logic.cleanRules(values[0], values[1], true);\n            }\n\n            return values;\n         },\n\n         setValue: (values) => {\n            values = values || [];\n            if (!Array.isArray(values)) values = [values];\n            if (values.length == 0) {\n               values.push({});\n            } // push default rules\n            if (values.length < 2) {\n               values.push(this.conditionFields());\n            }\n\n            // convert dates from our server side \"string\" format into\n            // Date() objects.\n            _logic.cleanRules(values[0], values[1], false);\n\n            var QB = $$(ids.queryBuilder);\n            if (QB) {\n               if (values[0] && values[0].rules && values[0].rules.length) {\n                  QB.setValue(values[0]);\n                  $$(ids.queryBuilderContainer).show();\n                  $$(ids.showQBButton).hide();\n               }\n            }\n         },\n      });\n\n      this.getValue = _logic.getValue;\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\n         \"string\",\n         \"LongText\",\n         \"number\",\n         \"date\",\n         \"email\",\n         \"formula\",\n         \"calculate\",\n      ];\n\n      var currFields = [];\n\n      if (this.currentObject) {\n         this.currentObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n\n               let type = f.key;\n               if (f.key == \"formula\" || f.key == \"calculate\") type = \"number\";\n               else if (f.key == \"LongText\") type = \"string\";\n\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: type,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // process\n   // Take the provided data and process each of our rules.\n   // @param {obj} options\n   // @return {promise}\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= this.listRules.length) {\n               resolve();\n            }\n         };\n\n         this.listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (this.listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   showQueryBuilderContainer() {\n      $$(this.ids.queryBuilderLayout).show();\n      $$(this.ids.queryBuilderContainer).show();\n      $$(this.ids.showQBButton).hide();\n   }\n\n   // // fromSettings\n   // // Create an initial set of default values based upon our settings object.\n   // // @param {obj} settings  The settings object we created in .toSettings()\n   // fromSettings (settings) {\n   // \t// settings: [\n   // \t//  { rule.settings },\n   // \t//  { rule.settings }\n   // \t// ]\n\n   // \t// clear any existing Rules:\n   // \tthis.listRules.forEach((rule)=>{\n   // \t\t$$(this.ids.rules).removeView(rule.ids.component);\n   // \t})\n   // \tthis.listRules = [];\n\n   // \tif (settings) {\n   // \t\tsettings.forEach((ruleSettings)=>{\n   // \t\t\tthis.addRule(ruleSettings);\n   // \t\t})\n   // \t}\n   // }\n\n   // // toSettings\n   // // create a settings object to be persisted with the application.\n   // // @return {array} of rule settings.\n   // toSettings () {\n   // \tvar settings = [];\n   // \tthis.listRules.forEach((r)=>{\n   // \t\tsettings.push(r.toSettings());\n   // \t})\n   // \treturn settings;\n   // }\n};\n","//\n// ABViewRule\n//\n// A component that manages an individual Rule in a Rule list.\n//\n// Each rule can manage a set of given Actions.  For each Rule, one Action\n// can be chosen, A condition for when that action is executed, and then\n// inputs for any additional data required by that action.\n//\n// Rules are used in the Interface Builder to present the designer an interface\n// for defining the Action+Condition:\n//\n//\n//\n// In live apps, Rules are used when processing events and determining if an\n// action is to be performed:\n//\n//\n//\n// A Rule needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\nconst ObjectQueryBuilder = require(\"./ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRule {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(listActions) {\n      this.listActions = listActions || []; // the list of Actions this Rule manages\n\n      this.actionDropList = []; // the Webix UI droplist\n      this.listActions.forEach((a) => {\n         this.actionDropList.push({ id: a.key, value: a.label });\n      });\n\n      this.selectedAction = null; // the currently selected Action.key\n      if (this.actionDropList.length > 0) {\n         this.selectedAction = this.actionDropList[0].id;\n      }\n\n      this.removable = true; // can I delete this rule?\n\n      this.currentObject = null; // What ABObject is this associated with\n      // NOTE: this is important for Actions.\n\n      this.objectQB = null; // The QueryBuilder (QB) object\n\n      this.currentForm = null;\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      // this is different because multiple instances of this View can be displayed\n      // at the same time.  So make each instance Unique:\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return this.unique(idBase + key ) + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: myUnique(\"component\"),\n\n         selectAction: myUnique(\"chooseAction\"),\n\n         queryBuilder: myUnique(\"queryBuilder\"),\n\n         valueDisplay: myUnique(\"valueArea\"),\n      });\n\n      this.objectQB.label = L(\"When\");\n      this.objectQB.component(this.App, this.idBase);\n      this.ui = this._generateUI();\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         this.objectQB.init();\n\n         // make sure the current Action's value display is initialized:\n         var Action = this.currentAction();\n         if (Action) {\n            Action.component(this.App, this.idBase);\n            var comp = Action.valueDisplay(ids.valueDisplay);\n\n            _logic.replaceValueDisplay(comp);\n\n            // webix.ui(comp.ui, $$(this.ids.valueDisplay));\n            comp.init();\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         replaceValueDisplay: (component) => {\n            // remove current content area:\n            var $ValueDisplay = $$(this.ids.valueDisplay);\n            if (!$ValueDisplay) return;\n\n            var children = $ValueDisplay.getChildViews();\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               $ValueDisplay.removeView(c);\n            });\n\n            $ValueDisplay.addView(component.ui);\n         },\n\n         selectAction: (newValue, oldVal) => {\n            if (newValue) {\n               $$(this.ids.component)\n                  .getChildViews()\n                  .forEach((views) => {\n                     views.show();\n                  });\n            }\n            // bonus:  save current state of previous Action\n            var prevAction = this.getAction(oldVal);\n            if (prevAction) {\n               prevAction.stashCondition(this.objectQB.getValue());\n            }\n\n            // now switch to the new Action\n            this.selectedAction = newValue;\n            var currAction = this.currentAction();\n            if (currAction) {\n               // reset Condition filters.\n               this.objectQB.setValue(currAction.condition());\n\n               // have Action display it's values form\n               currAction.component(this.App, this.idBase);\n               var component = currAction.valueDisplay(ids.valueDisplay);\n               _logic.replaceValueDisplay(component);\n               component.init();\n               // currAction.valueDisplay(ids.valueDisplay);\n            }\n         },\n      });\n   }\n\n   // not intended to be called externally\n   _generateUI() {\n      return {\n         id: this.ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rules\",\n         padding: 20,\n         // margin: 10,\n\n         // this should be a CSS setting: this.AB.Config.xxxx\n         // width: 680,\n         type: \"line\",\n         rows: [\n            {\n               view: \"template\",\n               css: \"ab-component-form-rules-delete\",\n               template: '<i class=\"fa fa-trash ab-component-remove\"></i>',\n               height: 30,\n               borderless: true,\n               hidddatasourceen: this.removable == false,\n               onClick: {\n                  \"ab-component-remove\": (e, id, trg) => {\n                     this._logic.callbacks.onDelete(this);\n                  },\n               },\n            },\n            // Action\n            {\n               id: this.ids.selectAction,\n               view: \"richselect\",\n               label: L(\"Action\"),\n               placeholder: L(\"Choose an action\"),\n               labelWidth: this.AB.UISettings.config().labelWidthLarge,\n               options: this.actionDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     this._logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n\n            // Values\n            {\n               for: \"values\",\n               hidden: true,\n               cells: [\n                  {\n                     view: \"layout\",\n                     cols: [\n                        {\n                           view: \"label\",\n                           label: L(\"Values\"),\n                           css: \"ab-text-bold\",\n                           width: this.AB.UISettings.config().labelWidthLarge,\n                        },\n                        {\n                           id: this.ids.valueDisplay,\n                           view: \"layout\",\n                           rows: [\n                              {\n                                 label: L(\n                                    \" ABViewRule: This should be the Set Area\"\n                                 ),\n                                 css: \"ab-text-bold\",\n                                 height: 30,\n                              },\n                           ],\n                        },\n                     ],\n                  },\n               ],\n            },\n\n            // When\n            this.objectQB.ui,\n         ],\n      };\n   }\n\n   // return the QueryBuilder fields data for the currently selected Action.\n   conditionFields() {\n      var fields = [];\n\n      var selectedAction = this.currentAction();\n      if (selectedAction) {\n         fields = selectedAction.conditionFields();\n      }\n\n      return fields;\n   }\n\n   currentAction() {\n      return this.getAction(this.selectedAction);\n   }\n\n   getAction(key) {\n      return this.listActions.filter((a) => {\n         return a.key == key;\n      })[0];\n   }\n\n   objectLoad(object) {\n      this.currentObject = object;\n      this.listActions.forEach((a) => {\n         a.objectLoad(object);\n      });\n\n      var label = L(\"When\");\n\n      this.objectQB = new ObjectQueryBuilder(label);\n      this.objectQB.objectLoad(object);\n\n      // regenerate our UI when a new object is loaded.\n      if (this.ids) {\n         this.ui = this._generateUI();\n      }\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.listActions.forEach((a) => {\n         a.formLoad(form);\n      });\n   }\n\n   processPre(options = {}) {\n      let isValid = this.isValid(options.data);\n      if (!isValid) return;\n\n      let currentAction = this.currentAction();\n      if (!currentAction) return;\n\n      currentAction.processUpdateObject({}, options.data);\n   }\n\n   // process\n   // Take the provided data and process this rule\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      var currentAction = this.currentAction();\n      if (!currentAction) return Promise.resolve();\n\n      let isValid = this.isValid(options.data);\n      if (isValid) {\n         return currentAction.process(options);\n      } else {\n         // else just resolve and continue on\n         return new Promise((resolve, reject) => {\n            resolve();\n         });\n      }\n   }\n\n   fromSettings(settings) {\n      settings = settings || {};\n\n      if (settings.selectedAction) {\n         // store our Query Rules\n         this.selectedAction = settings.selectedAction;\n         var selectedAction = this.currentAction();\n         if (!selectedAction) return;\n         selectedAction.stashCondition(settings.queryRules || {});\n\n         // if our UI components are present, populate them properly:\n         if (this.ids) {\n            // Trigger our UI to refresh with this selected Action:\n            // NOTE: this also populates the QueryBuilder\n            $$(this.ids.selectAction).setValue(this.selectedAction);\n            // this._logic.selectAction(this.selectedAction);\n         }\n\n         // now continue with setting up our settings:\n         selectedAction.fromSettings(settings.actionSettings);\n      }\n   }\n\n   toSettings() {\n      var settings = {};\n\n      if (this.selectedAction) {\n         settings.selectedAction = this.selectedAction;\n         settings.queryRules = this.objectQB.getValue();\n         let currentAction = this.currentAction();\n         if (currentAction) {\n            settings.actionSettings = currentAction.toSettings();\n         }\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      var currAction = this.currentAction();\n      if (currAction && this.objectQB) {\n         this.objectQB.setValue(currAction.condition());\n         currAction.qbFixAfterShow();\n      }\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   async isReady() {\n      let currentAction = this.currentAction();\n      if (currentAction) {\n         return currentAction.isReady();\n      }\n      return Promise.resolve();\n   }\n\n   isValid(data = {}) {\n      const fields = this.currentObject.fields(),\n         currentAction = this.currentAction(),\n         QBCondition = currentAction.condition(),\n         query = QBCondition[0] ?? {};\n\n      const convertToNumber = (text = \"\") => {\n         // if we have multiple rules we need to check if value is already a number before converting.\n         if (typeof text == \"number\") return text;\n\n         return parseFloat(text.replace(/[^-0-9.]/g, \"\"));\n      };\n\n      // Fix string data in number type\n      // NOTE: \"1000\" > \"99\" = false    >_<!\n      fields\n         .filter(\n            (f) =>\n               f.key == \"number\" || f.key == \"calculate\" || f.key == \"formula\"\n         )\n         .forEach((f) => {\n            try {\n               // filter conditions\n               if (Array.isArray(query?.rules)) {\n                  query.rules.forEach((r) => {\n                     // NOTE: compatible with old settings\n                     if (r.key == f.id || r.key == f.columnName)\n                        r.value = convertToNumber(r.value);\n                  });\n               }\n\n               // row data\n               if (\n                  data[f.columnName] &&\n                  typeof data[f.columnName] === \"string\"\n               ) {\n                  data[f.columnName] = convertToNumber(data[f.columnName]);\n               }\n            } catch (e) {\n               // continue regardless of error\n            }\n         });\n\n      const hiddenFilter = (this.AB ?? AB).filterComplexNew(\n         `${this.idBase}_filter_complex`\n      );\n      hiddenFilter.fieldsLoad(fields, this.currentObject);\n      hiddenFilter.setValue(query);\n      hiddenFilter.init();\n\n      return hiddenFilter.isValid(data);\n\n      // var id = \"hiddenQB_\" + webix.uid();\n\n      // // if our data passes the QueryRules then tell Action to process\n      // var ui = {\n      //    id: id,\n      //    hidden: true,\n      //    view: \"querybuilder\",\n      // };\n      // var hiddenQB = webix.ui(ui);\n\n      // let currentAction = this.currentAction();\n      // var QBCondition = currentAction.condition();\n\n      // if (this.objectQB) {\n      //    this.objectQB.cleanRules(QBCondition[0], QBCondition[1], false);\n      // }\n\n      // let query = QBCondition[0] || {},\n      //    fields = QBCondition[1] || [];\n\n      // // hiddenQB.setValue(QBCondition);\n      // hiddenQB.setValue({\n      //    query: query,\n      //    fields: fields,\n      // });\n\n      // var QBHelper = hiddenQB.getFilterHelper();\n      // var isValid = QBHelper(data);\n\n      // hiddenQB.destructor(); // remove the QB\n\n      // return isValid;\n   }\n\n   get isPreProcess() {\n      let currentAction = this.currentAction();\n      return currentAction.isPreProcess || false;\n   }\n};\n","//\n// ABViewRuleAction\n//\n// A component that manages an individual Action in a Rule.\n//\n// Each Action is responsible for figuring out when it can run, and what to do.\n//\n// Actions are used in the Interface Builder to present the designer an interface\n// for defining the a Condition and a set of data necessary to complete the Action:\n//\n//\n//\n// In live apps, Actions are used when processing events and determining if an\n// if and what is to be performed:\n//\n//\n//\n// An Action needs to save it's current state to an objects settings, and to\n// initialize itself from those settings.\n//\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    * @param {ABViewForm} currentForm\tthe current form this Action is associated with.\n    */\n   constructor(App, idBase, currentForm) {\n      this.key = \"ABViewRuleAction\";\n\n      this.queryObject = null; // the current ABObject we use to create QueryBuilder information.\n\n      this.currentForm = null;\n\n      this.queryRules = {}; // default set of rules for the Query Builder condition\n\n      this.valueRules = {}; // the initial Value Rules for this Action\n      // The Action Subclass defines what this {} is.\n\n      this.currentForm = currentForm; // the ABViewForm object that this rule Action is tied to.\n   }\n\n   component(App, idBase) {\n      this.App = App;\n      this.idBase = idBase;\n\n      this.label = L(\"generic abviewruleaction\");\n\n      function myUnique(key) {\n         return App.unique(`${idBase}_${key}`);\n      }\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         // each instance must be unique\n         component: `${myUnique(\"component\")}_${webix.uid()}`,\n      });\n\n      this._ui = null; // internally track our UI Component value Rules\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         callbacks: {\n            onDelete: function () {\n               console.warn(\"NO onDelete()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n      });\n   }\n\n   // condition\n   // Return the querybuilder setup structure for this Action.\n   // @return {array}  of querybuilder setup\n   //\t\t\t\t\t[\n   //\t\t\t\t\t\t{rules},\n   //\t\t\t\t\t\t[fields]\n   //\t\t\t\t\t]\n   condition() {\n      return [this.conditionRules(), this.conditionFields()];\n   }\n\n   // stashCondition\n   // capture the current set of rules provided by the QB object.\n   // This doesn't guarantee these will be saved to the App settings.\n   // Instead it is a temporary stash. Only the selected Action's\n   // values will be persisited to the App settings.\n   // @param {obj/Array} rules  The QueryBuilder rule value returned from\n   //\t\t\t\t\t\t\t .getValue()\n   //\t\t\t\t\t\t\t note: it is the first entry .getValue()[0]\n   //\n   stashCondition(rules) {\n      // check to see if they sent us the raw QueryBuilder values and only\n      // pull off the rules if they did\n      if (Array.isArray(rules)) {\n         rules = rules[0];\n      }\n\n      // sanity check on glue value: don't update if null or not given.\n      if (rules) {\n         // sometimes .glue is undefined  so default to 'and'\n         if (rules.glue != \"or\") rules.glue = \"and\";\n\n         this.queryRules = rules;\n      }\n   }\n\n   // conditionFields()\n   // Return the list of fields we are able to update.\n   // @return {array} of querybuilder field definitions:\n   //\t\t\t\t\t[\n   // \t\t\t\t\t\t{ id:\"fname\",   value:\"First Name\", type:\"string\" },\n   //\t\t\t\t\t    { id:\"lname\",   value:\"Last Name\",  type:\"string\" },\n   //\t\t\t\t\t    { id:\"age\",     value:\"Age\",        type:\"number\" },\n   //\t\t\t\t\t    { id:\"bdate\",   value:\"Birth Date\", type:\"date\" }\n   //\t\t\t\t\t]\n   conditionFields() {\n      var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n      var currFields = [];\n\n      if (this.queryObject) {\n         this.queryObject.fields().forEach((f) => {\n            if (fieldTypes.indexOf(f.key) != -1) {\n               // NOTE: the .id value must match the obj[.id]  in the data set\n               // so if your object data looks like:\n               // \t{\n               //\t\tname_first:'Neo',\n               //\t\tname_last: 'The One'\n               //  },\n               // then the ids should be:\n               // { id:'name_first', value:'xxx', type:'string' }\n               currFields.push({\n                  id: f.columnName,\n                  value: f.label,\n                  type: f.key,\n               });\n            }\n         });\n      }\n\n      return currFields;\n   }\n\n   // conditionRules()\n   // Return the current rule definition object for this Action.\n   // @return {obj}\n   conditionRules() {\n      return this.queryRules;\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      // this.currentObject = object;\t\t\t\t// DO WE NEED THIS?\n      this.queryObjectLoad(object);\n   }\n\n   // queryObjectLoad\n   // save the current object this Action is using to build query rules.\n   queryObjectLoad(object) {\n      this.queryObject = object;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      console.error(\n         \"!!! ABViewRuleAction.process() should be overridden by its child class.\"\n      );\n      return new Promise((resolve, reject) => {\n         reject(\n            new Error(\n               \"ABViewRuleAction.process() should be overridden by its child class.\"\n            )\n         );\n      });\n   }\n\n   // valueDisplay\n   // create the form to collect the specific data this Action needs to function.\n   // @param {string} webixID  the $$(webixID) of the area to insert our display.\n   valueDisplay(webixID) {\n      return this.valueDisplayComponent(webixID);\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      return (this._ui = {\n         ui: {\n            template: \"ABViewRuleAction.valueDisplayComponent\",\n         },\n         init: (data) => {\n            console.error(\n               \"!!! ABViewRuleAction.valueDisplayComponent() should be overridden.\"\n            );\n            console.warn(\" --> passed in data:\", data);\n         },\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n      settings = settings ?? {};\n      this.valueRules = settings.valueRules ?? settings;\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      var settings = {};\n\n      // require the child to insert the valueRules\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   isReady() {\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      // our child classes can implement this if needed.\n      // \t- ABViewRuleActionFormRecordRuleUpdateConnected\n   }\n};\n","//\n// ABViewRuleList\n//\n// A UI component that is responsible for displaying a list of current \"Rules\"\n// for a given purpose.  Some examples are the\n//\t\tForm -> Submit Rules,\n//\t\tForm -> Display Rules\n// \t\tForm -> Record Rules.\n//\n\n// ABViewRuleList is the parent object that manages displaying the common popup,\n// list, adding a rule, removing rules, etc...\n//\n// It is intending to be subclassed by a Specific List object that will load\n// up a given set of Actions for their list.\n//\n// When using it in the AppBuilder Interface Builder, this object provides:\n// \tvar PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings(CurrentObjectDefinition.rules); // populates List with current settings defined in CurrentObjectDefinition\n//  PopupRecordList.init({ onSave:()=>{}})\t// displays the popup for IB\n//  CurrentObjectDefinition.rules = PopupRecordList.toSettings(); // save the settings to store in json config\n//\n// When using on a live running App:\n//  PopupRecordList = new ABViewRuleList(App, idBase);\n//  PopupRecordList.fromSettings();\n//\n//  onFormSubmit(data) {\n//\t\t// note: this automatically validates and runs each rule:\n//\t\tPopupRecordList.process({data:data, view:{ current ABViewForm object }})\n//\t\t.then()\n//\t\t.catch();\n//  }\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleList {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(childSettings) {\n      this.listRules = [];\n      this.currentObject = null;\n\n      // ensure required values:\n      childSettings = childSettings || {};\n      childSettings.labels = childSettings.labels || {};\n      childSettings.labels.header =\n         childSettings.labels.header || \"ab.components.form.ruleList\";\n      childSettings.labels.headerDefault =\n         childSettings.labels.headerDefault || \"*Rule List\";\n      this.childSettings = childSettings;\n   }\n\n   /**\n    * @method component\n    * initialize the UI display for this popup editor.\n    * @param {obj} App  The common UI App object shared among our UI components\n    * @param {string} idBase A unique Key used the the base of our unique ids\n    */\n   component(App, idBase) {\n      this.App = this.App || App;\n      this.idBase = idBase;\n\n      App = App || this.App;\n\n      this.currentForm = null;\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = (this.ids = {\n         component: `${idBase}_component`,\n         rules: `${idBase}_rules`,\n         rulesScrollview: `${idBase}_rulesScrollview`,\n\n         action: `${idBase}_action`,\n         when: `${idBase}_when`,\n\n         values: `${idBase}_values`,\n         set: `${idBase}_set`,\n      });\n\n      // webix UI definition:\n      this.ui = {\n         view: \"window\",\n         id: ids.component,\n         modal: true,\n         position: \"center\",\n         resize: true,\n         width: 700,\n         height: 450,\n         css: \"ab-main-container\",\n         head: {\n            view: \"toolbar\",\n            css: \"webix_dark\",\n            cols: [\n               {\n                  view: \"label\",\n                  label: this.childSettings.labels.headerDefault,\n               },\n               {\n                  view: \"button\",\n                  css: \"webix_primary\",\n                  icon: \"fa fa-plus\",\n                  type: \"iconButton\",\n                  label: L(\"Add new rule\"),\n                  width: 150,\n                  click: () => {\n                     this.addRule();\n                     console.log($$(ids.rules).$height);\n                     $$(ids.rulesScrollview).scrollTo(0, $$(ids.rules).$height);\n                  },\n               },\n            ],\n         },\n         body: {\n            type: \"form\",\n            rows: [\n               {\n                  view: \"scrollview\",\n                  id: ids.rulesScrollview,\n                  scroll: \"xy\",\n                  body: {\n                     view: \"layout\",\n                     id: ids.rules,\n                     margin: 20,\n                     padding: 10,\n                     rows: [],\n                  },\n               },\n               // {\n               // \tcss: { 'background-color': '#fff' },\n               // \tcols: [\n               // \t\t{\n               // \t\t\tview: \"button\",\n               // \t\t\ticon: \"plus\",\n               // \t\t\ttype: \"iconButton\",\n               // \t\t\tlabel: labels.component.addNewRule,\n               // \t\t\twidth: 150,\n               // \t\t\tclick: () => {\n               // \t\t\t\tthis.addRule();\n               // \t\t\t}\n               // \t\t},\n               // \t\t{ fillspace: true }\n               // \t]\n               // },\n               {\n                  css: { \"background-color\": \"#fff\" },\n                  cols: [\n                     { fillspace: true },\n                     {\n                        view: \"button\",\n                        name: \"cancel\",\n                        value: L(\"Cancel\"),\n                        css: \"ab-cancel-button\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonCancel();\n                        },\n                     },\n                     {\n                        view: \"button\",\n                        css: \"webix_primary\",\n                        name: \"save\",\n                        label: L(\"Save\"),\n                        type: \"form\",\n                        autowidth: true,\n                        click: function () {\n                           _logic.buttonSave();\n                        },\n                     },\n                     { fillspace: true },\n                  ],\n               },\n            ],\n         },\n      };\n\n      // var _currentObject = null;\n      var _rules = [];\n\n      // for setting up UI\n      this.init = (options) => {\n         // register callbacks:\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         webix.ui(this.ui);\n      };\n\n      // internal business logic\n      var _logic = (this._logic = {\n         buttonCancel: function () {\n            $$(ids.component).hide();\n         },\n\n         buttonSave: () => {\n            var results = this.toSettings();\n\n            _logic.callbacks.onSave(results);\n            _logic.hide();\n         },\n\n         callbacks: {\n            onCancel: function () {\n               console.warn(\"NO onCancel()!\");\n            },\n            onSave: function (field) {\n               console.warn(\"NO onSave()!\");\n            },\n         },\n\n         hide: function () {\n            $$(ids.component).hide();\n         },\n\n         show: function () {\n            $$(ids.component).show();\n         },\n      });\n\n      this.show = _logic.show;\n      this.setValue = _logic.setValue;\n   }\n\n   /**\n    * @method addRule\n    * Instantiate a new Rule in our list.\n    * @param {obj} settings  The settings object from the Rule we created in .toSettings()\n    */\n   addRule(settings) {\n      var Rule = this.getRule();\n      if (!Rule) return;\n\n      this.listRules.push(Rule);\n\n      // if we have tried to create our component:\n      if (this.ids) {\n         // if our actually exists, then populate it:\n         var RulesUI = $$(this.ids.rules);\n         if (RulesUI) {\n            // make sure Rule.ui is created before calling .init()\n            Rule.component(this.App, this.idBase); // prepare the UI component\n            var viewId = RulesUI.addView(Rule.ui);\n\n            Rule.init({\n               onDelete: (deletedRule) => {\n                  $$(this.ids.rules).removeView(Rule.ids.component);\n\n                  var index = this.listRules.indexOf(deletedRule);\n                  if (index !== -1) {\n                     this.listRules.splice(index, 1);\n                  }\n               },\n            });\n         }\n      }\n\n      if (settings) {\n         Rule.fromSettings(settings);\n      }\n   }\n\n   /**\n    * @method fromSettings\n    * Create an initial set of default values based upon our settings object.\n    * @param {obj} settings  The settings object we created in .toSettings()\n    */\n   fromSettings(settings) {\n      // settings: [\n      //  { rule.settings },\n      //  { rule.settings }\n      // ]\n\n      // clear any existing Rules:\n      this.listRules.forEach((rule) => {\n         if (\n            this.ids &&\n            this.ids.rules &&\n            rule &&\n            rule.ids &&\n            rule.ids.component\n         ) {\n            $$(this.ids.rules).removeView(rule.ids.component);\n         }\n      });\n      this.listRules = [];\n\n      if (settings) {\n         settings.forEach((ruleSettings) => {\n            this.addRule(ruleSettings);\n         });\n      }\n   }\n\n   /**\n    * @method objectLoad\n    * A rule is based upon a Form that was working with an Object.\n    * .objectLoad() is how we specify which object we are working with.\n    *\n    * @param {ABObject} The object that will be used to evaluate the Rules\n    */\n   objectLoad(object) {\n      this.currentObject = object;\n\n      // tell each of our rules about our object\n      this.listRules.forEach((r) => {\n         r.objectLoad(object);\n      });\n   }\n\n   processPre(options) {\n      (this.listRules || [])\n         .filter((rule) => rule.isPreProcess == true)\n         .forEach((rule) => {\n            rule.processPre(options, options.data);\n         });\n   }\n\n   /**\n    * @method process\n    * Take the provided data and process each of our rules.\n    * @param {obj} options\n    * @return {promise}\n    */\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let listRules = (this.listRules || []).filter(\n            (rule) => !rule.isPreProcess\n         );\n\n         var numDone = 0;\n         var onDone = () => {\n            numDone++;\n            if (numDone >= listRules.length) {\n               resolve();\n            }\n         };\n\n         listRules.forEach((rule) => {\n            rule\n               .process(options)\n               .then(function () {\n                  onDone();\n               })\n               .catch((err) => {\n                  reject(err);\n               });\n         });\n\n         if (listRules.length == 0) {\n            resolve();\n         }\n      });\n   }\n\n   /**\n    * @method toSettings\n    * create a settings object to be persisted with the application.\n    * @return {array} of rule settings.\n    */\n   toSettings() {\n      var settings = [];\n      this.listRules.forEach((r) => {\n         settings.push(r.toSettings());\n      });\n      return settings;\n   }\n\n   getRule() {\n      console.error(\n         \"!!! ABViewRuleList.getRule() should be overridded by a child object.\"\n      );\n      return null;\n   }\n\n   formLoad(form) {\n      this.currentForm = form;\n      this.App = this.App || form.App;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * @return {Promise}\n    */\n   rulesReady() {\n      // This base class should be overwritten by any subclass that needs\n      // to prepare:\n      return Promise.resolve();\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      this.listRules.forEach((r) => {\n         r.qbFixAfterShow();\n      });\n   }\n};\n","//\n// ABViewRuleListFormRecordRules\n//\n// A component that is responsible for displaying the specific list of Record\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleUpdateExisting = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdate\");\nconst RoleInsertConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleInsertConnected\");\nconst RoleUpdateConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleUpdateConnected\");\nconst RoleRemoveConnected = require(\"./ruleActions/ABViewRuleActionFormRecordRuleRemoveConnected\");\n\nmodule.exports = class ABViewRuleListFormRecordRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.components.form.recordRules\",\n            headerDefault: \"*Record Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleUpdateExisting(\n            this.App,\n            `${this.idBase}_ruleActionUpdate`,\n            this.currentForm\n         ),\n         new RoleInsertConnected(\n            this.App,\n            `${this.idBase}_ruleActionInsert`,\n            this.currentForm\n         ),\n         new RoleUpdateConnected(\n            this.App,\n            `${this.idBase}_ruleActionUpdateConnected`,\n            this.currentForm\n         ),\n         new RoleRemoveConnected(\n            this.App,\n            `${this.idBase}_ruleActionRemoveConnected`,\n            this.currentForm\n         ),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      if (this.currentObject) {\n         Rule.objectLoad(this.currentObject);\n      }\n      return Rule;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our list of Rules is\n    * ready to work.\n    * @return {Promise}\n    */\n   async rulesReady() {\n      var allReady = (this.listRules || []).map((r) => r.isReady());\n      await Promise.all(allReady);\n   }\n};\n","//\n// ABViewRuleListFormSubmitRules\n//\n// A component that is responsible for displaying the specific list of Submit\n// Rules for a form.\n//\nconst ABViewRuleList = require(\"./ABViewRuleList\");\nconst ABViewRule = require(\"./ABViewRule\");\n\nconst RoleConfirmMessage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleConfirmMessage\");\nconst RuleExistPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleExistPage\");\nconst RuleParentPage = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleParentPage\");\nconst RuleClosePopup = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleClosePopup\");\nconst RuleWebsite = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleWebsite\");\nconst RuleEmail = require(\"./ruleActions/ABViewRuleActionFormSubmitRuleEmail\");\n\nmodule.exports = class ABViewRuleListFormSubmitRules extends ABViewRuleList {\n   /**\n    * @param {object} App\n    *      ?what is this?\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor() {\n      var settings = {\n         labels: {\n            header: \"ab.component.form.submitRule\",\n            headerDefault: \"*Submit Rules\",\n         },\n      };\n      super(settings);\n   }\n\n   // must return the actual Rule object.\n   getRule() {\n      var listActions = [\n         new RoleConfirmMessage(\n            this.App,\n            `${this.idBase}_ruleActionConfirmMessage`\n         ),\n         new RuleExistPage(this.App, `${this.idBase}_ruleActionExistPage`),\n         new RuleParentPage(this.App, `${this.idBase}_ruleActionParentPage`),\n         new RuleClosePopup(this.App, `${this.idBase}_ruleActionClosePopup`),\n         new RuleWebsite(this.App, `${this.idBase}_ruleActionWebsite`),\n         new RuleEmail(this.App, `${this.idBase}_ruleActionEmail`),\n      ];\n\n      var Rule = new ABViewRule(listActions);\n      Rule.objectLoad(this.currentObject);\n      Rule.formLoad(this.currentForm);\n      return Rule;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleInsertConnected\n//\n// An action that allows you to insert a connected object.\n//\n// NOTE: this is very similar to the Update Connected Rule, so we subclass that one and\n// modify it to only Insert data.\n//\n//\nconst UpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleInsertConnected extends (\n   UpdateConnected\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleInsertConnected\";\n      this.label = L(\"Insert Connected Object\");\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var Component = super.valueDisplayChooser(idBase);\n\n      // in our case, there are no additional QB conditions:\n      // so overwrite the .showQBIfNeeded() routine to not show anything:\n      Component._logic.showQBIfNeeded = function () {};\n\n      return Component;\n   }\n\n   /**\n    * queryBuilderDisplay\n    * override our parent .queryBuilderDisplay to not create a new .objectQB\n    * @return {null}\n    */\n   queryBuilderDisplay() {\n      return null;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      // var condition = null; // our lookup condition\n\n      // we are going to create a new instance of the connected object\n      // and make sure our .id is in the connected object's connectionField\n      // the server side will take care of making the proper relationship.\n\n      // first, create a new set of values:\n      var newObjectValues = {};\n\n      // update them according to our rules\n      this.processUpdateObject({}, newObjectValues);\n\n      if (newObjectValues.newRecords) {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues.newRecords.forEach((r) => {\n            r[connectedObjectField.columnName] = options.data.id;\n            // perform the update/insert\n            return model.create(r);\n         });\n      } else {\n         // now add our .id to the proper field in newObjectValues\n         let connectedObjectField = connObj.fieldByID(\n            connectionField.settings.linkColumn\n         );\n\n         if (!connectedObjectField)\n            return Promise.reject(\"No connected object field\");\n\n         newObjectValues[connectedObjectField.columnName] = options.data.id;\n\n         // perform the update/insert\n         return model.create(newObjectValues);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //\tvalueRules:{}\t\t// from ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      // we don't use .qpCondition\n      delete settings.qbCondition;\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleRemoveConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionFormRecordRuleUpdateConnected = require(\"./ABViewRuleActionFormRecordRuleUpdateConnected\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleRemoveConnected extends (\n   ABViewRuleActionFormRecordRuleUpdateConnected\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleRemoveConnected\";\n      this.label = L(\"Remove Connected Record\");\n\n      this.isUpdateValueDisabled = true; // disable update data of each fields\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      let selectedField = this.selectedField();\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         // get the model from the provided Form Obj:\n         let dc = options.form.datacollection;\n         if (!dc) return resolve();\n\n         let model = dc.model;\n         if (!model) return resolve();\n\n         let updatedVals = {};\n         updatedVals[selectedField.columnName] = \"\";\n\n         model\n            .update(options.data.id, updatedVals)\n            .then(resolve)\n            .catch((err) => {\n               this.AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdate.process(): update error:\",\n                  data: options.data,\n               });\n               reject(err);\n            });\n      });\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdate\n//\n// An action that allows you to update fields on an object that was currently\n// Added/Updated.\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdate extends (\n   ABViewRuleActionObjectUpdater\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n   }\n\n   get isPreProcess() {\n      return true;\n   }\n};\n","//\n// ABViewRuleActionFormRecordRuleUpdateConnected\n//\n// An action that allows you to update fields on an object that is connected to\n// the current object we just Added/Updated\n//\n//\nconst ABViewRuleActionObjectUpdater = require(\"./ABViewRuleActionObjectUpdater\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ObjectQueryBuilder = require(\"../ABViewQueryBuilderObjectFieldConditions\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormRecordRuleUpdateConnected extends (\n   ABViewRuleActionObjectUpdater\n) {\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdateConnected\";\n      this.label = L(\"Update Connected Record\");\n\n      this.baseObject = null; // the object the current form is working with.\n      // Use this to find our connected fields.\n\n      this.selectedFieldID = null; // the selected field ID in the .baseObject that is\n      // used for updating.  This should be one of the connection Fields.\n\n      this.fieldDropList = []; // the list of fields to offer based upon the current .baseObject.\n\n      this.objectQB = null; // the QueryBuilder used for offering conditions based upon our connected Object.\n      this.qbCondition = null; // the QB condition entered for selecting which remote object.\n   }\n\n   // field\n\n   /**\n    * objectLoad\n    * save the current object this Action is associated with.\n    * in the case of the UpdateConnected Action, assigning us\n    * this object only impacts the queryObject.\n    *\n    * The Updater form will use another object we select in\n    * the form dropdown.\n    *\n    * @param {object} object\n    *\n    */\n   objectLoad(object) {\n      this.queryObjectLoad(object);\n      this.baseObject = object;\n\n      // now build our fieldDropList for the select\n      var connectionFields = this.connectedFieldList();\n      connectionFields.forEach((cf) => {\n         this.fieldDropList.push({\n            id: cf.id,\n            value: cf.label,\n         });\n      });\n   }\n\n   /**\n    * connectedFieldList\n    * return the fields in our .baseObject that are connections to other objects.\n    * @return {array} of {ABField}\n    */\n   connectedFieldList() {\n      var connectKey = ABFieldConnect.defaults().key;\n      if (this.baseObject && this.baseObject.fields) {\n         return this.baseObject.fields((f) => {\n            return f.key == connectKey;\n         });\n      } else {\n         return [];\n      }\n   }\n\n   /**\n    * connectedObject\n    * return the ABObject associated with the selected connection field.\n    * @return {ABObject}\n    */\n   connectedObject() {\n      if (this.selectedFieldID) {\n         var selectedField = this.selectedField();\n         if (selectedField) {\n            return selectedField.datasourceLink;\n         }\n      }\n\n      return null;\n   }\n\n   /**\n    * selectedField\n    * return the selected {ABField} object.\n    * @return {ABField}\n    */\n   selectedField() {\n      return this.connectedFieldList().filter((f) => {\n         return f.id == this.selectedFieldID;\n      })[0];\n   }\n\n   /**\n    * valueDisplayComponent\n    * Return an ABView to display our values form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayComponent(idBase) {\n      if (this._uiChooser == null) {\n         this._uiChooser = this.valueDisplayChooser(idBase);\n      }\n\n      return this._uiChooser;\n   }\n\n   /**\n    * valueDisplayChooser\n    * Our Values Display is a Select Box with a choice of connected fields.\n    * Once a field is chosen, then we display the Updater form.\n    * @param {string}  idBase  a unique webix id to base our sub components on.\n    */\n   valueDisplayChooser(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         component: myUnique(\"updateConnectedValues\"),\n         updateForm: myUnique(\"updateChooser\"),\n         selectConnectedField: myUnique(\"updateSelect\"),\n         updateFieldsForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         id: ids.component,\n         view: \"layout\",\n         css: \"ab-component-form-rule\",\n         rows: [\n            {\n               id: ids.selectConnectedField,\n               view: \"richselect\",\n               label: L(\"Select which connected object to update.\"),\n               labelWidth: 300,\n               value: this.selectedField,\n               options: this.fieldDropList,\n               on: {\n                  onChange: (newVal, oldVal) => {\n                     _logic.selectAction(newVal, oldVal);\n                  },\n               },\n            },\n         ],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n\n         // make sure our currently selected field is selected.\n         if (this.selectedFieldID) {\n            var select = $$(ids.selectConnectedField);\n            if (select) {\n               select.setValue(this.selectedFieldID);\n            }\n         }\n      };\n\n      var _logic = (this._logic = {\n         addDisplay: (view) => {\n            $$(ids.component).addView(view);\n         },\n\n         // removePreviousDisplays\n         // remove the previous components that reflected the conditions and\n         // update values of the previously selected field.\n         removePreviousDisplays: () => {\n            var allViews = $$(ids.component).getChildViews();\n            var cloneAllViews = [];\n            allViews.forEach((v) => {\n               cloneAllViews.push(v);\n            });\n            cloneAllViews.forEach((v) => {\n               // don't remove the field picker\n               if (v.config.id != ids.selectConnectedField) {\n                  $$(ids.component).removeView(v);\n               }\n            });\n         },\n\n         selectAction: (newVal, oldVal) => {\n            _logic.removePreviousDisplays(); // of the Query Builder and Update form for old selection:\n\n            this.selectedFieldID = newVal;\n            var connectedObject = this.connectedObject();\n\n            if (connectedObject) {\n               // it is the remote object that we are allowed to Update fields on.\n               this.updateObjectLoad(connectedObject);\n               ///// NOTE: important to call super.valueDisplayComponent()\n               this.updateComponent = super.valueDisplayComponent(\n                  ids.updateFieldsForm\n               ); // parent obj\n\n               _logic.showQBIfNeeded();\n\n               // create a new blank update form\n               _logic.addDisplay(this.updateComponent.ui);\n               this.updateComponent.init();\n\n               if (this.isUpdateValueDisabled) {\n                  let $updateForm = $$(this.updateComponent.ui.id);\n                  if ($updateForm) {\n                     $updateForm.disable();\n                     $updateForm.hide();\n                  }\n               }\n            } else {\n               this.AB.notify.builder(new Error(\"No connectedObject found.\"), {\n                  fieldID: this.selectedFieldID,\n               });\n            }\n         },\n\n         showQBIfNeeded: () => {\n            //// NOTE: we decided to go ahead and display the QB in ALL situations to give\n            //// the user the ability to set a condition on the update even if the field\n            //// is only a one to one.\n            //// If we want to remove the filter in case of a \"one\" linkType, then put\n            //// these conditions back in:\n\n            // var field = this.selectedField();\n\n            // // we don't need the QB if the destination object link type if 'one'.\n            // // there will only be one to get back, so no conditions needed.\n            // if (field.settings.linkType != 'one') {\n\n            var qbComponent = this.queryBuilderDisplay();\n\n            qbComponent.component(this.App, this.idBase);\n            _logic.addDisplay(qbComponent.ui);\n            qbComponent.init({});\n\n            // }\n         },\n\n         fromSettings: (settings) => {\n            // // first time through, be sure to set the connectedObject first\n            // this.selectedFieldID = settings.selectedFieldID;\n            // var connectedObject = this.connectedObject();\n\n            // this triggers the update of the display, creation of QB,\n            $$(ids.selectConnectedField).setValue(settings.selectedFieldID);\n\n            if (this.objectQB) {\n               this.objectQB.setValue(this.qbCondition);\n            }\n\n            if (this.updateComponent) {\n               this.updateComponent.fromSettings(settings);\n            }\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(rowSettings);\n               }\n            });\n\n            return settings;\n         },\n      });\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   /**\n    * queryBuilderDisplay\n    * returns our Query Builder object used in our display.\n    * It is called by the .showQBIfNeeded() method.\n    * @return {ABViewQueryBuilderObjectFieldConditions}\n    */\n   queryBuilderDisplay() {\n      if (!this.objectQB) {\n         this.objectQB = new ObjectQueryBuilder(\n            L(\"How to choose which object:\")\n         );\n\n         var connObj = this.connectedObject();\n         if (connObj) this.objectQB.objectLoad(connObj);\n      }\n      return this.objectQB;\n   }\n\n   /**\n    * process\n    * gets called when a form is submitted and the data passes the Query Builder Rules.\n    * @param {obj} options\n    *\t\t\t\toptions.data : {obj} the key=>value of the data just entered by the form\n    *\t\t\t\toptions.form : {ABViewForm} the Form object that is processing this rule\n    * @return {Promise}\n    */\n   process(options) {\n      this._formData = options.data;\n\n      // get connected object\n      var connObj = this.connectedObject();\n      var model = connObj.model();\n\n      var connectionField = this.selectedField();\n\n      var condition = null; // our lookup condition\n\n      // modifyCondition\n      // async fn() to fill out what the condition should be for limiting the remote\n      // objects to values in use by the current object.\n      // @param {fn} cb  the callback to use when we are finished:\n      //\t\t\t\t\tcb(err, )\n      var modifyCondition = (cb) => {\n         // So, let's get a copy of our current data, with all it's connected items\n         // attached.\n         var thisModel = this.baseObject.model();\n         thisModel\n            .findConnected(connectionField.columnName, options.data)\n            .then((items) => {\n               // if we didn't get any results, then simply return\n               // NOTE: this will leave condition == null and cancel this update.\n               if (!items || items.length == 0) {\n                  cb();\n                  return;\n               }\n\n               // then use these to limit the connected data of our Action:\n\n               // get all the ids\n               var ids = items.map((i) => {\n                  return i.id;\n               });\n\n               // resulting condition: { id in [listIDs]} AND { QB Condition }\n               condition = {\n                  glue: \"and\",\n                  rules: [\n                     {\n                        key: `${connObj.tableName}.${connObj.PK()}`,\n                        rule: \"in\",\n                        value: ids,\n                     },\n                  ],\n               };\n\n               // check to make sure qbCondition actually has a condition before adding it\n               // to our condition:\n               if (Object.keys(this.qbCondition).length > 0) {\n                  condition.rules.push(this.qbCondition);\n               }\n\n               cb();\n            })\n            .catch(cb);\n      };\n\n      // .process() returns a Promise\n      return new Promise((resolve, reject) => {\n         // upateIt()\n         // updates a given item with our changes.\n         // @param {obj} item  the item to update\n         // @param {fn}  cb    a callback function when update is complete.\n         var updateIt = (item, cb) => {\n            let isUpdated = this.processUpdateObject({}, item);\n            if (!isUpdated) {\n               cb();\n            } else {\n               model\n                  .update(item.id, item)\n                  .then(() => {\n                     cb();\n                  })\n                  .catch((err) => {\n                     this.AB.notify.developer(err, {\n                        message:\n                           \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.process(): update error:\",\n                        data: options.data,\n                     });\n                     cb(err);\n                  });\n            }\n         };\n\n         // now figure out which elements belong to this object\n         // done in modifyCondition()\n         modifyCondition((err) => {\n            if (err) {\n               AB.notify.developer(err, {\n                  message:\n                     \"!!! ABViewRuleActionFormRecordRuleUpdateConnected.modifyCondition: error:\",\n                  data: options.data,\n               });\n               reject(err);\n               return;\n            }\n\n            if (condition === null) {\n               // this is the case where we didn't have the proper data to complete our\n               // update.  So let's just fail gracefully, and continue on.\n\n               // QUESTION: is this the right way to handle it?\n               resolve();\n            } else {\n               // get all the entries that match our condition:\n               model\n                  .findAll({ where: condition })\n                  .then((list) => {\n                     var done = 0;\n\n                     // list : {data: Array(4), total_count: 4, pos: null, offset: null, limit: null}\n                     if (list && list.data) {\n                        list = list.data;\n                     }\n\n                     // for each entry, update it with our values:\n                     list.forEach((item) => {\n                        updateIt(item, (err) => {\n                           if (err) {\n                              return reject(err);\n                           }\n                           done++;\n                           if (done >= list.length) {\n                              // now they are all updated, so continue.\n                              resolve();\n                           }\n                        });\n                     });\n\n                     // if there were no entries to update -> continue\n                     if (list.length == 0) {\n                        resolve();\n                     }\n                  })\n                  .catch(reject);\n            }\n         }); // end modifyCondition()\n      }); // end Promise()\n   }\n\n   /**\n    * fromSettings\n    * initialize this Action = require(a given set of setting values.\n    * @param {obj} settings  the settings {} returned = require(toSettings()\n    */\n   fromSettings(settings) {\n      settings = settings || {};\n\n      this.selectedFieldID = settings.selectedFieldID || null;\n      this.qbCondition = settings.qbCondition || {};\n\n      super.fromSettings(settings);\n\n      // if we have a display component, then populate it:\n      if (this._uiChooser) {\n         this._logic.fromSettings(settings);\n      }\n   }\n\n   /**\n    * toSettings\n    * return an object that represents the current state of this Action\n    * @return {obj}\n    */\n   toSettings() {\n      // settings: {\n      // \tselectedFieldID: 'guid',\n      //  qbCondition: [],\n      //\tvalueRules:{}\t\t// = require(ABViewRuleActionObjectUpdater\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.selectedFieldID = this.selectedFieldID;\n\n      var qbCond = null;\n      if (this.objectQB) {\n         qbCond = this.objectQB.getValue();\n         if (Array.isArray(qbCond)) {\n            qbCond = qbCond[0];\n         }\n\n         // FIX: make sure qbCond root element has a 'glue'\n         if (qbCond) {\n            qbCond.glue = qbCond?.glue || \"and\";\n         }\n      }\n      settings.qbCondition = qbCond;\n\n      // if we have a display component, then request our details = require(it:\n      if (this._uiChooser) {\n         settings.valueRules = this._logic.toSettings();\n      }\n\n      return settings;\n   }\n\n   // NOTE: Querybuilder v5.2 has a bug where it won't display the [and/or]\n   // choosers properly if it hasn't been shown before the .setValue() call.\n   // so this work around allows us to refresh the display after the .show()\n   // on the popup.\n   // When they've fixed the bug, we'll remove this workaround:\n   qbFixAfterShow() {\n      if (this.objectQB) {\n         this.objectQB.setValue(this.qbCondition);\n      }\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleClosePopup\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleClosePopup extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleClosePopup\";\n      this.label = L(\"Close the current popup\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"layout\",\n            rows: [],\n         },\n\n         init: () => {},\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         let form = options.form;\n         if (!form) return;\n\n         let popup = form.pageParent((p) => p.settings.type == \"popup\");\n         if (!popup) return;\n\n         // get the dom id of page. it is dom id that is generated in ABLiveTool.js\n         // let pageDomId = [\"ab_live_page\", popup.application.id, popup.id].join(\n         //    \"_\"\n         // );\n\n         // close current popup\n         let $popup = $$(popup.id);\n         if ($popup) $popup.hide();\n\n         // this clears the UI's record of the current form.\n         options.form.changePage(null);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleConfirmMessage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleConfirmMessage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleConfirmMessage\";\n      this.label = L(\"Show a confirmation message\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.message,\n            view: \"textarea\",\n            // label: this.labels.component.message,\n            // labelWidth: this.AB.UISettings.config().labelWidthLarge,\n            height: 130,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.message).setValue(valueRules.message || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               message: $$(ids.message).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var confirmMessage = this.valueRules.message || \"\";\n\n         webix.message({\n            text: confirmMessage,\n            type: \"info\",\n         });\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\nconst ABFieldConnect = require(\"../../platform/dataFields/ABFieldConnect\");\nconst ABFieldEmail = require(\"../../platform/dataFields/ABFieldEmail\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleEmail extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleEmail\";\n      this.label = L(\"Send a custom email\");\n\n      this.queryObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.queryObject) {\n   //       this.queryObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         form: `${idBase}_form`,\n         popup: `${idBase}_popup`,\n         list: `${idBase}_fieldList`,\n         toEmailsContainer: `${idBase}_toEmailsContainer`,\n         toEmails: `${idBase}_toEmails`,\n         message: `${idBase}_message`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.form,\n            view: \"form\",\n            width: 450,\n            elementsConfig: {\n               labelPosition: \"top\",\n               labelWidth: 100,\n            },\n            cols: [\n               // email form\n               {\n                  width: 330,\n                  rows: [\n                     {\n                        view: \"text\",\n                        name: \"fromName\",\n                        label: L(\"From Name\"),\n                     },\n                     {\n                        view: \"text\",\n                        name: \"fromEmail\",\n                        label: L(\"From Email\"),\n                        validate: webix.rules.isEmail,\n                        on: {\n                           onChange: function (newVal, oldVal) {\n                              if (this.getValue() && !this.validate()) {\n                                 $$(ids.form).markInvalid(\n                                    \"fromEmail\",\n                                    \"Email is invalid\"\n                                 );\n                              } else {\n                                 $$(ids.form).markInvalid(\"fromEmail\", false);\n                              }\n                           },\n                        },\n                     },\n                     {\n                        id: ids.toEmailsContainer,\n                        view: \"forminput\",\n                        name: \"toEmails\",\n                        label: L(\"Send\"),\n                        css: \"ab-rich-text\",\n                        width: 320,\n                        body: {\n                           width: 320,\n                           rows: [\n                              {\n                                 height: 25,\n                              },\n                              {\n                                 id: ids.toEmails,\n                                 width: 320,\n                                 view: \"layout\",\n                                 rows: [],\n                              },\n                              {\n                                 view: \"button\",\n                                 css: \"webix_primary\",\n                                 type: \"icon\",\n                                 icon: \"fa fa-plus\",\n                                 label: L(\"Add a recipient\"),\n                                 width: 150,\n                                 click: () => {\n                                    _logic.toEmailAdd();\n                                 },\n                              },\n                           ],\n                        },\n                     },\n                     {\n                        view: \"text\",\n                        name: \"subject\",\n                        label: L(\"Subject\"),\n                     },\n                     {\n                        view: \"textarea\",\n                        id: ids.message,\n                        name: \"message\",\n                        label: L(\"Message\"),\n                        width: 320,\n                        height: 400,\n                     },\n                     // {\n                     // \tview: 'label',\n                     // \tlabel: 'Message',\n                     // \tcss: { 'font-weight': 'bold' }\n                     // },\n                     // {\n                     // \tview: 'forminput',\n                     // \tid: ids.message,\n                     // \tname: 'message',\n                     // \tlabel: 'Message',\n                     // \tcss: \"ab-rich-text\",\n                     // \twidth: 320,\n                     // \theight: 400,\n                     // \tbody: {\n                     // \t\tview: 'tinymce-editor'\n                     // \t}\n                     // }\n                  ],\n               },\n               // field list\n               {\n                  rows: [\n                     {\n                        view: \"template\",\n                        type: \"header\",\n                        template: \"Fields\",\n                     },\n                     {\n                        id: ids.list,\n                        view: \"list\",\n                        width: 120,\n                        css: { \"background-color\": \"#fff !important;\" },\n                        template: function (obj, common) {\n                           return _logic.fieldTemplate(obj, common);\n                        },\n                        on: {\n                           onItemClick: function (id, e, node) {\n                              var component = this.getItem(id);\n\n                              _logic.enterField(component);\n                           },\n                        },\n                     },\n                  ],\n               },\n            ],\n         },\n\n         init: () => {\n            if (this.queryObject) {\n               $$(ids.list).parse(\n                  this.queryObject.fields((f) => f.fieldUseAsLabel())\n               );\n               $$(ids.list).refresh();\n            }\n\n            _logic.refreshUI();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.form).setValues(valueRules);\n\n            // Populate recipients\n            var recipients = valueRules.toEmails || [];\n            recipients.forEach((r) => {\n               _logic.toEmailAdd({\n                  type: r.type, // 'to', 'cc' or 'bcc'\n                  emailType: r.emailType, // 'email' or 'field'\n                  value: r.value,\n               });\n            });\n\n            _logic.refreshUI();\n         },\n\n         toSettings: () => {\n            var formVals = $$(ids.form).getValues() || {};\n\n            // Get recipients\n            var recipients = [];\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((e) => {\n                  // var type = e.queryView({ name: 'type' }).getValue();\n                  var type = \"to\"; // TODO\n                  var emailType = e.queryView({ name: \"emailType\" }).getValue();\n                  var value = e.queryView({ name: emailType }).getValue();\n\n                  recipients.push({\n                     type: type,\n                     emailType: emailType,\n                     value: value,\n                  });\n               });\n\n            // return the confirm message\n            return {\n               fromName: formVals[\"fromName\"],\n               fromEmail: formVals[\"fromEmail\"],\n               toEmails: recipients,\n               subject: formVals[\"subject\"],\n               message: formVals[\"message\"],\n            };\n         },\n\n         /**\n          * @method toEmailTemplate\n          *\n          * @param settings - {\n          * \t\t\ttype: string, // 'to', 'cc' or 'bcc'\n          * \t\t\temailType: string, // 'email' or 'field'\n          * \t\t\tvalue: string\n          * }\n          */\n         toEmailTemplate: (settings) => {\n            settings = settings || {};\n\n            return {\n               width: 320,\n               cols: [\n                  // {\n                  // \tview: 'richselect',\n                  // \tname: 'type',\n                  // \tvalue: settings.type || 'to',\n                  // \twidth: 80,\n                  // \toptions: [\n                  // \t\t{ id: 'to', value: \"To:\" },\n                  // \t\t// EmailNotification does not support cc, bcc and reply.\n                  // \t\t// { id: 'cc', value: \"Cc:\" },\n                  // \t\t// { id: 'bcc', value: \"Bcc:\" },\n                  // \t\t// { id: 'reply', value: \"Reply-To:\" }\n                  // \t]\n                  // },\n                  {\n                     view: \"richselect\",\n                     name: \"emailType\",\n                     value: settings.emailType || \"email\",\n                     width: 150,\n                     options: [\n                        {\n                           id: \"email\",\n                           value: L(\"A custom email address\"),\n                        },\n                        { id: \"field\", value: L(\"An email field\") },\n                        { id: \"query\", value: L(\"From query\") },\n                     ],\n                     on: {\n                        onChange: function (newVal, oldVal) {\n                           _logic.emailTypeChange(newVal, this);\n                        },\n                     },\n                  },\n                  {\n                     width: 150,\n                     name: \"emailValue\",\n                     visibleBatch: settings.emailType || \"email\",\n                     cols: [\n                        {\n                           view: \"text\",\n                           name: \"email\",\n                           batch: \"email\",\n                           value:\n                              settings.emailType == \"email\"\n                                 ? settings.value\n                                 : \"\",\n                           validate: webix.rules.isEmail,\n                           width: 150,\n                           on: {\n                              onChange: function (newVal, oldVal) {\n                                 _logic.toEmailValidate();\n                              },\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"field\",\n                           batch: \"field\",\n                           value:\n                              settings.emailType == \"field\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.emailFieldOptions(),\n                           },\n                        },\n                        {\n                           view: \"richselect\",\n                           name: \"query\",\n                           batch: \"query\",\n                           value:\n                              settings.emailType == \"query\"\n                                 ? settings.value\n                                 : \"\",\n                           width: 150,\n                           suggest: {\n                              on: {\n                                 onBeforeShow: function () {\n                                    this.define(\"width\", 300);\n                                    this.resize();\n                                 },\n                              },\n                              data: _logic.queryOptions(),\n                           },\n                        },\n                     ],\n                  },\n                  {\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     type: \"icon\",\n                     icon: \"fa fa-trash-o\",\n                     width: 32,\n                     click: function () {\n                        var $toView = this.getParentView();\n\n                        _logic.toEmailRemove($toView);\n                     },\n                  },\n               ],\n            };\n         },\n\n         toEmailAdd: (settings) => {\n            var count = $$(ids.toEmails).getChildViews().length;\n\n            $$(ids.toEmails).addView(_logic.toEmailTemplate(settings), count);\n\n            _logic.refreshUI();\n         },\n\n         emailTypeChange: (type, $select) => {\n            var $recipient = $select.getParentView();\n            var $emailValue = $recipient.queryView({ name: \"emailValue\" });\n\n            switch (type) {\n               case \"field\":\n                  $emailValue.showBatch(\"field\");\n                  break;\n               case \"query\":\n                  $emailValue.showBatch(\"query\");\n                  break;\n               default:\n                  $emailValue.showBatch(\"email\");\n                  break;\n            }\n\n            $$(ids.toEmailsContainer).adjust();\n         },\n\n         toEmailRemove: ($toView) => {\n            $$(ids.toEmails).removeView($toView);\n\n            _logic.refreshUI();\n         },\n\n         toEmailValidate: () => {\n            var isAllValid = true;\n\n            $$(ids.toEmails)\n               .getChildViews()\n               .forEach((v) => {\n                  let emailText = v.queryView({ name: \"email\" });\n                  if (emailText.getValue() && !emailText.validate()) {\n                     isAllValid = false;\n                  }\n               });\n\n            if (isAllValid) $$(ids.form).markInvalid(\"toEmails\", false);\n            else $$(ids.form).markInvalid(\"toEmails\", \"Email is invalid\");\n         },\n\n         fieldTemplate: (field, common) => {\n            return `<i class='fa fa-${field.icon} webix_icon_btn' aria-hidden='true'></i> ${field.label}`;\n         },\n\n         emailFieldOptions: () => {\n            var existsFieldIds = [];\n            var options = [];\n\n            var fnAddOptions = (currObj, fLink) => {\n               var emailFields = currObj\n                  .fields((f) => f instanceof ABFieldEmail)\n                  .map((f) => {\n                     var optId = \"\",\n                        optLabel = \"\";\n\n                     if (fLink) {\n                        optId = `${fLink.id}|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label} (${fLink.label})`;\n                     } else {\n                        optId = `|${f.urlPointer()}`;\n                        optLabel = `${currObj.label}.${f.label}`;\n                     }\n\n                     return {\n                        id: optId, // linkFieldId|fieldUrl\n                        value: optLabel,\n                     };\n                  });\n\n               // TODO: prevent duplicate\n\n               options = options.concat(emailFields);\n            };\n\n            fnAddOptions(this.queryObject);\n\n            this.queryObject.connectFields().forEach((f) => {\n               // prevent looping\n               if (\n                  // - prevent include connect objects of the base object\n                  // f.datasourceLink.id == this.queryObject.id ||\n                  // - check duplicate include objects\n                  existsFieldIds.indexOf(f.id) > -1\n               )\n                  return;\n\n               // store\n               existsFieldIds.push(f.id);\n\n               // add email fields of link object\n               fnAddOptions(f.datasourceLink, f);\n            });\n\n            return options;\n         },\n\n         queryOptions: () => {\n            var options = [];\n\n            // get data collections who is query and contains email field\n            let dcQueries = this.currentForm.AB.datacollections((dc) => {\n               let obj = dc.datasource;\n               return (\n                  dc.settings.isQuery &&\n                  obj &&\n                  obj.fields((f) => f.key == \"email\").length > 0\n               );\n            });\n\n            dcQueries.forEach((dv) => {\n               if (dv.datasource) {\n                  dv.datasource\n                     .fields((f) => f.key == \"email\")\n                     .forEach((f) => {\n                        options.push({\n                           id: `${dv.id}|${f.id}`, // ABDatacollectionID|fieldID\n                           value: `${dv.label}.${f.label}`,\n                        });\n                     });\n               }\n            });\n\n            return options;\n         },\n\n         enterField: (field) => {\n            var focusElem = webix.UIManager.getFocus();\n            var val = \"\";\n\n            if (\n               focusElem.config.view != \"text\" ||\n               focusElem.config.view != \"textarea\"\n            ) {\n               if (focusElem.getValue) val = focusElem.getValue();\n\n               if (focusElem.setValue)\n                  focusElem.setValue(`${val}${field.label}`);\n\n               webix.UIManager.setFocus(focusElem);\n            }\n         },\n\n         refreshUI: () => {\n            $$(ids.toEmailsContainer).adjust();\n            $$(ids.message).adjust();\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options - {\n   //\t\t\t\t\t\t\tdata: {obj} rowData,\n   //\t\t\t\t\t\t\tform: {ABViewForm}\n   //\t\t\t\t\t\t}\n   process(options) {\n      // validate sender's email is invalid\n      if (!webix.rules.isEmail(this.valueRules.fromEmail)) {\n         return Promise.resolve();\n      }\n\n      var recipients = [];\n\n      return Promise.resolve()\n         .then(() => {\n            // Pull recipients data\n            return new Promise((resolve, reject) => {\n               var tasks = [];\n\n               this.valueRules.toEmails.forEach((rec) => {\n                  tasks.push(\n                     new Promise((next, err) => {\n                        // TODO: Cc, Bcc\n\n                        // field\n                        if (rec.emailType == \"field\") {\n                           var emailFieldUrl = rec.value.split(\"|\")[1]; // linkFieldId|emailFieldUrl\n                           var emailField =\n                              this.queryObject.application.urlResolve(\n                                 emailFieldUrl\n                              );\n                           if (emailField) {\n                              // Pull email source object\n                              if (emailField.object.id == this.queryObject.id) {\n                                 var emailData =\n                                    options.data[emailField.columnName];\n                                 if (emailData)\n                                    recipients = recipients.concat(emailData);\n                              }\n                              // Pull emails from link object\n                              else {\n                                 let linkFieldId = rec.value.split(\"|\")[0];\n                                 let linkFields = this.queryObject.fields(\n                                    (f) =>\n                                       f instanceof ABFieldConnect &&\n                                       f.id == linkFieldId\n                                 );\n                                 linkFields.forEach((f) => {\n                                    var linkedData =\n                                       options.data[f.relationName()] || [];\n\n                                    // convert to an array\n                                    if (\n                                       linkedData &&\n                                       !Array.isArray(linkedData)\n                                    )\n                                       linkedData = [linkedData];\n\n                                    // pull email address\n                                    linkedData.forEach((d) => {\n                                       var email = d[emailField.columnName];\n                                       if (email)\n                                          recipients = recipients.concat(email);\n                                    });\n                                 });\n                              }\n\n                              next();\n                           } else {\n                              next();\n                           }\n                        }\n\n                        // query\n                        else if (rec.emailType == \"query\") {\n                           var dvIdAndFieldId = rec.value; // ABDatacollectionId|fieldId\n                           if (!dvIdAndFieldId) return next();\n\n                           var dcId = dvIdAndFieldId.split(\"|\")[0];\n                           var fieldId = dvIdAndFieldId.split(\"|\")[1];\n\n                           var dcQuery =\n                              this.currentForm.AB.datacollectionByID(dcId);\n                           if (!dcQuery) return next();\n\n                           var field = dcQuery.datasource.fieldByID(fieldId);\n                           if (!field) return next();\n\n                           // get data of data collection\n                           dcQuery.getData().forEach((data) => {\n                              var emailAddr = data[field.columnName];\n                              if (emailAddr) recipients.push(emailAddr);\n                           });\n\n                           next();\n                        }\n\n                        // email\n                        else {\n                           recipients.push(rec.value);\n                           next();\n                        }\n                     })\n                  );\n               });\n\n               Promise.all(tasks).catch(reject).then(resolve);\n            });\n         })\n         .then(() => {\n            // send out\n            return new Promise((resolve, reject) => {\n               recipients = this.AB.uniq(recipients).filter((r) => r);\n\n               if (!recipients || recipients.length < 1) return resolve();\n\n               // replace form value to template\n               var fromName = this.valueRules.fromName,\n                  subject = this.valueRules.subject,\n                  message = this.valueRules.message;\n\n               this.queryObject\n                  .fields((f) => f.fieldUseAsLabel())\n                  .forEach((f) => {\n                     var template = new RegExp(`{${f.label}}`, \"g\"),\n                        data = f.format(options.data);\n\n                     fromName = fromName.replace(template, data);\n                     subject = subject.replace(template, data);\n                     message = message.replace(template, data);\n                  });\n\n               // send a email\n               this.AB.Network.post({\n                  url: \"/app_builder/email\",\n                  params: {\n                     fromName: fromName,\n                     fromEmail: this.valueRules.fromEmail,\n                     subject: subject,\n                     message: message,\n                     recipients: this.AB.uniq(recipients),\n                  },\n               })\n                  .then(() => {\n                     resolve();\n                  })\n                  .catch(reject);\n            });\n         });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleExistPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleExistPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleExistPage\";\n      this.label = L(\"Redirect to an existing page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         pagesAndTabs: `${idBase}_PagesAndTabs`,\n      };\n\n      this._ui = {\n         ui: { id: ids.pagesAndTabs, view: \"richselect\", options: [] },\n\n         init: () => {\n            _logic.populateOptions();\n         },\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         populateOptions: () => {\n            // Pull page list to \"Redirect to an existing page\"\n            var _pageOptions = [];\n\n            /**\n             * @param pageOrTab\t{Object}\t- ABViewPage or ABViewTab\n             * @param indent\t{integer}\n             * @param type\t\t{string}\t- 'page' or 'tab'\n             * @param pageId\t{uuid}\t\t- the id of page (only tab)\n             */\n            var addPage = (pageOrTab, indent, type, pageId) => {\n               indent = indent || \"\";\n\n               let icon = \"fa fa-file-o\";\n               if (type == \"tab\") icon = \"fa fa-window-maximize\";\n\n               let pageParent = pageOrTab.pageParent();\n\n               _pageOptions.push({\n                  id: pageOrTab.id,\n                  value: indent + pageOrTab.label,\n                  type: type,\n                  pageId: pageParent ? pageParent.id : null,\n\n                  icon: icon,\n               });\n\n               if (type == \"page\" || type == \"tab\") {\n                  if (pageOrTab.pages) {\n                     pageOrTab.pages().forEach(function (p) {\n                        addPage(p, indent + \"-\", \"page\");\n                     });\n                  }\n\n                  // add 'tab' options\n                  if (pageOrTab.views) {\n                     pageOrTab\n                        .views((v) => v.key == \"tab\")\n                        .forEach((tab) => {\n                           // add 'tab view' to options\n                           tab.views().forEach((tabView) => {\n                              addPage(\n                                 tabView,\n                                 indent + \"-\",\n                                 \"tab\",\n                                 pageOrTab.id\n                              );\n                           });\n                        });\n                  }\n               }\n            };\n\n            addPage(this.currentForm.pageRoot(), \"\", \"page\");\n\n            $$(ids.pagesAndTabs).define(\"options\", _pageOptions);\n            $$(ids.pagesAndTabs).refresh();\n         },\n\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.pagesAndTabs).setValue(\n               valueRules.tabId || valueRules.pageId || \"\"\n            );\n         },\n\n         toSettings: () => {\n            var result = {};\n\n            var selectedId = $$(ids.pagesAndTabs).getValue();\n            var selectedItem = $$(ids.pagesAndTabs)\n               .getPopup()\n               .getList()\n               .config.data.filter((opt) => opt.id == selectedId)[0];\n            if (selectedItem) {\n               if (selectedItem.type == \"tab\") {\n                  // store page id and tab id\n                  result = {\n                     pageId: selectedItem.pageId,\n                     tabId: selectedId,\n                  };\n               } else {\n                  // store only page id\n                  result = {\n                     pageId: selectedId,\n                  };\n               }\n            }\n\n            // return the confirm message\n            return result;\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect page\n         if (this.valueRules.pageId) {\n            options.form.changePage(this.valueRules.pageId);\n\n            if (this.valueRules.tabId) {\n               var curPage = options.form.application.pages(\n                  (p) => p.id == this.valueRules.pageId,\n                  true\n               )[0];\n               if (!curPage) return resolve();\n\n               // switch tab\n               var tabView = curPage.views(\n                  (v) => v.id == this.valueRules.tabId,\n                  true\n               )[0];\n               if (!tabView) return resolve();\n\n               var tab = tabView.parent;\n               if (!tab) return resolve();\n\n               var toggleParent = (element) => {\n                  if (!element.parent) return false;\n                  var parentElem = element.parent;\n                  if (!parentElem.parent) return false;\n                  parentElem.parent.emit(\"changeTab\", parentElem.id);\n                  toggleParent(parentElem.parent);\n               };\n\n               toggleParent(tab);\n               let showIt = setInterval(function () {\n                  if ($$(tabView.id) && $$(tabView.id).isVisible()) {\n                     clearInterval(showIt);\n                     return;\n                  }\n                  tab.emit(\"changeTab\", tabView.id);\n               }, 100);\n            }\n         }\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleParentPage\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleParentPage extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleParentPage\";\n      this.label = L(\"Redirect to the parent page\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      this._ui = {\n         ui: {\n            view: \"label\",\n            label: this.label,\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n      };\n\n      var _logic = {};\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         var pageCurrent = options.form.pageParent();\n         var pageParent = pageCurrent.pageParent();\n\n         // redirect page\n         options.form.changePage(pageParent.id);\n\n         resolve();\n      });\n   }\n};\n","//\n// ABViewRuleActionFormSubmitRuleWebsite\n//\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nmodule.exports = class ABViewRuleActionFormSubmitRuleWebsite extends (\n   ABViewRuleAction\n) {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase) {\n      super();\n\n      this.App = App;\n      this.key = \"ABViewRuleActionFormSubmitRuleWebsite\";\n      this.label = L(\"Redirect to another website URL\");\n\n      this.currentObject = null; // the object this Action is tied to.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n   }\n\n   // conditionFields() {\n   //    var fieldTypes = [\"string\", \"number\", \"date\", \"formula\", \"calculate\"];\n\n   //    var currFields = [];\n\n   //    if (this.currentObject) {\n   //       this.currentObject.fields().forEach((f) => {\n   //          if (fieldTypes.indexOf(f.key) != -1) {\n   //             // NOTE: the .id value must match the obj[.id]  in the data set\n   //             // so if your object data looks like:\n   //             // \t{\n   //             //\t\tname_first:'Neo',\n   //             //\t\tname_last: 'The One'\n   //             //  },\n   //             // then the ids should be:\n   //             // { id:'name_first', value:'xxx', type:'string' }\n   //             currFields.push({\n   //                id: f.columnName,\n   //                value: f.label,\n   //                type: f.key\n   //             });\n   //          }\n   //       });\n   //    }\n\n   //    return currFields;\n   // }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      var ids = {\n         website: `${idBase}_website`,\n      };\n\n      this._ui = {\n         ui: {\n            id: ids.website,\n            view: \"text\",\n         },\n\n         init: () => {},\n\n         _logic: _logic,\n\n         fromSettings: (valueRules) => {\n            _logic.fromSettings(valueRules);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n      };\n\n      var _logic = {\n         fromSettings: (valueRules) => {\n            valueRules = valueRules || {};\n\n            $$(ids.website).setValue(valueRules.website || \"\");\n         },\n\n         toSettings: () => {\n            // return the confirm message\n            return {\n               website: $$(ids.website).getValue() || \"\",\n            };\n         },\n      };\n\n      return this._ui;\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   process(options) {\n      return new Promise((resolve, reject) => {\n         // redirect to website\n         if (this.valueRules.website)\n            window.open(\n               `http://${this.valueRules.website.replace(\"http://\", \"\")}`,\n               \"_blank\"\n            );\n\n         resolve();\n      });\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // if we have a display component, then populate it:\n      if (this._ui) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._ui.fromSettings(settings.valueRules);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tmessage:''\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._ui.toSettings();\n\n      return settings;\n   }\n};\n","// ABViewRuleActionObjectUpdater\n//\n// An action that allows you to update fields on an object.\n//\n//\nconst ABViewRuleAction = require(\"../ABViewRuleAction\");\n\nlet L = (...params) => AB.Multilingual.label(...params);\n\nvar ABViewRuleActionObjectUpdaterDefaults = {\n   filterConditions: {\n      // array of filters to apply to the data table\n      glue: \"and\",\n      rules: [],\n   },\n};\n\nmodule.exports = class ABViewRuleActionObjectUpdater extends ABViewRuleAction {\n   /**\n    * @param {object} App\n    *      The shared App object that is created in OP.Component\n    * @param {string} idBase\n    *      Identifier for this component\n    */\n   constructor(App, idBase, currentForm) {\n      super(App, idBase, currentForm);\n\n      this.key = \"ABViewRuleActionFormRecordRuleUpdate\";\n      this.label = L(\"Update Record\");\n\n      this.updateObject = null; // the object this Action will Update.\n\n      this.formRows = []; // keep track of the Value Components being set\n      // [\n      //\t\t{ fieldId: xxx, value:yyy, type:key['string', 'number', 'date',...]}\n      // ]\n\n      this.stashRules = {}; // keep track of rule settings among our selected objects.\n   }\n\n   // valueDisplayComponent\n   // Return an ABView to display our values form.\n   //\n   valueDisplayComponent(idBase) {\n      if (this._uiUpdater == null) {\n         this._uiUpdater = this.valueDisplayList(idBase);\n      }\n\n      return this._uiUpdater;\n   }\n\n   // Our Values Display is a List of ValueRows\n   // Each ValueRow will display an additional set of [add] [delete] buttons.\n\n   valueDisplayList(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return `${idBase}_${key}_${uniqueInstanceID}`;\n      };\n      var ids = {\n         updateForm: myUnique(\"updateForm\"),\n      };\n\n      var _ui = {\n         view: \"form\",\n         id: ids.updateForm,\n         elements: [],\n      };\n\n      var init = (valueRules) => {\n         valueRules = valueRules || this.valueRules;\n         _logic.setValues(valueRules);\n      };\n\n      var _logic = {\n         removeAddRow: () => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n\n            var addRow = rows.filter((r) => {\n               return r.queryView(function (view) {\n                  return view.config.name == \"field\" && !view.getValue();\n               });\n            })[0];\n            if (!addRow) return;\n\n            UpdateForm.removeView(addRow);\n         },\n\n         // addRow\n         // add a new data entry to this form.\n         // @param {obj} data  (optional) initial values for this row.\n         addRow: (data) => {\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // check row that's unselect a field\n            var rows = UpdateForm.getChildViews();\n            if (\n               data == null &&\n               rows.filter((r) => {\n                  return r.queryView(function (view) {\n                     return view.config.name == \"field\" && !view.getValue();\n                  });\n               }).length > 0\n            )\n               return;\n\n            // get a new Row Component\n            var row = this.valueDisplayRow(idBase);\n\n            // add row to Form\n            UpdateForm.addView(row.ui);\n\n            // initialize row with any provided data:\n            row.init({\n               onAdd: () => {\n                  // add a new Row\n                  _logic.addRow();\n               },\n               onDelete: (rowId) => {\n                  // remove a row\n                  _logic.delRow(rowId);\n               },\n               data: data,\n            });\n\n            // store this row\n            this.formRows.push(row);\n         },\n\n         delRow: (rowId) => {\n            // store this row\n            this.formRows.forEach((r, index) => {\n               if (r.ui.id == rowId) this.formRows.splice(index, 0);\n            });\n\n            // get our Form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // remove UI\n            UpdateForm.removeView($$(rowId));\n         },\n\n         formClear: () => {\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            var children = UpdateForm.getChildViews();\n\n            // NOTE: need to clone this array, because it is connected with the UpdatForm's\n            // internal array of items.  Once we start .removeView() the element actually\n            // is removed from the internal array, which then upset's the .forEach() from\n            // properly iterating through the structure.  It results in missed items from\n            // being sent to the .forEach().\n            // So Clone it and use that for .forEach()\n            var cloneChildren = [];\n            children.forEach((c) => {\n               cloneChildren.push(c);\n            });\n            cloneChildren.forEach((c) => {\n               UpdateForm.removeView(c);\n            });\n\n            // clear our stored .formRows\n            this.formRows = [];\n         },\n\n         formGet: () => {\n            var UpdateForm = $$(ids.updateForm);\n            if (!UpdateForm) {\n               // this is a problem!\n               this.currentForm.AB.notify.developer(\n                  new Error(\"no webix form\"),\n                  {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:formGet  could not find webix form\",\n                     id: ids.updateForm,\n                  }\n               );\n               return null;\n            }\n\n            return UpdateForm;\n         },\n\n         setValues: (valueRules) => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n\n            valueRules = valueRules || {};\n            valueRules.fieldOperations = valueRules.fieldOperations || [];\n\n            // find the form\n            var UpdateForm = _logic.formGet();\n            if (!UpdateForm) return;\n\n            // clear form:\n            _logic.formClear();\n\n            // if there are values to\n            if (valueRules.fieldOperations.length > 0) {\n               valueRules.fieldOperations.forEach((r) => {\n                  _logic.addRow(r);\n               });\n            }\n\n            // our default operation will cause an empty row to\n            // appear after our first value entry.\n            // let's remove that one, and then add a new one\n            // at the end:\n            _logic.removeAddRow();\n\n            // display an empty row\n            _logic.addRow();\n         },\n\n         fromSettings: (settings) => {\n            // Note: we just want the { valueRules:[] } here:\n            var mySettings = settings.valueRules || settings;\n\n            _logic.setValues(mySettings);\n         },\n\n         toSettings: () => {\n            // valueRules = {\n            //\tfieldOperations:[\n            //\t\t{ fieldID:xxx, value:yyyy, type:zzz, op:aaa }\n            //\t]\n            // }\n            var settings = { fieldOperations: [] };\n\n            // for each of our formRows, decode the propery {}\n            this.formRows.forEach((fr) => {\n               var rowSettings = fr.toSettings();\n               if (rowSettings) {\n                  settings.fieldOperations.push(fr.toSettings());\n               }\n            });\n\n            return settings;\n         },\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         fromSettings: (settings) => {\n            _logic.fromSettings(settings);\n         },\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   valueDisplayRow(idBase) {\n      var uniqueInstanceID = webix.uid();\n      var myUnique = (key) => {\n         // return idBase + '_' + key  + '_' + uniqueInstanceID;\n         return key + \"_\" + uniqueInstanceID;\n      };\n\n      var ids = {\n         row: myUnique(\"row\"),\n         updateForm: myUnique(\"updateFormRow\"),\n         field: myUnique(\"field\"),\n         value: myUnique(\"value\"),\n         selectDc: myUnique(\"selectDc\"),\n         selectBy: myUnique(\"selectBy\"),\n         queryField: myUnique(\"queryField\"),\n         multiview: myUnique(\"multiview\"),\n         buttonAdd: myUnique(\"add\"),\n         buttonDelete: myUnique(\"delete\"),\n      };\n\n      var FilterComponent;\n\n      var _logic = {\n         callbacks: {\n            onAdd: () => {},\n            onDelete: () => {},\n         },\n\n         buttonsToggle: () => {\n            $$(ids.row).getChildViews()[0].getChildViews()[4].hide();\n            $$(ids.row).getChildViews()[0].getChildViews()[5].show();\n         },\n\n         getFieldList: (shouldFilter) => {\n            var options = [];\n            if (this.updateObject) {\n               options = (this.updateObject.fields() || []).map((f) => {\n                  return {\n                     id: f.id,\n                     value: f.label,\n                  };\n               });\n\n               // options = (this.updateObject.fields() || [])\n               // .filter(f => {\n               //\n               // \tif (f.key != 'connectObject') {\n               // \t\treturn true;\n               // \t} else {\n               // \t\t// if this is a connection field, only return\n               // \t\t// fields that are 1:x  where this field is the\n               // \t\t// source:\n               // \t\t// return ((f.linkType() == 'one') && (f.isSource()))\n               //\n               // \t\t// 6-14-2018 Changing from only 1:x to support many\n               // \t\t// if this is a connected field, only return\n               // \t\t// fields that this is the source\n               // \t\treturn (f.isSource())\n               // \t}\n               // })\n               // .map(f => {\n               // \treturn {\n               // \t\tid: f.id,\n               // \t\tvalue: f.label\n               // \t};\n               // });\n\n               // Remove fields who are selected\n               if (shouldFilter) {\n                  // store this row\n                  var usedHash = {};\n                  this.formRows.forEach((row) => {\n                     var rowView = $$(row.ui.id);\n                     if (rowView) {\n                        var field = rowView\n                           .getChildViews()[0]\n                           .getChildViews()[1];\n                        usedHash[field.getValue()] = true;\n                     }\n                  });\n                  options = options.filter((o) => {\n                     return !usedHash[o.id];\n                  });\n               }\n            }\n            return options;\n         },\n\n         isValid: () => {\n            var validator = this.currentForm.AB.Validation.validator();\n            var valueField = $$(ids.row).getChildViews()[0].getChildViews()[3];\n            var FormView = valueField.getParentView().getParentView();\n\n            var field = this.getUpdateObjectField($$(ids.field).getValue());\n            if (field) {\n               var value = field.getValue(valueField, {});\n\n               // // if a standard component that supports .getValue()\n               // if (valueField.getValue) {\n               // \tvalue = valueField.getValue();\n               // } else {\n               // \t// else use for field.getValue();\n               // \tvalue = field.getValue(valueField, {});\n               // }\n\n               // our .isValidData() wants value in an object:\n               var obj = {};\n               obj[field.columnName] = value;\n\n               field.isValidData(obj, validator);\n\n               // if value is empty, this is also an error:\n               if (\n                  value == \"\" ||\n                  value == null ||\n                  (Array.isArray(value) && value.length == 0)\n               ) {\n                  validator.addError(\n                     field.columnName,\n                     L(\"A value is required\")\n                  );\n               }\n\n               // field.getParentView()  ->  row\n               // row.getParentView()  -> Form\n               FormView.clearValidation();\n               validator.updateForm(FormView);\n\n               return validator.pass();\n            } else {\n               // if we didn't find an associated field ... then this isn't good\n               // data.\n\n               //// TODO: display error for our field picker.  Note, it doesn't have a unique .name\n               // field.\n               var fieldField = $$(ids.row)\n                  .getChildViews()[0]\n                  .getChildViews()[1];\n               fieldField.define(\"invalidMessage\", L(\"A value is required\"));\n               fieldField.define(\"invalid\", true);\n               fieldField.refresh();\n               // fieldField.markInvalid(this.labels.component.errorRequired);\n               return false;\n            }\n         },\n\n         selectField: (columnID) => {\n            var field = this.getUpdateObjectField(columnID);\n            if (!field) return;\n\n            var fieldComponent = field.formComponent(),\n               abView = fieldComponent.newInstance(field.object.application),\n               formFieldComponent = abView.component(this.App),\n               $componentView = formFieldComponent.ui,\n               $inputView;\n\n            $componentView.id = ids.value; // set our expected id\n\n            // find all the DataSources\n            var datasources = this.currentForm.AB.datacollections(\n               (dc) => dc.datasource\n            );\n\n            // create a droplist with those dataSources\n            var optionsDataSources = [];\n            datasources.forEach((dc) => {\n               optionsDataSources.push({ id: dc.id, value: dc.label });\n            });\n\n            // create a droplist with select options\n            var optionsSelectBy = [\n               { id: \"select-one\", value: L(\"Current selection\") },\n               {\n                  id: \"filter-select-one\",\n                  value: L(\"Select first after filter by...\"),\n               },\n            ];\n\n            var $optionUpdateExsits = {\n               type: \"clean\",\n               rows: [\n                  {\n                     cols: [\n                        {\n                           id: ids.selectDc,\n                           view: \"combo\",\n                           options: optionsDataSources,\n                           placeholder: L(\"Choose a data source\"),\n                           on: {\n                              onChange: (newv, oldv) => {\n                                 var selectedDC =\n                                    this.currentForm.AB.datacollectionByID(\n                                       newv\n                                    );\n                                 if (\n                                    selectedDC &&\n                                    (selectedDC.sourceType == \"query\" ||\n                                       !field.isConnection)\n                                 ) {\n                                    var queryFieldOptions = [];\n                                    selectedDC.datasource\n                                       .fields()\n                                       .forEach((f) => {\n                                          queryFieldOptions.push({\n                                             id: f.id,\n                                             value: f.label,\n                                          });\n                                       });\n                                    $$(ids.queryField).define(\n                                       \"options\",\n                                       queryFieldOptions\n                                    );\n                                    $$(ids.queryField).refresh();\n                                    $$(ids.queryField).show();\n                                 } else {\n                                    $$(ids.queryField).hide();\n                                 }\n                              },\n                           },\n                        },\n                        // we will place a list of query fields if you choose a datasource that has a query source type\n                        {\n                           id: ids.queryField,\n                           view: \"combo\",\n                           hidden: true,\n                           placeholder: L(\"Choose value from...\"),\n                           options: [{ id: 1, value: \"figure this out\" }],\n                        },\n                     ],\n                  },\n                  {\n                     id: ids.selectBy,\n                     view: \"combo\",\n                     options: optionsSelectBy,\n                     placeholder: L(\"Choose select option\"),\n                     on: {\n                        onChange: (newv, oldv) => {\n                           var $row = $$(ids.row);\n                           $row.removeView($row.getChildViews()[1]);\n                           if (newv == \"select-one\") {\n                              $row.addView({}, 1);\n                           } else {\n                              var options =\n                                 this.currentForm.datacollection.datasource\n                                    .fields()\n                                    .map(function (f) {\n                                       return {\n                                          id: f.id,\n                                          value: f.label,\n                                       };\n                                    });\n\n                              FilterComponent = this.AB.filterComplexNew(\n                                 `${idBase}_filter`\n                              );\n                              // FilterComponent.applicationLoad(\n                              //    this.currentForm.application\n                              // );\n                              FilterComponent.init({\n                                 isRecordRule: true,\n                                 recordRuleFieldOptions: options,\n                              });\n                              FilterComponent.on(\"change\", (val) => {\n                                 _logic.onFilterChange(val);\n                              });\n\n                              $row.addView(FilterComponent.ui, 1);\n\n                              var dcId = $$(ids.selectDc).getValue();\n                              var dataCollection =\n                                 this.currentForm.AB.datacollectionByID(dcId);\n                              if (dataCollection) {\n                                 _logic.populateFilters(dataCollection);\n                              }\n                           }\n                        },\n                     },\n                  },\n               ],\n            };\n\n            // WORKAROUND: add '[Current User]' option to the user data field\n            if (field.key == \"user\") {\n               $componentView.options = $componentView.options || [];\n               $componentView.options.unshift({\n                  id: \"ab-current-user\",\n                  value: L(\"[Current User]\"),\n               });\n            }\n\n            // UPDATE: ok, in practice we have not had any use cases where\n            // we want individual values on connectedObject fields, but\n            // instead we want to insert the current selected element from\n            // a relevant data view.  So, replace the fieldComponet\n            // from a connectedObject field with a list of data views that\n            // are based upon the same object we are connected to:\n            if (field.isConnection) {\n               // find the ABObject this field connects to\n               var connectedObject = field.datasourceLink;\n\n               // find all the DataSources that are based upon this ABObject\n               // to do this, we find the root Page we are on, then ask that Page for datasources:\n               datasources = datasources.filter((dc) => {\n                  return dc.datasource.id == connectedObject.id;\n               });\n\n               var dcQueries = this.currentForm.AB.datacollections((dc) => {\n                  return (\n                     dc.sourceType == \"query\" &&\n                     dc.datasource &&\n                     dc.datasource.canFilterObject(connectedObject)\n                  );\n                  // return dc.datasource.id == connectedObject.id;\n               });\n\n               datasources = datasources.concat(dcQueries);\n\n               // refresh a droplist with those dataSources\n               optionsDataSources = [];\n               datasources.forEach((dc) => {\n                  optionsDataSources.push({ id: dc.id, value: dc.label });\n               });\n\n               // add select an array value option\n               optionsSelectBy.push({\n                  id: \"filter-select-all\",\n                  value: L(\"Select all after filter by...\"),\n               });\n\n               $inputView = $optionUpdateExsits;\n\n               // and the upcoming formFieldComponent.init()\n               // doesn't need to do anything:\n               formFieldComponent = {\n                  init: function () {},\n               };\n\n               // and we reset field so it's customDisplay isn't called:\n               // field = {};\n            } else {\n               $inputView = {\n                  id: ids.multiview,\n                  view: \"multiview\",\n                  cells: [\n                     {\n                        batch: \"custom\",\n                        rows: [\n                           $componentView,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or exists value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    $multiview.showBatch(\"exist\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                     {\n                        // Update value from exists object\n                        batch: \"exist\",\n                        rows: [\n                           $optionUpdateExsits,\n                           {\n                              view: \"label\",\n                              label: `<a>${L(\"Or custom value\")}</a>`,\n                              on: {\n                                 onItemClick: function () {\n                                    var $container = this.getParentView(),\n                                       $multiview = $container.getParentView();\n\n                                    // clear filter view\n                                    $$(ids.selectBy).setValue(\"select-one\");\n\n                                    $multiview.showBatch(\"custom\");\n                                 },\n                              },\n                           },\n                        ],\n                     },\n                  ],\n               };\n            }\n\n            // Change component to display this field's form input\n            var $row = $$(ids.row).getChildViews()[0];\n            $row.removeView($row.getChildViews()[3]);\n            $row.addView($inputView, 3);\n\n            formFieldComponent.init();\n\n            // Show custom display of data field\n            if (!field.isConnection && field.customDisplay) {\n               // field.customDisplay(field, this.App, $row.getChildViews()[3].$view, {\n\n               var compNodeView = $$($componentView.id).$view;\n\n               // wait until render UI complete\n               setTimeout(() => {\n                  field.customDisplay(field, this.App, compNodeView, {\n                     editable: true,\n\n                     // tree\n                     isForm: true,\n                  });\n               }, 50);\n            }\n\n            // Show the remove button\n            var $buttonRemove = $row.getChildViews()[4];\n            $buttonRemove.show();\n\n            // Add a new row\n            if (columnID) _logic.callbacks.onAdd();\n         },\n\n         setValue: (data) => {\n            $$(ids.field).setValue(data.fieldID);\n            // note: this triggers our _logic.selectField() fn.\n            var field = this.getUpdateObjectField(data.fieldID);\n            if (field) {\n               var setValueFn = () => {\n                  $$(ids.selectDc).setValue(data.value);\n                  if (data.queryField) {\n                     $$(ids.queryField).setValue(data.queryField);\n                  }\n                  var selectBy = data.selectBy || \"select-one\";\n                  $$(ids.selectBy).setValue(selectBy);\n\n                  if (selectBy != \"select-one\") {\n                     var collectionId = data.value;\n                     var dataCollection =\n                        this.currentForm.AB.datacollectionByID(collectionId);\n                     if (dataCollection && data.filterConditions) {\n                        _logic.populateFilters(\n                           dataCollection,\n                           data.filterConditions\n                        );\n                     }\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  setValueFn();\n               } else {\n                  if (data.valueType == \"exist\") {\n                     $$(ids.multiview).showBatch(\"exist\");\n\n                     setValueFn();\n                  } else {\n                     $$(ids.multiview).showBatch(\"custom\");\n\n                     // wait until render UI complete\n                     setTimeout(function () {\n                        // set value to custom field\n                        var rowData = {};\n                        rowData[field.columnName] = data.value;\n                        field.setValue($$(ids.value), rowData);\n                     }, 50);\n                  }\n               }\n            }\n         },\n\n         populateFilters: (dataView, filterConditions) => {\n            filterConditions =\n               filterConditions ||\n               ABViewRuleActionObjectUpdaterDefaults.filterConditions;\n\n            // Populate data to popups\n            // FilterComponent.objectLoad(objectCopy);\n            FilterComponent.fieldsLoad(\n               dataView.datasource ? dataView.datasource.fields() : []\n            );\n            FilterComponent.setValue(filterConditions);\n         },\n\n         toSettings: () => {\n            // if this isn't the last entry row\n            // * a row with valid data has the [delete] button showing.\n            var buttonDelete = $$(ids.buttonDelete);\n            if (buttonDelete && buttonDelete.isVisible()) {\n               var data = {};\n               data.fieldID = $$(ids.field).getValue();\n\n               var $valueField = $$(ids.value);\n               var field = this.getUpdateObjectField(data.fieldID);\n\n               var getValueFn = () => {\n                  data.value = $$(ids.selectDc).getValue();\n                  data.queryField = $$(ids.queryField).getValue();\n                  data.op = \"set\"; // possible to create other types of operations.\n                  data.type = field.key;\n                  data.selectBy = $$(ids.selectBy).getValue();\n                  data.valueType = \"exist\";\n                  if (FilterComponent) {\n                     data.filterConditions = FilterComponent.getValue();\n                  }\n               };\n\n               // now handle our special connectedObject case:\n               if (field.isConnection) {\n                  getValueFn();\n               } else {\n                  if ($$(ids.multiview).config.visibleBatch == \"exist\") {\n                     getValueFn();\n                  } else {\n                     data.value = field.getValue($valueField, {});\n                     data.op = \"set\"; // possible to create other types of operations.\n                     data.type = field.key;\n                     data.valueType = \"custom\";\n                  }\n               }\n\n               return data;\n            } else {\n               return null;\n            }\n         },\n      };\n\n      var _ui = {\n         id: ids.row,\n         view: \"layout\",\n         rows: [\n            {\n               cols: [\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"Set\"),\n                  },\n                  {\n                     // Field list\n                     view: \"combo\",\n                     name: \"field\",\n                     placeholder: L(\"Choose a field\"),\n                     id: ids.field,\n                     height: 32,\n                     options: _logic.getFieldList(true),\n                     on: {\n                        onChange: function (columnId) {\n                           _logic.selectField(columnId);\n                        },\n                     },\n                  },\n                  {\n                     // Label\n                     view: \"label\",\n                     width: this.currentForm.AB.Config.labelWidthSmall,\n                     label: L(\"To\"),\n                  },\n\n                  // Field value\n                  // NOTE: this view gets replaced each time a field is selected.\n                  // We replace it with a component associated with the Field\n                  {},\n\n                  {\n                     // \"Remove\" button\n                     view: \"button\",\n                     css: \"webix_danger\",\n                     id: ids.buttonDelete,\n                     icon: \"fa fa-trash\",\n                     type: \"icon\",\n                     width: 30,\n                     hidden: true,\n                     click: function () {\n                        _logic.callbacks.onDelete(ids.row);\n                     },\n                  },\n               ],\n            },\n            {}, // we will add filters here if we need them\n         ],\n      };\n\n      var init = (options) => {\n         for (var c in _logic.callbacks) {\n            _logic.callbacks[c] = options[c] || _logic.callbacks[c];\n         }\n\n         if (options.data) {\n            // options.data = { formID:xxx, value:yyy,  type:zzzz }\n            _logic.setValue(options.data);\n\n            // _logic.buttonsToggle();\n         }\n      };\n\n      return {\n         ui: _ui,\n         init: init,\n         toSettings: () => {\n            return _logic.toSettings();\n         },\n         _logic: _logic,\n      };\n   }\n\n   getUpdateObjectField(fieldID) {\n      return (\n         this.queryObject?.fieldByID(fieldID) ??\n         this.updateObject?.fieldByID(fieldID) ??\n         this.currentForm.AB.fieldNew(\n            this.currentForm.AB.definitionByID(fieldID) ?? {},\n            this.currentForm.AB.objectNew({})\n         )\n      );\n   }\n\n   /**\n    * @method processUpdateObject\n    * Perform the specified update actions on the provided objectToUpdate\n    * @param {obj} options  Additional information required to make updates.\n    * @param {obj} objectToUpdate  The object to make the updates on.\n    * @return {boolean}   true if an update took place, false if no updates.\n    */\n   processUpdateObject(options, objectToUpdate) {\n      this._formData = objectToUpdate;\n      // return new Promise((resolve, reject) => {\n      var isUpdated = false;\n\n      this.valueRules = this.valueRules || {};\n      this.valueRules.fieldOperations = this.valueRules.fieldOperations || [];\n\n      // var allPromises = [];\n\n      // for each of our operations\n      this.valueRules.fieldOperations.forEach((op) => {\n         // op = {\n         // \tfieldID:'zzzzz',\n         //\tvalue: 'xxx',\n         //\top: 'set',\n         //  type:'',\n         //  queryField: '', // id of ABField\n         //  selectBy:'',   ['select-one', 'filter-select-one', 'filter-select-all']\n         //  valueType: \"\", ['custom', 'exist']\n         // \tfilterConditions: { // array of filters to apply to the data table\n         //\t\tglue: 'and',\n         // \t\trules: []\n         //  }\n         // }\n\n         var field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n\n         let value = op?.value?.id ?? op?.value;\n\n         switch (value) {\n            case \"ab-current-user\":\n               value = this.currentForm.AB.Account.username();\n               break;\n            case \"ab-current-date\":\n               value = new Date();\n               break;\n         }\n\n         // in the case of a connected Field, we use op.value to get the\n         // datacollection, and find it's currently selected value:\n         if (field.isConnection || op.valueType == \"exist\") {\n            // NOTE: 30 May 2018 :current decision from Ric is to limit this\n            // to only handle 1:x connections where we update the current obj\n            // with the PK of the value from the DC.\n            //\n            // In the future, if we want to handle the other options,\n            // we need to modify this to handle the M:x connections where\n            // we insert our PK into the value from the DC.\n\n            // op.value is the ABDatacollection.id we need to find\n            const dataCollection = this.currentForm.AB.datacollectionByID(\n               op.value\n            );\n            if (!dataCollection) return;\n\n            // we don't want to mess with the dataView directly since it might\n            // be used by other parts of the system and this refresh might reset\n            // it's cursor.\n            // var clonedDataCollection = dataView.filteredClone(op.filterConditions);\n\n            // loop through rules to find \"same-as-field\" or \"not-same-as-field\"\n            // adjust operator and switch key value to actual value when found\n            var filterConditions = this.currentForm.AB.cloneDeep(\n               op.filterConditions\n            );\n            if (filterConditions && filterConditions.rules) {\n               filterConditions.rules\n                  .filter((r) => {\n                     return (\n                        r.rule == \"same_as_field\" ||\n                        r.rule == \"not_same_as_field\"\n                     );\n                  })\n                  .forEach((item) => {\n                     var valueField =\n                        this.currentForm.datacollection.datasource.fieldByID(\n                           item.value\n                        );\n                     if (valueField.isConnection) {\n                        item.value = valueField.format(this._formData);\n                     } else {\n                        item.value = this._formData[valueField.columnName];\n                     }\n\n                     if (item.rule == \"not_same_as_field\") {\n                        item.rule = \"not equals\";\n                     } else {\n                        item.rule = \"equals\";\n                     }\n                  });\n            }\n\n            let clonedDataCollection =\n               dataCollection.filteredClone(filterConditions);\n\n            switch (op.selectBy) {\n               // the 'select-one' is getting the currently set cursor on this data collection\n               // and using that value.\n               // TODO: rename to 'select-cursor'\n               case \"select-one\":\n               default: // dataView.getItem(dataView.getCursor());\n                  value = clonedDataCollection.getCursor();\n\n                  if (value) {\n                     // NOTE: webix documentation issue: .getCursor() is supposed to return\n                     // the .id of the item.  However it seems to be returning the {obj}\n\n                     if (op.valueType == \"exist\") {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        if (fieldWithValue)\n                           value = value[fieldWithValue.columnName];\n                     } else if (value.id) {\n                        value = value.id;\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (!value) break;\n\n                        if (field.isConnection) {\n                           // if we are setting a connection we do not want to pass the full object because\n                           // batch creates payload gets too large\n                           objectToUpdate[field.columnName] = {};\n                           objectToUpdate[field.columnName].id =\n                              value[field.datasourceLink.PK()];\n                           objectToUpdate[field.columnName][\n                              field.datasourceLink.PK()\n                           ] = value[field.datasourceLink.PK()];\n\n                           // If the connect field use the custom FK, then it requires to pass value of the custom FK.\n                           if (field.settings.isCustomFK) {\n                              if (field.indexField) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField.columnName\n                                 ] = value[field.indexField.columnName];\n                              }\n                              if (field.indexField2) {\n                                 objectToUpdate[field.columnName][\n                                    field.indexField2.columnName\n                                 ] = value[field.indexField2.columnName];\n                              }\n                           }\n\n                           field.datasourceLink\n                              .fields(\n                                 (f) =>\n                                    f.key == \"combined\" || f.key == \"AutoIndex\"\n                              )\n                              .forEach((f) => {\n                                 objectToUpdate[field.columnName][\n                                    f.columnName\n                                 ] = value[f.columnName];\n                              });\n                        } else {\n                           objectToUpdate[field.columnName] = value;\n                        }\n\n                        break;\n                  }\n                  break;\n\n               // attempt to filter this data collection by the given filterConditions\n               case \"filter-select-all\":\n                  var newValues = [];\n\n                  var currRow = clonedDataCollection.getFirstRecord();\n                  while (currRow) {\n                     // do something there\n\n                     switch (clonedDataCollection.sourceType) {\n                        // case: datacollection is an object\n                        // we want to set our field to this values\n                        case \"object\":\n                           newValues.push(currRow.id);\n                           break;\n\n                        // case: datacollection is a query\n                        // our field is a pointer to an object. we want to pull out that object\n                        // from the query data.\n                        case \"query\": {\n                           let fieldWithValue =\n                              clonedDataCollection.datasource.fieldByID(\n                                 op.queryField\n                              );\n\n                           var newValue = currRow[fieldWithValue.columnName];\n\n                           if (typeof newValue == \"undefined\") {\n                              newValue = currRow[fieldWithValue.relationName()];\n\n                              if (Array.isArray(newValue)) {\n                                 newValue = newValue.map((v) => {\n                                    return v.id ? v.id : v;\n                                 });\n                              } else if (newValue.id) {\n                                 newValue = newValue.id;\n                              }\n                           }\n\n                           newValues = this.currentForm.AB.uniq(\n                              newValues.concat(newValue)\n                           );\n\n                           break;\n                        }\n                     }\n\n                     currRow = clonedDataCollection.getNextRecord(currRow);\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        if (field.linkType() == \"one\") {\n                           var updates = [];\n                           newValues.forEach((v) => {\n                              var objectToUpdateClone =\n                                 this.currentForm.AB.cloneDeep(objectToUpdate);\n                              objectToUpdateClone[field.columnName] = v;\n                              updates.push(objectToUpdateClone);\n                           });\n                           objectToUpdate.newRecords = updates;\n                        } else {\n                           objectToUpdate[field.columnName] = newValues;\n                        }\n                        break;\n                  }\n                  break;\n\n               case \"filter-select-one\":\n                  newValues = [];\n\n                  value = clonedDataCollection.getFirstRecord();\n\n                  if (value) {\n                     // case: datacollection is a query\n                     // our field is a pointer to an object. we want to pull out that object\n                     // from the query data.\n                     if (\n                        clonedDataCollection.sourceType == \"query\" ||\n                        (op.valueType == \"exist\" && op.queryField)\n                     ) {\n                        let fieldWithValue =\n                           clonedDataCollection.datasource.fieldByID(\n                              op.queryField\n                           );\n\n                        newValue = value[fieldWithValue.columnName];\n\n                        if (typeof newValue == \"undefined\") {\n                           newValue = value[fieldWithValue.relationName()];\n                           if (Array.isArray(newValue)) {\n                              newValue = newValue[0];\n                           }\n                           if (newValue.id) newValue = newValue.id;\n                        }\n\n                        value = newValue;\n                     }\n                     // case: datacollection is an object\n                     // we want to set our field to this values\n                     else if (clonedDataCollection.sourceType == \"object\") {\n                        // NOTE: webix documentation issue: .getCursor() is supposed to return\n                        // the .id of the item.  However it seems to be returning the {obj}\n\n                        // we need to use the objects indexField(2) if there is one\n                        // otherwise default to the id\n                        var lookup;\n                        if (field.indexField) {\n                           lookup = field.indexField.columnName;\n                        } else if (field.indexField2) {\n                           lookup = field.indexField2.columnName;\n                        }\n                        if (lookup && value[lookup]) {\n                           value = value[lookup];\n                        } else if (value.id) {\n                           value = value.id;\n                        }\n                     }\n                  }\n\n                  // QUESTION: if value returns undefined should we do something else?\n                  switch (op.op) {\n                     case \"set\":\n                        objectToUpdate[field.columnName] = value;\n                        break;\n                  }\n                  break;\n            }\n\n            isUpdated = true;\n\n            // allPromises.push(connectedPromise);\n         } else {\n            // var setPromise = new Promise((resolve, reject) => {\n            switch (op.op) {\n               case \"set\":\n                  objectToUpdate[field.columnName] = value;\n                  break;\n            }\n\n            isUpdated = true;\n\n            //    resolve(isUpdated);\n            // });\n\n            // allPromises.push(setPromise);\n\n            // console.log(\"finished\");\n         }\n      });\n\n      return isUpdated;\n      // Promise.all(allPromises).then(() => {\n      //    resolve(isUpdated);\n      // });\n      // });\n   }\n\n   // process\n   // gets called when a form is submitted and the data passes the Query Builder Rules.\n   // @param {obj} options\n   // @return {Promise}\n   process(options) {\n      this._formData = options.data;\n\n      return new Promise((resolve, reject) => {\n         let isUpdated = this.processUpdateObject({}, options.data);\n         if (!isUpdated) {\n            resolve();\n         } else {\n            // get the model from the provided Form Obj:\n            var dv = options.form.datacollection;\n            if (!dv) return resolve();\n\n            var model = dv.model;\n            model\n               .update(options.data.id, options.data)\n               .then(resolve)\n               .catch((err) => {\n                  this.currentForm.AB.notify.developer(err, {\n                     context:\n                        \"ABViewRuleActionObjectUpdater:process  update error\",\n                     id: options.data.id,\n                     data: options.data,\n                  });\n                  reject(err);\n               });\n         }\n      });\n   }\n\n   // objectLoad\n   // save the current object this Action is associated with.\n   objectLoad(object) {\n      super.objectLoad(object);\n      this.updateObjectLoad(object);\n   }\n\n   // updateObjectLoad\n   // save the given object as the object we will update.\n   updateObjectLoad(object) {\n      // stash rules for old object\n      if (this.updateObject) {\n         this.stashRules[this.updateObject.id] = this.valueRules;\n      }\n\n      this.updateObject = object;\n\n      // with a new updateObject, then reset our UI\n      this._uiUpdater = null;\n\n      // reload any stashed rules, or set to {}\n      this.valueRules = this.stashRules[this.updateObject.id] || {};\n   }\n\n   // fromSettings\n   // initialize this Action from a given set of setting values.\n   // @param {obj}  settings\n   fromSettings(settings) {\n      settings = settings || {};\n\n      super.fromSettings(settings); // let the parent handle the QB\n\n      // make sure UI is updated:\n      // set our updateObject\n      if (settings.updateObjectURL) {\n         var updateObject = this.currentForm.application.urlResolve(\n            settings.updateObjectURL\n         );\n         this.updateObject = updateObject;\n      }\n\n      // if we have a display component, then populate it:\n      if (this._uiUpdater) {\n         // now we handle our valueRules:{} object settings.\n         // pass the settings off to our DisplayList component:\n         this._uiUpdater.fromSettings(settings);\n      }\n   }\n\n   // toSettings\n   // return an object that represents the current state of this Action\n   // @return {obj}\n   toSettings() {\n      // settings: {\n      //\tvalueRules:{}\n      // }\n\n      // let our parent store our QB settings\n      var settings = super.toSettings();\n\n      settings.valueRules = this._uiUpdater.toSettings();\n      settings.updateObjectURL = this.updateObject.urlPointer();\n\n      return settings;\n   }\n\n   /**\n    * @method isReady()\n    * returns a promise that gets resolved once our action is ready to work.\n    * Here we need to scan each of our field operations, and verify all\n    * related data collections are initialized before we can continue.\n    * @return {Promise}\n    */\n   isReady() {\n      var allReady = [];\n      let fieldOps = this.valueRules?.fieldOperations ?? [];\n      fieldOps.forEach((op) => {\n         let field = this.getUpdateObjectField(op.fieldID);\n         if (!field) return;\n         if (!field.isConnection && op.valueType !== \"exist\") return;\n\n         // this references a DC\n         let DC = this.currentForm.AB.datacollectionByID(op.value);\n         if (DC?.dataStatus === DC?.dataStatusFlag.initialized) return;\n\n         // not ready yet, so wait until the 'initializedData' event\n         allReady.push(\n            new Promise((resolve /*, reject */) => {\n               DC.on(\"initializedData\", () => {\n                  resolve();\n               });\n            })\n         );\n      });\n      return Promise.all(allReady);\n   }\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ImageModule=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";var DocUtils=require(\"docxtemplater\").DocUtils;DocUtils.convertPixelsToEmus=function(pixel){return Math.round(pixel*9525)};module.exports=DocUtils},{docxtemplater:5}],2:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./docUtils\");var extensionRegex=/[^.]+\\.([^.]+)/;var rels={getPrefix:function getPrefix(fileType){return fileType===\"docx\"?\"word\":\"ppt\"},getFileTypeName:function getFileTypeName(fileType){return fileType===\"docx\"?\"document\":\"presentation\"},getRelsFileName:function getRelsFileName(fileName){return fileName.replace(/^.*?([a-zA-Z0-9]+)\\.xml$/,\"$1\")+\".xml.rels\"},getRelsFilePath:function getRelsFilePath(fileName,fileType){var relsFileName=rels.getRelsFileName(fileName);var prefix=fileType===\"pptx\"?\"ppt/slides\":\"word\";return prefix+\"/_rels/\"+relsFileName}};module.exports=function(){function ImgManager(zip,fileName,xmlDocuments,fileType){_classCallCheck(this,ImgManager);this.fileName=fileName;this.prefix=rels.getPrefix(fileType);this.zip=zip;this.xmlDocuments=xmlDocuments;this.fileTypeName=rels.getFileTypeName(fileType);this.mediaPrefix=fileType===\"pptx\"?\"../media\":\"media\";var relsFilePath=rels.getRelsFilePath(fileName,fileType);this.relsDoc=xmlDocuments[relsFilePath]||this.createEmptyRelsDoc(xmlDocuments,relsFilePath)}_createClass(ImgManager,[{key:\"createEmptyRelsDoc\",value:function createEmptyRelsDoc(xmlDocuments,relsFileName){var mainRels=this.prefix+\"/_rels/\"+this.fileTypeName+\".xml.rels\";var doc=xmlDocuments[mainRels];if(!doc){var err=new Error(\"Could not copy from empty relsdoc\");err.properties={mainRels:mainRels,relsFileName:relsFileName,files:Object.keys(this.zip.files)};throw err}var relsDoc=DocUtils.str2xml(DocUtils.xml2str(doc));var relationships=relsDoc.getElementsByTagName(\"Relationships\")[0];var relationshipChilds=relationships.getElementsByTagName(\"Relationship\");for(var i=0,l=relationshipChilds.length;i<l;i++){relationships.removeChild(relationshipChilds[i])}xmlDocuments[relsFileName]=relsDoc;return relsDoc}},{key:\"loadImageRels\",value:function loadImageRels(){var iterable=this.relsDoc.getElementsByTagName(\"Relationship\");return Array.prototype.reduce.call(iterable,function(max,relationship){var id=relationship.getAttribute(\"Id\");if(/^rId[0-9]+$/.test(id)){return Math.max(max,parseInt(id.substr(3),10))}return max},0)}},{key:\"addExtensionRels\",value:function addExtensionRels(contentType,extension){var contentTypeDoc=this.xmlDocuments[\"[Content_Types].xml\"];var defaultTags=contentTypeDoc.getElementsByTagName(\"Default\");var extensionRegistered=Array.prototype.some.call(defaultTags,function(tag){return tag.getAttribute(\"Extension\")===extension});if(extensionRegistered){return}var types=contentTypeDoc.getElementsByTagName(\"Types\")[0];var newTag=contentTypeDoc.createElement(\"Default\");newTag.namespaceURI=null;newTag.setAttribute(\"ContentType\",contentType);newTag.setAttribute(\"Extension\",extension);types.appendChild(newTag)}},{key:\"addImageRels\",value:function addImageRels(imageName,imageData,i){if(i==null){i=0}var realImageName=i===0?imageName:imageName+(\"(\"+i+\")\");var imagePath=this.prefix+\"/media/\"+realImageName;if(this.zip.files[imagePath]!=null){return this.addImageRels(imageName,imageData,i+1)}var image={name:imagePath,data:imageData,options:{binary:true}};this.zip.file(image.name,image.data,image.options);var extension=realImageName.replace(extensionRegex,\"$1\");this.addExtensionRels(\"image/\"+extension,extension);var relationships=this.relsDoc.getElementsByTagName(\"Relationships\")[0];var newTag=this.relsDoc.createElement(\"Relationship\");newTag.namespaceURI=null;var maxRid=this.loadImageRels()+1;newTag.setAttribute(\"Id\",\"rId\"+maxRid);newTag.setAttribute(\"Type\",\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/image\");newTag.setAttribute(\"Target\",this.mediaPrefix+\"/\"+realImageName);relationships.appendChild(newTag);return maxRid}}]);return ImgManager}()},{\"./docUtils\":1}],3:[function(require,module,exports){\"use strict\";module.exports={getImageXml:function getImageXml(rId,size){return('<w:drawing>\\n\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t<wp:effectExtent l=\"0\" t=\"0\" r=\"0\" b=\"0\"/>\\n\\t\\t\\t<wp:docPr id=\"2\" name=\"Image 2\" descr=\"image\"/>\\n\\t\\t\\t<wp:cNvGraphicFramePr>\\n\\t\\t\\t\\t<a:graphicFrameLocks xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\" noChangeAspect=\"1\"/>\\n\\t\\t\\t</wp:cNvGraphicFramePr>\\n\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture 1\" descr=\"image\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t</a:graphic>\\n\\t\\t</wp:inline>\\n\\t</w:drawing>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getImageXmlCentered:function getImageXmlCentered(rId,size){return('<w:p>\\n\\t\\t\\t<w:pPr>\\n\\t\\t\\t\\t<w:jc w:val=\"center\"/>\\n\\t\\t\\t</w:pPr>\\n\\t\\t\\t<w:r>\\n\\t\\t\\t\\t<w:rPr/>\\n\\t\\t\\t\\t<w:drawing>\\n\\t\\t\\t\\t\\t<wp:inline distT=\"0\" distB=\"0\" distL=\"0\" distR=\"0\">\\n\\t\\t\\t\\t\\t<wp:extent cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t<wp:docPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t<a:graphic xmlns:a=\"http://schemas.openxmlformats.org/drawingml/2006/main\">\\n\\t\\t\\t\\t\\t\\t<a:graphicData uri=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t<pic:pic xmlns:pic=\"http://schemas.openxmlformats.org/drawingml/2006/picture\">\\n\\t\\t\\t\\t\\t\\t\\t<pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPr id=\"0\" name=\"Picture\" descr=\"\"/>\\n\\t\\t\\t\\t\\t\\t\\t<pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</pic:cNvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t</pic:nvPicPr>\\n\\t\\t\\t\\t\\t\\t\\t<pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t\\t\\t\\t\\t</pic:blipFill>\\n\\t\\t\\t\\t\\t\\t\\t<pic:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:off x=\"0\" y=\"0\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t<a:ln w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t\\t\\t\\t</pic:spPr>\\n\\t\\t\\t\\t\\t\\t</pic:pic>\\n\\t\\t\\t\\t\\t\\t</a:graphicData>\\n\\t\\t\\t\\t\\t</a:graphic>\\n\\t\\t\\t\\t\\t</wp:inline>\\n\\t\\t\\t\\t</w:drawing>\\n\\t\\t\\t</w:r>\\n\\t\\t</w:p>\\n\\t\\t').replace(/\\t|\\n/g,\"\")},getPptxImageXml:function getPptxImageXml(rId,size,offset){return('<p:pic>\\n\\t\\t\\t<p:nvPicPr>\\n\\t\\t\\t\\t<p:cNvPr id=\"6\" name=\"Picture 2\"/>\\n\\t\\t\\t\\t<p:cNvPicPr>\\n\\t\\t\\t\\t\\t<a:picLocks noChangeAspect=\"1\" noChangeArrowheads=\"1\"/>\\n\\t\\t\\t\\t</p:cNvPicPr>\\n\\t\\t\\t\\t<p:nvPr/>\\n\\t\\t\\t</p:nvPicPr>\\n\\t\\t\\t<p:blipFill>\\n\\t\\t\\t\\t<a:blip r:embed=\"rId'+rId+'\" cstate=\"print\">\\n\\t\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t\\t<a:ext uri=\"{28A0092B-C50C-407E-A947-70E740481C1C}\">\\n\\t\\t\\t\\t\\t\\t\\t<a14:useLocalDpi xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" val=\"0\"/>\\n\\t\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t\\t</a:blip>\\n\\t\\t\\t\\t<a:srcRect/>\\n\\t\\t\\t\\t<a:stretch>\\n\\t\\t\\t\\t\\t<a:fillRect/>\\n\\t\\t\\t\\t</a:stretch>\\n\\t\\t\\t</p:blipFill>\\n\\t\\t\\t<p:spPr bwMode=\"auto\">\\n\\t\\t\\t\\t<a:xfrm>\\n\\t\\t\\t\\t\\t<a:off x=\"'+offset.x+'\" y=\"'+offset.y+'\"/>\\n\\t\\t\\t\\t\\t<a:ext cx=\"'+size[0]+'\" cy=\"'+size[1]+'\"/>\\n\\t\\t\\t\\t</a:xfrm>\\n\\t\\t\\t\\t<a:prstGeom prst=\"rect\">\\n\\t\\t\\t\\t\\t<a:avLst/>\\n\\t\\t\\t\\t</a:prstGeom>\\n\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t<a:ln>\\n\\t\\t\\t\\t\\t<a:noFill/>\\n\\t\\t\\t\\t</a:ln>\\n\\t\\t\\t\\t<a:effectLst/>\\n\\t\\t\\t\\t<a:extLst>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{909E8E84-426E-40DD-AFC4-6F175D3DCCD1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenFill xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"accent1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenFill>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{91240B29-F687-4F45-9708-019B960494DF}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenLine xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\" w=\"9525\">\\n\\t\\t\\t\\t\\t\\t\\t<a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"tx1\"/>\\n\\t\\t\\t\\t\\t\\t\\t</a:solidFill>\\n\\t\\t\\t\\t\\t\\t\\t<a:miter lim=\"800000\"/>\\n\\t\\t\\t\\t\\t\\t\\t<a:headEnd/>\\n\\t\\t\\t\\t\\t\\t\\t<a:tailEnd/>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenLine>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t\\t<a:ext uri=\"{AF507438-7753-43E0-B8FC-AC1667EBCBE1}\">\\n\\t\\t\\t\\t\\t\\t<a14:hiddenEffects xmlns:a14=\"http://schemas.microsoft.com/office/drawing/2010/main\">\\n\\t\\t\\t\\t\\t\\t\\t<a:effectLst>\\n\\t\\t\\t\\t\\t\\t\\t\\t<a:outerShdw dist=\"35921\" dir=\"2700000\" algn=\"ctr\" rotWithShape=\"0\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a:schemeClr val=\"bg2\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t</a:outerShdw>\\n\\t\\t\\t\\t\\t\\t\\t</a:effectLst>\\n\\t\\t\\t\\t\\t\\t</a14:hiddenEffects>\\n\\t\\t\\t\\t\\t</a:ext>\\n\\t\\t\\t\\t</a:extLst>\\n\\t\\t\\t</p:spPr>\\n\\t\\t</p:pic>\\n\\t\\t').replace(/\\t|\\n/g,\"\")}}},{}],4:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),fileType:\"docx\",delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){var parts=parsed.slice(0,index);for(var i=parts.length-1;i>=0;i--){var part=parts[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils;DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\")},{\"./errors\":6,\"./memoize\":9,\"./module-wrapper\":11,\"./traits\":20,xmldom:23}],5:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.fileType===\"docx\"||this.fileType===\"pptx\"){this.fileTypeConfig=Docxtemplater.FileTypeConfig[this.fileType]}this.fileTypeConfig=this.options.fileTypeConfig||this.fileTypeConfig;this.options.xmlFileNames=[];return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip)}},{key:\"render\",value:function render(){var _this2=this;this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render();_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.encodeUtf8(DocUtils.xml2str(_this2.xmlDocuments[fileName]));return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":4,\"./errors\":6,\"./file-type-config\":7,\"./xml-matcher\":21,\"./xml-templater\":22}],6:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],7:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":12,\"./modules/loop\":13,\"./modules/rawxml\":14,\"./modules/render\":15,\"./modules/space-preserve\":16}],8:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":4,\"./errors\":6}],9:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],10:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],11:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],12:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));\nreturn[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":4,\"../errors\":6,\"../mergesort\":10,\"../module-wrapper\":11,\"../traits\":20}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":4,\"../module-wrapper\":11}],14:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":4,\"../errors\":6,\"../module-wrapper\":11}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":11}],16:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":11}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":4}],18:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":4,\"./scope-manager\":19}],19:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":6}],20:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){throwRawTagNotInParagraph({part:part,rootError:rootError})}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});var type=Object.prototype.toString.call(inner);if(type===\"[object Array]\"){inner=DocUtils.concatArrays(inner)}return DocUtils.concatArrays([postparsed.slice(0,left),[inner],postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":4,\"./errors\":6}],21:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":4,\"./memoize\":9}],22:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(){this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":4,\"./errors\":6,\"./lexer\":8,\"./parser.js\":17,\"./render.js\":18,\"./scope-manager\":19,\"./xml-matcher\":21}],23:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":24,\"./sax\":25}],24:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){\nreturn true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"<!--\",node.data,\"-->\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],25:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"-->\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/index.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var templates=require(\"./templates\");var DocUtils=require(\"docxtemplater\").DocUtils;var DOMParser=require(\"xmldom\").DOMParser;function isNaN(number){return!(number===number)}var ImgManager=require(\"./imgManager\");var moduleName=\"open-xml-templating/docxtemplater-image-module\";function getInnerDocx(_ref){var part=_ref.part;return part}function getInnerPptx(_ref2){var part=_ref2.part,left=_ref2.left,right=_ref2.right,postparsed=_ref2.postparsed;var xmlString=postparsed.slice(left+1,right).reduce(function(concat,item){return concat+item.value},\"\");var xmlDoc=(new DOMParser).parseFromString(\"<xml>\"+xmlString+\"</xml>\");var offset=xmlDoc.getElementsByTagName(\"a:off\");var ext=xmlDoc.getElementsByTagName(\"a:ext\");part.ext={cx:parseInt(ext[0].getAttribute(\"cx\"),10),cy:parseInt(ext[0].getAttribute(\"cy\"),10)};part.offset={x:parseInt(offset[0].getAttribute(\"x\"),10),y:parseInt(offset[0].getAttribute(\"y\"),10)};return part}var ImageModule=function(){function ImageModule(options){_classCallCheck(this,ImageModule);this.name=\"ImageModule\";this.options=options||{};this.imgManagers={};if(this.options.centered==null){this.options.centered=false}if(this.options.getImage==null){throw new Error(\"You should pass getImage\")}if(this.options.getSize==null){throw new Error(\"You should pass getSize\")}this.imageNumber=1}_createClass(ImageModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){\nvar relsFiles=docxtemplater.zip.file(/\\.xml\\.rels/).concat(docxtemplater.zip.file(/\\[Content_Types\\].xml/)).map(function(file){return file.name});this.fileTypeConfig=docxtemplater.fileTypeConfig;this.fileType=docxtemplater.fileType;this.zip=docxtemplater.zip;options.xmlFileNames=options.xmlFileNames.concat(relsFiles);return options}},{key:\"set\",value:function set(options){if(options.zip){this.zip=options.zip}if(options.xmlDocuments){this.xmlDocuments=options.xmlDocuments}}},{key:\"parse\",value:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent.substring(0,2)===\"%%\"){return{type:type,value:placeHolderContent.substr(2),module:module,centered:true}}if(placeHolderContent.substring(0,1)===\"%\"){return{type:type,value:placeHolderContent.substr(1),module:module,centered:false}}return null}},{key:\"postparse\",value:function postparse(parsed){var expandTo=void 0;var getInner=void 0;if(this.fileType===\"pptx\"){expandTo=\"p:sp\";getInner=getInnerPptx}else{expandTo=this.options.centered?\"w:p\":\"w:t\";getInner=getInnerDocx}return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:expandTo})}},{key:\"render\",value:function render(part,options){this.imgManagers[options.filePath]=this.imgManagers[options.filePath]||new ImgManager(this.zip,options.filePath,this.xmlDocuments,this.fileType);var imgManager=this.imgManagers[options.filePath];if(!part.type===\"placeholder\"||part.module!==moduleName){return null}try{var tagValue=options.scopeManager.getValue(part.value);if(!tagValue){throw new Error(\"tagValue is empty\")}var imgBuffer=this.options.getImage(tagValue,part.value);var rId=imgManager.addImageRels(this.getNextImageName(),imgBuffer);var sizePixel=this.options.getSize(imgBuffer,tagValue,part.value);return this.getRenderedPart(part,rId,sizePixel)}catch(e){return{value:this.fileTypeConfig.tagTextXml}}}},{key:\"getRenderedPart\",value:function getRenderedPart(part,rId,sizePixel){if(isNaN(rId)){throw new Error(\"rId is NaN, aborting\")}var size=[DocUtils.convertPixelsToEmus(sizePixel[0]),DocUtils.convertPixelsToEmus(sizePixel[1])];var centered=this.options.centered||part.centered;var newText=void 0;if(this.fileType===\"pptx\"){newText=this.getRenderedPartPptx(part,rId,size,centered)}else{newText=this.getRenderedPartDocx(rId,size,centered)}return{value:newText}}},{key:\"getRenderedPartPptx\",value:function getRenderedPartPptx(part,rId,size,centered){var offset={x:part.offset.x,y:part.offset.y};var cellCX=part.ext.cx;var cellCY=part.ext.cy;var imgW=size[0];var imgH=size[1];if(centered){offset.x+=cellCX/2-imgW/2;offset.y+=cellCY/2-imgH/2}return templates.getPptxImageXml(rId,[imgW,imgH],offset)}},{key:\"getRenderedPartDocx\",value:function getRenderedPartDocx(rId,size,centered){return centered?templates.getImageXmlCentered(rId,size):templates.getImageXml(rId,size)}},{key:\"getNextImageName\",value:function getNextImageName(){var name=\"image_generated_\"+this.imageNumber+\".png\";this.imageNumber++;return name}}]);return ImageModule}();module.exports=ImageModule},{\"./imgManager\":2,\"./templates\":3,docxtemplater:5,xmldom:23}]},{},[])(\"/src/js/index.js\")});","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Docxtemplater=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){\"use strict\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var memoize=require(\"./memoize\");var DOMParser=require(\"xmldom\").DOMParser;var XMLSerializer=require(\"xmldom\").XMLSerializer;var Errors=require(\"./errors\");var DocUtils={};function parser(tag){return _defineProperty({},\"get\",function get(scope){if(tag===\".\"){return scope}return scope[tag]})}DocUtils.defaults={nullGetter:function nullGetter(part){if(!part.module){return\"undefined\"}if(part.module===\"rawxml\"){return\"\"}return\"\"},parser:memoize(parser),delimiters:{start:\"{\",end:\"}\"}};DocUtils.mergeObjects=function(){var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]]}}return resObj};DocUtils.xml2str=function(xmlNode){var a=new XMLSerializer;return a.serializeToString(xmlNode)};DocUtils.decodeUtf8=function(s){try{if(s===undefined){return undefined}return decodeURIComponent(escape(DocUtils.convertSpaces(s)))}catch(e){var err=new Error(\"End\");err.properties.data=s;err.properties.explanation=\"Could not decode string to UTF8\";throw err}};DocUtils.encodeUtf8=function(s){return unescape(encodeURIComponent(s))};DocUtils.str2xml=function(str,errorHandler){var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,\"text/xml\")};DocUtils.charMap={\"&\":\"&amp;\",\"'\":\"&apos;\",\"<\":\"&lt;\",\">\":\"&gt;\"};var regexStripRegexp=/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;DocUtils.escapeRegExp=function(str){return str.replace(regexStripRegexp,\"\\\\$&\")};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),\"g\"),rend:new RegExp(DocUtils.escapeRegExp(endChar),\"g\"),start:startChar,end:endChar}});DocUtils.wordToUtf8=function(string){var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end)}return string};DocUtils.utf8ToWord=function(string){if(typeof string!==\"string\"){string=string.toString()}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start)}return string};DocUtils.cloneDeep=function(obj){return JSON.parse(JSON.stringify(obj))};DocUtils.concatArrays=function(arrays){return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result},[])};var spaceRegexp=new RegExp(String.fromCharCode(160),\"g\");DocUtils.convertSpaces=function(s){return s.replace(spaceRegexp,\" \")};DocUtils.pregMatchAll=function(regex,content){var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index})}return matchArray};DocUtils.sizeOfObject=function(obj){return Object.keys(obj).length};function throwXmlTagNotFound(options){var err=new Errors.XTTemplateError(\"No tag '\"+options.element+\"' was found at the \"+options.position);err.properties={id:\"no_xml_tag_found_at_\"+options.position,explanation:\"No tag '\"+options.element+\"' was found at the \"+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err}DocUtils.getRight=function(parsed,element,index){for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value===\"</\"+element+\">\"){return i}}throwXmlTagNotFound({position:\"right\",element:element,parsed:parsed,index:index})};DocUtils.getLeft=function(parsed,element,index){for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf(\"<\"+element)===0&&[\">\",\" \"].indexOf(part.value[element.length+1])!==-1){return i}}throwXmlTagNotFound({position:\"left\",element:element,parsed:parsed,index:index})};module.exports=DocUtils},{\"./errors\":2,\"./memoize\":5,xmldom:19}],2:[function(require,module,exports){\"use strict\";function XTError(message){this.name=\"GenericError\";this.message=message;this.stack=new Error(message).stack}XTError.prototype=Error.prototype;function XTTemplateError(message){this.name=\"TemplateError\";this.message=message;this.stack=new Error(message).stack}XTTemplateError.prototype=new XTError;function XTScopeParserError(message){this.name=\"ScopeParserError\";this.message=message;this.stack=new Error(message).stack}XTScopeParserError.prototype=new XTError;function XTInternalError(message){this.name=\"InternalError\";this.properties={explanation:\"InternalError\"};this.message=message;this.stack=new Error(message).stack}XTInternalError.prototype=new XTError;module.exports={XTError:XTError,XTTemplateError:XTTemplateError,XTInternalError:XTInternalError,XTScopeParserError:XTScopeParserError}},{}],3:[function(require,module,exports){\"use strict\";var loopModule=require(\"./modules/loop\");var spacePreserveModule=require(\"./modules/space-preserve\");var rawXmlModule=require(\"./modules/rawxml\");var expandPairTrait=require(\"./modules/expand-pair-trait\");var render=require(\"./modules/render\");var PptXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/ppt\\/(slides|slideMasters)\\/(slide|slideMaster)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"ppt/presentation.xml\"])},textPath:\"ppt/slides/slide1.xml\",tagsXmlTextArray:[\"a:t\",\"m:t\"],tagsXmlLexedArray:[\"p:sp\",\"a:tc\",\"a:tr\",\"a:table\",\"a:p\",\"a:r\"],tagRawXml:\"p:sp\",tagTextXml:\"a:t\",baseModules:[render,expandPairTrait,rawXmlModule,loopModule]};var DocXFileTypeConfig={getTemplatedFiles:function getTemplatedFiles(zip){var slideTemplates=zip.file(/word\\/(header|footer)\\d+\\.xml/).map(function(file){return file.name});return slideTemplates.concat([\"word/document.xml\"])},textPath:\"word/document.xml\",tagsXmlTextArray:[\"w:t\",\"m:t\"],tagsXmlLexedArray:[\"w:tc\",\"w:tr\",\"w:table\",\"w:p\",\"w:r\"],tagRawXml:\"w:p\",tagTextXml:\"w:t\",baseModules:[render,spacePreserveModule,expandPairTrait,rawXmlModule,loopModule]};module.exports={docx:DocXFileTypeConfig,pptx:PptXFileTypeConfig}},{\"./modules/expand-pair-trait\":8,\"./modules/loop\":9,\"./modules/rawxml\":10,\"./modules/render\":11,\"./modules/space-preserve\":12}],4:[function(require,module,exports){\"use strict\";var Errors=require(\"./errors\");var DocUtils=require(\"./doc-utils\");function inRange(range,match){return range[0]<=match.offset&&match.offset<range[1]}function updateInTextTag(part,inTextTag){if(part.type===\"tag\"&&part.position===\"start\"&&part.text){if(inTextTag){throw new Error(\"Malformed xml : Already in text tag\")}return true}if(part.type===\"tag\"&&part.position===\"end\"&&part.text){if(!inTextTag){throw new Error(\"Malformed xml : Already not in text tag\")}return false}return inTextTag}function offsetSort(a,b){return a.offset-b.offset}function getTag(tag){var start=1;if(tag[1]===\"/\"){start=2}var index=tag.indexOf(\" \");var end=index===-1?tag.length-1:index;return{tag:tag.slice(start,end),position:start===1?\"start\":\"end\"}}function tagMatcher(content,textMatchArray,othersMatchArray){var cursor=0;var contentLength=content.length;var allMatches=DocUtils.concatArrays([textMatchArray.map(function(tag){return{tag:tag,text:true}}),othersMatchArray.map(function(tag){return{tag:tag,text:false}})]).reduce(function(allMatches,t){allMatches[t.tag]=t.text;return allMatches},{});var totalMatches=[];while(cursor<contentLength){cursor=content.indexOf(\"<\",cursor);if(cursor===-1){break}var offset=cursor;cursor=content.indexOf(\">\",cursor);var tagText=content.slice(offset,cursor+1);var _getTag=getTag(tagText),tag=_getTag.tag,position=_getTag.position;var text=allMatches[tag];if(text==null){continue}totalMatches.push({type:\"tag\",position:position,text:text,offset:offset,value:tagText})}return totalMatches}function throwUnopenedTagException(options){var err=new Errors.XTTemplateError(\"Unopened tag\");err.properties={xtag:options.xtag.split(\" \")[0],id:\"unopened_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function throwUnclosedTagException(options){var err=new Errors.XTTemplateError(\"Unclosed tag\");err.properties={xtag:options.xtag.split(\" \")[0].substr(1),id:\"unclosed_tag\",context:options.xtag,explanation:\"The tag beginning with '\"+options.xtag.substr(0,10)+\"' is unclosed\"};throw err}function assertDelimiterOrdered(delimiterMatches,fullText){var inDelimiter=false;var lastDelimiterMatch={offset:0};var xtag=void 0;delimiterMatches.forEach(function(delimiterMatch){xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(delimiterMatch.position===\"start\"&&inDelimiter||delimiterMatch.position===\"end\"&&!inDelimiter){if(delimiterMatch.position===\"start\"){throwUnclosedTagException({xtag:xtag})}else{throwUnopenedTagException({xtag:xtag})}}inDelimiter=!inDelimiter;lastDelimiterMatch=delimiterMatch});var delimiterMatch={offset:fullText.length};xtag=fullText.substr(lastDelimiterMatch.offset,delimiterMatch.offset-lastDelimiterMatch.offset);if(inDelimiter){throwUnclosedTagException({xtag:xtag})}}function getAllIndexes(arr,val,position){var indexes=[];var offset=-1;do{offset=arr.indexOf(val,offset+1);if(offset!==-1){indexes.push({offset:offset,position:position})}}while(offset!==-1);return indexes}function Reader(innerContentParts){var _this=this;this.innerContentParts=innerContentParts;this.full=\"\";this.parseDelimiters=function(delimiters){_this.full=_this.innerContentParts.join(\"\");var offset=0;_this.ranges=_this.innerContentParts.map(function(part){offset+=part.length;return offset-part.length});var delimiterMatches=DocUtils.concatArrays([getAllIndexes(_this.full,delimiters.start,\"start\"),getAllIndexes(_this.full,delimiters.end,\"end\")]).sort(offsetSort);assertDelimiterOrdered(delimiterMatches,_this.full);var delimiterLength={start:delimiters.start.length,end:delimiters.end.length};var cutNext=0;var delimiterIndex=0;_this.parsed=_this.ranges.map(function(offset,i){var range=[offset,offset+this.innerContentParts[i].length];var partContent=this.innerContentParts[i];var delimitersInOffset=[];while(delimiterIndex<delimiterMatches.length&&inRange(range,delimiterMatches[delimiterIndex])){delimitersInOffset.push(delimiterMatches[delimiterIndex]);delimiterIndex++}var parts=[];var cursor=0;if(cutNext>0){cursor=cutNext;cutNext=0}delimitersInOffset.forEach(function(delimiterInOffset){var value=partContent.substr(cursor,delimiterInOffset.offset-offset-cursor);if(value.length>0){parts.push({type:\"content\",value:value})}parts.push({type:\"delimiter\",position:delimiterInOffset.position});cursor=delimiterInOffset.offset-offset+delimiterLength[delimiterInOffset.position]});cutNext=cursor-partContent.length;var value=partContent.substr(cursor);if(value.length>0){parts.push({type:\"content\",value:value})}return parts},_this)}}module.exports={parse:function parse(xmlparsed,delimiters){var inTextTag=false;var innerContentParts=[];xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(inTextTag&&part.type===\"content\"){innerContentParts.push(part.value)}});var reader=new Reader(innerContentParts);reader.parseDelimiters(delimiters);var newArray=[];var index=0;xmlparsed.forEach(function(part){inTextTag=updateInTextTag(part,inTextTag);if(part.type===\"content\"){part.position=inTextTag?\"insidetag\":\"outsidetag\"}if(inTextTag&&part.type===\"content\"){Array.prototype.push.apply(newArray,reader.parsed[index].map(function(p){if(p.type===\"content\"){p.position=\"insidetag\"}return p}));index++}else{newArray.push(part)}});return newArray},xmlparse:function xmlparse(content,xmltags){var matches=tagMatcher(content,xmltags.text,xmltags.other);var cursor=0;var parsed=matches.reduce(function(parsed,match){var value=content.substr(cursor,match.offset-cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}cursor=match.offset+match.value.length;delete match.offset;if(match.value.length>0){parsed.push(match)}return parsed},[]);var value=content.substr(cursor);if(value.length>0){parsed.push({type:\"content\",value:value})}return parsed}}},{\"./doc-utils\":1,\"./errors\":2}],5:[function(require,module,exports){\"use strict\";function memoize(func){var stringifyJson=JSON.stringify,cache={};function cachedfun(){var hash=stringifyJson(arguments);return hash in cache?cache[hash]:cache[hash]=func.apply(this,arguments)}return cachedfun}module.exports=memoize},{}],6:[function(require,module,exports){\"use strict\";function getMinFromArrays(arrays,state){var minIndex=-1;for(var i=0,l=arrays.length;i<l;i++){if(state[i]>=arrays[i].length){continue}if(minIndex===-1||arrays[i][state[i]].offset<arrays[minIndex][state[minIndex]].offset){minIndex=i}}if(minIndex===-1){throw new Error(\"minIndex negative\")}return minIndex}module.exports=function(arrays){var totalLength=arrays.reduce(function(sum,array){return sum+array.length},0);arrays=arrays.filter(function(array){return array.length>0});var resultArray=new Array(totalLength);var state=arrays.map(function(){return 0});var i=0;while(i<=totalLength-1){var arrayIndex=getMinFromArrays(arrays,state);resultArray[i]=arrays[arrayIndex][state[arrayIndex]];state[arrayIndex]++;i++}return resultArray}},{}],7:[function(require,module,exports){\"use strict\";function emptyFun(){}function identity(i){return i}module.exports=function(module){var defaults={set:emptyFun,parse:emptyFun,render:emptyFun,getTraits:emptyFun,optionsTransformer:identity,getRenderedMap:identity,postparse:identity};if(Object.keys(defaults).every(function(key){return!module[key]})){throw new Error(\"This module cannot be wrapped, because it doesn't define any of the necessary functions\")}Object.keys(defaults).forEach(function(key){module[key]=module[key]||defaults[key]});return module}},{}],8:[function(require,module,exports){\"use strict\";var traitName=\"expandPair\";var mergeSort=require(\"../mergesort\");var DocUtils=require(\"../doc-utils\");var wrapper=require(\"../module-wrapper\");var _require=require(\"../traits\"),getExpandToDefault=_require.getExpandToDefault;var Errors=require(\"../errors\");function throwUnmatchedLoopException(options){var location=options.location;var t=location===\"start\"?\"unclosed\":\"unopened\";var T=location===\"start\"?\"Unclosed\":\"Unopened\";var err=new Errors.XTTemplateError(T+\" loop\");var tag=options.part.value;err.properties={id:t+\"_loop\",explanation:\"The loop with tag \"+tag+\" is \"+t,xtag:tag};throw err}function throwClosingTagNotMatchOpeningTag(options){var tags=options.tags;var err=new Errors.XTTemplateError(\"Closing tag does not match opening tag\");err.properties={id:\"closing_tag_does_not_match_opening_tag\",explanation:'The tag \"'+tags[0].value+'\" is closed by the tag \"'+tags[1].value+'\"',openingtag:tags[0].value,closingtag:tags[1].value};throw err}function getOpenCountChange(part){switch(part.location){case\"start\":return 1;case\"end\":return-1;default:throw new Error(\"Location should be one of 'start' or 'end' (given : \"+part.location+\")\")}}function getPairs(traits){if(traits.length===0){return[]}var countOpen=1;var firstTrait=traits[0];for(var i=1;i<traits.length;i++){var currentTrait=traits[i];countOpen+=getOpenCountChange(currentTrait.part);if(countOpen===0){if(currentTrait.part.value!==firstTrait.part.value&&currentTrait.part.value!==\"\"){throwClosingTagNotMatchOpeningTag({tags:[firstTrait.part,currentTrait.part]})}var outer=getPairs(traits.slice(i+1));return[[firstTrait,currentTrait]].concat(outer)}}var part=firstTrait.part;throwUnmatchedLoopException({part:part,location:part.location})}var expandPairTrait={name:\"ExpandPairTrait\",postparse:function postparse(parsed,_ref){var getTraits=_ref.getTraits,_postparse=_ref.postparse;var traits=getTraits(traitName,parsed);traits=traits.map(function(trait){return trait||[]});traits=mergeSort(traits);var pairs=getPairs(traits);var expandedPairs=pairs.map(function(pair){var expandTo=pair[0].part.expandTo;if(expandTo===\"auto\"){expandTo=getExpandToDefault(parsed.slice(pair[0].offset,pair[1].offset))}if(!expandTo){return[pair[0].offset,pair[1].offset]}var left=DocUtils.getLeft(parsed,expandTo,pair[0].offset);var right=DocUtils.getRight(parsed,expandTo,pair[1].offset);return[left,right]});var currentPairIndex=0;var innerParts=void 0;return parsed.reduce(function(newParsed,part,i){var inPair=currentPairIndex<pairs.length&&expandedPairs[currentPairIndex][0]<=i;var pair=pairs[currentPairIndex];var expandedPair=expandedPairs[currentPairIndex];if(!inPair){newParsed.push(part);return newParsed}if(expandedPair[0]===i){innerParts=[]}if(pair[0].offset!==i&&pair[1].offset!==i){innerParts.push(part)}if(expandedPair[1]===i){var basePart=parsed[pair[0].offset];delete basePart.location;delete basePart.expandTo;basePart.subparsed=_postparse(innerParts);newParsed.push(basePart);currentPairIndex++}return newParsed},[])}};module.exports=function(){return wrapper(expandPairTrait)}},{\"../doc-utils\":1,\"../errors\":2,\"../mergesort\":6,\"../module-wrapper\":7,\"../traits\":16}],9:[function(require,module,exports){\"use strict\";var DocUtils=require(\"../doc-utils\");var dashInnerRegex=/^-([^\\s]+)\\s(.+)$/;var wrapper=require(\"../module-wrapper\");var moduleName=\"loop\";var loopModule={name:\"LoopModule\",parse:function parse(placeHolderContent){var module=moduleName;var type=\"placeholder\";if(placeHolderContent[0]===\"#\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:false}}if(placeHolderContent[0]===\"^\"){return{type:type,value:placeHolderContent.substr(1),expandTo:\"auto\",module:module,location:\"start\",inverted:true}}if(placeHolderContent[0]===\"/\"){return{type:type,value:placeHolderContent.substr(1),module:module,location:\"end\"}}if(placeHolderContent[0]===\"-\"){var value=placeHolderContent.replace(dashInnerRegex,\"$2\");var expandTo=placeHolderContent.replace(dashInnerRegex,\"$1\");return{type:type,value:value,expandTo:expandTo,module:module,location:\"start\",inverted:false}}return null},getTraits:function getTraits(traitName,parsed){if(traitName!==\"expandPair\"){return}return parsed.reduce(function(tags,part,offset){if(part.type===\"placeholder\"&&part.module===moduleName){tags.push({part:part,offset:offset})}return tags},[])},render:function render(part,options){if(!part.type===\"placeholder\"||part.module!==moduleName){return null}var totalValue=[];function loopOver(scope){var scopeManager=options.scopeManager.createSubScopeManager(scope,part.value);totalValue.push(options.render(DocUtils.mergeObjects({},options,{compiled:part.subparsed,tags:{},scopeManager:scopeManager})))}options.scopeManager.loopOver(part.value,loopOver,part.inverted);return{value:totalValue.join(\"\")}}};module.exports=function(){return wrapper(loopModule)}},{\"../doc-utils\":1,\"../module-wrapper\":7}],10:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"../doc-utils\");var Errors=require(\"../errors\");var moduleName=\"rawxml\";var wrapper=require(\"../module-wrapper\");function throwRawTagShouldBeOnlyTextInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag should be the only text in paragraph\");var tag=options.part.value;err.properties={id:\"raw_xml_tag_should_be_only_text_in_paragraph\",explanation:\"The tag \"+tag,xtag:options.part.value,paragraphParts:options.paragraphParts};throw err}function getInner(_ref){var part=_ref.part,left=_ref.left,right=_ref.right,postparsed=_ref.postparsed,index=_ref.index;var paragraphParts=postparsed.slice(left+1,right);paragraphParts.forEach(function(p,i){if(i===index-left-1){return}if(p.type===\"placeholder\"||p.type===\"content\"&&p.position===\"insidetag\"){throwRawTagShouldBeOnlyTextInParagraph({paragraphParts:paragraphParts,part:part})}});return part}var RawXmlModule=function(){function RawXmlModule(){_classCallCheck(this,RawXmlModule);this.name=\"RawXmlModule\"}_createClass(RawXmlModule,[{key:\"optionsTransformer\",value:function optionsTransformer(options,docxtemplater){this.fileTypeConfig=docxtemplater.fileTypeConfig;return options}},{key:\"parse\",value:function parse(placeHolderContent){var type=\"placeholder\";if(placeHolderContent[0]!==\"@\"){return null}return{type:type,value:placeHolderContent.substr(1),module:moduleName}}},{key:\"postparse\",value:function postparse(parsed){return DocUtils.traits.expandToOne(parsed,{moduleName:moduleName,getInner:getInner,expandTo:this.fileTypeConfig.tagRawXml})}},{key:\"render\",value:function render(part,options){if(part.module!==moduleName){return null}var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return{value:value}}}]);return RawXmlModule}();module.exports=function(){return wrapper(new RawXmlModule)}},{\"../doc-utils\":1,\"../errors\":2,\"../module-wrapper\":7}],11:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var wrapper=require(\"../module-wrapper\");var Render=function(){function Render(){_classCallCheck(this,Render);this.name=\"Render\"}_createClass(Render,[{key:\"set\",value:function set(obj){if(obj.compiled){this.compiled=obj.compiled}if(obj.data!=null){this.data=obj.data}}},{key:\"getRenderedMap\",value:function getRenderedMap(mapper){var _this=this;return Object.keys(this.compiled).reduce(function(mapper,from){mapper[from]={from:from,data:_this.data};return mapper},mapper)}}]);return Render}();module.exports=function(){return wrapper(new Render)}},{\"../module-wrapper\":7}],12:[function(require,module,exports){\"use strict\";var wrapper=require(\"../module-wrapper\");var spacePreserve={name:\"SpacePreserveModule\",postparse:function postparse(parsed){var chunk=[];var inChunk=false;var result=parsed.reduce(function(parsed,part){if(part.type===\"tag\"&&part.position===\"start\"&&part.text&&part.value===\"<w:t>\"){inChunk=true}if(inChunk){if(part.type===\"placeholder\"&&!part.module){chunk[0].value='<w:t xml:space=\"preserve\">'}chunk.push(part)}else{parsed.push(part)}if(part.type===\"tag\"&&part.position===\"end\"&&part.text&&part.value===\"</w:t>\"){Array.prototype.push.apply(parsed,chunk);inChunk=false;chunk=[]}return parsed},[]);Array.prototype.push.apply(result,chunk);return result}};module.exports=function(){return wrapper(spacePreserve)}},{\"../module-wrapper\":7}],13:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var parser={postparse:function postparse(parsed,modules){function getTraits(traitName,parsed){return modules.map(function(module){return module.getTraits(traitName,parsed)})}function postparse(parsed){return modules.reduce(function(parsed,module){return module.postparse(parsed,{postparse:postparse,getTraits:getTraits})},parsed)}return postparse(parsed)},parse:function parse(lexed,modules){function moduleParse(placeHolderContent,parsed){var moduleParsed=void 0;for(var i=0,l=modules.length;i<l;i++){var _module=modules[i];moduleParsed=_module.parse(placeHolderContent);if(moduleParsed){parsed.push(moduleParsed);return moduleParsed}}return null}var inPlaceHolder=false;var placeHolderContent=void 0;var tailParts=[];return lexed.reduce(function(parsed,token){if(token.type===\"delimiter\"){inPlaceHolder=token.position===\"start\";if(token.position===\"end\"){placeHolderContent=DocUtils.wordToUtf8(placeHolderContent);if(!moduleParse(placeHolderContent,parsed)){parsed.push({type:\"placeholder\",value:placeHolderContent})}Array.prototype.push.apply(parsed,tailParts);tailParts=[];return parsed}placeHolderContent=\"\";return parsed}if(inPlaceHolder){if(token.type===\"content\"&&token.position===\"insidetag\"){placeHolderContent+=token.value}else{tailParts.push(token)}return parsed}parsed.push(token);return parsed},[])}};module.exports=parser},{\"./doc-utils\":1}],14:[function(require,module,exports){\"use strict\";var ScopeManager=require(\"./scope-manager\");var DocUtils=require(\"./doc-utils\");function moduleRender(part,options){var moduleRendered=void 0;for(var i=0,l=options.modules.length;i<l;i++){var _module=options.modules[i];moduleRendered=_module.render(part,options);if(moduleRendered){return moduleRendered}}return false}function render(options){options.render=render;options.modules=options.modules;if(!options.scopeManager){options.scopeManager=ScopeManager.createBaseScopeManager(options)}return options.compiled.map(function(part){var moduleRendered=moduleRender(part,options);if(moduleRendered){return moduleRendered.value}if(part.type===\"placeholder\"){var value=options.scopeManager.getValue(part.value);if(value==null){value=options.nullGetter(part)}return DocUtils.utf8ToWord(value)}if(part.type===\"content\"||part.type===\"tag\"){return part.value}throw new Error('Unimplemented tag type \"'+part.type+'\"')}).join(\"\")}module.exports=render},{\"./doc-utils\":1,\"./scope-manager\":15}],15:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var Errors=require(\"./errors\");var ScopeManager=function(){function ScopeManager(options){_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser}_createClass(ScopeManager,[{key:\"loopOver\",value:function loopOver(tag,callback,inverted){inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted)}},{key:\"functorIfInverted\",value:function functorIfInverted(inverted,functor,value){if(inverted){functor(value)}}},{key:\"isValueFalsy\",value:function isValueFalsy(value,type){return value==null||!value||type===\"[object Array]\"&&value.length===0}},{key:\"loopOverValue\",value:function loopOverValue(value,functor,inverted){var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue)}if(type===\"[object Array]\"){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope)}return}if(type===\"[object Object]\"){return this.functorIfInverted(!inverted,functor,value)}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue)}}},{key:\"getValue\",value:function getValue(tag,num){this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag)}catch(error){err=new Errors.XTScopeParserError(\"Scope parser compilation failed\");err.properties={id:\"scopeparser_compilation_failed\",tag:tag,explanation:\"The scope parser for the tag \"+tag+\" failed to compile\",rootError:error};throw err}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList})}catch(error){err=new Errors.XTScopeParserError(\"Scope parser execution failed\");err.properties={id:\"scopeparser_execution_failed\",explanation:\"The scope parser for the tag \"+tag+\" failed to execute\",scope:scope,tag:tag,rootError:error};throw err}if(result==null&&this.num>0){return this.getValue(tag,this.num-1)}return result}},{key:\"createSubScopeManager\",value:function createSubScopeManager(scope,tag){var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options)}}]);return ScopeManager}();ScopeManager.createBaseScopeManager=function(_ref){var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options)};module.exports=ScopeManager},{\"./errors\":2}],16:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var Errors=require(\"./errors\");function throwRawTagNotInParagraph(options){var err=new Errors.XTTemplateError(\"Raw tag not in paragraph\");var tag=options.part.value;err.properties={id:\"raw_tag_outerxml_invalid\",explanation:'The tag \"'+tag+'\"',rootError:options.rootError,xtag:tag,postparsed:options.postparsed,expandTo:options.expandTo,index:options.index};throw err}function lastTagIsOpenTag(array,tag){if(array.length===0){return false}var lastTag=array[array.length-1];var innerLastTag=lastTag.tag.substr(1);var innerCurrentTag=tag.substr(2,tag.length-3);return innerLastTag.indexOf(innerCurrentTag)===0}function addTag(array,tag){array.push({tag:tag});return array}function getListXmlElements(parts){var tags=parts.filter(function(part){return part.type===\"tag\"}).map(function(part){return part.value});var result=[];for(var i=0,tag;i<tags.length;i++){tag=tags[i];if(tag[1]===\"/\"){if(lastTagIsOpenTag(result,tag)){result.pop()}else{result=addTag(result,tag)}}else if(tag[tag.length-1]!==\"/\"){result=addTag(result,tag)}}return result}function getExpandToDefault(parts){var xmlElements=getListXmlElements(parts);for(var i=0;i<xmlElements.length;i++){var xmlElement=xmlElements[i];if(xmlElement.tag.indexOf(\"<w:tc\")===0){return\"w:tr\"}if(xmlElement.tag.indexOf(\"<a:tc\")===0){return\"a:tr\"}}return false}function expandOne(part,postparsed,options){var expandTo=part.expandTo||options.expandTo;var index=postparsed.indexOf(part);if(!expandTo){return postparsed}var right=void 0,left=void 0;try{right=DocUtils.getRight(postparsed,expandTo,index);left=DocUtils.getLeft(postparsed,expandTo,index)}catch(rootError){if(rootError instanceof Errors.XTTemplateError){throwRawTagNotInParagraph({part:part,rootError:rootError,postparsed:postparsed,expandTo:expandTo,index:index})}throw rootError}var leftParts=postparsed.slice(left,index);var rightParts=postparsed.slice(index+1,right+1);var inner=options.getInner({index:index,part:part,leftParts:leftParts,rightParts:rightParts,left:left,right:right,postparsed:postparsed});if(!inner.length){inner.expanded=[leftParts,rightParts];inner=[inner]}return DocUtils.concatArrays([postparsed.slice(0,left),inner,postparsed.slice(right+1)])}function expandToOne(postparsed,options){var expandToElements=postparsed.reduce(function(elements,part){if(part.type===\"placeholder\"&&part.module===options.moduleName){elements.push(part)}return elements},[]);expandToElements.forEach(function(part){postparsed=expandOne(part,postparsed,options)});return postparsed}module.exports={expandToOne:expandToOne,getExpandToDefault:getExpandToDefault}},{\"./doc-utils\":1,\"./errors\":2}],17:[function(require,module,exports){\"use strict\";var DocUtils=require(\"./doc-utils\");var memoize=require(\"./memoize\");function handleRecursiveCase(res){function replacerUnshift(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.shift();var match=pn.array[0]+pn.array[1];pn.array.unshift(match);pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.first=true;res.matches.unshift(pn);res.charactersAdded.unshift(0);return res.charactersAddedCumulative.unshift(0)}if(res.content.indexOf(\"<\")===-1&&res.content.indexOf(\">\")===-1){res.content.replace(/^()([^<>]*)$/,replacerUnshift)}var r=new RegExp(\"^()([^<]+)</(?:\"+res.tagsXmlArrayJoined+\")>\");res.content.replace(r,replacerUnshift);function replacerPush(){var pn={array:Array.prototype.slice.call(arguments)};pn.array.pop();var offset=pn.array.pop();pn.offset=offset;pn.last=true;res.matches.push(pn);res.charactersAdded.push(0);return res.charactersAddedCumulative.push(0)}r=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^>]+)$\");res.content.replace(r,replacerPush);return res}function xmlMatcher(content,tagsXmlArray){var res={};res.content=content;res.tagsXmlArray=tagsXmlArray;res.tagsXmlArrayJoined=res.tagsXmlArray.join(\"|\");var regexp=new RegExp(\"(<(?:\"+res.tagsXmlArrayJoined+\")[^>]*>)([^<>]*)</(?:\"+res.tagsXmlArrayJoined+\")>\",\"g\");res.matches=DocUtils.pregMatchAll(regexp,res.content);res.charactersAddedCumulative=res.matches.map(function(){return 0});res.charactersAdded=res.matches.map(function(){return 0});return handleRecursiveCase(res)}var memoized=memoize(xmlMatcher);module.exports=function(content,tagsXmlArray){return DocUtils.cloneDeep(memoized(content,tagsXmlArray))}},{\"./doc-utils\":1,\"./memoize\":5}],18:[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");var ScopeManager=require(\"./scope-manager\");var xmlMatcher=require(\"./xml-matcher\");var Errors=require(\"./errors\");var Lexer=require(\"./lexer\");var Parser=require(\"./parser.js\");var _render=require(\"./render.js\");function _getFullText(content,tagsXmlArray){var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2]});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join(\"\")))}module.exports=function(){function XmlTemplater(content,options){_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content)}_createClass(XmlTemplater,[{key:\"load\",value:function load(content){if(typeof content!==\"string\"){var err=new Errors.XTInternalError(\"Content must be a string\");err.properties.id=\"xmltemplater_content_must_be_string\";throw err}this.content=content}},{key:\"setTags\",value:function setTags(tags){this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this}},{key:\"fromJson\",value:function fromJson(options){this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key]},this)}},{key:\"getFullText\",value:function getFullText(){return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray)}},{key:\"setModules\",value:function setModules(obj){this.modules.forEach(function(module){module.set(obj)})}},{key:\"parse\",value:function parse(){this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this}},{key:\"render\",value:function render(to){this.filePath=to;this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this}}]);return XmlTemplater}()},{\"./doc-utils\":1,\"./errors\":2,\"./lexer\":4,\"./parser.js\":13,\"./render.js\":14,\"./scope-manager\":15,\"./xml-matcher\":17}],19:[function(require,module,exports){function DOMParser(options){this.options=options||{locator:{}}}DOMParser.prototype.parseFromString=function(source,mimeType){var options=this.options;var sax=new XMLReader;var domBuilder=options.domBuilder||new DOMHandler;var errorHandler=options.errorHandler;var locator=options.locator;var defaultNSMap=options.xmlns||{};var entityMap={lt:\"<\",gt:\">\",amp:\"&\",quot:'\"',apos:\"'\"};if(locator){domBuilder.setDocumentLocator(locator)}sax.errorHandler=buildErrorHandler(errorHandler,domBuilder,locator);sax.domBuilder=options.domBuilder||domBuilder;if(/\\/x?html?$/.test(mimeType)){entityMap.nbsp=\" \";entityMap.copy=\"©\";defaultNSMap[\"\"]=\"http://www.w3.org/1999/xhtml\"}defaultNSMap.xml=defaultNSMap.xml||\"http://www.w3.org/XML/1998/namespace\";if(source){sax.parse(source,defaultNSMap,entityMap)}else{sax.errorHandler.error(\"invalid doc source\")}return domBuilder.doc};function buildErrorHandler(errorImpl,domBuilder,locator){if(!errorImpl){if(domBuilder instanceof DOMHandler){return domBuilder}errorImpl=domBuilder}var errorHandler={};var isCallback=errorImpl instanceof Function;locator=locator||{};function build(key){var fn=errorImpl[key];if(!fn&&isCallback){fn=errorImpl.length==2?function(msg){errorImpl(key,msg)}:errorImpl}errorHandler[key]=fn&&function(msg){fn(\"[xmldom \"+key+\"]\\t\"+msg+_locator(locator))}||function(){}}build(\"warning\");build(\"error\");build(\"fatalError\");return errorHandler}function DOMHandler(){this.cdata=false}function position(locator,node){node.lineNumber=locator.lineNumber;node.columnNumber=locator.columnNumber}DOMHandler.prototype={startDocument:function(){this.doc=(new DOMImplementation).createDocument(null,null,null);if(this.locator){this.doc.documentURI=this.locator.systemId}},startElement:function(namespaceURI,localName,qName,attrs){var doc=this.doc;var el=doc.createElementNS(namespaceURI,qName||localName);var len=attrs.length;appendElement(this,el);this.currentElement=el;this.locator&&position(this.locator,el);for(var i=0;i<len;i++){var namespaceURI=attrs.getURI(i);var value=attrs.getValue(i);var qName=attrs.getQName(i);var attr=doc.createAttributeNS(namespaceURI,qName);this.locator&&position(attrs.getLocator(i),attr);attr.value=attr.nodeValue=value;el.setAttributeNode(attr)}},endElement:function(namespaceURI,localName,qName){var current=this.currentElement;var tagName=current.tagName;this.currentElement=current.parentNode},startPrefixMapping:function(prefix,uri){},endPrefixMapping:function(prefix){},processingInstruction:function(target,data){var ins=this.doc.createProcessingInstruction(target,data);this.locator&&position(this.locator,ins);appendElement(this,ins)},ignorableWhitespace:function(ch,start,length){},characters:function(chars,start,length){chars=_toString.apply(this,arguments);if(chars){if(this.cdata){var charNode=this.doc.createCDATASection(chars)}else{var charNode=this.doc.createTextNode(chars)}if(this.currentElement){this.currentElement.appendChild(charNode)}else if(/^\\s*$/.test(chars)){this.doc.appendChild(charNode)}this.locator&&position(this.locator,charNode)}},skippedEntity:function(name){},endDocument:function(){this.doc.normalize()},setDocumentLocator:function(locator){if(this.locator=locator){locator.lineNumber=0}},comment:function(chars,start,length){chars=_toString.apply(this,arguments);var comm=this.doc.createComment(chars);this.locator&&position(this.locator,comm);appendElement(this,comm)},startCDATA:function(){this.cdata=true},endCDATA:function(){this.cdata=false},startDTD:function(name,publicId,systemId){var impl=this.doc.implementation;if(impl&&impl.createDocumentType){var dt=impl.createDocumentType(name,publicId,systemId);this.locator&&position(this.locator,dt);appendElement(this,dt)}},warning:function(error){console.warn(\"[xmldom warning]\\t\"+error,_locator(this.locator))},error:function(error){console.error(\"[xmldom error]\\t\"+error,_locator(this.locator))},fatalError:function(error){console.error(\"[xmldom fatalError]\\t\"+error,_locator(this.locator));throw error}};function _locator(l){if(l){return\"\\n@\"+(l.systemId||\"\")+\"#[line:\"+l.lineNumber+\",col:\"+l.columnNumber+\"]\"}}function _toString(chars,start,length){if(typeof chars==\"string\"){return chars.substr(start,length)}else{if(chars.length>=start+length||start){return new java.lang.String(chars,start,length)+\"\"}return chars}}\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){DOMHandler.prototype[key]=function(){return null}});function appendElement(hander,node){if(!hander.currentElement){hander.doc.appendChild(node)}else{hander.currentElement.appendChild(node)}}var XMLReader=require(\"./sax\").XMLReader;var DOMImplementation=exports.DOMImplementation=require(\"./dom\").DOMImplementation;exports.XMLSerializer=require(\"./dom\").XMLSerializer;exports.DOMParser=DOMParser},{\"./dom\":20,\"./sax\":21}],20:[function(require,module,exports){function copy(src,dest){for(var p in src){dest[p]=src[p]}}function _extends(Class,Super){var pt=Class.prototype;if(Object.create){var ppt=Object.create(Super.prototype);pt.__proto__=ppt}if(!(pt instanceof Super)){function t(){}t.prototype=Super.prototype;t=new t;copy(pt,t);Class.prototype=pt=t}if(pt.constructor!=Class){if(typeof Class!=\"function\"){console.error(\"unknow Class:\"+Class)}pt.constructor=Class}}var htmlns=\"http://www.w3.org/1999/xhtml\";var NodeType={};var ELEMENT_NODE=NodeType.ELEMENT_NODE=1;var ATTRIBUTE_NODE=NodeType.ATTRIBUTE_NODE=2;var TEXT_NODE=NodeType.TEXT_NODE=3;var CDATA_SECTION_NODE=NodeType.CDATA_SECTION_NODE=4;var ENTITY_REFERENCE_NODE=NodeType.ENTITY_REFERENCE_NODE=5;var ENTITY_NODE=NodeType.ENTITY_NODE=6;var PROCESSING_INSTRUCTION_NODE=NodeType.PROCESSING_INSTRUCTION_NODE=7;var COMMENT_NODE=NodeType.COMMENT_NODE=8;var DOCUMENT_NODE=NodeType.DOCUMENT_NODE=9;var DOCUMENT_TYPE_NODE=NodeType.DOCUMENT_TYPE_NODE=10;var DOCUMENT_FRAGMENT_NODE=NodeType.DOCUMENT_FRAGMENT_NODE=11;var NOTATION_NODE=NodeType.NOTATION_NODE=12;var ExceptionCode={};var ExceptionMessage={};var INDEX_SIZE_ERR=ExceptionCode.INDEX_SIZE_ERR=(ExceptionMessage[1]=\"Index size error\",1);var DOMSTRING_SIZE_ERR=ExceptionCode.DOMSTRING_SIZE_ERR=(ExceptionMessage[2]=\"DOMString size error\",2);var HIERARCHY_REQUEST_ERR=ExceptionCode.HIERARCHY_REQUEST_ERR=(ExceptionMessage[3]=\"Hierarchy request error\",3);var WRONG_DOCUMENT_ERR=ExceptionCode.WRONG_DOCUMENT_ERR=(ExceptionMessage[4]=\"Wrong document\",4);var INVALID_CHARACTER_ERR=ExceptionCode.INVALID_CHARACTER_ERR=(ExceptionMessage[5]=\"Invalid character\",5);var NO_DATA_ALLOWED_ERR=ExceptionCode.NO_DATA_ALLOWED_ERR=(ExceptionMessage[6]=\"No data allowed\",6);var NO_MODIFICATION_ALLOWED_ERR=ExceptionCode.NO_MODIFICATION_ALLOWED_ERR=(ExceptionMessage[7]=\"No modification allowed\",7);var NOT_FOUND_ERR=ExceptionCode.NOT_FOUND_ERR=(ExceptionMessage[8]=\"Not found\",8);var NOT_SUPPORTED_ERR=ExceptionCode.NOT_SUPPORTED_ERR=(ExceptionMessage[9]=\"Not supported\",9);var INUSE_ATTRIBUTE_ERR=ExceptionCode.INUSE_ATTRIBUTE_ERR=(ExceptionMessage[10]=\"Attribute in use\",10);var INVALID_STATE_ERR=ExceptionCode.INVALID_STATE_ERR=(ExceptionMessage[11]=\"Invalid state\",11);var SYNTAX_ERR=ExceptionCode.SYNTAX_ERR=(ExceptionMessage[12]=\"Syntax error\",12);var INVALID_MODIFICATION_ERR=ExceptionCode.INVALID_MODIFICATION_ERR=(ExceptionMessage[13]=\"Invalid modification\",13);var NAMESPACE_ERR=ExceptionCode.NAMESPACE_ERR=(ExceptionMessage[14]=\"Invalid namespace\",14);var INVALID_ACCESS_ERR=ExceptionCode.INVALID_ACCESS_ERR=(ExceptionMessage[15]=\"Invalid access\",15);function DOMException(code,message){if(message instanceof Error){var error=message}else{error=this;Error.call(this,ExceptionMessage[code]);this.message=ExceptionMessage[code];if(Error.captureStackTrace)Error.captureStackTrace(this,DOMException)}error.code=code;if(message)this.message=this.message+\": \"+message;return error}DOMException.prototype=Error.prototype;copy(ExceptionCode,DOMException);function NodeList(){}NodeList.prototype={length:0,item:function(index){return this[index]||null},toString:function(isHTML,nodeFilter){for(var buf=[],i=0;i<this.length;i++){serializeToString(this[i],buf,isHTML,nodeFilter)}return buf.join(\"\")}};function LiveNodeList(node,refresh){this._node=node;this._refresh=refresh;_updateLiveList(this)}function _updateLiveList(list){var inc=list._node._inc||list._node.ownerDocument._inc;if(list._inc!=inc){var ls=list._refresh(list._node);__set__(list,\"length\",ls.length);copy(ls,list);list._inc=inc}}LiveNodeList.prototype.item=function(i){_updateLiveList(this);return this[i]};_extends(LiveNodeList,NodeList);function NamedNodeMap(){}function _findNodeIndex(list,node){var i=list.length;while(i--){if(list[i]===node){return i}}}function _addNamedNode(el,list,newAttr,oldAttr){if(oldAttr){list[_findNodeIndex(list,oldAttr)]=newAttr}else{list[list.length++]=newAttr}if(el){newAttr.ownerElement=el;var doc=el.ownerDocument;if(doc){oldAttr&&_onRemoveAttribute(doc,el,oldAttr);_onAddAttribute(doc,el,newAttr)}}}function _removeNamedNode(el,list,attr){var i=_findNodeIndex(list,attr);if(i>=0){var lastIndex=list.length-1;while(i<lastIndex){list[i]=list[++i]}list.length=lastIndex;if(el){var doc=el.ownerDocument;if(doc){_onRemoveAttribute(doc,el,attr);attr.ownerElement=null}}}else{throw DOMException(NOT_FOUND_ERR,new Error(el.tagName+\"@\"+attr))}}NamedNodeMap.prototype={length:0,item:NodeList.prototype.item,getNamedItem:function(key){var i=this.length;while(i--){var attr=this[i];if(attr.nodeName==key){return attr}}},setNamedItem:function(attr){var el=attr.ownerElement;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}var oldAttr=this.getNamedItem(attr.nodeName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},setNamedItemNS:function(attr){var el=attr.ownerElement,oldAttr;if(el&&el!=this._ownerElement){throw new DOMException(INUSE_ATTRIBUTE_ERR)}oldAttr=this.getNamedItemNS(attr.namespaceURI,attr.localName);_addNamedNode(this._ownerElement,this,attr,oldAttr);return oldAttr},removeNamedItem:function(key){var attr=this.getNamedItem(key);_removeNamedNode(this._ownerElement,this,attr);return attr},removeNamedItemNS:function(namespaceURI,localName){var attr=this.getNamedItemNS(namespaceURI,localName);_removeNamedNode(this._ownerElement,this,attr);return attr},getNamedItemNS:function(namespaceURI,localName){var i=this.length;while(i--){var node=this[i];if(node.localName==localName&&node.namespaceURI==namespaceURI){return node}}return null}};function DOMImplementation(features){this._features={};if(features){for(var feature in features){this._features=features[feature]}}}DOMImplementation.prototype={hasFeature:function(feature,version){var versions=this._features[feature.toLowerCase()];if(versions&&(!version||version in versions)){return true}else{return false}},createDocument:function(namespaceURI,qualifiedName,doctype){var doc=new Document;doc.implementation=this;doc.childNodes=new NodeList;doc.doctype=doctype;if(doctype){doc.appendChild(doctype)}if(qualifiedName){var root=doc.createElementNS(namespaceURI,qualifiedName);doc.appendChild(root)}return doc},createDocumentType:function(qualifiedName,publicId,systemId){var node=new DocumentType;node.name=qualifiedName;node.nodeName=qualifiedName;node.publicId=publicId;node.systemId=systemId;return node}};function Node(){}Node.prototype={firstChild:null,lastChild:null,previousSibling:null,nextSibling:null,attributes:null,parentNode:null,childNodes:null,ownerDocument:null,nodeValue:null,namespaceURI:null,prefix:null,localName:null,insertBefore:function(newChild,refChild){return _insertBefore(this,newChild,refChild)},replaceChild:function(newChild,oldChild){this.insertBefore(newChild,oldChild);if(oldChild){this.removeChild(oldChild)}},removeChild:function(oldChild){return _removeChild(this,oldChild)},appendChild:function(newChild){return this.insertBefore(newChild,null)},hasChildNodes:function(){return this.firstChild!=null},cloneNode:function(deep){return cloneNode(this.ownerDocument||this,this,deep)},normalize:function(){var child=this.firstChild;while(child){var next=child.nextSibling;if(next&&next.nodeType==TEXT_NODE&&child.nodeType==TEXT_NODE){this.removeChild(next);child.appendData(next.data)}else{child.normalize();child=next}}},isSupported:function(feature,version){return this.ownerDocument.implementation.hasFeature(feature,version)},hasAttributes:function(){return this.attributes.length>0},lookupPrefix:function(namespaceURI){var el=this;while(el){var map=el._nsMap;if(map){for(var n in map){if(map[n]==namespaceURI){return n}}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},lookupNamespaceURI:function(prefix){var el=this;while(el){var map=el._nsMap;if(map){if(prefix in map){return map[prefix]}}el=el.nodeType==ATTRIBUTE_NODE?el.ownerDocument:el.parentNode}return null},isDefaultNamespace:function(namespaceURI){var prefix=this.lookupPrefix(namespaceURI);return prefix==null}};function _xmlEncoder(c){return c==\"<\"&&\"&lt;\"||c==\">\"&&\"&gt;\"||c==\"&\"&&\"&amp;\"||c=='\"'&&\"&quot;\"||\"&#\"+c.charCodeAt()+\";\"}copy(NodeType,Node);copy(NodeType,Node.prototype);function _visitNode(node,callback){if(callback(node)){return true}if(node=node.firstChild){do{if(_visitNode(node,callback)){return true}}while(node=node.nextSibling)}}function Document(){}function _onAddAttribute(doc,el,newAttr){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){el._nsMap[newAttr.prefix?newAttr.localName:\"\"]=newAttr.value}}function _onRemoveAttribute(doc,el,newAttr,remove){doc&&doc._inc++;var ns=newAttr.namespaceURI;if(ns==\"http://www.w3.org/2000/xmlns/\"){delete el._nsMap[newAttr.prefix?newAttr.localName:\"\"]}}function _onUpdateChild(doc,el,newChild){if(doc&&doc._inc){doc._inc++;var cs=el.childNodes;if(newChild){cs[cs.length++]=newChild}else{var child=el.firstChild;var i=0;while(child){cs[i++]=child;child=child.nextSibling}cs.length=i}}}function _removeChild(parentNode,child){var previous=child.previousSibling;var next=child.nextSibling;if(previous){previous.nextSibling=next}else{parentNode.firstChild=next}if(next){next.previousSibling=previous}else{parentNode.lastChild=previous}_onUpdateChild(parentNode.ownerDocument,parentNode);return child}function _insertBefore(parentNode,newChild,nextChild){var cp=newChild.parentNode;if(cp){cp.removeChild(newChild)}if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){var newFirst=newChild.firstChild;if(newFirst==null){return newChild}var newLast=newChild.lastChild}else{newFirst=newLast=newChild}var pre=nextChild?nextChild.previousSibling:parentNode.lastChild;newFirst.previousSibling=pre;newLast.nextSibling=nextChild;if(pre){pre.nextSibling=newFirst}else{parentNode.firstChild=newFirst}if(nextChild==null){parentNode.lastChild=newLast}else{nextChild.previousSibling=newLast}do{newFirst.parentNode=parentNode}while(newFirst!==newLast&&(newFirst=newFirst.nextSibling));_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){newChild.firstChild=newChild.lastChild=null}return newChild}function _appendSingleChild(parentNode,newChild){var cp=newChild.parentNode;if(cp){var pre=parentNode.lastChild;cp.removeChild(newChild);var pre=parentNode.lastChild}var pre=parentNode.lastChild;newChild.parentNode=parentNode;newChild.previousSibling=pre;newChild.nextSibling=null;if(pre){pre.nextSibling=newChild}else{parentNode.firstChild=newChild}parentNode.lastChild=newChild;_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);return newChild}Document.prototype={nodeName:\"#document\",nodeType:DOCUMENT_NODE,doctype:null,documentElement:null,_inc:1,insertBefore:function(newChild,refChild){if(newChild.nodeType==DOCUMENT_FRAGMENT_NODE){var child=newChild.firstChild;while(child){var next=child.nextSibling;this.insertBefore(child,refChild);child=next}return newChild}if(this.documentElement==null&&newChild.nodeType==ELEMENT_NODE){this.documentElement=newChild}return _insertBefore(this,newChild,refChild),newChild.ownerDocument=this,newChild},removeChild:function(oldChild){if(this.documentElement==oldChild){this.documentElement=null}return _removeChild(this,oldChild)},importNode:function(importedNode,deep){return importNode(this,importedNode,deep)},getElementById:function(id){var rtv=null;_visitNode(this.documentElement,function(node){if(node.nodeType==ELEMENT_NODE){if(node.getAttribute(\"id\")==id){rtv=node;return true}}});return rtv},createElement:function(tagName){var node=new Element;node.ownerDocument=this;node.nodeName=tagName;node.tagName=tagName;node.childNodes=new NodeList;var attrs=node.attributes=new NamedNodeMap;attrs._ownerElement=node;return node},createDocumentFragment:function(){var node=new DocumentFragment;node.ownerDocument=this;node.childNodes=new NodeList;return node},createTextNode:function(data){var node=new Text;node.ownerDocument=this;node.appendData(data);return node},createComment:function(data){var node=new Comment;node.ownerDocument=this;node.appendData(data);return node},createCDATASection:function(data){var node=new CDATASection;node.ownerDocument=this;node.appendData(data);return node},createProcessingInstruction:function(target,data){var node=new ProcessingInstruction;node.ownerDocument=this;node.tagName=node.target=target;node.nodeValue=node.data=data;return node},createAttribute:function(name){var node=new Attr;node.ownerDocument=this;node.name=name;node.nodeName=name;node.localName=name;node.specified=true;return node},createEntityReference:function(name){var node=new EntityReference;node.ownerDocument=this;node.nodeName=name;return node},createElementNS:function(namespaceURI,qualifiedName){var node=new Element;var pl=qualifiedName.split(\":\");var attrs=node.attributes=new NamedNodeMap;node.childNodes=new NodeList;node.ownerDocument=this;node.nodeName=qualifiedName;node.tagName=qualifiedName;node.namespaceURI=namespaceURI;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}attrs._ownerElement=node;return node},createAttributeNS:function(namespaceURI,qualifiedName){var node=new Attr;var pl=qualifiedName.split(\":\");node.ownerDocument=this;node.nodeName=qualifiedName;node.name=qualifiedName;node.namespaceURI=namespaceURI;node.specified=true;if(pl.length==2){node.prefix=pl[0];node.localName=pl[1]}else{node.localName=qualifiedName}return node}};_extends(Document,Node);function Element(){this._nsMap={}}Element.prototype={nodeType:ELEMENT_NODE,hasAttribute:function(name){return this.getAttributeNode(name)!=null},getAttribute:function(name){var attr=this.getAttributeNode(name);return attr&&attr.value||\"\"},getAttributeNode:function(name){return this.attributes.getNamedItem(name)},setAttribute:function(name,value){var attr=this.ownerDocument.createAttribute(name);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},removeAttribute:function(name){var attr=this.getAttributeNode(name);attr&&this.removeAttributeNode(attr)},appendChild:function(newChild){if(newChild.nodeType===DOCUMENT_FRAGMENT_NODE){return this.insertBefore(newChild,null)}else{return _appendSingleChild(this,newChild)}},setAttributeNode:function(newAttr){return this.attributes.setNamedItem(newAttr)},setAttributeNodeNS:function(newAttr){return this.attributes.setNamedItemNS(newAttr)},removeAttributeNode:function(oldAttr){return this.attributes.removeNamedItem(oldAttr.nodeName)},removeAttributeNS:function(namespaceURI,localName){var old=this.getAttributeNodeNS(namespaceURI,localName);old&&this.removeAttributeNode(old)},hasAttributeNS:function(namespaceURI,localName){return this.getAttributeNodeNS(namespaceURI,localName)!=null},getAttributeNS:function(namespaceURI,localName){var attr=this.getAttributeNodeNS(namespaceURI,localName);return attr&&attr.value||\"\"},setAttributeNS:function(namespaceURI,qualifiedName,value){var attr=this.ownerDocument.createAttributeNS(namespaceURI,qualifiedName);attr.value=attr.nodeValue=\"\"+value;this.setAttributeNode(attr)},getAttributeNodeNS:function(namespaceURI,localName){return this.attributes.getNamedItemNS(namespaceURI,localName)},getElementsByTagName:function(tagName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType==ELEMENT_NODE&&(tagName===\"*\"||node.tagName==tagName)){ls.push(node)}});return ls})},getElementsByTagNameNS:function(namespaceURI,localName){return new LiveNodeList(this,function(base){var ls=[];_visitNode(base,function(node){if(node!==base&&node.nodeType===ELEMENT_NODE&&(namespaceURI===\"*\"||node.namespaceURI===namespaceURI)&&(localName===\"*\"||node.localName==localName)){ls.push(node)}});return ls})}};Document.prototype.getElementsByTagName=Element.prototype.getElementsByTagName;Document.prototype.getElementsByTagNameNS=Element.prototype.getElementsByTagNameNS;_extends(Element,Node);function Attr(){}Attr.prototype.nodeType=ATTRIBUTE_NODE;_extends(Attr,Node);function CharacterData(){}CharacterData.prototype={data:\"\",substringData:function(offset,count){return this.data.substring(offset,offset+count)},appendData:function(text){text=this.data+text;this.nodeValue=this.data=text;this.length=text.length},insertData:function(offset,text){this.replaceData(offset,0,text)},appendChild:function(newChild){throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])},deleteData:function(offset,count){this.replaceData(offset,count,\"\")},replaceData:function(offset,count,text){var start=this.data.substring(0,offset);var end=this.data.substring(offset+count);text=start+text+end;this.nodeValue=this.data=text;this.length=text.length}};_extends(CharacterData,Node);function Text(){}Text.prototype={nodeName:\"#text\",nodeType:TEXT_NODE,splitText:function(offset){var text=this.data;var newText=text.substring(offset);text=text.substring(0,offset);this.data=this.nodeValue=text;this.length=text.length;var newNode=this.ownerDocument.createTextNode(newText);if(this.parentNode){this.parentNode.insertBefore(newNode,this.nextSibling)}return newNode}};_extends(Text,CharacterData);function Comment(){}Comment.prototype={nodeName:\"#comment\",nodeType:COMMENT_NODE};_extends(Comment,CharacterData);function CDATASection(){}CDATASection.prototype={nodeName:\"#cdata-section\",nodeType:CDATA_SECTION_NODE};_extends(CDATASection,CharacterData);function DocumentType(){}DocumentType.prototype.nodeType=DOCUMENT_TYPE_NODE;_extends(DocumentType,Node);function Notation(){}Notation.prototype.nodeType=NOTATION_NODE;_extends(Notation,Node);function Entity(){}Entity.prototype.nodeType=ENTITY_NODE;_extends(Entity,Node);function EntityReference(){}EntityReference.prototype.nodeType=ENTITY_REFERENCE_NODE;_extends(EntityReference,Node);function DocumentFragment(){}DocumentFragment.prototype.nodeName=\"#document-fragment\";DocumentFragment.prototype.nodeType=DOCUMENT_FRAGMENT_NODE;_extends(DocumentFragment,Node);function ProcessingInstruction(){}ProcessingInstruction.prototype.nodeType=PROCESSING_INSTRUCTION_NODE;_extends(ProcessingInstruction,Node);function XMLSerializer(){}XMLSerializer.prototype.serializeToString=function(node,isHtml,nodeFilter){return nodeSerializeToString.call(node,isHtml,nodeFilter)};Node.prototype.toString=nodeSerializeToString;function nodeSerializeToString(isHtml,nodeFilter){var buf=[];var refNode=this.nodeType==9?this.documentElement:this;var prefix=refNode.prefix;var uri=refNode.namespaceURI;if(uri&&prefix==null){var prefix=refNode.lookupPrefix(uri);if(prefix==null){var visibleNamespaces=[{namespace:uri,prefix:null}]}}serializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);return buf.join(\"\")}function needNamespaceDefine(node,isHTML,visibleNamespaces){var prefix=node.prefix||\"\";var uri=node.namespaceURI;if(!prefix&&!uri){return false}if(prefix===\"xml\"&&uri===\"http://www.w3.org/XML/1998/namespace\"||uri==\"http://www.w3.org/2000/xmlns/\"){return false}var i=visibleNamespaces.length;while(i--){var ns=visibleNamespaces[i];if(ns.prefix==prefix){return ns.namespace!=uri}}return true}function serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){if(nodeFilter){node=nodeFilter(node);if(node){if(typeof node==\"string\"){buf.push(node);return}}else{return}}switch(node.nodeType){case ELEMENT_NODE:if(!visibleNamespaces)visibleNamespaces=[];var startVisibleNamespaces=visibleNamespaces.length;var attrs=node.attributes;var len=attrs.length;var child=node.firstChild;var nodeName=node.tagName;isHTML=htmlns===node.namespaceURI||isHTML;buf.push(\"<\",nodeName);for(var i=0;i<len;i++){var attr=attrs.item(i);if(attr.prefix==\"xmlns\"){visibleNamespaces.push({prefix:attr.localName,namespace:attr.value})}else if(attr.nodeName==\"xmlns\"){visibleNamespaces.push({prefix:\"\",namespace:attr.value})}}for(var i=0;i<len;i++){var attr=attrs.item(i);if(needNamespaceDefine(attr,isHTML,visibleNamespaces)){var prefix=attr.prefix||\"\";var uri=attr.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}serializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces)}if(needNamespaceDefine(node,isHTML,visibleNamespaces)){var prefix=node.prefix||\"\";var uri=node.namespaceURI;var ns=prefix?\" xmlns:\"+prefix:\" xmlns\";buf.push(ns,'=\"',uri,'\"');visibleNamespaces.push({prefix:prefix,namespace:uri})}if(child||isHTML&&!/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){buf.push(\">\");if(isHTML&&/^script$/i.test(nodeName)){while(child){if(child.data){buf.push(child.data)}else{serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces)}child=child.nextSibling}}else{while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}}buf.push(\"</\",nodeName,\">\")}else{buf.push(\"/>\")}return;case DOCUMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var child=node.firstChild;while(child){serializeToString(child,buf,isHTML,nodeFilter,visibleNamespaces);child=child.nextSibling}return;case ATTRIBUTE_NODE:return buf.push(\" \",node.name,'=\"',node.value.replace(/[<&\"]/g,_xmlEncoder),'\"');case TEXT_NODE:return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));case CDATA_SECTION_NODE:return buf.push(\"<![CDATA[\",node.data,\"]]>\");case COMMENT_NODE:return buf.push(\"\\x3c!--\",node.data,\"--\\x3e\");case DOCUMENT_TYPE_NODE:var pubid=node.publicId;var sysid=node.systemId;buf.push(\"<!DOCTYPE \",node.name);if(pubid){buf.push(' PUBLIC \"',pubid);if(sysid&&sysid!=\".\"){buf.push('\" \"',sysid)}buf.push('\">')}else if(sysid&&sysid!=\".\"){buf.push(' SYSTEM \"',sysid,'\">')}else{var sub=node.internalSubset;if(sub){buf.push(\" [\",sub,\"]\")}buf.push(\">\")}return;case PROCESSING_INSTRUCTION_NODE:return buf.push(\"<?\",node.target,\" \",node.data,\"?>\");case ENTITY_REFERENCE_NODE:return buf.push(\"&\",node.nodeName,\";\");default:buf.push(\"??\",node.nodeName)}}function importNode(doc,node,deep){var node2;switch(node.nodeType){case ELEMENT_NODE:node2=node.cloneNode(false);node2.ownerDocument=doc;case DOCUMENT_FRAGMENT_NODE:break;case ATTRIBUTE_NODE:deep=true;break}if(!node2){node2=node.cloneNode(false)}node2.ownerDocument=doc;node2.parentNode=null;if(deep){var child=node.firstChild;while(child){node2.appendChild(importNode(doc,child,deep));child=child.nextSibling}}return node2}function cloneNode(doc,node,deep){var node2=new node.constructor;for(var n in node){var v=node[n];if(typeof v!=\"object\"){if(v!=node2[n]){node2[n]=v}}}if(node.childNodes){node2.childNodes=new NodeList}node2.ownerDocument=doc;switch(node2.nodeType){case ELEMENT_NODE:var attrs=node.attributes;var attrs2=node2.attributes=new NamedNodeMap;var len=attrs.length;attrs2._ownerElement=node2;for(var i=0;i<len;i++){node2.setAttributeNode(cloneNode(doc,attrs.item(i),true))}break;case ATTRIBUTE_NODE:deep=true}if(deep){var child=node.firstChild;while(child){node2.appendChild(cloneNode(doc,child,deep));child=child.nextSibling}}return node2}function __set__(object,key,value){object[key]=value}try{if(Object.defineProperty){Object.defineProperty(LiveNodeList.prototype,\"length\",{get:function(){_updateLiveList(this);return this.$$length}});Object.defineProperty(Node.prototype,\"textContent\",{get:function(){return getTextContent(this)},set:function(data){switch(this.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:while(this.firstChild){this.removeChild(this.firstChild)}if(data||String(data)){this.appendChild(this.ownerDocument.createTextNode(data))}break;default:this.data=data;this.value=data;this.nodeValue=data}}});function getTextContent(node){switch(node.nodeType){case ELEMENT_NODE:case DOCUMENT_FRAGMENT_NODE:var buf=[];node=node.firstChild;while(node){if(node.nodeType!==7&&node.nodeType!==8){buf.push(getTextContent(node))}node=node.nextSibling}return buf.join(\"\");default:return node.nodeValue}}__set__=function(object,key,value){object[\"$$\"+key]=value}}}catch(e){}exports.DOMImplementation=DOMImplementation;exports.XMLSerializer=XMLSerializer},{}],21:[function(require,module,exports){var nameStartChar=/[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/;var nameChar=new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");var tagNamePattern=new RegExp(\"^\"+nameStartChar.source+nameChar.source+\"*(?::\"+nameStartChar.source+nameChar.source+\"*)?$\");var S_TAG=0;var S_ATTR=1;var S_ATTR_SPACE=2;var S_EQ=3;var S_ATTR_NOQUOT_VALUE=4;var S_ATTR_END=5;var S_TAG_SPACE=6;var S_TAG_CLOSE=7;function XMLReader(){}XMLReader.prototype={parse:function(source,defaultNSMap,entityMap){var domBuilder=this.domBuilder;domBuilder.startDocument();_copy(defaultNSMap,defaultNSMap={});parse(source,defaultNSMap,entityMap,domBuilder,this.errorHandler);domBuilder.endDocument()}};function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){function fixedFromCharCode(code){if(code>65535){code-=65536;var surrogate1=55296+(code>>10),surrogate2=56320+(code&1023);return String.fromCharCode(surrogate1,surrogate2)}else{return String.fromCharCode(code)}}function entityReplacer(a){var k=a.slice(1,-1);if(k in entityMap){return entityMap[k]}else if(k.charAt(0)===\"#\"){return fixedFromCharCode(parseInt(k.substr(1).replace(\"x\",\"0x\")))}else{errorHandler.error(\"entity not found:\"+a);return a}}function appendText(end){if(end>start){var xt=source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);locator&&position(start);domBuilder.characters(xt,0,end-start);start=end}}function position(p,m){while(p>=lineEnd&&(m=linePattern.exec(source))){lineStart=m.index;lineEnd=lineStart+m[0].length;locator.lineNumber++}locator.columnNumber=p-lineStart+1}var lineStart=0;var lineEnd=0;var linePattern=/.*(?:\\r\\n?|\\n)|.*$/g;var locator=domBuilder.locator;var parseStack=[{currentNSMap:defaultNSMapCopy}];var closeMap={};var start=0;while(true){try{var tagStart=source.indexOf(\"<\",start);if(tagStart<0){if(!source.substr(start).match(/^\\s*$/)){var doc=domBuilder.doc;var text=doc.createTextNode(source.substr(start));doc.appendChild(text);domBuilder.currentElement=text}return}if(tagStart>start){appendText(tagStart)}switch(source.charAt(tagStart+1)){case\"/\":var end=source.indexOf(\">\",tagStart+3);var tagName=source.substring(tagStart+2,end);var config=parseStack.pop();if(end<0){tagName=source.substring(tagStart+2).replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" is not complete:\"+config.tagName);end=tagStart+1+tagName.length}else if(tagName.match(/\\s</)){tagName=tagName.replace(/[\\s<].*/,\"\");errorHandler.error(\"end tag name: \"+tagName+\" maybe not complete\");end=tagStart+1+tagName.length}var localNSMap=config.localNSMap;var endMatch=config.tagName==tagName;var endIgnoreCaseMach=endMatch||config.tagName&&config.tagName.toLowerCase()==tagName.toLowerCase();if(endIgnoreCaseMach){domBuilder.endElement(config.uri,config.localName,tagName);if(localNSMap){for(var prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}if(!endMatch){errorHandler.fatalError(\"end tag name: \"+tagName+\" is not match the current start tagName:\"+config.tagName)}}else{parseStack.push(config)}end++;break;case\"?\":locator&&position(tagStart);end=parseInstruction(source,tagStart,domBuilder);break;case\"!\":locator&&position(tagStart);end=parseDCC(source,tagStart,domBuilder,errorHandler);break;default:locator&&position(tagStart);var el=new ElementAttributes;var currentNSMap=parseStack[parseStack.length-1].currentNSMap;var end=parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);var len=el.length;if(!el.closed&&fixSelfClosed(source,end,el.tagName,closeMap)){el.closed=true;if(!entityMap.nbsp){errorHandler.warning(\"unclosed xml attribute\")}}if(locator&&len){var locator2=copyLocator(locator,{});for(var i=0;i<len;i++){var a=el[i];position(a.offset);a.locator=copyLocator(locator,{})}domBuilder.locator=locator2;if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}domBuilder.locator=locator}else{if(appendElement(el,domBuilder,currentNSMap)){parseStack.push(el)}}if(el.uri===\"http://www.w3.org/1999/xhtml\"&&!el.closed){end=parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)}else{end++}}}catch(e){errorHandler.error(\"element parse error: \"+e);end=-1}if(end>start){start=end}else{appendText(Math.max(tagStart,start)+1)}}}function copyLocator(f,t){t.lineNumber=f.lineNumber;t.columnNumber=f.columnNumber;return t}function parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){var attrName;var value;var p=++start;var s=S_TAG;while(true){var c=source.charAt(p);switch(c){case\"=\":if(s===S_ATTR){attrName=source.slice(start,p);s=S_EQ}else if(s===S_ATTR_SPACE){s=S_EQ}else{throw new Error(\"attribute equal must after attrName\")}break;case\"'\":case'\"':if(s===S_EQ||s===S_ATTR){if(s===S_ATTR){errorHandler.warning('attribute value must after \"=\"');attrName=source.slice(start,p)}start=p+1;p=source.indexOf(c,start);if(p>0){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start-1);s=S_ATTR_END}else{throw new Error(\"attribute value no end '\"+c+\"' match\")}}else if(s==S_ATTR_NOQUOT_VALUE){value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);el.add(attrName,value,start);errorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+\")!!\");start=p+1;s=S_ATTR_END}else{throw new Error('attribute value must after \"=\"')}break;case\"/\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:s=S_TAG_CLOSE;el.closed=true;case S_ATTR_NOQUOT_VALUE:case S_ATTR:case S_ATTR_SPACE:break;default:throw new Error(\"attribute invalid close char('/')\")}break;case\"\":errorHandler.error(\"unexpected end of input\");if(s==S_TAG){el.setTagName(source.slice(start,p))}return p;case\">\":switch(s){case S_TAG:el.setTagName(source.slice(start,p));case S_ATTR_END:case S_TAG_SPACE:case S_TAG_CLOSE:break;case S_ATTR_NOQUOT_VALUE:case S_ATTR:value=source.slice(start,p);if(value.slice(-1)===\"/\"){el.closed=true;value=value.slice(0,-1)}case S_ATTR_SPACE:if(s===S_ATTR_SPACE){value=attrName}if(s==S_ATTR_NOQUOT_VALUE){errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value.replace(/&#?\\w+;/g,entityReplacer),start)}else{if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!value.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')}el.add(value,value,start)}break;case S_EQ:throw new Error(\"attribute value missed!!\")}return p;case\"\":c=\" \";default:if(c<=\" \"){switch(s){case S_TAG:el.setTagName(source.slice(start,p));s=S_TAG_SPACE;break;case S_ATTR:attrName=source.slice(start,p);s=S_ATTR_SPACE;break;case S_ATTR_NOQUOT_VALUE:var value=source.slice(start,p).replace(/&#?\\w+;/g,entityReplacer);errorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');el.add(attrName,value,start);case S_ATTR_END:s=S_TAG_SPACE;break}}else{switch(s){case S_ATTR_SPACE:var tagName=el.tagName;if(currentNSMap[\"\"]!==\"http://www.w3.org/1999/xhtml\"||!attrName.match(/^(?:disabled|checked|selected)$/i)){errorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')}el.add(attrName,attrName,start);start=p;s=S_ATTR;break;case S_ATTR_END:errorHandler.warning('attribute space is required\"'+attrName+'\"!!');case S_TAG_SPACE:s=S_ATTR;start=p;break;case S_EQ:s=S_ATTR_NOQUOT_VALUE;start=p;break;case S_TAG_CLOSE:throw new Error(\"elements closed character '/' and '>' must be connected to\")}}}p++}}function appendElement(el,domBuilder,currentNSMap){var tagName=el.tagName;var localNSMap=null;var i=el.length;while(i--){var a=el[i];var qName=a.qName;var value=a.value;var nsp=qName.indexOf(\":\");if(nsp>0){var prefix=a.prefix=qName.slice(0,nsp);var localName=qName.slice(nsp+1);var nsPrefix=prefix===\"xmlns\"&&localName}else{localName=qName;prefix=null;nsPrefix=qName===\"xmlns\"&&\"\"}a.localName=localName;if(nsPrefix!==false){if(localNSMap==null){localNSMap={};_copy(currentNSMap,currentNSMap={})}currentNSMap[nsPrefix]=localNSMap[nsPrefix]=value;a.uri=\"http://www.w3.org/2000/xmlns/\";domBuilder.startPrefixMapping(nsPrefix,value)}}var i=el.length;while(i--){a=el[i];var prefix=a.prefix;if(prefix){if(prefix===\"xml\"){a.uri=\"http://www.w3.org/XML/1998/namespace\"}if(prefix!==\"xmlns\"){a.uri=currentNSMap[prefix||\"\"]}}}var nsp=tagName.indexOf(\":\");if(nsp>0){prefix=el.prefix=tagName.slice(0,nsp);localName=el.localName=tagName.slice(nsp+1)}else{prefix=null;localName=el.localName=tagName}var ns=el.uri=currentNSMap[prefix||\"\"];domBuilder.startElement(ns,localName,tagName,el);if(el.closed){domBuilder.endElement(ns,localName,tagName);if(localNSMap){for(prefix in localNSMap){domBuilder.endPrefixMapping(prefix)}}}else{el.currentNSMap=currentNSMap;el.localNSMap=localNSMap;return true}}function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){if(/^(?:script|textarea)$/i.test(tagName)){var elEndStart=source.indexOf(\"</\"+tagName+\">\",elStartEnd);var text=source.substring(elStartEnd+1,elEndStart);if(/[&<]/.test(text)){if(/^script$/i.test(tagName)){domBuilder.characters(text,0,text.length);return elEndStart}text=text.replace(/&#?\\w+;/g,entityReplacer);domBuilder.characters(text,0,text.length);return elEndStart}}return elStartEnd+1}function fixSelfClosed(source,elStartEnd,tagName,closeMap){var pos=closeMap[tagName];if(pos==null){pos=source.lastIndexOf(\"</\"+tagName+\">\");if(pos<elStartEnd){pos=source.lastIndexOf(\"</\"+tagName)}closeMap[tagName]=pos}return pos<elStartEnd}function _copy(source,target){for(var n in source){target[n]=source[n]}}function parseDCC(source,start,domBuilder,errorHandler){var next=source.charAt(start+2);switch(next){case\"-\":if(source.charAt(start+3)===\"-\"){var end=source.indexOf(\"--\\x3e\",start+4);if(end>start){domBuilder.comment(source,start+4,end-start-4);return end+3}else{errorHandler.error(\"Unclosed comment\");return-1}}else{return-1}default:if(source.substr(start+3,6)==\"CDATA[\"){var end=source.indexOf(\"]]>\",start+9);domBuilder.startCDATA();domBuilder.characters(source,start+9,end-start-9);domBuilder.endCDATA();return end+3}var matchs=split(source,start);var len=matchs.length;if(len>1&&/!doctype/i.test(matchs[0][0])){var name=matchs[1][0];var pubid=len>3&&/^public$/i.test(matchs[2][0])&&matchs[3][0];var sysid=len>4&&matchs[4][0];var lastMatch=matchs[len-1];domBuilder.startDTD(name,pubid&&pubid.replace(/^(['\"])(.*?)\\1$/,\"$2\"),sysid&&sysid.replace(/^(['\"])(.*?)\\1$/,\"$2\"));domBuilder.endDTD();return lastMatch.index+lastMatch[0].length}}return-1}function parseInstruction(source,start,domBuilder){var end=source.indexOf(\"?>\",start);if(end){var match=source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);if(match){var len=match[0].length;domBuilder.processingInstruction(match[1],match[2]);return end+2}else{return-1}}return-1}function ElementAttributes(source){}ElementAttributes.prototype={setTagName:function(tagName){if(!tagNamePattern.test(tagName)){throw new Error(\"invalid tagName:\"+tagName)}this.tagName=tagName},add:function(qName,value,offset){if(!tagNamePattern.test(qName)){throw new Error(\"invalid attribute:\"+qName)}this[this.length++]={qName:qName,value:value,offset:offset}},length:0,getLocalName:function(i){return this[i].localName},getLocator:function(i){return this[i].locator},getQName:function(i){return this[i].qName},getURI:function(i){return this[i].uri},getValue:function(i){return this[i].value}};function _set_proto_(thiz,parent){thiz.__proto__=parent;return thiz}if(!(_set_proto_({},_set_proto_.prototype)instanceof _set_proto_)){_set_proto_=function(thiz,parent){function p(){}p.prototype=parent;p=new p;for(parent in thiz){p[parent]=thiz[parent]}return p}}function split(source,start){var match;var buf=[];var reg=/'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;reg.lastIndex=start;reg.exec(source);while(match=reg.exec(source)){buf.push(match);if(match[1])return buf}}exports.XMLReader=XMLReader},{}],\"/src/js/docxtemplater.js\":[function(require,module,exports){\"use strict\";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\")}}var DocUtils=require(\"./doc-utils\");DocUtils.traits=require(\"./traits\");DocUtils.moduleWrapper=require(\"./module-wrapper\");var wrapper=DocUtils.moduleWrapper;var Docxtemplater=function(){function Docxtemplater(){_classCallCheck(this,Docxtemplater);if(arguments.length>0){throw new Error(\"The constructor with parameters have been removed in docxtemplater 3.0, please check the upgrade guide.\")}this.compiled={};this.modules=[];this.setOptions({})}_createClass(Docxtemplater,[{key:\"attachModule\",value:function attachModule(module){this.modules.push(wrapper(module));return this}},{key:\"setOptions\",value:function setOptions(options){var _this=this;this.options=options;Object.keys(DocUtils.defaults).forEach(function(key){var defaultValue=DocUtils.defaults[key];_this[key]=_this.options[key]!=null?_this.options[key]:defaultValue});if(this.zip){this.updateFileTypeConfig()}return this}},{key:\"loadZip\",value:function loadZip(zip){if(zip.loadAsync){throw new Error(\"Docxtemplater doesn't handle JSZip version >=3, see changelog\")}this.zip=zip;this.updateFileTypeConfig();return this}},{key:\"compileFile\",value:function compileFile(fileName){var currentFile=this.createTemplateClass(fileName);currentFile.parse();this.compiled[fileName]=currentFile}},{key:\"compile\",value:function compile(){this.templatedFiles=this.fileTypeConfig.getTemplatedFiles(this.zip);return this}},{key:\"updateFileTypeConfig\",value:function updateFileTypeConfig(){this.fileType=this.zip.files[\"word/document.xml\"]?\"docx\":\"pptx\";this.fileTypeConfig=this.options.fileTypeConfig||Docxtemplater.FileTypeConfig[this.fileType];return this}},{key:\"render\",value:function render(){var _this2=this;this.options.xmlFileNames=[];this.modules=this.fileTypeConfig.baseModules.map(function(moduleFunction){return moduleFunction()}).concat(this.modules);this.options=this.modules.reduce(function(options,module){return module.optionsTransformer(options,_this2)},this.options);this.xmlDocuments=this.options.xmlFileNames.reduce(function(xmlDocuments,fileName){var content=_this2.zip.files[fileName].asText();xmlDocuments[fileName]=DocUtils.str2xml(content);return xmlDocuments},{});this.modules.forEach(function(module){module.set({zip:_this2.zip,xmlDocuments:_this2.xmlDocuments,data:_this2.data})});this.compile();this.modules.forEach(function(module){module.set({compiled:_this2.compiled})});this.templatedFiles.forEach(function(fileName){if(_this2.zip.files[fileName]!=null){_this2.compileFile(fileName)}});this.mapper=this.modules.reduce(function(value,module){return module.getRenderedMap(value)},{});Object.keys(this.mapper).forEach(function(to){var mapped=_this2.mapper[to];var from=mapped.from;var currentFile=_this2.compiled[from];currentFile.setTags(mapped.data);currentFile.render(to);_this2.zip.file(to,currentFile.content)});Object.keys(this.xmlDocuments).forEach(function(fileName){_this2.zip.remove(fileName);var content=DocUtils.xml2str(_this2.xmlDocuments[fileName]);return _this2.zip.file(fileName,content,{})});return this}},{key:\"setData\",value:function setData(data){this.data=data;return this}},{key:\"getZip\",value:function getZip(){return this.zip}},{key:\"createTemplateClass\",value:function createTemplateClass(path){var usedData=this.zip.files[path].asText();return this.createTemplateClassFromContent(usedData,path)}},{key:\"createTemplateClassFromContent\",value:function createTemplateClassFromContent(content,filePath){var _this3=this;var xmltOptions={filePath:filePath};Object.keys(DocUtils.defaults).forEach(function(key){xmltOptions[key]=_this3[key]});xmltOptions.fileTypeConfig=this.fileTypeConfig;xmltOptions.modules=this.modules;return new Docxtemplater.XmlTemplater(content,xmltOptions)}},{key:\"getFullText\",value:function getFullText(path){return this.createTemplateClass(path||this.fileTypeConfig.textPath).getFullText()}},{key:\"getTemplatedFiles\",value:function getTemplatedFiles(){this.compile();return this.templatedFiles}}]);return Docxtemplater}();Docxtemplater.DocUtils=require(\"./doc-utils\");Docxtemplater.Errors=require(\"./errors\");Docxtemplater.XmlTemplater=require(\"./xml-templater\");Docxtemplater.FileTypeConfig=require(\"./file-type-config\");Docxtemplater.XmlMatcher=require(\"./xml-matcher\");module.exports=Docxtemplater},{\"./doc-utils\":1,\"./errors\":2,\"./file-type-config\":3,\"./module-wrapper\":7,\"./traits\":16,\"./xml-matcher\":17,\"./xml-templater\":18}]},{},[])(\"/src/js/docxtemplater.js\")});","/*!\n\nJSZip - A Javascript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2014 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;b=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,b.JSZip=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error(\"Cannot find module '\"+g+\"'\");throw j.code=\"MODULE_NOT_FOUND\",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){\"use strict\";function d(a){if(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0;for(var b=0;b<this.data.length;b++)a[b]=255&a[b]}}var e=a(\"./dataReader\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data[this.zero+a]},d.prototype.lastIndexOfSignature=function(a){for(var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=this.length-4;f>=0;--f)if(this.data[f]===b&&this.data[f+1]===c&&this.data[f+2]===d&&this.data[f+3]===e)return f-this.zero;return-1},d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return[];var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6}],2:[function(a,b,c){\"use strict\";var d=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";c.encode=function(a,b){for(var c,e,f,g,h,i,j,k=\"\",l=0;l<a.length;)c=a.charCodeAt(l++),e=a.charCodeAt(l++),f=a.charCodeAt(l++),g=c>>2,h=(3&c)<<4|e>>4,i=(15&e)<<2|f>>6,j=63&f,isNaN(e)?i=j=64:isNaN(f)&&(j=64),k=k+d.charAt(g)+d.charAt(h)+d.charAt(i)+d.charAt(j);return k},c.decode=function(a,b){var c,e,f,g,h,i,j,k=\"\",l=0;for(a=a.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");l<a.length;)g=d.indexOf(a.charAt(l++)),h=d.indexOf(a.charAt(l++)),i=d.indexOf(a.charAt(l++)),j=d.indexOf(a.charAt(l++)),c=g<<2|h>>4,e=(15&h)<<4|i>>2,f=(3&i)<<6|j,k+=String.fromCharCode(c),64!=i&&(k+=String.fromCharCode(e)),64!=j&&(k+=String.fromCharCode(f));return k}},{}],3:[function(a,b,c){\"use strict\";function d(){this.compressedSize=0,this.uncompressedSize=0,this.crc32=0,this.compressionMethod=null,this.compressedContent=null}d.prototype={getContent:function(){return null},getCompressedContent:function(){return null}},b.exports=d},{}],4:[function(a,b,c){\"use strict\";c.STORE={magic:\"\\0\\0\",compress:function(a,b){return a},uncompress:function(a){return a},compressInputType:null,uncompressInputType:null},c.DEFLATE=a(\"./flate\")},{\"./flate\":9}],5:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,936918e3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117];b.exports=function(a,b){if(\"undefined\"==typeof a||!a.length)return 0;var c=\"string\"!==d.getTypeOf(a);\"undefined\"==typeof b&&(b=0);var f=0,g=0,h=0;b^=-1;for(var i=0,j=a.length;i<j;i++)h=c?a[i]:a.charCodeAt(i),g=255&(b^h),f=e[g],b=b>>>8^f;return b^-1}},{\"./utils\":22}],6:[function(a,b,c){\"use strict\";function d(a){this.data=null,this.length=0,this.index=0,this.zero=0}var e=a(\"./utils\");d.prototype={checkOffset:function(a){this.checkIndex(this.index+a)},checkIndex:function(a){if(this.length<this.zero+a||a<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+a+\"). Corrupted zip ?\")},setIndex:function(a){this.checkIndex(a),this.index=a},skip:function(a){this.setIndex(this.index+a)},byteAt:function(a){},readInt:function(a){var b,c=0;for(this.checkOffset(a),b=this.index+a-1;b>=this.index;b--)c=(c<<8)+this.byteAt(b);return this.index+=a,c},readString:function(a){return e.transformTo(\"string\",this.readData(a))},readData:function(a){},lastIndexOfSignature:function(a){},readDate:function(){var a=this.readInt(4);return new Date((a>>25&127)+1980,(a>>21&15)-1,a>>16&31,a>>11&31,a>>5&63,(31&a)<<1)}},b.exports=d},{\"./utils\":22}],7:[function(a,b,c){\"use strict\";c.base64=!1,c.binary=!1,c.dir=!1,c.createFolders=!1,c.date=null,c.compression=null,c.compressionOptions=null,c.comment=null,c.unixPermissions=null,c.dosPermissions=null},{}],8:[function(a,b,c){\"use strict\";var d=a(\"./utils\");c.string2binary=function(a){return d.string2binary(a)},c.string2Uint8Array=function(a){return d.transformTo(\"uint8array\",a)},c.uint8Array2String=function(a){return d.transformTo(\"string\",a)},c.string2Blob=function(a){var b=d.transformTo(\"arraybuffer\",a);return d.arrayBuffer2Blob(b)},c.arrayBuffer2Blob=function(a){return d.arrayBuffer2Blob(a)},c.transformTo=function(a,b){return d.transformTo(a,b)},c.getTypeOf=function(a){return d.getTypeOf(a)},c.checkSupport=function(a){return d.checkSupport(a)},c.MAX_VALUE_16BITS=d.MAX_VALUE_16BITS,c.MAX_VALUE_32BITS=d.MAX_VALUE_32BITS,c.pretty=function(a){return d.pretty(a)},c.findCompression=function(a){return d.findCompression(a)},c.isRegExp=function(a){return d.isRegExp(a)}},{\"./utils\":22}],9:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,e=a(\"pako\");c.uncompressInputType=d?\"uint8array\":\"array\",c.compressInputType=d?\"uint8array\":\"array\",c.magic=\"\\b\\0\",c.compress=function(a,b){return e.deflateRaw(a,{level:b.level||-1})},c.uncompress=function(a){return e.inflateRaw(a)}},{pako:25}],10:[function(a,b,c){\"use strict\";function d(a,b){return this instanceof d?(this.files={},this.comment=null,this.root=\"\",a&&this.load(a,b),void(this.clone=function(){var a=new d;for(var b in this)\"function\"!=typeof this[b]&&(a[b]=this[b]);return a})):new d(a,b)}var e=a(\"./base64\");d.prototype=a(\"./object\"),d.prototype.load=a(\"./load\"),d.support=a(\"./support\"),d.defaults=a(\"./defaults\"),d.utils=a(\"./deprecatedPublicUtils\"),d.base64={encode:function(a){return e.encode(a)},decode:function(a){return e.decode(a)}},d.compressions=a(\"./compressions\"),b.exports=d},{\"./base64\":2,\"./compressions\":4,\"./defaults\":7,\"./deprecatedPublicUtils\":8,\"./load\":11,\"./object\":14,\"./support\":18}],11:[function(a,b,c){\"use strict\";var d=a(\"./base64\"),e=a(\"./utf8\"),f=a(\"./utils\"),g=a(\"./zipEntries\");b.exports=function(a,b){var c,h,i,j;for(b=f.extend(b||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:e.utf8decode}),b.base64&&(a=d.decode(a)),h=new g(a,b),c=h.files,i=0;i<c.length;i++)j=c[i],this.file(j.fileNameStr,j.decompressed,{binary:!0,optimizedBinaryString:!0,date:j.date,dir:j.dir,comment:j.fileCommentStr.length?j.fileCommentStr:null,unixPermissions:j.unixPermissions,dosPermissions:j.dosPermissions,createFolders:b.createFolders});return h.zipComment.length&&(this.comment=h.zipComment),this}},{\"./base64\":2,\"./utf8\":21,\"./utils\":22,\"./zipEntries\":23}],12:[function(a,b,c){(function(a){\"use strict\";b.exports=function(b,c){return new a(b,c)},b.exports.test=function(b){return a.isBuffer(b)}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],13:[function(a,b,c){\"use strict\";function d(a){this.data=a,this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./uint8ArrayReader\");d.prototype=new e,d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./uint8ArrayReader\":19}],14:[function(a,b,c){\"use strict\";var d=a(\"./support\"),e=a(\"./utils\"),f=a(\"./crc32\"),g=a(\"./signature\"),h=a(\"./defaults\"),i=a(\"./base64\"),j=a(\"./compressions\"),k=a(\"./compressedObject\"),l=a(\"./nodeBuffer\"),m=a(\"./utf8\"),n=a(\"./stringWriter\"),o=a(\"./uint8ArrayWriter\"),p=function(a){if(a._data instanceof k&&(a._data=a._data.getContent(),a.options.binary=!0,a.options.base64=!1,\"uint8array\"===e.getTypeOf(a._data))){var b=a._data;a._data=new Uint8Array(b.length),0!==b.length&&a._data.set(b,0)}return a._data},q=function(a){var b=p(a),c=e.getTypeOf(b);return\"string\"===c?!a.options.binary&&d.nodebuffer?l(b,\"utf-8\"):a.asBinary():b},r=function(a){var b=p(this);return null===b||\"undefined\"==typeof b?\"\":(this.options.base64&&(b=i.decode(b)),b=a&&this.options.binary?D.utf8decode(b):e.transformTo(\"string\",b),a||this.options.binary||(b=e.transformTo(\"string\",D.utf8encode(b))),b)},s=function(a,b,c){this.name=a,this.dir=c.dir,this.date=c.date,this.comment=c.comment,this.unixPermissions=c.unixPermissions,this.dosPermissions=c.dosPermissions,this._data=b,this.options=c,this._initialMetadata={dir:c.dir,date:c.date}};s.prototype={asText:function(){return r.call(this,!0)},asBinary:function(){return r.call(this,!1)},asNodeBuffer:function(){var a=q(this);return e.transformTo(\"nodebuffer\",a)},asUint8Array:function(){var a=q(this);return e.transformTo(\"uint8array\",a)},asArrayBuffer:function(){return this.asUint8Array().buffer}};var t=function(a,b){var c,d=\"\";for(c=0;c<b;c++)d+=String.fromCharCode(255&a),a>>>=8;return d},u=function(a){return a=a||{},a.base64!==!0||null!==a.binary&&void 0!==a.binary||(a.binary=!0),a=e.extend(a,h),a.date=a.date||new Date,null!==a.compression&&(a.compression=a.compression.toUpperCase()),a},v=function(a,b,c){var d,f=e.getTypeOf(b);if(c=u(c),\"string\"==typeof c.unixPermissions&&(c.unixPermissions=parseInt(c.unixPermissions,8)),c.unixPermissions&&16384&c.unixPermissions&&(c.dir=!0),c.dosPermissions&&16&c.dosPermissions&&(c.dir=!0),c.dir&&(a=x(a)),c.createFolders&&(d=w(a))&&y.call(this,d,!0),c.dir||null===b||\"undefined\"==typeof b)c.base64=!1,c.binary=!1,b=null,f=null;else if(\"string\"===f)c.binary&&!c.base64&&c.optimizedBinaryString!==!0&&(b=e.string2binary(b));else{if(c.base64=!1,c.binary=!0,!(f||b instanceof k))throw new Error(\"The data of '\"+a+\"' is in an unsupported format !\");\"arraybuffer\"===f&&(b=e.transformTo(\"uint8array\",b))}var g=new s(a,b,c);return this.files[a]=g,g},w=function(a){\"/\"==a.slice(-1)&&(a=a.substring(0,a.length-1));var b=a.lastIndexOf(\"/\");return b>0?a.substring(0,b):\"\"},x=function(a){return\"/\"!=a.slice(-1)&&(a+=\"/\"),a},y=function(a,b){return b=\"undefined\"!=typeof b&&b,a=x(a),this.files[a]||v.call(this,a,null,{dir:!0,createFolders:b}),this.files[a]},z=function(a,b,c){var d,g=new k;return a._data instanceof k?(g.uncompressedSize=a._data.uncompressedSize,g.crc32=a._data.crc32,0===g.uncompressedSize||a.dir?(b=j.STORE,g.compressedContent=\"\",g.crc32=0):a._data.compressionMethod===b.magic?g.compressedContent=a._data.getCompressedContent():(d=a._data.getContent(),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c))):(d=q(a),d&&0!==d.length&&!a.dir||(b=j.STORE,d=\"\"),g.uncompressedSize=d.length,g.crc32=f(d),g.compressedContent=b.compress(e.transformTo(b.compressInputType,d),c)),g.compressedSize=g.compressedContent.length,g.compressionMethod=b.magic,g},A=function(a,b){var c=a;return a||(c=b?16893:33204),(65535&c)<<16},B=function(a,b){return 63&(a||0)},C=function(a,b,c,d,h,i){var j,k,l,n,o=(c.compressedContent,i!==m.utf8encode),p=e.transformTo(\"string\",i(b.name)),q=e.transformTo(\"string\",m.utf8encode(b.name)),r=b.comment||\"\",s=e.transformTo(\"string\",i(r)),u=e.transformTo(\"string\",m.utf8encode(r)),v=q.length!==b.name.length,w=u.length!==r.length,x=b.options,y=\"\",z=\"\",C=\"\";l=b._initialMetadata.dir!==b.dir?b.dir:x.dir,n=b._initialMetadata.date!==b.date?b.date:x.date;var D=0,E=0;l&&(D|=16),\"UNIX\"===h?(E=798,D|=A(b.unixPermissions,l)):(E=20,D|=B(b.dosPermissions,l)),j=n.getHours(),j<<=6,j|=n.getMinutes(),j<<=5,j|=n.getSeconds()/2,k=n.getFullYear()-1980,k<<=4,k|=n.getMonth()+1,k<<=5,k|=n.getDate(),v&&(z=t(1,1)+t(f(p),4)+q,y+=\"up\"+t(z.length,2)+z),w&&(C=t(1,1)+t(this.crc32(s),4)+u,y+=\"uc\"+t(C.length,2)+C);var F=\"\";F+=\"\\n\\0\",F+=o||!v&&!w?\"\\0\\0\":\"\\0\\b\",F+=c.compressionMethod,F+=t(j,2),F+=t(k,2),F+=t(c.crc32,4),F+=t(c.compressedSize,4),F+=t(c.uncompressedSize,4),F+=t(p.length,2),F+=t(y.length,2);var G=g.LOCAL_FILE_HEADER+F+p+y,H=g.CENTRAL_FILE_HEADER+t(E,2)+F+t(s.length,2)+\"\\0\\0\\0\\0\"+t(D,4)+t(d,4)+p+y+s;return{fileRecord:G,dirRecord:H,compressedObject:c}},D={load:function(a,b){throw new Error(\"Load method is not defined. Is the file jszip-load.js included ?\")},filter:function(a){var b,c,d,f,g=[];for(b in this.files)this.files.hasOwnProperty(b)&&(d=this.files[b],f=new s(d.name,d._data,e.extend(d.options)),c=b.slice(this.root.length,b.length),b.slice(0,this.root.length)===this.root&&a(c,f)&&g.push(f));return g},file:function(a,b,c){if(1===arguments.length){if(e.isRegExp(a)){var d=a;return this.filter(function(a,b){return!b.dir&&d.test(a)})}return this.filter(function(b,c){return!c.dir&&b===a})[0]||null}return a=this.root+a,v.call(this,a,b,c),this},folder:function(a){if(!a)return this;if(e.isRegExp(a))return this.filter(function(b,c){return c.dir&&a.test(b)});var b=this.root+a,c=y.call(this,b),d=this.clone();return d.root=c.name,d},remove:function(a){a=this.root+a;var b=this.files[a];if(b||(\"/\"!=a.slice(-1)&&(a+=\"/\"),b=this.files[a]),b&&!b.dir)delete this.files[a];else for(var c=this.filter(function(b,c){return c.name.slice(0,a.length)===a}),d=0;d<c.length;d++)delete this.files[c[d].name];return this},generate:function(a){a=e.extend(a||{},{base64:!0,compression:\"STORE\",compressionOptions:null,type:\"base64\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:m.utf8encode}),e.checkSupport(a.type),\"darwin\"!==a.platform&&\"freebsd\"!==a.platform&&\"linux\"!==a.platform&&\"sunos\"!==a.platform||(a.platform=\"UNIX\"),\"win32\"===a.platform&&(a.platform=\"DOS\");var b,c,d=[],f=0,h=0,k=e.transformTo(\"string\",a.encodeFileName(a.comment||this.comment||\"\"));for(var l in this.files)if(this.files.hasOwnProperty(l)){var p=this.files[l],q=p.options.compression||a.compression.toUpperCase(),r=j[q];if(!r)throw new Error(q+\" is not a valid compression method !\");var s=p.options.compressionOptions||a.compressionOptions||{},u=z.call(this,p,r,s),v=C.call(this,l,p,u,f,a.platform,a.encodeFileName);f+=v.fileRecord.length+u.compressedSize,h+=v.dirRecord.length,d.push(v)}var w=\"\";w=g.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+t(d.length,2)+t(d.length,2)+t(h,4)+t(f,4)+t(k.length,2)+k;var x=a.type.toLowerCase();for(b=\"uint8array\"===x||\"arraybuffer\"===x||\"blob\"===x||\"nodebuffer\"===x?new o(f+h+w.length):new n(f+h+w.length),c=0;c<d.length;c++)b.append(d[c].fileRecord),b.append(d[c].compressedObject.compressedContent);for(c=0;c<d.length;c++)b.append(d[c].dirRecord);b.append(w);var y=b.finalize();switch(a.type.toLowerCase()){case\"uint8array\":case\"arraybuffer\":case\"nodebuffer\":return e.transformTo(a.type.toLowerCase(),y);case\"blob\":return e.arrayBuffer2Blob(e.transformTo(\"arraybuffer\",y),a.mimeType);case\"base64\":return a.base64?i.encode(y):y;default:return y}},crc32:function(a,b){return f(a,b)},utf8encode:function(a){return e.transformTo(\"string\",m.utf8encode(a))},utf8decode:function(a){return m.utf8decode(a)}};b.exports=D},{\"./base64\":2,\"./compressedObject\":3,\"./compressions\":4,\"./crc32\":5,\"./defaults\":7,\"./nodeBuffer\":12,\"./signature\":15,\"./stringWriter\":17,\"./support\":18,\"./uint8ArrayWriter\":20,\"./utf8\":21,\"./utils\":22}],15:[function(a,b,c){\"use strict\";c.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",c.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",c.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",c.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",c.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",c.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],16:[function(a,b,c){\"use strict\";function d(a,b){this.data=a,b||(this.data=f.string2binary(this.data)),this.length=this.data.length,this.index=0,this.zero=0}var e=a(\"./dataReader\"),f=a(\"./utils\");d.prototype=new e,d.prototype.byteAt=function(a){return this.data.charCodeAt(this.zero+a)},d.prototype.lastIndexOfSignature=function(a){return this.data.lastIndexOf(a)-this.zero},d.prototype.readData=function(a){this.checkOffset(a);var b=this.data.slice(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./dataReader\":6,\"./utils\":22}],17:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(){this.data=[]};e.prototype={append:function(a){a=d.transformTo(\"string\",a),this.data.push(a)},finalize:function(){return this.data.join(\"\")}},b.exports=e},{\"./utils\":22}],18:[function(a,b,c){(function(a){\"use strict\";if(c.base64=!0,c.array=!0,c.string=!0,c.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,c.nodebuffer=\"undefined\"!=typeof a,c.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)c.blob=!1;else{var b=new ArrayBuffer(0);try{c.blob=0===new Blob([b],{type:\"application/zip\"}).size}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;f.append(b),c.blob=0===f.getBlob(\"application/zip\").size}catch(d){c.blob=!1}}}}).call(this,\"undefined\"!=typeof Buffer?Buffer:void 0)},{}],19:[function(a,b,c){\"use strict\";function d(a){a&&(this.data=a,this.length=this.data.length,this.index=0,this.zero=0)}var e=a(\"./arrayReader\");d.prototype=new e,d.prototype.readData=function(a){if(this.checkOffset(a),0===a)return new Uint8Array(0);var b=this.data.subarray(this.zero+this.index,this.zero+this.index+a);return this.index+=a,b},b.exports=d},{\"./arrayReader\":1}],20:[function(a,b,c){\"use strict\";var d=a(\"./utils\"),e=function(a){this.data=new Uint8Array(a),this.index=0};e.prototype={append:function(a){0!==a.length&&(a=d.transformTo(\"uint8array\",a),this.data.set(a,this.index),this.index+=a.length)},finalize:function(){return this.data}},b.exports=e},{\"./utils\":22}],21:[function(a,b,c){\"use strict\";for(var d=a(\"./utils\"),e=a(\"./support\"),f=a(\"./nodeBuffer\"),g=new Array(256),h=0;h<256;h++)g[h]=h>=252?6:h>=248?5:h>=240?4:h>=224?3:h>=192?2:1;g[254]=g[254]=1;var i=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=e.uint8array?new Uint8Array(i):new Array(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},j=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+g[a[c]]>b?c:b},k=function(a){var b,c,e,f,h=a.length,i=new Array(2*h);for(c=0,b=0;b<h;)if(e=a[b++],e<128)i[c++]=e;else if(f=g[e],f>4)i[c++]=65533,b+=f-1;else{for(e&=2===f?31:3===f?15:7;f>1&&b<h;)e=e<<6|63&a[b++],f--;f>1?i[c++]=65533:e<65536?i[c++]=e:(e-=65536,i[c++]=55296|e>>10&1023,i[c++]=56320|1023&e)}return i.length!==c&&(i.subarray?i=i.subarray(0,c):i.length=c),d.applyFromCharCode(i)};c.utf8encode=function(a){return e.nodebuffer?f(a,\"utf-8\"):i(a)},c.utf8decode=function(a){if(e.nodebuffer)return d.transformTo(\"nodebuffer\",a).toString(\"utf-8\");a=d.transformTo(e.uint8array?\"uint8array\":\"array\",a);for(var b=[],c=0,f=a.length,g=65536;c<f;){var h=j(a,Math.min(c+g,f));e.uint8array?b.push(k(a.subarray(c,h))):b.push(k(a.slice(c,h))),c=h}return b.join(\"\")}},{\"./nodeBuffer\":12,\"./support\":18,\"./utils\":22}],22:[function(a,b,c){\"use strict\";function d(a){return a}function e(a,b){for(var c=0;c<a.length;++c)b[c]=255&a.charCodeAt(c);return b}function f(a){var b=65536,d=[],e=a.length,f=c.getTypeOf(a),g=0,h=!0;try{switch(f){case\"uint8array\":String.fromCharCode.apply(null,new Uint8Array(0));break;case\"nodebuffer\":String.fromCharCode.apply(null,j(0))}}catch(i){h=!1}if(!h){for(var k=\"\",l=0;l<a.length;l++)k+=String.fromCharCode(a[l]);return k}for(;g<e&&b>1;)try{\"array\"===f||\"nodebuffer\"===f?d.push(String.fromCharCode.apply(null,a.slice(g,Math.min(g+b,e)))):d.push(String.fromCharCode.apply(null,a.subarray(g,Math.min(g+b,e)))),g+=b}catch(i){b=Math.floor(b/2)}return d.join(\"\")}function g(a,b){for(var c=0;c<a.length;c++)b[c]=a[c];return b}var h=a(\"./support\"),i=a(\"./compressions\"),j=a(\"./nodeBuffer\");c.string2binary=function(a){for(var b=\"\",c=0;c<a.length;c++)b+=String.fromCharCode(255&a.charCodeAt(c));return b},c.arrayBuffer2Blob=function(a,b){c.checkSupport(\"blob\"),b=b||\"application/zip\";try{return new Blob([a],{type:b})}catch(d){try{var e=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,f=new e;return f.append(a),f.getBlob(b)}catch(d){throw new Error(\"Bug : can't construct the Blob.\")}}},c.applyFromCharCode=f;var k={};k.string={string:d,array:function(a){return e(a,new Array(a.length))},arraybuffer:function(a){return k.string.uint8array(a).buffer},uint8array:function(a){return e(a,new Uint8Array(a.length))},nodebuffer:function(a){return e(a,j(a.length))}},k.array={string:f,array:d,arraybuffer:function(a){return new Uint8Array(a).buffer},uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(a)}},k.arraybuffer={string:function(a){return f(new Uint8Array(a))},array:function(a){return g(new Uint8Array(a),new Array(a.byteLength))},arraybuffer:d,uint8array:function(a){return new Uint8Array(a)},nodebuffer:function(a){return j(new Uint8Array(a))}},k.uint8array={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return a.buffer},uint8array:d,nodebuffer:function(a){return j(a)}},k.nodebuffer={string:f,array:function(a){return g(a,new Array(a.length))},arraybuffer:function(a){return k.nodebuffer.uint8array(a).buffer},uint8array:function(a){return g(a,new Uint8Array(a.length))},nodebuffer:d},c.transformTo=function(a,b){if(b||(b=\"\"),!a)return b;c.checkSupport(a);var d=c.getTypeOf(b),e=k[d][a](b);return e},c.getTypeOf=function(a){return\"string\"==typeof a?\"string\":\"[object Array]\"===Object.prototype.toString.call(a)?\"array\":h.nodebuffer&&j.test(a)?\"nodebuffer\":h.uint8array&&a instanceof Uint8Array?\"uint8array\":h.arraybuffer&&a instanceof ArrayBuffer?\"arraybuffer\":void 0},c.checkSupport=function(a){var b=h[a.toLowerCase()];if(!b)throw new Error(a+\" is not supported by this browser\")},c.MAX_VALUE_16BITS=65535,c.MAX_VALUE_32BITS=-1,c.pretty=function(a){var b,c,d=\"\";for(c=0;c<(a||\"\").length;c++)b=a.charCodeAt(c),d+=\"\\\\x\"+(b<16?\"0\":\"\")+b.toString(16).toUpperCase();return d},c.findCompression=function(a){for(var b in i)if(i.hasOwnProperty(b)&&i[b].magic===a)return i[b];return null},c.isRegExp=function(a){return\"[object RegExp]\"===Object.prototype.toString.call(a)},c.extend=function(){var a,b,c={};for(a=0;a<arguments.length;a++)for(b in arguments[a])arguments[a].hasOwnProperty(b)&&\"undefined\"==typeof c[b]&&(c[b]=arguments[a][b]);return c}},{\"./compressions\":4,\"./nodeBuffer\":12,\"./support\":18}],23:[function(a,b,c){\"use strict\";function d(a,b){this.files=[],this.loadOptions=b,a&&this.load(a)}var e=a(\"./stringReader\"),f=a(\"./nodeBufferReader\"),g=a(\"./uint8ArrayReader\"),h=a(\"./arrayReader\"),i=a(\"./utils\"),j=a(\"./signature\"),k=a(\"./zipEntry\"),l=a(\"./support\");a(\"./object\");d.prototype={checkSignature:function(a){var b=this.reader.readString(4);if(b!==a)throw new Error(\"Corrupted zip or bug : unexpected signature (\"+i.pretty(b)+\", expected \"+i.pretty(a)+\")\")},isSignature:function(a,b){var c=this.reader.index;this.reader.setIndex(a);var d=this.reader.readString(4),e=d===b;return this.reader.setIndex(c),e},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var a=this.reader.readData(this.zipCommentLength),b=l.uint8array?\"uint8array\":\"array\",c=i.transformTo(b,a);this.zipComment=this.loadOptions.decodeFileName(c)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.versionMadeBy=this.reader.readString(2),this.versionNeeded=this.reader.readInt(2),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var a,b,c,d=this.zip64EndOfCentralSize-44,e=0;e<d;)a=this.reader.readInt(2),b=this.reader.readInt(4),c=this.reader.readString(b),this.zip64ExtensibleData[a]={id:a,length:b,value:c}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var a,b;for(a=0;a<this.files.length;a++)b=this.files[a],this.reader.setIndex(b.localHeaderOffset),this.checkSignature(j.LOCAL_FILE_HEADER),b.readLocalPart(this.reader),b.handleUTF8(),b.processAttributes()},readCentralDir:function(){var a;for(this.reader.setIndex(this.centralDirOffset);this.reader.readString(4)===j.CENTRAL_FILE_HEADER;)a=new k({zip64:this.zip64},this.loadOptions),a.readCentralPart(this.reader),this.files.push(a);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var a=this.reader.lastIndexOfSignature(j.CENTRAL_DIRECTORY_END);if(a<0){var b=!this.isSignature(0,j.LOCAL_FILE_HEADER);throw b?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see http://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip : can't find end of central directory\")}this.reader.setIndex(a);var c=a;if(this.checkSignature(j.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,a=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),a<0)throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(a),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,j.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip : can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(j.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var d=this.centralDirOffset+this.centralDirSize;this.zip64&&(d+=20,d+=12+this.zip64EndOfCentralSize);var e=c-d;if(e>0)this.isSignature(c,j.CENTRAL_FILE_HEADER)||(this.reader.zero=e);else if(e<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(e)+\" bytes.\")},prepareReader:function(a){var b=i.getTypeOf(a);if(i.checkSupport(b),\"string\"!==b||l.uint8array)if(\"nodebuffer\"===b)this.reader=new f(a);else if(l.uint8array)this.reader=new g(i.transformTo(\"uint8array\",a));else{if(!l.array)throw new Error(\"Unexpected error: unsupported type '\"+b+\"'\");this.reader=new h(i.transformTo(\"array\",a))}else this.reader=new e(a,this.loadOptions.optimizedBinaryString)},load:function(a){this.prepareReader(a),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},b.exports=d},{\"./arrayReader\":1,\"./nodeBufferReader\":13,\"./object\":14,\"./signature\":15,\"./stringReader\":16,\"./support\":18,\"./uint8ArrayReader\":19,\"./utils\":22,\"./zipEntry\":24}],24:[function(a,b,c){\"use strict\";function d(a,b){this.options=a,this.loadOptions=b}var e=a(\"./stringReader\"),f=a(\"./utils\"),g=a(\"./compressedObject\"),h=a(\"./object\"),i=a(\"./support\"),j=0,k=3;d.prototype={isEncrypted:function(){return 1===(1&this.bitFlag)},useUTF8:function(){return 2048===(2048&this.bitFlag)},prepareCompressedContent:function(a,b,c){return function(){var d=a.index;a.setIndex(b);var e=a.readData(c);return a.setIndex(d),e}},prepareContent:function(a,b,c,d,e){return function(){var a=f.transformTo(d.uncompressInputType,this.getCompressedContent()),b=d.uncompress(a);if(b.length!==e)throw new Error(\"Bug : uncompressed data size mismatch\");return b}},readLocalPart:function(a){var b,c;if(a.skip(22),this.fileNameLength=a.readInt(2),c=a.readInt(2),this.fileName=a.readData(this.fileNameLength),a.skip(c),this.compressedSize==-1||this.uncompressedSize==-1)throw new Error(\"Bug or corrupted zip : didn't get enough informations from the central directory (compressedSize == -1 || uncompressedSize == -1)\");if(b=f.findCompression(this.compressionMethod),null===b)throw new Error(\"Corrupted zip : compression \"+f.pretty(this.compressionMethod)+\" unknown (inner file : \"+f.transformTo(\"string\",this.fileName)+\")\");if(this.decompressed=new g,this.decompressed.compressedSize=this.compressedSize,this.decompressed.uncompressedSize=this.uncompressedSize,this.decompressed.crc32=this.crc32,this.decompressed.compressionMethod=this.compressionMethod,this.decompressed.getCompressedContent=this.prepareCompressedContent(a,a.index,this.compressedSize,b),this.decompressed.getContent=this.prepareContent(a,a.index,this.compressedSize,b,this.uncompressedSize),this.loadOptions.checkCRC32&&(this.decompressed=f.transformTo(\"string\",this.decompressed.getContent()),h.crc32(this.decompressed)!==this.crc32))throw new Error(\"Corrupted zip : CRC32 mismatch\");\n},readCentralPart:function(a){if(this.versionMadeBy=a.readInt(2),this.versionNeeded=a.readInt(2),this.bitFlag=a.readInt(2),this.compressionMethod=a.readString(2),this.date=a.readDate(),this.crc32=a.readInt(4),this.compressedSize=a.readInt(4),this.uncompressedSize=a.readInt(4),this.fileNameLength=a.readInt(2),this.extraFieldsLength=a.readInt(2),this.fileCommentLength=a.readInt(2),this.diskNumberStart=a.readInt(2),this.internalFileAttributes=a.readInt(2),this.externalFileAttributes=a.readInt(4),this.localHeaderOffset=a.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");this.fileName=a.readData(this.fileNameLength),this.readExtraFields(a),this.parseZIP64ExtraField(a),this.fileComment=a.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var a=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),a===j&&(this.dosPermissions=63&this.externalFileAttributes),a===k&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(a){if(this.extraFields[1]){var b=new e(this.extraFields[1].value);this.uncompressedSize===f.MAX_VALUE_32BITS&&(this.uncompressedSize=b.readInt(8)),this.compressedSize===f.MAX_VALUE_32BITS&&(this.compressedSize=b.readInt(8)),this.localHeaderOffset===f.MAX_VALUE_32BITS&&(this.localHeaderOffset=b.readInt(8)),this.diskNumberStart===f.MAX_VALUE_32BITS&&(this.diskNumberStart=b.readInt(4))}},readExtraFields:function(a){var b,c,d,e=a.index;for(this.extraFields=this.extraFields||{};a.index<e+this.extraFieldsLength;)b=a.readInt(2),c=a.readInt(2),d=a.readString(c),this.extraFields[b]={id:b,length:c,value:d}},handleUTF8:function(){var a=i.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=h.utf8decode(this.fileName),this.fileCommentStr=h.utf8decode(this.fileComment);else{var b=this.findExtraFieldUnicodePath();if(null!==b)this.fileNameStr=b;else{var c=f.transformTo(a,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(c)}var d=this.findExtraFieldUnicodeComment();if(null!==d)this.fileCommentStr=d;else{var e=f.transformTo(a,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(e)}}},findExtraFieldUnicodePath:function(){var a=this.extraFields[28789];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileName)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null},findExtraFieldUnicodeComment:function(){var a=this.extraFields[25461];if(a){var b=new e(a.value);return 1!==b.readInt(1)?null:h.crc32(this.fileComment)!==b.readInt(4)?null:h.utf8decode(b.readString(a.length-5))}return null}},b.exports=d},{\"./compressedObject\":3,\"./object\":14,\"./stringReader\":16,\"./support\":18,\"./utils\":22}],25:[function(a,b,c){\"use strict\";var d=a(\"./lib/utils/common\").assign,e=a(\"./lib/deflate\"),f=a(\"./lib/inflate\"),g=a(\"./lib/zlib/constants\"),h={};d(h,e,f,g),b.exports=h},{\"./lib/deflate\":26,\"./lib/inflate\":27,\"./lib/utils/common\":28,\"./lib/zlib/constants\":31}],26:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=i.assign({level:s,method:u,chunkSize:16384,windowBits:15,memLevel:8,strategy:t,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>0?b.windowBits=-b.windowBits:b.gzip&&b.windowBits>0&&b.windowBits<16&&(b.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=h.deflateInit2(this.strm,b.level,b.method,b.windowBits,b.memLevel,b.strategy);if(c!==p)throw new Error(k[c]);if(b.header&&h.deflateSetHeader(this.strm,b.header),b.dictionary){var e;if(e=\"string\"==typeof b.dictionary?j.string2buf(b.dictionary):\"[object ArrayBuffer]\"===m.call(b.dictionary)?new Uint8Array(b.dictionary):b.dictionary,c=h.deflateSetDictionary(this.strm,e),c!==p)throw new Error(k[c]);this._dict_set=!0}}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}function g(a,b){return b=b||{},b.gzip=!0,e(a,b)}var h=a(\"./zlib/deflate\"),i=a(\"./utils/common\"),j=a(\"./utils/strings\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=Object.prototype.toString,n=0,o=4,p=0,q=1,r=2,s=-1,t=0,u=8;d.prototype.push=function(a,b){var c,d,e=this.strm,f=this.options.chunkSize;if(this.ended)return!1;d=b===~~b?b:b===!0?o:n,\"string\"==typeof a?e.input=j.string2buf(a):\"[object ArrayBuffer]\"===m.call(a)?e.input=new Uint8Array(a):e.input=a,e.next_in=0,e.avail_in=e.input.length;do{if(0===e.avail_out&&(e.output=new i.Buf8(f),e.next_out=0,e.avail_out=f),c=h.deflate(e,d),c!==q&&c!==p)return this.onEnd(c),this.ended=!0,!1;0!==e.avail_out&&(0!==e.avail_in||d!==o&&d!==r)||(\"string\"===this.options.to?this.onData(j.buf2binstring(i.shrinkBuf(e.output,e.next_out))):this.onData(i.shrinkBuf(e.output,e.next_out)))}while((e.avail_in>0||0===e.avail_out)&&c!==q);return d===o?(c=h.deflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===p):d!==r||(this.onEnd(p),e.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===p&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Deflate=d,c.deflate=e,c.deflateRaw=f,c.gzip=g},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/deflate\":33,\"./zlib/messages\":38,\"./zlib/zstream\":40}],27:[function(a,b,c){\"use strict\";function d(a){if(!(this instanceof d))return new d(a);this.options=h.assign({chunkSize:16384,windowBits:0,to:\"\"},a||{});var b=this.options;b.raw&&b.windowBits>=0&&b.windowBits<16&&(b.windowBits=-b.windowBits,0===b.windowBits&&(b.windowBits=-15)),!(b.windowBits>=0&&b.windowBits<16)||a&&a.windowBits||(b.windowBits+=32),b.windowBits>15&&b.windowBits<48&&0===(15&b.windowBits)&&(b.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new l,this.strm.avail_out=0;var c=g.inflateInit2(this.strm,b.windowBits);if(c!==j.Z_OK)throw new Error(k[c]);this.header=new m,g.inflateGetHeader(this.strm,this.header)}function e(a,b){var c=new d(b);if(c.push(a,!0),c.err)throw c.msg;return c.result}function f(a,b){return b=b||{},b.raw=!0,e(a,b)}var g=a(\"./zlib/inflate\"),h=a(\"./utils/common\"),i=a(\"./utils/strings\"),j=a(\"./zlib/constants\"),k=a(\"./zlib/messages\"),l=a(\"./zlib/zstream\"),m=a(\"./zlib/gzheader\"),n=Object.prototype.toString;d.prototype.push=function(a,b){var c,d,e,f,k,l,m=this.strm,o=this.options.chunkSize,p=this.options.dictionary,q=!1;if(this.ended)return!1;d=b===~~b?b:b===!0?j.Z_FINISH:j.Z_NO_FLUSH,\"string\"==typeof a?m.input=i.binstring2buf(a):\"[object ArrayBuffer]\"===n.call(a)?m.input=new Uint8Array(a):m.input=a,m.next_in=0,m.avail_in=m.input.length;do{if(0===m.avail_out&&(m.output=new h.Buf8(o),m.next_out=0,m.avail_out=o),c=g.inflate(m,j.Z_NO_FLUSH),c===j.Z_NEED_DICT&&p&&(l=\"string\"==typeof p?i.string2buf(p):\"[object ArrayBuffer]\"===n.call(p)?new Uint8Array(p):p,c=g.inflateSetDictionary(this.strm,l)),c===j.Z_BUF_ERROR&&q===!0&&(c=j.Z_OK,q=!1),c!==j.Z_STREAM_END&&c!==j.Z_OK)return this.onEnd(c),this.ended=!0,!1;m.next_out&&(0!==m.avail_out&&c!==j.Z_STREAM_END&&(0!==m.avail_in||d!==j.Z_FINISH&&d!==j.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(e=i.utf8border(m.output,m.next_out),f=m.next_out-e,k=i.buf2string(m.output,e),m.next_out=f,m.avail_out=o-f,f&&h.arraySet(m.output,m.output,e,f,0),this.onData(k)):this.onData(h.shrinkBuf(m.output,m.next_out)))),0===m.avail_in&&0===m.avail_out&&(q=!0)}while((m.avail_in>0||0===m.avail_out)&&c!==j.Z_STREAM_END);return c===j.Z_STREAM_END&&(d=j.Z_FINISH),d===j.Z_FINISH?(c=g.inflateEnd(this.strm),this.onEnd(c),this.ended=!0,c===j.Z_OK):d!==j.Z_SYNC_FLUSH||(this.onEnd(j.Z_OK),m.avail_out=0,!0)},d.prototype.onData=function(a){this.chunks.push(a)},d.prototype.onEnd=function(a){a===j.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=h.flattenChunks(this.chunks)),this.chunks=[],this.err=a,this.msg=this.strm.msg},c.Inflate=d,c.inflate=e,c.inflateRaw=f,c.ungzip=e},{\"./utils/common\":28,\"./utils/strings\":29,\"./zlib/constants\":31,\"./zlib/gzheader\":34,\"./zlib/inflate\":36,\"./zlib/messages\":38,\"./zlib/zstream\":40}],28:[function(a,b,c){\"use strict\";var d=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;c.assign=function(a){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var c=b.shift();if(c){if(\"object\"!=typeof c)throw new TypeError(c+\"must be non-object\");for(var d in c)c.hasOwnProperty(d)&&(a[d]=c[d])}}return a},c.shrinkBuf=function(a,b){return a.length===b?a:a.subarray?a.subarray(0,b):(a.length=b,a)};var e={arraySet:function(a,b,c,d,e){if(b.subarray&&a.subarray)return void a.set(b.subarray(c,c+d),e);for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){var b,c,d,e,f,g;for(d=0,b=0,c=a.length;b<c;b++)d+=a[b].length;for(g=new Uint8Array(d),e=0,b=0,c=a.length;b<c;b++)f=a[b],g.set(f,e),e+=f.length;return g}},f={arraySet:function(a,b,c,d,e){for(var f=0;f<d;f++)a[e+f]=b[c+f]},flattenChunks:function(a){return[].concat.apply([],a)}};c.setTyped=function(a){a?(c.Buf8=Uint8Array,c.Buf16=Uint16Array,c.Buf32=Int32Array,c.assign(c,e)):(c.Buf8=Array,c.Buf16=Array,c.Buf32=Array,c.assign(c,f))},c.setTyped(d)},{}],29:[function(a,b,c){\"use strict\";function d(a,b){if(b<65537&&(a.subarray&&g||!a.subarray&&f))return String.fromCharCode.apply(null,e.shrinkBuf(a,b));for(var c=\"\",d=0;d<b;d++)c+=String.fromCharCode(a[d]);return c}var e=a(\"./common\"),f=!0,g=!0;try{String.fromCharCode.apply(null,[0])}catch(h){f=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(h){g=!1}for(var i=new e.Buf8(256),j=0;j<256;j++)i[j]=j>=252?6:j>=248?5:j>=240?4:j>=224?3:j>=192?2:1;i[254]=i[254]=1,c.string2buf=function(a){var b,c,d,f,g,h=a.length,i=0;for(f=0;f<h;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),i+=c<128?1:c<2048?2:c<65536?3:4;for(b=new e.Buf8(i),g=0,f=0;g<i;f++)c=a.charCodeAt(f),55296===(64512&c)&&f+1<h&&(d=a.charCodeAt(f+1),56320===(64512&d)&&(c=65536+(c-55296<<10)+(d-56320),f++)),c<128?b[g++]=c:c<2048?(b[g++]=192|c>>>6,b[g++]=128|63&c):c<65536?(b[g++]=224|c>>>12,b[g++]=128|c>>>6&63,b[g++]=128|63&c):(b[g++]=240|c>>>18,b[g++]=128|c>>>12&63,b[g++]=128|c>>>6&63,b[g++]=128|63&c);return b},c.buf2binstring=function(a){return d(a,a.length)},c.binstring2buf=function(a){for(var b=new e.Buf8(a.length),c=0,d=b.length;c<d;c++)b[c]=a.charCodeAt(c);return b},c.buf2string=function(a,b){var c,e,f,g,h=b||a.length,j=new Array(2*h);for(e=0,c=0;c<h;)if(f=a[c++],f<128)j[e++]=f;else if(g=i[f],g>4)j[e++]=65533,c+=g-1;else{for(f&=2===g?31:3===g?15:7;g>1&&c<h;)f=f<<6|63&a[c++],g--;g>1?j[e++]=65533:f<65536?j[e++]=f:(f-=65536,j[e++]=55296|f>>10&1023,j[e++]=56320|1023&f)}return d(j,e)},c.utf8border=function(a,b){var c;for(b=b||a.length,b>a.length&&(b=a.length),c=b-1;c>=0&&128===(192&a[c]);)c--;return c<0?b:0===c?b:c+i[a[c]]>b?c:b}},{\"./common\":28}],30:[function(a,b,c){\"use strict\";function d(a,b,c,d){for(var e=65535&a|0,f=a>>>16&65535|0,g=0;0!==c;){g=c>2e3?2e3:c,c-=g;do e=e+b[d++]|0,f=f+e|0;while(--g);e%=65521,f%=65521}return e|f<<16|0}b.exports=d},{}],31:[function(a,b,c){\"use strict\";b.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],32:[function(a,b,c){\"use strict\";function d(){for(var a,b=[],c=0;c<256;c++){a=c;for(var d=0;d<8;d++)a=1&a?3988292384^a>>>1:a>>>1;b[c]=a}return b}function e(a,b,c,d){var e=f,g=d+c;a^=-1;for(var h=d;h<g;h++)a=a>>>8^e[255&(a^b[h])];return a^-1}var f=d();b.exports=e},{}],33:[function(a,b,c){\"use strict\";function d(a,b){return a.msg=I[b],b}function e(a){return(a<<1)-(a>4?9:0)}function f(a){for(var b=a.length;--b>=0;)a[b]=0}function g(a){var b=a.state,c=b.pending;c>a.avail_out&&(c=a.avail_out),0!==c&&(E.arraySet(a.output,b.pending_buf,b.pending_out,c,a.next_out),a.next_out+=c,b.pending_out+=c,a.total_out+=c,a.avail_out-=c,b.pending-=c,0===b.pending&&(b.pending_out=0))}function h(a,b){F._tr_flush_block(a,a.block_start>=0?a.block_start:-1,a.strstart-a.block_start,b),a.block_start=a.strstart,g(a.strm)}function i(a,b){a.pending_buf[a.pending++]=b}function j(a,b){a.pending_buf[a.pending++]=b>>>8&255,a.pending_buf[a.pending++]=255&b}function k(a,b,c,d){var e=a.avail_in;return e>d&&(e=d),0===e?0:(a.avail_in-=e,E.arraySet(b,a.input,a.next_in,e,c),1===a.state.wrap?a.adler=G(a.adler,b,e,c):2===a.state.wrap&&(a.adler=H(a.adler,b,e,c)),a.next_in+=e,a.total_in+=e,e)}function l(a,b){var c,d,e=a.max_chain_length,f=a.strstart,g=a.prev_length,h=a.nice_match,i=a.strstart>a.w_size-la?a.strstart-(a.w_size-la):0,j=a.window,k=a.w_mask,l=a.prev,m=a.strstart+ka,n=j[f+g-1],o=j[f+g];a.prev_length>=a.good_match&&(e>>=2),h>a.lookahead&&(h=a.lookahead);do if(c=b,j[c+g]===o&&j[c+g-1]===n&&j[c]===j[f]&&j[++c]===j[f+1]){f+=2,c++;do;while(j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&j[++f]===j[++c]&&f<m);if(d=ka-(m-f),f=m-ka,d>g){if(a.match_start=b,g=d,d>=h)break;n=j[f+g-1],o=j[f+g]}}while((b=l[b&k])>i&&0!==--e);return g<=a.lookahead?g:a.lookahead}function m(a){var b,c,d,e,f,g=a.w_size;do{if(e=a.window_size-a.lookahead-a.strstart,a.strstart>=g+(g-la)){E.arraySet(a.window,a.window,g,g,0),a.match_start-=g,a.strstart-=g,a.block_start-=g,c=a.hash_size,b=c;do d=a.head[--b],a.head[b]=d>=g?d-g:0;while(--c);c=g,b=c;do d=a.prev[--b],a.prev[b]=d>=g?d-g:0;while(--c);e+=g}if(0===a.strm.avail_in)break;if(c=k(a.strm,a.window,a.strstart+a.lookahead,e),a.lookahead+=c,a.lookahead+a.insert>=ja)for(f=a.strstart-a.insert,a.ins_h=a.window[f],a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+1])&a.hash_mask;a.insert&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[f+ja-1])&a.hash_mask,a.prev[f&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=f,f++,a.insert--,!(a.lookahead+a.insert<ja)););}while(a.lookahead<la&&0!==a.strm.avail_in)}function n(a,b){var c=65535;for(c>a.pending_buf_size-5&&(c=a.pending_buf_size-5);;){if(a.lookahead<=1){if(m(a),0===a.lookahead&&b===J)return ua;if(0===a.lookahead)break}a.strstart+=a.lookahead,a.lookahead=0;var d=a.block_start+c;if((0===a.strstart||a.strstart>=d)&&(a.lookahead=a.strstart-d,a.strstart=d,h(a,!1),0===a.strm.avail_out))return ua;if(a.strstart-a.block_start>=a.w_size-la&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.strstart>a.block_start&&(h(a,!1),0===a.strm.avail_out)?ua:ua}function o(a,b){for(var c,d;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),0!==c&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c)),a.match_length>=ja)if(d=F._tr_tally(a,a.strstart-a.match_start,a.match_length-ja),a.lookahead-=a.match_length,a.match_length<=a.max_lazy_match&&a.lookahead>=ja){a.match_length--;do a.strstart++,a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart;while(0!==--a.match_length);a.strstart++}else a.strstart+=a.match_length,a.match_length=0,a.ins_h=a.window[a.strstart],a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+1])&a.hash_mask;else d=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++;if(d&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function p(a,b){for(var c,d,e;;){if(a.lookahead<la){if(m(a),a.lookahead<la&&b===J)return ua;if(0===a.lookahead)break}if(c=0,a.lookahead>=ja&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart),a.prev_length=a.match_length,a.prev_match=a.match_start,a.match_length=ja-1,0!==c&&a.prev_length<a.max_lazy_match&&a.strstart-c<=a.w_size-la&&(a.match_length=l(a,c),a.match_length<=5&&(a.strategy===U||a.match_length===ja&&a.strstart-a.match_start>4096)&&(a.match_length=ja-1)),a.prev_length>=ja&&a.match_length<=a.prev_length){e=a.strstart+a.lookahead-ja,d=F._tr_tally(a,a.strstart-1-a.prev_match,a.prev_length-ja),a.lookahead-=a.prev_length-1,a.prev_length-=2;do++a.strstart<=e&&(a.ins_h=(a.ins_h<<a.hash_shift^a.window[a.strstart+ja-1])&a.hash_mask,c=a.prev[a.strstart&a.w_mask]=a.head[a.ins_h],a.head[a.ins_h]=a.strstart);while(0!==--a.prev_length);if(a.match_available=0,a.match_length=ja-1,a.strstart++,d&&(h(a,!1),0===a.strm.avail_out))return ua}else if(a.match_available){if(d=F._tr_tally(a,0,a.window[a.strstart-1]),d&&h(a,!1),a.strstart++,a.lookahead--,0===a.strm.avail_out)return ua}else a.match_available=1,a.strstart++,a.lookahead--}return a.match_available&&(d=F._tr_tally(a,0,a.window[a.strstart-1]),a.match_available=0),a.insert=a.strstart<ja-1?a.strstart:ja-1,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function q(a,b){for(var c,d,e,f,g=a.window;;){if(a.lookahead<=ka){if(m(a),a.lookahead<=ka&&b===J)return ua;if(0===a.lookahead)break}if(a.match_length=0,a.lookahead>=ja&&a.strstart>0&&(e=a.strstart-1,d=g[e],d===g[++e]&&d===g[++e]&&d===g[++e])){f=a.strstart+ka;do;while(d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&d===g[++e]&&e<f);a.match_length=ka-(f-e),a.match_length>a.lookahead&&(a.match_length=a.lookahead)}if(a.match_length>=ja?(c=F._tr_tally(a,1,a.match_length-ja),a.lookahead-=a.match_length,a.strstart+=a.match_length,a.match_length=0):(c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++),c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function r(a,b){for(var c;;){if(0===a.lookahead&&(m(a),0===a.lookahead)){if(b===J)return ua;break}if(a.match_length=0,c=F._tr_tally(a,0,a.window[a.strstart]),a.lookahead--,a.strstart++,c&&(h(a,!1),0===a.strm.avail_out))return ua}return a.insert=0,b===M?(h(a,!0),0===a.strm.avail_out?wa:xa):a.last_lit&&(h(a,!1),0===a.strm.avail_out)?ua:va}function s(a,b,c,d,e){this.good_length=a,this.max_lazy=b,this.nice_length=c,this.max_chain=d,this.func=e}function t(a){a.window_size=2*a.w_size,f(a.head),a.max_lazy_match=D[a.level].max_lazy,a.good_match=D[a.level].good_length,a.nice_match=D[a.level].nice_length,a.max_chain_length=D[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=ja-1,a.match_available=0,a.ins_h=0}function u(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=$,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new E.Buf16(2*ha),this.dyn_dtree=new E.Buf16(2*(2*fa+1)),this.bl_tree=new E.Buf16(2*(2*ga+1)),f(this.dyn_ltree),f(this.dyn_dtree),f(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new E.Buf16(ia+1),this.heap=new E.Buf16(2*ea+1),f(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new E.Buf16(2*ea+1),f(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function v(a){var b;return a&&a.state?(a.total_in=a.total_out=0,a.data_type=Z,b=a.state,b.pending=0,b.pending_out=0,b.wrap<0&&(b.wrap=-b.wrap),b.status=b.wrap?na:sa,a.adler=2===b.wrap?0:1,b.last_flush=J,F._tr_init(b),O):d(a,Q)}function w(a){var b=v(a);return b===O&&t(a.state),b}function x(a,b){return a&&a.state?2!==a.state.wrap?Q:(a.state.gzhead=b,O):Q}function y(a,b,c,e,f,g){if(!a)return Q;var h=1;if(b===T&&(b=6),e<0?(h=0,e=-e):e>15&&(h=2,e-=16),f<1||f>_||c!==$||e<8||e>15||b<0||b>9||g<0||g>X)return d(a,Q);8===e&&(e=9);var i=new u;return a.state=i,i.strm=a,i.wrap=h,i.gzhead=null,i.w_bits=e,i.w_size=1<<i.w_bits,i.w_mask=i.w_size-1,i.hash_bits=f+7,i.hash_size=1<<i.hash_bits,i.hash_mask=i.hash_size-1,i.hash_shift=~~((i.hash_bits+ja-1)/ja),i.window=new E.Buf8(2*i.w_size),i.head=new E.Buf16(i.hash_size),i.prev=new E.Buf16(i.w_size),i.lit_bufsize=1<<f+6,i.pending_buf_size=4*i.lit_bufsize,i.pending_buf=new E.Buf8(i.pending_buf_size),i.d_buf=1*i.lit_bufsize,i.l_buf=3*i.lit_bufsize,i.level=b,i.strategy=g,i.method=c,w(a)}function z(a,b){return y(a,b,$,aa,ba,Y)}function A(a,b){var c,h,k,l;if(!a||!a.state||b>N||b<0)return a?d(a,Q):Q;if(h=a.state,!a.output||!a.input&&0!==a.avail_in||h.status===ta&&b!==M)return d(a,0===a.avail_out?S:Q);if(h.strm=a,c=h.last_flush,h.last_flush=b,h.status===na)if(2===h.wrap)a.adler=0,i(h,31),i(h,139),i(h,8),h.gzhead?(i(h,(h.gzhead.text?1:0)+(h.gzhead.hcrc?2:0)+(h.gzhead.extra?4:0)+(h.gzhead.name?8:0)+(h.gzhead.comment?16:0)),i(h,255&h.gzhead.time),i(h,h.gzhead.time>>8&255),i(h,h.gzhead.time>>16&255),i(h,h.gzhead.time>>24&255),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,255&h.gzhead.os),h.gzhead.extra&&h.gzhead.extra.length&&(i(h,255&h.gzhead.extra.length),i(h,h.gzhead.extra.length>>8&255)),h.gzhead.hcrc&&(a.adler=H(a.adler,h.pending_buf,h.pending,0)),h.gzindex=0,h.status=oa):(i(h,0),i(h,0),i(h,0),i(h,0),i(h,0),i(h,9===h.level?2:h.strategy>=V||h.level<2?4:0),i(h,ya),h.status=sa);else{var m=$+(h.w_bits-8<<4)<<8,n=-1;n=h.strategy>=V||h.level<2?0:h.level<6?1:6===h.level?2:3,m|=n<<6,0!==h.strstart&&(m|=ma),m+=31-m%31,h.status=sa,j(h,m),0!==h.strstart&&(j(h,a.adler>>>16),j(h,65535&a.adler)),a.adler=1}if(h.status===oa)if(h.gzhead.extra){for(k=h.pending;h.gzindex<(65535&h.gzhead.extra.length)&&(h.pending!==h.pending_buf_size||(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending!==h.pending_buf_size));)i(h,255&h.gzhead.extra[h.gzindex]),h.gzindex++;h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),h.gzindex===h.gzhead.extra.length&&(h.gzindex=0,h.status=pa)}else h.status=pa;if(h.status===pa)if(h.gzhead.name){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.name.length?255&h.gzhead.name.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.gzindex=0,h.status=qa)}else h.status=qa;if(h.status===qa)if(h.gzhead.comment){k=h.pending;do{if(h.pending===h.pending_buf_size&&(h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),g(a),k=h.pending,h.pending===h.pending_buf_size)){l=1;break}l=h.gzindex<h.gzhead.comment.length?255&h.gzhead.comment.charCodeAt(h.gzindex++):0,i(h,l)}while(0!==l);h.gzhead.hcrc&&h.pending>k&&(a.adler=H(a.adler,h.pending_buf,h.pending-k,k)),0===l&&(h.status=ra)}else h.status=ra;if(h.status===ra&&(h.gzhead.hcrc?(h.pending+2>h.pending_buf_size&&g(a),h.pending+2<=h.pending_buf_size&&(i(h,255&a.adler),i(h,a.adler>>8&255),a.adler=0,h.status=sa)):h.status=sa),0!==h.pending){if(g(a),0===a.avail_out)return h.last_flush=-1,O}else if(0===a.avail_in&&e(b)<=e(c)&&b!==M)return d(a,S);if(h.status===ta&&0!==a.avail_in)return d(a,S);if(0!==a.avail_in||0!==h.lookahead||b!==J&&h.status!==ta){var o=h.strategy===V?r(h,b):h.strategy===W?q(h,b):D[h.level].func(h,b);if(o!==wa&&o!==xa||(h.status=ta),o===ua||o===wa)return 0===a.avail_out&&(h.last_flush=-1),O;if(o===va&&(b===K?F._tr_align(h):b!==N&&(F._tr_stored_block(h,0,0,!1),b===L&&(f(h.head),0===h.lookahead&&(h.strstart=0,h.block_start=0,h.insert=0))),g(a),0===a.avail_out))return h.last_flush=-1,O}return b!==M?O:h.wrap<=0?P:(2===h.wrap?(i(h,255&a.adler),i(h,a.adler>>8&255),i(h,a.adler>>16&255),i(h,a.adler>>24&255),i(h,255&a.total_in),i(h,a.total_in>>8&255),i(h,a.total_in>>16&255),i(h,a.total_in>>24&255)):(j(h,a.adler>>>16),j(h,65535&a.adler)),g(a),h.wrap>0&&(h.wrap=-h.wrap),0!==h.pending?O:P)}function B(a){var b;return a&&a.state?(b=a.state.status,b!==na&&b!==oa&&b!==pa&&b!==qa&&b!==ra&&b!==sa&&b!==ta?d(a,Q):(a.state=null,b===sa?d(a,R):O)):Q}function C(a,b){var c,d,e,g,h,i,j,k,l=b.length;if(!a||!a.state)return Q;if(c=a.state,g=c.wrap,2===g||1===g&&c.status!==na||c.lookahead)return Q;for(1===g&&(a.adler=G(a.adler,b,l,0)),c.wrap=0,l>=c.w_size&&(0===g&&(f(c.head),c.strstart=0,c.block_start=0,c.insert=0),k=new E.Buf8(c.w_size),E.arraySet(k,b,l-c.w_size,c.w_size,0),b=k,l=c.w_size),h=a.avail_in,i=a.next_in,j=a.input,a.avail_in=l,a.next_in=0,a.input=b,m(c);c.lookahead>=ja;){d=c.strstart,e=c.lookahead-(ja-1);do c.ins_h=(c.ins_h<<c.hash_shift^c.window[d+ja-1])&c.hash_mask,c.prev[d&c.w_mask]=c.head[c.ins_h],c.head[c.ins_h]=d,d++;while(--e);c.strstart=d,c.lookahead=ja-1,m(c)}return c.strstart+=c.lookahead,c.block_start=c.strstart,c.insert=c.lookahead,c.lookahead=0,c.match_length=c.prev_length=ja-1,c.match_available=0,a.next_in=i,a.input=j,a.avail_in=h,c.wrap=g,O}var D,E=a(\"../utils/common\"),F=a(\"./trees\"),G=a(\"./adler32\"),H=a(\"./crc32\"),I=a(\"./messages\"),J=0,K=1,L=3,M=4,N=5,O=0,P=1,Q=-2,R=-3,S=-5,T=-1,U=1,V=2,W=3,X=4,Y=0,Z=2,$=8,_=9,aa=15,ba=8,ca=29,da=256,ea=da+1+ca,fa=30,ga=19,ha=2*ea+1,ia=15,ja=3,ka=258,la=ka+ja+1,ma=32,na=42,oa=69,pa=73,qa=91,ra=103,sa=113,ta=666,ua=1,va=2,wa=3,xa=4,ya=3;D=[new s(0,0,0,0,n),new s(4,4,8,4,o),new s(4,5,16,8,o),new s(4,6,32,32,o),new s(4,4,16,16,p),new s(8,16,32,32,p),new s(8,16,128,128,p),new s(8,32,128,256,p),new s(32,128,258,1024,p),new s(32,258,258,4096,p)],c.deflateInit=z,c.deflateInit2=y,c.deflateReset=w,c.deflateResetKeep=v,c.deflateSetHeader=x,c.deflate=A,c.deflateEnd=B,c.deflateSetDictionary=C,c.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./messages\":38,\"./trees\":39}],34:[function(a,b,c){\"use strict\";function d(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}b.exports=d},{}],35:[function(a,b,c){\"use strict\";var d=30,e=12;b.exports=function(a,b){var c,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;c=a.state,f=a.next_in,B=a.input,g=f+(a.avail_in-5),h=a.next_out,C=a.output,i=h-(b-a.avail_out),j=h+(a.avail_out-257),k=c.dmax,l=c.wsize,m=c.whave,n=c.wnext,o=c.window,p=c.hold,q=c.bits,r=c.lencode,s=c.distcode,t=(1<<c.lenbits)-1,u=(1<<c.distbits)-1;a:do{q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=r[p&t];b:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,0===w)C[h++]=65535&v;else{if(!(16&w)){if(0===(64&w)){v=r[(65535&v)+(p&(1<<w)-1)];continue b}if(32&w){c.mode=e;break a}a.msg=\"invalid literal/length code\",c.mode=d;break a}x=65535&v,w&=15,w&&(q<w&&(p+=B[f++]<<q,q+=8),x+=p&(1<<w)-1,p>>>=w,q-=w),q<15&&(p+=B[f++]<<q,q+=8,p+=B[f++]<<q,q+=8),v=s[p&u];c:for(;;){if(w=v>>>24,p>>>=w,q-=w,w=v>>>16&255,!(16&w)){if(0===(64&w)){v=s[(65535&v)+(p&(1<<w)-1)];continue c}a.msg=\"invalid distance code\",c.mode=d;break a}if(y=65535&v,w&=15,q<w&&(p+=B[f++]<<q,q+=8,q<w&&(p+=B[f++]<<q,q+=8)),y+=p&(1<<w)-1,y>k){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(p>>>=w,q-=w,w=h-i,y>w){if(w=y-w,w>m&&c.sane){a.msg=\"invalid distance too far back\",c.mode=d;break a}if(z=0,A=o,0===n){if(z+=l-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}else if(n<w){if(z+=l+n-w,w-=n,w<x){x-=w;do C[h++]=o[z++];while(--w);if(z=0,n<x){w=n,x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}}}else if(z+=n-w,w<x){x-=w;do C[h++]=o[z++];while(--w);z=h-y,A=C}for(;x>2;)C[h++]=A[z++],C[h++]=A[z++],C[h++]=A[z++],x-=3;x&&(C[h++]=A[z++],x>1&&(C[h++]=A[z++]))}else{z=h-y;do C[h++]=C[z++],C[h++]=C[z++],C[h++]=C[z++],x-=3;while(x>2);x&&(C[h++]=C[z++],x>1&&(C[h++]=C[z++]))}break}}break}}while(f<g&&h<j);x=q>>3,f-=x,q-=x<<3,p&=(1<<q)-1,a.next_in=f,a.next_out=h,a.avail_in=f<g?5+(g-f):5-(f-g),a.avail_out=h<j?257+(j-h):257-(h-j),c.hold=p,c.bits=q}},{}],36:[function(a,b,c){\"use strict\";function d(a){return(a>>>24&255)+(a>>>8&65280)+((65280&a)<<8)+((255&a)<<24)}function e(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new s.Buf16(320),this.work=new s.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function f(a){var b;return a&&a.state?(b=a.state,a.total_in=a.total_out=b.total=0,a.msg=\"\",b.wrap&&(a.adler=1&b.wrap),b.mode=L,b.last=0,b.havedict=0,b.dmax=32768,b.head=null,b.hold=0,b.bits=0,b.lencode=b.lendyn=new s.Buf32(pa),b.distcode=b.distdyn=new s.Buf32(qa),b.sane=1,b.back=-1,D):G}function g(a){var b;return a&&a.state?(b=a.state,b.wsize=0,b.whave=0,b.wnext=0,f(a)):G}function h(a,b){var c,d;return a&&a.state?(d=a.state,b<0?(c=0,b=-b):(c=(b>>4)+1,b<48&&(b&=15)),b&&(b<8||b>15)?G:(null!==d.window&&d.wbits!==b&&(d.window=null),d.wrap=c,d.wbits=b,g(a))):G}function i(a,b){var c,d;return a?(d=new e,a.state=d,d.window=null,c=h(a,b),c!==D&&(a.state=null),c):G}function j(a){return i(a,sa)}function k(a){if(ta){var b;for(q=new s.Buf32(512),r=new s.Buf32(32),b=0;b<144;)a.lens[b++]=8;for(;b<256;)a.lens[b++]=9;for(;b<280;)a.lens[b++]=7;for(;b<288;)a.lens[b++]=8;for(w(y,a.lens,0,288,q,0,a.work,{bits:9}),b=0;b<32;)a.lens[b++]=5;w(z,a.lens,0,32,r,0,a.work,{bits:5}),ta=!1}a.lencode=q,a.lenbits=9,a.distcode=r,a.distbits=5}function l(a,b,c,d){var e,f=a.state;return null===f.window&&(f.wsize=1<<f.wbits,f.wnext=0,f.whave=0,f.window=new s.Buf8(f.wsize)),d>=f.wsize?(s.arraySet(f.window,b,c-f.wsize,f.wsize,0),f.wnext=0,f.whave=f.wsize):(e=f.wsize-f.wnext,e>d&&(e=d),s.arraySet(f.window,b,c-d,e,f.wnext),d-=e,d?(s.arraySet(f.window,b,c-d,d,0),f.wnext=d,f.whave=f.wsize):(f.wnext+=e,f.wnext===f.wsize&&(f.wnext=0),f.whave<f.wsize&&(f.whave+=e))),0}function m(a,b){var c,e,f,g,h,i,j,m,n,o,p,q,r,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=0,Ba=new s.Buf8(4),Ca=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!a||!a.state||!a.output||!a.input&&0!==a.avail_in)return G;c=a.state,c.mode===W&&(c.mode=X),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,o=i,p=j,xa=D;a:for(;;)switch(c.mode){case L:if(0===c.wrap){c.mode=X;break}for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(2&c.wrap&&35615===m){c.check=0,Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0),m=0,n=0,c.mode=M;break}if(c.flags=0,c.head&&(c.head.done=!1),!(1&c.wrap)||(((255&m)<<8)+(m>>8))%31){a.msg=\"incorrect header check\",c.mode=ma;break}if((15&m)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(m>>>=4,n-=4,wa=(15&m)+8,0===c.wbits)c.wbits=wa;else if(wa>c.wbits){a.msg=\"invalid window size\",c.mode=ma;break}c.dmax=1<<wa,a.adler=c.check=1,c.mode=512&m?U:W,m=0,n=0;break;case M:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.flags=m,(255&c.flags)!==K){a.msg=\"unknown compression method\",c.mode=ma;break}if(57344&c.flags){a.msg=\"unknown header flags set\",c.mode=ma;break}c.head&&(c.head.text=m>>8&1),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=N;case N:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.head&&(c.head.time=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,Ba[2]=m>>>16&255,Ba[3]=m>>>24&255,c.check=u(c.check,Ba,4,0)),m=0,n=0,c.mode=O;case O:for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,\nn+=8}c.head&&(c.head.xflags=255&m,c.head.os=m>>8),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0,c.mode=P;case P:if(1024&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length=m,c.head&&(c.head.extra_len=m),512&c.flags&&(Ba[0]=255&m,Ba[1]=m>>>8&255,c.check=u(c.check,Ba,2,0)),m=0,n=0}else c.head&&(c.head.extra=null);c.mode=Q;case Q:if(1024&c.flags&&(q=c.length,q>i&&(q=i),q&&(c.head&&(wa=c.head.extra_len-c.length,c.head.extra||(c.head.extra=new Array(c.head.extra_len)),s.arraySet(c.head.extra,e,g,q,wa)),512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,c.length-=q),c.length))break a;c.length=0,c.mode=R;case R:if(2048&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.name+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.name=null);c.length=0,c.mode=S;case S:if(4096&c.flags){if(0===i)break a;q=0;do wa=e[g+q++],c.head&&wa&&c.length<65536&&(c.head.comment+=String.fromCharCode(wa));while(wa&&q<i);if(512&c.flags&&(c.check=u(c.check,e,q,g)),i-=q,g+=q,wa)break a}else c.head&&(c.head.comment=null);c.mode=T;case T:if(512&c.flags){for(;n<16;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(65535&c.check)){a.msg=\"header crc mismatch\",c.mode=ma;break}m=0,n=0}c.head&&(c.head.hcrc=c.flags>>9&1,c.head.done=!0),a.adler=c.check=0,c.mode=W;break;case U:for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}a.adler=c.check=d(m),m=0,n=0,c.mode=V;case V:if(0===c.havedict)return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,F;a.adler=c.check=1,c.mode=W;case W:if(b===B||b===C)break a;case X:if(c.last){m>>>=7&n,n-=7&n,c.mode=ja;break}for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}switch(c.last=1&m,m>>>=1,n-=1,3&m){case 0:c.mode=Y;break;case 1:if(k(c),c.mode=ca,b===C){m>>>=2,n-=2;break a}break;case 2:c.mode=_;break;case 3:a.msg=\"invalid block type\",c.mode=ma}m>>>=2,n-=2;break;case Y:for(m>>>=7&n,n-=7&n;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if((65535&m)!==(m>>>16^65535)){a.msg=\"invalid stored block lengths\",c.mode=ma;break}if(c.length=65535&m,m=0,n=0,c.mode=Z,b===C)break a;case Z:c.mode=$;case $:if(q=c.length){if(q>i&&(q=i),q>j&&(q=j),0===q)break a;s.arraySet(f,e,g,q,h),i-=q,g+=q,j-=q,h+=q,c.length-=q;break}c.mode=W;break;case _:for(;n<14;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(c.nlen=(31&m)+257,m>>>=5,n-=5,c.ndist=(31&m)+1,m>>>=5,n-=5,c.ncode=(15&m)+4,m>>>=4,n-=4,c.nlen>286||c.ndist>30){a.msg=\"too many length or distance symbols\",c.mode=ma;break}c.have=0,c.mode=aa;case aa:for(;c.have<c.ncode;){for(;n<3;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.lens[Ca[c.have++]]=7&m,m>>>=3,n-=3}for(;c.have<19;)c.lens[Ca[c.have++]]=0;if(c.lencode=c.lendyn,c.lenbits=7,ya={bits:c.lenbits},xa=w(x,c.lens,0,19,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid code lengths set\",c.mode=ma;break}c.have=0,c.mode=ba;case ba:for(;c.have<c.nlen+c.ndist;){for(;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(sa<16)m>>>=qa,n-=qa,c.lens[c.have++]=sa;else{if(16===sa){for(za=qa+2;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m>>>=qa,n-=qa,0===c.have){a.msg=\"invalid bit length repeat\",c.mode=ma;break}wa=c.lens[c.have-1],q=3+(3&m),m>>>=2,n-=2}else if(17===sa){for(za=qa+3;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=3+(7&m),m>>>=3,n-=3}else{for(za=qa+7;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=qa,n-=qa,wa=0,q=11+(127&m),m>>>=7,n-=7}if(c.have+q>c.nlen+c.ndist){a.msg=\"invalid bit length repeat\",c.mode=ma;break}for(;q--;)c.lens[c.have++]=wa}}if(c.mode===ma)break;if(0===c.lens[256]){a.msg=\"invalid code -- missing end-of-block\",c.mode=ma;break}if(c.lenbits=9,ya={bits:c.lenbits},xa=w(y,c.lens,0,c.nlen,c.lencode,0,c.work,ya),c.lenbits=ya.bits,xa){a.msg=\"invalid literal/lengths set\",c.mode=ma;break}if(c.distbits=6,c.distcode=c.distdyn,ya={bits:c.distbits},xa=w(z,c.lens,c.nlen,c.ndist,c.distcode,0,c.work,ya),c.distbits=ya.bits,xa){a.msg=\"invalid distances set\",c.mode=ma;break}if(c.mode=ca,b===C)break a;case ca:c.mode=da;case da:if(i>=6&&j>=258){a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,v(a,p),h=a.next_out,f=a.output,j=a.avail_out,g=a.next_in,e=a.input,i=a.avail_in,m=c.hold,n=c.bits,c.mode===W&&(c.back=-1);break}for(c.back=0;Aa=c.lencode[m&(1<<c.lenbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(ra&&0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.lencode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,c.length=sa,0===ra){c.mode=ia;break}if(32&ra){c.back=-1,c.mode=W;break}if(64&ra){a.msg=\"invalid literal/length code\",c.mode=ma;break}c.extra=15&ra,c.mode=ea;case ea:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.length+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}c.was=c.length,c.mode=fa;case fa:for(;Aa=c.distcode[m&(1<<c.distbits)-1],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(0===(240&ra)){for(ta=qa,ua=ra,va=sa;Aa=c.distcode[va+((m&(1<<ta+ua)-1)>>ta)],qa=Aa>>>24,ra=Aa>>>16&255,sa=65535&Aa,!(ta+qa<=n);){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}m>>>=ta,n-=ta,c.back+=ta}if(m>>>=qa,n-=qa,c.back+=qa,64&ra){a.msg=\"invalid distance code\",c.mode=ma;break}c.offset=sa,c.extra=15&ra,c.mode=ga;case ga:if(c.extra){for(za=c.extra;n<za;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}c.offset+=m&(1<<c.extra)-1,m>>>=c.extra,n-=c.extra,c.back+=c.extra}if(c.offset>c.dmax){a.msg=\"invalid distance too far back\",c.mode=ma;break}c.mode=ha;case ha:if(0===j)break a;if(q=p-j,c.offset>q){if(q=c.offset-q,q>c.whave&&c.sane){a.msg=\"invalid distance too far back\",c.mode=ma;break}q>c.wnext?(q-=c.wnext,r=c.wsize-q):r=c.wnext-q,q>c.length&&(q=c.length),pa=c.window}else pa=f,r=h-c.offset,q=c.length;q>j&&(q=j),j-=q,c.length-=q;do f[h++]=pa[r++];while(--q);0===c.length&&(c.mode=da);break;case ia:if(0===j)break a;f[h++]=c.length,j--,c.mode=da;break;case ja:if(c.wrap){for(;n<32;){if(0===i)break a;i--,m|=e[g++]<<n,n+=8}if(p-=j,a.total_out+=p,c.total+=p,p&&(a.adler=c.check=c.flags?u(c.check,f,p,h-p):t(c.check,f,p,h-p)),p=j,(c.flags?m:d(m))!==c.check){a.msg=\"incorrect data check\",c.mode=ma;break}m=0,n=0}c.mode=ka;case ka:if(c.wrap&&c.flags){for(;n<32;){if(0===i)break a;i--,m+=e[g++]<<n,n+=8}if(m!==(4294967295&c.total)){a.msg=\"incorrect length check\",c.mode=ma;break}m=0,n=0}c.mode=la;case la:xa=E;break a;case ma:xa=H;break a;case na:return I;case oa:default:return G}return a.next_out=h,a.avail_out=j,a.next_in=g,a.avail_in=i,c.hold=m,c.bits=n,(c.wsize||p!==a.avail_out&&c.mode<ma&&(c.mode<ja||b!==A))&&l(a,a.output,a.next_out,p-a.avail_out)?(c.mode=na,I):(o-=a.avail_in,p-=a.avail_out,a.total_in+=o,a.total_out+=p,c.total+=p,c.wrap&&p&&(a.adler=c.check=c.flags?u(c.check,f,p,a.next_out-p):t(c.check,f,p,a.next_out-p)),a.data_type=c.bits+(c.last?64:0)+(c.mode===W?128:0)+(c.mode===ca||c.mode===Z?256:0),(0===o&&0===p||b===A)&&xa===D&&(xa=J),xa)}function n(a){if(!a||!a.state)return G;var b=a.state;return b.window&&(b.window=null),a.state=null,D}function o(a,b){var c;return a&&a.state?(c=a.state,0===(2&c.wrap)?G:(c.head=b,b.done=!1,D)):G}function p(a,b){var c,d,e,f=b.length;return a&&a.state?(c=a.state,0!==c.wrap&&c.mode!==V?G:c.mode===V&&(d=1,d=t(d,b,f,0),d!==c.check)?H:(e=l(a,b,f,f))?(c.mode=na,I):(c.havedict=1,D)):G}var q,r,s=a(\"../utils/common\"),t=a(\"./adler32\"),u=a(\"./crc32\"),v=a(\"./inffast\"),w=a(\"./inftrees\"),x=0,y=1,z=2,A=4,B=5,C=6,D=0,E=1,F=2,G=-2,H=-3,I=-4,J=-5,K=8,L=1,M=2,N=3,O=4,P=5,Q=6,R=7,S=8,T=9,U=10,V=11,W=12,X=13,Y=14,Z=15,$=16,_=17,aa=18,ba=19,ca=20,da=21,ea=22,fa=23,ga=24,ha=25,ia=26,ja=27,ka=28,la=29,ma=30,na=31,oa=32,pa=852,qa=592,ra=15,sa=ra,ta=!0;c.inflateReset=g,c.inflateReset2=h,c.inflateResetKeep=f,c.inflateInit=j,c.inflateInit2=i,c.inflate=m,c.inflateEnd=n,c.inflateGetHeader=o,c.inflateSetDictionary=p,c.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":28,\"./adler32\":30,\"./crc32\":32,\"./inffast\":35,\"./inftrees\":37}],37:[function(a,b,c){\"use strict\";var d=a(\"../utils/common\"),e=15,f=852,g=592,h=0,i=1,j=2,k=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],l=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],m=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],n=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];b.exports=function(a,b,c,o,p,q,r,s){var t,u,v,w,x,y,z,A,B,C=s.bits,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=null,O=0,P=new d.Buf16(e+1),Q=new d.Buf16(e+1),R=null,S=0;for(D=0;D<=e;D++)P[D]=0;for(E=0;E<o;E++)P[b[c+E]]++;for(H=C,G=e;G>=1&&0===P[G];G--);if(H>G&&(H=G),0===G)return p[q++]=20971520,p[q++]=20971520,s.bits=1,0;for(F=1;F<G&&0===P[F];F++);for(H<F&&(H=F),K=1,D=1;D<=e;D++)if(K<<=1,K-=P[D],K<0)return-1;if(K>0&&(a===h||1!==G))return-1;for(Q[1]=0,D=1;D<e;D++)Q[D+1]=Q[D]+P[D];for(E=0;E<o;E++)0!==b[c+E]&&(r[Q[b[c+E]]++]=E);if(a===h?(N=R=r,y=19):a===i?(N=k,O-=257,R=l,S-=257,y=256):(N=m,R=n,y=-1),M=0,E=0,D=F,x=q,I=H,J=0,v=-1,L=1<<H,w=L-1,a===i&&L>f||a===j&&L>g)return 1;for(var T=0;;){T++,z=D-J,r[E]<y?(A=0,B=r[E]):r[E]>y?(A=R[S+r[E]],B=N[O+r[E]]):(A=96,B=0),t=1<<D-J,u=1<<I,F=u;do u-=t,p[x+(M>>J)+u]=z<<24|A<<16|B|0;while(0!==u);for(t=1<<D-1;M&t;)t>>=1;if(0!==t?(M&=t-1,M+=t):M=0,E++,0===--P[D]){if(D===G)break;D=b[c+r[E]]}if(D>H&&(M&w)!==v){for(0===J&&(J=H),x+=F,I=D-J,K=1<<I;I+J<G&&(K-=P[I+J],!(K<=0));)I++,K<<=1;if(L+=1<<I,a===i&&L>f||a===j&&L>g)return 1;v=M&w,p[v]=H<<24|I<<16|x-q|0}}return 0!==M&&(p[x+M]=D-J<<24|64<<16|0),s.bits=H,0}},{\"../utils/common\":28}],38:[function(a,b,c){\"use strict\";b.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],39:[function(a,b,c){\"use strict\";function d(a){for(var b=a.length;--b>=0;)a[b]=0}function e(a,b,c,d,e){this.static_tree=a,this.extra_bits=b,this.extra_base=c,this.elems=d,this.max_length=e,this.has_stree=a&&a.length}function f(a,b){this.dyn_tree=a,this.max_code=0,this.stat_desc=b}function g(a){return a<256?ia[a]:ia[256+(a>>>7)]}function h(a,b){a.pending_buf[a.pending++]=255&b,a.pending_buf[a.pending++]=b>>>8&255}function i(a,b,c){a.bi_valid>X-c?(a.bi_buf|=b<<a.bi_valid&65535,h(a,a.bi_buf),a.bi_buf=b>>X-a.bi_valid,a.bi_valid+=c-X):(a.bi_buf|=b<<a.bi_valid&65535,a.bi_valid+=c)}function j(a,b,c){i(a,c[2*b],c[2*b+1])}function k(a,b){var c=0;do c|=1&a,a>>>=1,c<<=1;while(--b>0);return c>>>1}function l(a){16===a.bi_valid?(h(a,a.bi_buf),a.bi_buf=0,a.bi_valid=0):a.bi_valid>=8&&(a.pending_buf[a.pending++]=255&a.bi_buf,a.bi_buf>>=8,a.bi_valid-=8)}function m(a,b){var c,d,e,f,g,h,i=b.dyn_tree,j=b.max_code,k=b.stat_desc.static_tree,l=b.stat_desc.has_stree,m=b.stat_desc.extra_bits,n=b.stat_desc.extra_base,o=b.stat_desc.max_length,p=0;for(f=0;f<=W;f++)a.bl_count[f]=0;for(i[2*a.heap[a.heap_max]+1]=0,c=a.heap_max+1;c<V;c++)d=a.heap[c],f=i[2*i[2*d+1]+1]+1,f>o&&(f=o,p++),i[2*d+1]=f,d>j||(a.bl_count[f]++,g=0,d>=n&&(g=m[d-n]),h=i[2*d],a.opt_len+=h*(f+g),l&&(a.static_len+=h*(k[2*d+1]+g)));if(0!==p){do{for(f=o-1;0===a.bl_count[f];)f--;a.bl_count[f]--,a.bl_count[f+1]+=2,a.bl_count[o]--,p-=2}while(p>0);for(f=o;0!==f;f--)for(d=a.bl_count[f];0!==d;)e=a.heap[--c],e>j||(i[2*e+1]!==f&&(a.opt_len+=(f-i[2*e+1])*i[2*e],i[2*e+1]=f),d--)}}function n(a,b,c){var d,e,f=new Array(W+1),g=0;for(d=1;d<=W;d++)f[d]=g=g+c[d-1]<<1;for(e=0;e<=b;e++){var h=a[2*e+1];0!==h&&(a[2*e]=k(f[h]++,h))}}function o(){var a,b,c,d,f,g=new Array(W+1);for(c=0,d=0;d<Q-1;d++)for(ka[d]=c,a=0;a<1<<ba[d];a++)ja[c++]=d;for(ja[c-1]=d,f=0,d=0;d<16;d++)for(la[d]=f,a=0;a<1<<ca[d];a++)ia[f++]=d;for(f>>=7;d<T;d++)for(la[d]=f<<7,a=0;a<1<<ca[d]-7;a++)ia[256+f++]=d;for(b=0;b<=W;b++)g[b]=0;for(a=0;a<=143;)ga[2*a+1]=8,a++,g[8]++;for(;a<=255;)ga[2*a+1]=9,a++,g[9]++;for(;a<=279;)ga[2*a+1]=7,a++,g[7]++;for(;a<=287;)ga[2*a+1]=8,a++,g[8]++;for(n(ga,S+1,g),a=0;a<T;a++)ha[2*a+1]=5,ha[2*a]=k(a,5);ma=new e(ga,ba,R+1,S,W),na=new e(ha,ca,0,T,W),oa=new e(new Array(0),da,0,U,Y)}function p(a){var b;for(b=0;b<S;b++)a.dyn_ltree[2*b]=0;for(b=0;b<T;b++)a.dyn_dtree[2*b]=0;for(b=0;b<U;b++)a.bl_tree[2*b]=0;a.dyn_ltree[2*Z]=1,a.opt_len=a.static_len=0,a.last_lit=a.matches=0}function q(a){a.bi_valid>8?h(a,a.bi_buf):a.bi_valid>0&&(a.pending_buf[a.pending++]=a.bi_buf),a.bi_buf=0,a.bi_valid=0}function r(a,b,c,d){q(a),d&&(h(a,c),h(a,~c)),G.arraySet(a.pending_buf,a.window,b,c,a.pending),a.pending+=c}function s(a,b,c,d){var e=2*b,f=2*c;return a[e]<a[f]||a[e]===a[f]&&d[b]<=d[c]}function t(a,b,c){for(var d=a.heap[c],e=c<<1;e<=a.heap_len&&(e<a.heap_len&&s(b,a.heap[e+1],a.heap[e],a.depth)&&e++,!s(b,d,a.heap[e],a.depth));)a.heap[c]=a.heap[e],c=e,e<<=1;a.heap[c]=d}function u(a,b,c){var d,e,f,h,k=0;if(0!==a.last_lit)do d=a.pending_buf[a.d_buf+2*k]<<8|a.pending_buf[a.d_buf+2*k+1],e=a.pending_buf[a.l_buf+k],k++,0===d?j(a,e,b):(f=ja[e],j(a,f+R+1,b),h=ba[f],0!==h&&(e-=ka[f],i(a,e,h)),d--,f=g(d),j(a,f,c),h=ca[f],0!==h&&(d-=la[f],i(a,d,h)));while(k<a.last_lit);j(a,Z,b)}function v(a,b){var c,d,e,f=b.dyn_tree,g=b.stat_desc.static_tree,h=b.stat_desc.has_stree,i=b.stat_desc.elems,j=-1;for(a.heap_len=0,a.heap_max=V,c=0;c<i;c++)0!==f[2*c]?(a.heap[++a.heap_len]=j=c,a.depth[c]=0):f[2*c+1]=0;for(;a.heap_len<2;)e=a.heap[++a.heap_len]=j<2?++j:0,f[2*e]=1,a.depth[e]=0,a.opt_len--,h&&(a.static_len-=g[2*e+1]);for(b.max_code=j,c=a.heap_len>>1;c>=1;c--)t(a,f,c);e=i;do c=a.heap[1],a.heap[1]=a.heap[a.heap_len--],t(a,f,1),d=a.heap[1],a.heap[--a.heap_max]=c,a.heap[--a.heap_max]=d,f[2*e]=f[2*c]+f[2*d],a.depth[e]=(a.depth[c]>=a.depth[d]?a.depth[c]:a.depth[d])+1,f[2*c+1]=f[2*d+1]=e,a.heap[1]=e++,t(a,f,1);while(a.heap_len>=2);a.heap[--a.heap_max]=a.heap[1],m(a,b),n(f,j,a.bl_count)}function w(a,b,c){var d,e,f=-1,g=b[1],h=0,i=7,j=4;for(0===g&&(i=138,j=3),b[2*(c+1)+1]=65535,d=0;d<=c;d++)e=g,g=b[2*(d+1)+1],++h<i&&e===g||(h<j?a.bl_tree[2*e]+=h:0!==e?(e!==f&&a.bl_tree[2*e]++,a.bl_tree[2*$]++):h<=10?a.bl_tree[2*_]++:a.bl_tree[2*aa]++,h=0,f=e,0===g?(i=138,j=3):e===g?(i=6,j=3):(i=7,j=4))}function x(a,b,c){var d,e,f=-1,g=b[1],h=0,k=7,l=4;for(0===g&&(k=138,l=3),d=0;d<=c;d++)if(e=g,g=b[2*(d+1)+1],!(++h<k&&e===g)){if(h<l){do j(a,e,a.bl_tree);while(0!==--h)}else 0!==e?(e!==f&&(j(a,e,a.bl_tree),h--),j(a,$,a.bl_tree),i(a,h-3,2)):h<=10?(j(a,_,a.bl_tree),i(a,h-3,3)):(j(a,aa,a.bl_tree),i(a,h-11,7));h=0,f=e,0===g?(k=138,l=3):e===g?(k=6,l=3):(k=7,l=4)}}function y(a){var b;for(w(a,a.dyn_ltree,a.l_desc.max_code),w(a,a.dyn_dtree,a.d_desc.max_code),v(a,a.bl_desc),b=U-1;b>=3&&0===a.bl_tree[2*ea[b]+1];b--);return a.opt_len+=3*(b+1)+5+5+4,b}function z(a,b,c,d){var e;for(i(a,b-257,5),i(a,c-1,5),i(a,d-4,4),e=0;e<d;e++)i(a,a.bl_tree[2*ea[e]+1],3);x(a,a.dyn_ltree,b-1),x(a,a.dyn_dtree,c-1)}function A(a){var b,c=4093624447;for(b=0;b<=31;b++,c>>>=1)if(1&c&&0!==a.dyn_ltree[2*b])return I;if(0!==a.dyn_ltree[18]||0!==a.dyn_ltree[20]||0!==a.dyn_ltree[26])return J;for(b=32;b<R;b++)if(0!==a.dyn_ltree[2*b])return J;return I}function B(a){pa||(o(),pa=!0),a.l_desc=new f(a.dyn_ltree,ma),a.d_desc=new f(a.dyn_dtree,na),a.bl_desc=new f(a.bl_tree,oa),a.bi_buf=0,a.bi_valid=0,p(a)}function C(a,b,c,d){i(a,(L<<1)+(d?1:0),3),r(a,b,c,!0)}function D(a){i(a,M<<1,3),j(a,Z,ga),l(a)}function E(a,b,c,d){var e,f,g=0;a.level>0?(a.strm.data_type===K&&(a.strm.data_type=A(a)),v(a,a.l_desc),v(a,a.d_desc),g=y(a),e=a.opt_len+3+7>>>3,f=a.static_len+3+7>>>3,f<=e&&(e=f)):e=f=c+5,c+4<=e&&b!==-1?C(a,b,c,d):a.strategy===H||f===e?(i(a,(M<<1)+(d?1:0),3),u(a,ga,ha)):(i(a,(N<<1)+(d?1:0),3),z(a,a.l_desc.max_code+1,a.d_desc.max_code+1,g+1),u(a,a.dyn_ltree,a.dyn_dtree)),p(a),d&&q(a)}function F(a,b,c){return a.pending_buf[a.d_buf+2*a.last_lit]=b>>>8&255,a.pending_buf[a.d_buf+2*a.last_lit+1]=255&b,a.pending_buf[a.l_buf+a.last_lit]=255&c,a.last_lit++,0===b?a.dyn_ltree[2*c]++:(a.matches++,b--,a.dyn_ltree[2*(ja[c]+R+1)]++,a.dyn_dtree[2*g(b)]++),a.last_lit===a.lit_bufsize-1}var G=a(\"../utils/common\"),H=4,I=0,J=1,K=2,L=0,M=1,N=2,O=3,P=258,Q=29,R=256,S=R+1+Q,T=30,U=19,V=2*S+1,W=15,X=16,Y=7,Z=256,$=16,_=17,aa=18,ba=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],ca=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],da=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],ea=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],fa=512,ga=new Array(2*(S+2));d(ga);var ha=new Array(2*T);d(ha);var ia=new Array(fa);d(ia);var ja=new Array(P-O+1);d(ja);var ka=new Array(Q);d(ka);var la=new Array(T);d(la);var ma,na,oa,pa=!1;c._tr_init=B,c._tr_stored_block=C,c._tr_flush_block=E,c._tr_tally=F,c._tr_align=D},{\"../utils/common\":28}],40:[function(a,b,c){\"use strict\";function d(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}b.exports=d},{}]},{},[10])(10)});\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomActiveList {\n   get key() {\n      return \"activelist\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.list, webix.ActiveContent);\n   }\n};\n","/*\n * countfooter\n *\n * Add the count footer to the webix's datatable.\n *\n */\n\nmodule.exports = class ABCountFooter {\n   get key() {\n      return \"countfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.countColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               var rowData = datatable.find({}) || [];\n               rowData.forEach((row) => {\n                  if (row == null) return;\n\n                  var data =\n                     row[info.columnId] || row[info.columnId + \"__relation\"];\n\n                  // array\n                  if (data && Array.isArray(data)) {\n                     result += data.length;\n                  } else if (\n                     data != null &&\n                     data != \"\" &&\n                     data != false &&\n                     data != \"false\" &&\n                     data != \"0\"\n                  ) {\n                     result += 1;\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * Custom Component Manager\n * Make sure our {ABComponent}s are initialized with our custom\n * Webix Components.\n */\n\n// Import our Custom Components here:\nvar componentList = [\n   require(\"./activelist\"),\n   require(\"./countfooter\"),\n   require(\"./datetimepicker\"),\n   require(\"./editlist\"),\n   require(\"./edittree\"),\n   require(\"./editunitlist\"),\n   require(\"./focusableTemplate\"),\n   require(\"./formioPreview\"),\n   require(\"./formioBuilder\").default,\n   require(\"./numbertext\"),\n   require(\"./thaicalendar\"),\n   require(\"./timepicker\"),\n   require(\"./tinyMce\").default,\n   require(\"./totalfooter\"),\n   require(\"./treesuggest\"),\n   // require('./savablelayout')\n];\n\nmodule.exports = class ABCustomComponentManager {\n   constructor() {}\n\n   initComponents(App) {\n      App.custom = App.custom || {};\n\n      componentList.forEach((Component) => {\n         var component = new Component(App);\n         App.custom[component.key] = component;\n      });\n\n      // Transition to v2:\n      App.AB.custom = App.custom;\n   }\n};\n","/*\n * custom_datetimepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomDateTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"datetimepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_datetimepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.datetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: \"calendar\",\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.datetime = webix.extend(\n         {\n            popupType: \"datetime\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.list);\n   }\n};\n","/*\n * custom_edittree\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditTree {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"edittree\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.tree);\n   }\n};\n","/*\n * custom_editunitlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditUnitList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"editunitlist\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n      /*\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n*/\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.EditAbility, webix.ui.unitlist);\n   }\n};\n","/*\n * custom_activelist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomFocusableTemplate {\n   get key() {\n      return \"focusabletemplate\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         focus: function () {\n            return false;\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.template, webix.UIManager);\n   }\n};\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: Moved from ABDesigner to prevent loading formIO library globally or\n * duplicating it. Revisit when formIOv5 releases as it should then be possible\n * to package the form renderer without the builder.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomFormBuilderBuilder extends ABLazyCustomComponent {\n   get key() {\n      return \"formiobuilder\";\n   }\n\n   constructor(App) {\n      super(App);\n      this.label = this.AB.Label();\n      this.view = this.key;\n   }\n\n   /**\n    * Load the FormIO dependency and add the component to webix\n    * @returns {Promise<null>}\n    */\n   async init() {\n      if (this.initialized) return;\n      const { FormBuilder } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      this.FormBuilder = FormBuilder;\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(this.ui(), this.AB.Webix.ui.popup);\n      this.initialized = true;\n   }\n\n   /**\n    * Generate the custom webix ui\n    * @method ui\n    * @returns {Object} custom webix ui\n    */\n   ui() {\n      return {\n         name: this.key,\n         defaults: {\n            css: \"scrolly forceOpen\",\n            hidden: false,\n            autofit: true,\n         },\n         $init: async function (config) {\n            const comp = this.parseDataFields(config.dataFields);\n            const formComponents = config.formComponents\n               ? config.formComponents\n               : { components: [comp.approveButton.schema] };\n            try {\n               this.builder = new this.FormBuilder(this.$view, formComponents, {\n                  noDefaultSubmitButton: true,\n                  noNewEdit: true,\n                  builder: {\n                     basic: false,\n                     advanced: false,\n                     customBasic: false,\n                     premium: false,\n                     custom: {\n                        title: this.label(\"Fields\"),\n                        weight: 0,\n                        default: true,\n                        components: comp,\n                     },\n                     layout: {\n                        components: {\n                           table: true,\n                        },\n                     },\n                  },\n               });\n               await this.builder.ready;\n            } catch (err) {\n               this.notify(\"Error initializing formio builder\", err);\n            }\n         },\n         // set up a function that can be called to request the form schema\n         getFormData: function () {\n            return this.builder.schema;\n         },\n         // Pass functions into the Webix component to be use in $init\n         label: this.label,\n         parseDataFields: this.parseDataFields,\n         notify: this.AB.notify.developer,\n         FormBuilder: this.FormBuilder,\n      };\n   }\n\n   /**\n    * Generate the formio custom components based on the fields.\n    * Used internally in the webix component.\n    * @method parseDataFields\n    * @param {object[]} fields {field: ABField, key, label, object: ABObject}\n    * @returns {object} each key is a formio component\n    */\n   parseDataFields(fields) {\n      const components = {};\n      fields.forEach(({ field, key, label }) => {\n         if (!field) return;\n\n         const schema = {\n            abFieldID: field.id,\n            label: field.label,\n            disabled: true,\n            key,\n            _key: key,\n            type: \"textfield\",\n            input: true,\n         };\n\n         switch (field.key) {\n            case \"boolean\":\n               schema.type = \"checkbox\";\n               break;\n            case \"calculate\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = ${field.settings.formula\n                  .replace(/{/g, \"data['\")\n                  .replace(/}/g, \"']\")}`;\n               break;\n            case \"connectObject\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = data['${key}.format']`;\n               break;\n            case \"date\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy\";\n               break;\n            case \"datetime\":\n               schema.type = \"datetime\";\n               schema.format = \"MMMM d, yyyy h:mm a\";\n               break;\n            case \"email\":\n               schema.type = \"email\";\n               break;\n            case \"file\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"a\";\n               schema.className = \"btn btn-primary btn-block\";\n               schema.content = `<i class='fa fa-paperclip'></i> {{data['${key}']?.filename ?? \"No File\"}}`;\n               schema.attrs = [\n                  {\n                     attr: \"href\",\n                     value: field.urlFile(`{{data['${key}'].uuid}}`),\n                  },\n                  {\n                     attr: \"target\",\n                     value: \"_blank\",\n                  },\n               ];\n               schema.refreshOnChange = true;\n               schema.input = false;\n               break;\n            case \"image\":\n               schema.type = \"htmlelement\";\n               schema.tag = \"img\";\n               schema.className = \"img-thumbnail max100\";\n               schema.content = \"\";\n               (schema.attrs = [\n                  {\n                     attr: \"src\",\n                     value: field.urlImage(`{{data['${key}']}}`),\n                  },\n               ]),\n                  (schema.refreshOnChange = true);\n               schema.input = false;\n               break;\n            case \"list\":\n               var values = [];\n               field.settings.options.forEach((opt) => {\n                  values.push({\n                     label: opt.text,\n                     value: opt.id,\n                  });\n               });\n               schema.type = \"select\";\n               schema.data = { values };\n               schema.multiple = field.settings.isMultiple;\n               break;\n            case \"LongText\":\n               schema.type = \"textarea\";\n               break;\n            case \"number\":\n               schema.type = \"number\";\n               break;\n            case \"TextFormula\":\n               schema.inputType = \"text\";\n               schema.calculateValue = `value = '${field.settings.textFormula}'`;\n               break;\n            default:\n               break;\n         }\n         components[key] = {\n            title: label,\n            key,\n            icon: field.icon,\n            schema,\n         };\n      });\n\n      components[\"approveButton\"] = {\n         title: this.label(\"Approve Button\"),\n         key: \"approve\",\n         icon: \"check-square\",\n         schema: {\n            label: this.label(\"Approve\"),\n            type: \"button\",\n            key: \"approve\",\n            event: \"approve\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-up\",\n            action: \"event\",\n            theme: \"success\",\n         },\n      };\n      components[\"denyButton\"] = {\n         title: this.label(\"Deny Button\"),\n         key: \"deny\",\n         icon: \"ban\",\n         schema: {\n            label: this.label(\"Deny\"),\n            type: \"button\",\n            key: \"deny\",\n            event: \"deny\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-thumbs-down\",\n            action: \"event\",\n            theme: \"danger\",\n         },\n      };\n      components[\"customButton\"] = {\n         title: this.label(\"Custom Action Button\"),\n         key: \"custom\",\n         icon: \"cog\",\n         schema: {\n            label: this.label(\"Custom Name\"),\n            type: \"button\",\n            key: \"custom\",\n            event: \"yourEvent\",\n            block: true,\n            size: \"lg\",\n            input: false,\n            leftIcon: \"fa fa-cog\",\n            action: \"event\",\n            theme: \"primary\",\n         },\n      };\n      return components;\n   }\n}\n","/*\n * formioBuilder\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n *\n */\nconst ABLazyCustomComponent = require(\"./lazyComponent.js\");\nmodule.exports = class ABCustomFormIOPreview extends ABLazyCustomComponent {\n   get key() {\n      return \"formiopreview\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n      const { Form } = await import(\n         /* webpackPrefetch: true */\n         /* webpackFetchPrioirtiy: \"low\" */\n         \"../init/formio.js\"\n      );\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            css: \"scrolly\",\n            borderless: true,\n         },\n         $init: async function (config) {\n            this.$ready.push(() => this.initForm(config));\n         },\n\n         initForm: async (config) => {\n            var formComponents = config.formComponents ?? {};\n            var formData = config.formData ?? {};\n            const component = $$(config.id);\n            // we need to find out when we are passing an array of objects and reduce it down to an array of IDs\n            for (var data in formData) {\n               if (\n                  Array.isArray(formData[data]) &&\n                  typeof formData[data][0] == \"object\"\n               ) {\n                  formData[data] = formData[data].map((item) => item.id);\n               }\n            }\n\n            const form = new Form(component.$view, formComponents);\n            // readOnly: true\n            // sanitizeConfig: {\n            //     addTags: [\"a\", \"label\", \"img\", \"i\"],\n            //     addAttr: [\"src\", \"href\", \"class\", \"target\"]\n            // }\n            // }).then(function (form) {\n            await form.build();\n            // now that it is set up we can push it into the global var\n            // formBuilder = builder;\n            // Provide a default submission.\n            form.instance.submission = {\n               data: formData,\n            };\n            (formComponents.components || []).forEach((comp) => {\n               if (\n                  comp.type == \"button\" &&\n                  comp.action == \"event\" &&\n                  comp.event\n               ) {\n                  form.instance.once(comp.event, function (/* click */) {\n                     config?.onButton(comp.event);\n                     // _this.emit(\"button\", comp.event);\n                  });\n               }\n            });\n            // });\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      this._logic = {};\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      this.AB.Webix.protoUI(_ui, this.AB.Webix.ui.view);\n      this.initialized = true;\n   }\n};\n","/**\n * Base class for any custom webix component that we want to initalize lazily,\n * usually to reduce the dependency size required on load.\n */\nvar ABEmitter = require(\"../AppBuilder/platform/ABEmitter.js\");\nmodule.exports = class ABLazyCustomComponent extends ABEmitter {\n   constructor({ AB }) {\n      super();\n      this.initialized = false;\n      this.AB = AB;\n      this.setDefaultUI();\n   }\n\n   /**\n    * Sets a default UI used before the actual webix component is ready. Meant as\n    * a helper to future developers.\n    */\n   setDefaultUI() {\n      this.AB.Webix.protoUI(\n         {\n            name: this.key,\n            defaults: {\n               template:\n                  \"This custom webix component has not been initialized. <br>Call AB.custom.#key#.init() before using this component.\",\n               data: { key: this.key },\n            },\n            $init: () =>\n               console.warn(\n                  `${this.key} custom webix component used before being initalized`\n               ),\n         },\n         this.AB.Webix.ui.template\n      );\n   }\n};\n","/*\n * numbertext\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomNumberText {\n   get key() {\n      return \"numbertext\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n\n         defaults: {\n            css: \"webix_el_text\",\n         },\n\n         // override this function to return number value type\n         $getValue: function () {\n            var val = this.getInputNode().value;\n            if (val) return JSON.parse(val);\n            // Convert to number\n            else return \"\";\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.text);\n   }\n};\n","/*\n * Thai Calendar\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomThaiCalendar {\n   get key() {\n      return \"thaicalendar\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      this.view = this.key;\n\n      const i18n = webix.i18n;\n\n      // Our webix UI definition:\n      const _ui = {\n         name: this.key,\n         defaults: {\n            calendarHeader: function (d) {\n               return `${i18n.calendar.monthFull[d.getMonth()]} ${\n                  d.getFullYear() + 543\n               }`;\n            },\n         },\n      };\n\n      if (webix.ui.calendar.$protoWait[0]._zoom_logic) {\n         _ui._zoom_logic = AB.cloneDeep(\n            webix.ui.calendar.$protoWait[0]._zoom_logic\n         );\n         _ui._zoom_logic[1] = Object.assign(_ui._zoom_logic[1], {\n            _getTitle: this._getYearTitle,\n         });\n         _ui._zoom_logic[2] = Object.assign(_ui._zoom_logic[2], {\n            _getTitle: this._getYearRangeTitle,\n            _getContent: this._getYearContent,\n            _setContent: this._setYear,\n         });\n      }\n\n      if (webix.ui.calendar.$protoWait[0].Qd) {\n         _ui.Qd = AB.cloneDeep(webix.ui.calendar.$protoWait[0].Qd);\n         _ui.Qd[1] = Object.assign(_ui.Qd[1], {\n            Jv: this._getYearTitle,\n         });\n         _ui.Qd[2] = Object.assign(_ui.Qd[2], {\n            Jv: this._getYearRangeTitle,\n            Zv: this._getYearContent,\n            Xv: this._setYear,\n         });\n      }\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.calendar);\n\n      webix.editors.$popup.thaidate = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: false,\n         },\n      };\n\n      webix.editors.$popup.thaidatetime = {\n         view: \"popup\",\n         width: 250,\n         height: 250,\n         padding: 0,\n         body: {\n            view: this.key,\n            icons: true,\n            borderless: true,\n            timepicker: true,\n         },\n      };\n\n      webix.editors.thaidate = webix.extend(\n         {\n            popupType: \"thaidate\",\n         },\n         webix.editors.date\n      );\n\n      webix.editors.thaidatetime = webix.extend(\n         {\n            popupType: \"thaidatetime\",\n         },\n         webix.editors.date\n      );\n   }\n\n   _getYearTitle(date) {\n      return date.getFullYear() + 543;\n   }\n\n   _getYearRangeTitle(date, calendar) {\n      let start = date.getFullYear() + 543;\n      calendar._zoom_start_date = start = start - (start % 10) - 1;\n      return start + \" - \" + (start + 10 + 1);\n   }\n\n   _getYearContent(i, calendar) {\n      return calendar._zoom_start_date + i;\n   }\n\n   _setYear(next, i, calendar) {\n      next.setFullYear(calendar._zoom_start_date - 543 + i);\n   }\n};\n","/*\n * custom_timepicker\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomTimePicker {\n   //.extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"timepicker\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // componentKey {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: App.unique(\"custom_timepicker\"), // keep this unique for this App instance.\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.editors.$popup.time = {\n         view: \"popup\",\n         body: {\n            view: \"calendar\",\n            width: 220,\n            height: 200,\n            type: \"time\",\n         },\n      };\n\n      webix.editors.time = webix.extend(\n         {\n            popupType: \"time\",\n         },\n         webix.editors.date\n      );\n   }\n};\n","/*\n * tinyMce\n *\n * Create a custom webix component.\n *\n * Note: This component is lazy loaded and requires calling .init() before using\n */\nimport ABLazyCustomComponent from \"./lazyComponent.js\";\nexport default class ABCustomTinyMCE extends ABLazyCustomComponent {\n   get key() {\n      return \"tinymce-editor\";\n   }\n\n   async init() {\n      if (this.initialized) return;\n\n      await import(\n         /* webpackPrefetch: true */\n         \"../js/webix/extras/tinymce.js\"\n      );\n      this.initialized = true;\n   }\n}\n","/*\n * totalfooter\n *\n * Add the contents of records to show in footer of the webix's datatable.\n *\n */\n\nmodule.exports = class ABTotalFooter {\n   get key() {\n      return \"totalfooter\";\n   }\n\n   constructor(App, key) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {};\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {};\n\n      // Our webix UI definition:\n      var _ui = {};\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix :\n      webix.ui.datafilter.totalColumn = webix.extend(\n         {\n            refresh: function (datatable, node, info) {\n               var result = 0;\n\n               datatable.eachRow(function (row) {\n                  var record = datatable.getItem(row);\n\n                  var data = info.field.format(record);\n\n                  // array\n                  if (data) {\n                     result += parseFloat(data); // we need to use parseFloat because numbers could be decimals\n                  }\n               });\n\n               node.innerHTML = result;\n            },\n         },\n         webix.ui.datafilter.summColumn\n      );\n   }\n};\n","/*\n * custom_editlist\n *\n * Create a custom webix component.\n *\n */\n\nmodule.exports = class ABCustomEditList {\n   // .extend(ComponentKey, function(App, componentKey ) {\n\n   get key() {\n      return \"treesuggest\";\n   }\n\n   constructor(App) {\n      // App \t{obj}\tour application instance object.\n      // key {string}\tthe destination key in App.custom[componentKey] for the instance of this component:\n\n      // super(App, key);\n\n      var L = App.Label;\n\n      var labels = {\n         common: App.labels,\n\n         component: {},\n      };\n\n      // internal list of Webix IDs to reference our UI components.\n      var ids = {\n         component: App.unique(this.key),\n      };\n\n      // Our webix UI definition:\n      var _ui = {\n         name: this.key,\n         defaults: {\n            type: \"tree\",\n            width: 0,\n            body: {\n               borderless: true,\n               select: true,\n               template: function (obj, common) {\n                  return (\n                     \"<span>\" +\n                     (obj.$count ? \"<b>\" + obj.value + \"</b>\" : obj.value) +\n                     \"</span>\"\n                  );\n               },\n               ready: function () {\n                  this.openAll();\n               },\n               on: {\n                  onAfterSelect: function (id, e) {\n                     if (this.getItem(id).$count) {\n                        this.getParentView().setMasterValue(\"\");\n                        this.show(\n                           $$(this.getParentView().config.master).getInputNode()\n                        );\n                     }\n                  },\n               },\n            },\n         },\n      };\n      this.view = this.key;\n\n      // our internal business logic\n      var _logic = {};\n      this._logic = _logic;\n\n      // Tell Webix to create an INSTANCE of our custom component:\n      webix.protoUI(_ui, webix.ui.suggest);\n   }\n};\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","EventEmitter","constructor","super","this","isAuthenticated","_config","_listRoles","_listScopes","_listUsers","init","AB","UserConfig","Config","userConfig","MetaConfig","metaConfig","roles","scopes","users","Network","on","context","err","data","console","error","emit","Promise","canSwitcheroo","r","uuid","length","isSwitcherood","userReal","isSystemDesigner","email","language","languageCode","logout","post","url","tenantUrl","Tenant","setting","key","fn","filter","rolesAll","username","userList","imageID","image_id","sendEmailNotifications","Alert","opts","webix","alert","title","Multilingual","label","text","message","ok","Confirm","labelYes","labelNo","cancel","confirm","callback","result","fnYes","fnNo","ConfirmDelete","Message","timeout","expire","MLClass","_missingLabelID","_missingLabels","_pluginLabelsMissing","labels","labelConfig","_languages","languageConfig","pluginLabels","currentLanguage","Account","altText","values","postMissing","arguments","Array","isArray","replace","newKey","slice","postMissingLabel","forEach","v","i","sub","replaceAll","labelPlugin","plugin","languages","pluginLoadLabels","pluginLabelReport","warn","JSON","stringify","clearTimeout","sendBatch","batchLabels","missingLabels","k","l","shift","push","then","catch","toString","indexOf","setTimeout","destroy","save","toObj","toDefinition","Atomic","parent","wildcard","newListener","maxListeners","baseURL","numRetries","_network","isRealTime","options","siteConfig","appbuilder","urlCoreServer","networkNumRetries","get","params","jobResponse","type","useThese","search","val","encodeURIComponent","join","_request","put","delete","isNetworkConnected","salSend","packet","_retry","notify","developer","publishResponse","reject","headers","authToken","Authorization","tenantID","method","statusText","Analytics","log","_err","status","responseText","parse","response","queue","resend","listSocketEvents","socketDataSave","HashSocketJobs","packets","ev","io","socket","objectId","obj","objectByID","name","jobID","socketDataLog","model","performance","op","normalizeData","socketLog","socketLogClear","isConnected","route","query","match","http","undefined","toLowerCase","request","jwres","statusCode","errStr","body","Stringify","setMaxListeners","queueLock","_queueCount","Lock","networkType","queueFlush","idConnectionCheck","window","addEventListener","_connectionCheck","isNetworkSlow","_networkSlow","registerNetworkTestWorker","worker","slow","_networkTestWorker","onmessage","category","level","networkStatus","navigator","connection","Connection","onLine","NONE","refQueue","queueCount","acquire","Storage","set","release","logError","processRequest","cb","entry","job","res","rej","reset","getTokens","tenantStorage","Webix","storage","prefix","local","value","clear","remove","clearAll","_storage","config","encrypted","textClickToEnter","String","appListRowHeight","buttonWidthLarge","buttonWidthMedium","buttonWidthSmall","buttonWidthExtraSmall","tabWidthLarge","tabWidthMedium","tabWidthSmall","tabWidthExtraSmall","columnWidthXLarge","columnWidthLarge","columnWidthMedium","columnWidthSmall","columnWidthExtraSmall","xSmallSpacer","smallSpacer","mediumSpacer","largeSpacer","xLargeSpacer","xxLargeSpacer","xxxLargeSpacer","appListSpacerRowHeight","appListSpacerColMinWidth","appListSpacerColMaxWidth","objectWorkspaceColWidth","labelWidthSmall","labelWidthMedium","labelWidthLarge","labelWidthXLarge","labelWidthXXLarge","labelWidthXXXLarge","labelWidthCheckbox","hideMobile","innerWidth","icons","ABValidator","errors","addError","pass","fail","toValidationObject","invalidAttributes","attr","updateForm","form","vObj","Validation","isFormValidationError","updateGrid","rowID","grid","isGridValidationError","ABFactory","definitions","Dialog","ClassUI","Class","FilterComplex","ABViewManager","SortPopup","UISettings","validator","errorSailsCleanup","raw","hasFocused","attrs","wasForm","elements","msg","markInvalid","focus","row","Grid","wasGrid","addCellCss","refresh","clearSelection","Definitions","_plugins","_pendingNetworkRequests","fullDef","pending","pkt","newDef","definitionNew","serverDef","definitionCreate","_definitions","platformRules","toDate","dateText","ignoreTime","format","isValid","Date","toDateFormat","date","momentObj","localeCode","locale","subtractDate","number","unit","subtract","addDate","add","rules","async","allInits","all","_localSettings","json","definitionSync","def","domain","info","plugins","pluginLoad","p","cloneDeep","rest","emitData","Label","localSettings","isNil","isUUID","RegExp","test","merge","orderBy","uniq","kebabCase","sumBy","meanBy","maxBy","minBy","isString","ABMLClass","attributes","appType","versionData","versionNumber","changeLog","author","version","keepVersion","commitMessage","timestamp","toISOString","icon","isSystemObject","roleAccess","isAccessManaged","accessManagers","isTranslationManaged","translationManagers","isTutorialManaged","tutorialManagers","hintIDs","objectIDs","queryIDs","datacollectionIDs","newPages","pageIDs","definitionByID","pageNew","appID","pageID","_pages","processIDs","pID","processByID","processID","objectListSettings","isOpen","searchText","sortDirection","isGroup","translations","fromValues","ViewManager","isAccessibleForRoles","foundRole","parseInt","useRole","role","pages","isWebApp","isMobile","datacollectionsExcluded","datacollections","datacollectionsIncluded","sort","sortFn","a","b","localeCompare","objectsExcluded","objects","objectsIncluded","hintsExcluded","hints","h","hintsIncluded","connectedObjects","connectedFields","connectFields","connectedObj","f","settings","linkObject","linkedObjects","currObjID","linkedObjectID","linkedFields","columnName","deep","_searchDeep","curr","items","resultsCurr","resultsP","concat","processes","hasProcess","process","views","_views","subViews","lookDeep","view","pageViews","subPages","viewAll","allViews","queriesExcluded","queries","q","queriesIncluded","urlResolve","pointer","parts","split","parseStep","steps","urlPointer","acrossApp","urlObject","urlPage","urlQuery","objectlistIsOpen","objectlistSearchText","objectlistSortDirection","objectlistIsGroup","newView","pageByID","viewNew","application","ABViewManagerMobile","ABApplication","pageDefault","DefaultValues","object","datasourceID","linkDatacollectionID","linkFieldID","followDatacollectionID","objectWorkspace","filterConditions","glue","sortFields","loadAll","populate","isQuery","fixSelect","syncType","__dataCollection","_dataCollectionNew","refreshFilterConditions","__bindComponentIds","__flexComponentIds","_dataStatus","dataStatusFlag","notInitial","__filterCond","__model","static","preventPopulate","__datasource","queryByID","__treeCollection","_treeCollectionNew","__isGroup","removeFromApplications","next","apps","applications","allRemoves","app","datacollectionRemove","$dc","datasource","datacollection","sourceType","datacollectionLink","datacollectionByID","fieldLink","fieldByID","initializing","initialized","dataStatus","setCursor","itemId","setCursorTree","currTreeId","getCursor","currTreeItem","getItem","_itemId","dc","__previousCursorId","exists","tc","find","treeItem","$parent","treeCursor","currId","currItem","item","currItemAndChilds","serialize","refreshLinkCursor","getFirstRecord","getFirstId","getNextRecord","record","getNextId","force","linkCursor","dvLink","filterData","rowData","isParentFilterValid","setStaticCursor","currentUserUsername","userFields","fields","found","currRowId","rowId","count","isCursorFollow","dcFollow","datacollectionFollow","loadData","filterCondition","cond","___AD","onAfterCursorChange","attachEvent","currData","isRelated","relateData","PK","needAdd","updatedVals","bad","ABObjectQuery","objList","where","newDataId","alias","objectAlias","rule","findAll","newQueryData","updatedV","isValidData","__reloadWheres","bcids","$$","pos","getParentView","index","DC","addView","L","css","click","event","reloadData","removeView","parseTreeCollection","datasourceLink","d","updateItemData","updateRelateVal","relationName","rowRelateVal","valIsRelated","updateItem","updateRelationalDataFromLinkDC","incomingObj","iPK","newData","currCursor","needsRefresh","localField","colName","relName","linkType","rval","getRelationValue","newPacket","objectID","field","fieldID","needUpdate","isExists","updatedIds","updatedTreeIds","_queryUpdateData","updateCursor","ABObject","assign","dcItem","staleRefresh","deleteId","needDelete","deletedIds","deletedTreeIds","delId","updateRelateVals","relateVal","linkDC","eventAdd","emitter","eventName","listener","currentCursor","previousCursorId","isMyDataThere","shouldPopulate","valuesToAdd","valuesIn","valuesToRemove","followDC","followCursor","eventRemove","start","limit","sorts","wheres","__additionalWheres","linkRule","ruleLinkedData","unshift","whereCleanUp","skip","parentDc","waitForDataCollectionToInitialize","dcFilters","dv","_pendingLoadDataResolve","platformFind","processIncomingData","incomingData","total_count","nextData","remain","splice","parsedData","queuedParse","__totalCount","__throttleIncoming","load","reloadTimer","reloadPromise","reloadPromise__resolve","reloadPromise__reject","reloadWheres","getData","linkDv","linkObj","linkVal","totalCount","bind","unbind","removeComponent","comId","dataCollectionLink","linkCursorId","__filterDatasource","filterComplexNew","fieldsLoad","setValue","__filterDatacollection","isAlreadyThere","allMatch","__filterScope","scopeList","userScopes","s","allowAll","objectIds","scopeRules","sRules","scopeWhere","syncTypeFlag","server","client","oItem","tran","updatedTran","tranKey","dcLink","cursorLink","linkedField","relatedData","newItem","clone","clonedDatacollection","parseMe","cursorID","filteredClone","filters","evt","__events","eventClear","removeListener","waitReady","builder","definitionDestroy","definitionUpdate","ABApplicationMobile","ABDefinition","ABComponent","ABFieldManager","ABIndex","ABObjectExternal","ABObjectImport","ABObjectApi","ABDataCollection","ABHint","ABProcess","ABProcessParticipant","ABProcessLane","ABProcessTaskManager","ABStep","ABViewDetailItem","ABViewFormItem","ABMobileViewFormItem","RowFilter","hash","_allApplications","_allObjects","_allHints","_allProcesses","_allQueries","_allSteps","_allDatacollections","nameFilter","toApplicationNameFormat","toFieldRelationFormat","toJunctionTableFK","objectName","fkName","substring","toJunctionTableNameFormat","appName","sourceTableName","targetTableName","toObjectNameFormat","definitionClean","allDefinitions","keyList","keyFn","objectKeysByDef","isRaw","definitionsParse","defs","applicationByID","ID","applicationNew","applicationMobileNew","datacollectionNew","fieldNew","newField","indexNew","objectNew","isExternal","isImported","isAPI","objectFile","objectLanguage","objectProcessForm","objectProcessInstance","objectRole","objectScope","objectToken","objectUser","objectKey","objectSecret","hintID","hintNew","stepID","stepNew","stepDef","hint","processNew","processElementNew","taskDef","defaults","newTask","processElementNewForModelDefinition","element","newElement","defaultDef","definitionForElement","fromElement","queryNew","rowfilterNew","App","idBase","_App","viewNewDetatched","_mockApp","_notifyInfo","moreInfo","fieldName","datacollectionID","datacollectionName","ds","datacollectionDSID","datacollectionDSName","processName","_tenantID","user","_user","taskID","taskName","applicationID","applicationName","viewID","viewName","viewKey","Fields","FIELD","active","description","transition","showIntroStep","stepIDs","_steps","sID","ele","stepAdd","step","stepByID","stepRemove","stepIndex","unique","fieldIDs","_unknownFieldIDs","fId","attributeFieldIDs","indexName","dbTableName","uniqueName","ABEmitter","fieldList","mlFields","translate","defaultTranslations","language_code","languageDefault","unTranslate","currLanguage","first","t","foundOne","trans","_where","_sort","_skip","_limit","staleRefreshInProcess","staleRefreshMap","staleRefreshPending","staleRefreshTimerID","responseContext","contextKey","contextValues","prepareMultilingualData","multilingualFields","shouldTranslate","urlParamsCreate","urlRest","urlParamsDelete","urlRestItem","urlParamsFind","urlParamsUpdate","urlRestCount","numberOfRows","currID","Err","staleRefreshProcess","currentEntries","responseHash","allKeys","findConnected","results","myObj","returnData","upsert","dateFields","calculatedFields","c","objectLink","olPK","relatedMlFields","subData","relationValue","calField","ABModelApi","readonly","apiType","isFetched","getPagingValues","pagingSettings","paging","dataFromKey","itemResult","dataKey","header","ABModel","ABObjectCore","connName","labelFormat","labelSettings","isNoLabelDisplay","tableName","primaryColumnName","transColumnName","urlPath","createdInAppID","frozenColumnID","hiddenFields","importedFieldIDs","_fields","importIndexes","indexIDs","_unknownIndex","indexes","_indexes","objectLinks","isConnection","fieldImport","fieldRemove","origLen","fid","fieldReorder","sourceId","targetId","itemMoved","oPos","j","fieldSave","fieldAdd","imageFields","isMultilingual","indexByID","indexRemove","idx","indexSave","urlRestBatch","urlRestLog","urlRestRefresh","workspaceSortFields","workspaceViews","currView","getCurrentView","workspaceFilterConditions","workspaceFrozenColumnID","workspaceHiddenFields","isReadOnly","defaultValues","defaultValue","urlField","remoteCreate","cloneOne","prop","minRelationData","colIds","colId","colIdNoBracket","defaultFld","fieldUseAsLabel","displayData","labelData","defaultField","trim","noLabelText","newValue","cleanRule","ABModelQuery","__missingObject","__missingFields","__cantFilter","__duplicateFields","__linkProblems","alias2Obj","importJoins","joins","importFields","_objectWorkspaceViews","objectWorkspaceViews","grouping","hidePrefix","exportJoins","exportFields","fieldSettings","newFields","fieldInfo","objectByAlias","_objects","objID","canFilterField","isNew","clonedField","currFields","_joins","objectBase","links","_links","uniqueObjectIDs","newLinks","storeObject","storeLinks","link","processJoin","baseObject","linkField","rootObject","canFilterObject","linkedObject","isDisabled","disabled","_concat","ABProcessTaskSubProcess","onProcessReady","xmlDefinition","currElements","_elements","elementIDs","eID","_connections","connections","diagramID","modelDefinition","modelNew","modelUpdate","xml","allConnections","connectionForDiagramID","dID","connectionsIncoming","to","connectionsOutgoing","from","connectionRemove","connectionSimplyElement","bo","businessObject","sourceRef","targetRef","connectionUpsert","simpleConn","elementAdd","elementByID","elementForDiagramID","elementRemove","isTriggeredBy","taskForTriggerKey","connectionNextTask","currElement","connectionPreviousTask","processData","tasksToAsk","allPreviousTasks","queryPreviousTasks","processDataFields","allPreviousConnectionsForConnection","conn","hashConn","allPreviousConnectionsForElement","prevConnections","task","prevTasks","processDataObjects","triggerKey","list","param","responses","processedIDs","apply","el","AllViews","Views","default","common","V","getFieldVal","pureRelationName","isNaN","_settings","condition","_QueryFields","_Fields","_logic","callbacks","onChange","removeHtmlTags","div","document","createElement","innerHTML","textContent","innerText","condResult","ruleFieldType","connectedVal","indexField","indexField2","fieldVal","getConnectFieldValue","textValid","dateValid","numberValid","listValid","booleanValid","userValid","connectFieldValid","thisObjectValid","compareValue","compareArray","queryFieldValid","setHours","Number","queryId","fieldId","qIdBase","inQueryFieldFilter","inQueryValid","inQueryFilter","dataCollectionValid","compareValueLowercase","listThisObjects","newRowData","_Object","processFieldsLoad","processFields","_ProcessFields","uiInit","fieldIsFilterable","thisObjOption","fieldsToQB","showObjectName","conditions","processFieldKeys","hasQueryField","isProcessParticipant","fieldsAddFiltersBoolean","fieldsAddFiltersConnectObject","linkViaType","isSource","fieldsAddFiltersString","opt","isCustomFK","fieldsAddFiltersDate","fieldsAddFiltersNumber","fieldsAddFiltersList","fieldsAddFiltersUser","fieldsAddFiltersThisObject","fieldsAddFiltersQuery","isRecordRule","fieldsAddFiltersRecordRule","processField","includes","processFieldId","pop","fieldsAddFiltersContext","fieldsAddFiltersCustom","dateConditions","less","component","beforeCondition","greater","afterCondition","less_or_equal","onOrBeforeCondition","greater_or_equal","onOrAfterCondition","is_current_date","isCurrentDateCondition","less_current","beforeCurrentCondition","greater_current","afterCurrentCondition","less_or_equal_current","onOrBeforeCurrentCondition","greater_or_equal_current","onOrAfterCurrentCondition","last_days","onLastDaysCondition","next_days","onNextDaysCondition","condKey","batch","handler","stringConditions","contains","containsCondition","not_contains","notContainsCondition","equals","isCondition","not_equal","isNotCondition","is_empty","isEmpty","is_not_empty","isNotEmpty","numberConditions","equalCondition","notEqualCondition","lessThanCondition","moreThanCondition","lessThanOrEqualCondition","moreThanOrEqualCondition","listConditions","equalListCondition","notEqualListCondition","booleanConditions","checked","checkedCondition","unchecked","notCheckedCondition","userConditions","is_current_user","isCurrentUserCondition","is_not_current_user","isNotCurrentUserCondition","contain_current_user","containsCurrentUserCondition","not_contain_current_user","notContainsCurrentUserCondition","connectConditions","same_as_user","sameAsUser","not_same_as_user","notSameAsUser","in_data_collection","inDataCollection","not_in_data_collection","notInDataCollection","queryConditions","in_query_field","inQueryField","not_in_query_field","notInQueryField","in_query","inQuery","not_in_query","notInQuery","thisObjectConditions","recordRuleConditions","same_as_field","sameAsField","not_same_as_field","notSameAsField","contextConditions","context_equals","equalsProcessValue","context_not_equal","notEqualsProcessValueCondition","context_in","inProcessValueCondition","context_not_in","notInProcessValueCondition","_customOptions","queriesLoad","_Queries","getValue","isComplete","noValueRules","isCompleteRules","returnSingular","columnId","config_settings","queryValid","ABField","ABFieldAutoIndexDefaults","isFilterable","isSortable","menuName","supportRequire","supportUnique","useAsLabel","compatibleOrmTypes","compatibleMysqlTypes","delimiter","displayLength","previewText","delimiterItem","delimiterList","sign","displayNumber","getDelimiterSign","setValueToIndex","ABFieldBooleanDefaults","AGE","dateString","dataDate","diffYears","Math","round","floor","YEAR","getFullYear","MONTH","getMonth","DAY","getDate","DATE","getTime","HOUR","MINUTE","MINUTE_TO_HOUR","mins","hours","rhours","minutes","rminutes","parseFloat","ABFieldCalculateDefaults","formula","decimalSign","decimalPlaces","ABFieldCalculateCore","place","numberVal","calVal","dateVal","booleanVal","eval","toFixed","convertToJs","ABFieldCombinedDefaults","combinedFields","ABFieldConnectDefaults","linkColumn","fieldDefaults","names","configError","pullRelationValues","selectedData","dataValue","propName","forUpdate","reservedNames","fieldKey","fieldOrmTypes","fieldMysqlTypes","fieldIcon","fieldMenuName","fieldDescription","fieldIsSortable","fieldSupportRequire","fieldSupportQuery","supportQuery","defaultCheck","defaultVal","returnVal","showIcon","required","width","myDef","ABFieldDateDefaults","dateFormat","defaultDate","defaultDateValue","validateCondition","validateRangeUnit","validateRangeBefore","validateRangeAfter","validateStartDate","validateEndDate","dateResult","prototype","call","isFinite","startDate","endDate","startDateDisplay","getDateDisplay","endDateDisplay","minDate","maxDate","exportValue","dateObj","getFormat","dateFormatString","dateData","dateToString","RegEx","ABFieldDateCore","timeFormat","defaultTime","defaultTimeValue","baseDefault","currDate","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getTimeFormat","datetimeFormat","dateToStr","ABFieldEmailDefaults","defaultCheckbox","Reg","ABFieldFileDefaults","removeExistingData","fileSize","fileType","limitFileSize","limitFileType","filename","requestParam","allParameters","myParameter","ABFieldFormulaDefaults","reCalculate","isGrouped","reformat","numData","rowDataFormat","fieldBase","filterHelper","numberList","decimalSize","getDecimalSize","multiplier","pow","sum","max","min","_rowFilter","ABFieldImageDefaults","useWidth","imageWidth","useHeight","imageHeight","useDefaultImage","defaultImageUrl","ABFieldJsonDefaults","ABFieldListDefaults","isMultiple","hasColors","multipleDefault","pendingDeletions","defaultVals","hex","optTran","ABFieldLongTextDefaults","MAX_CHAR_LENGTH","supportMultilingual","ABFieldNumberDefaults","typeFormat","typeDecimals","typeDecimalPlaces","typeRounding","typeThousands","validation","validateMinimum","validateMaximum","iL","position","places","n","errMessage","formatSign","formatList","thousandsSign","postfix","digit","formatNumber","groupDelimiter","groupSize","decimalDelimiter","negativeSign","dataStr","abs","integerStr","decimalStr","integerValue","substr","decimalVal","ABFieldStringDefaults","ABFieldTextFormulaDefaults","textFormula","setValueToFormula","formulaString","fieldRegExp","matches_field_array","autoIndexVal","setBuildinValueToFormula","matches_buildin_array","buildinList","getBuildInFunction","formula_array","isBracketInBracket","functionName","parameters_array","isMatch","resultParameters","parameter_size","getLeft","getRight","getMid","getTrim","getTrimLeft","getTrimRight","getLength","getRegExpReplace","trimLeft","getExtractRegex","getReplace","getLower","getUpper","getCapitalize","getRandom","getNumberToWords","getDateDayOfWeekName","getDateMonthOfYearName","getFormatDate","string","endPosition","endposition","reverseStr","reverseString","reverse","startPosition","trimRight","regexp","replaceString","extractResult","searchValue","replaceValue","toUpperCase","charAt","random","units","tens","scales","end","chunks","chunksLen","chunk","ints","word","words","resultFormula","ABFieldSelectivity","ABFieldTreeDefaults","ABFieldConnect","ABFieldUserDefaults","USERNAME_FIELD_ID","editable","isCurrentUser","isShowProfileImage","isShowUsername","ABMobileView","ABMobilePageDefaults","ABPropertyComponentDefaults","defaultPage","hideTitle","hideTabs","myAppID","menuType","DV","missingPageID","allPageDeletes","allPages","pageRemove","pageInsert","setPageDefault","refreshInstance","page","updateIcon","lookUpIds","mapNewIdFn","copy","ABMobileViewDefaults","labelKey","tabicon","ABViewPropertyComponentDefaults","warningsSilent","__missingViews","viewIcon","tabIcon","viewIDs","isRoot","height","x","y","dx","dy","allParents","parents","curView","parentFormComponent","parentDetailComponent","detail","pageParent","filterFn","parentPage","pageRoot","rootPage","dataviewID","_currentObject","errNoDCID","errNoDC","viewByID","viewRemove","viewInsert","viewReorder","viewId","toPosition","findIndex","allViewDeletes","wantsAdd","copyUpdateProperyList","ignoreSubPages","copiedSubPage","ignoreSubViews","copiedView","newName","allSaves","p2","vi","ABViewFormButtonPropertyComponentDefaults","includeSave","saveLabel","includeCancel","cancelLabel","includeReset","resetLabel","afterCancel","alignment","isDefault","ABViewFormButtonDefaults","ABMobileViewFormCheckboxPropertyComponentDefaults","ABMobileViewFormCheckboxDefaults","ABMobileViewFormConnectPropertyComponentDefaults","formView","popupWidth","popupHeight","ABMobileViewFormConnectDefaults","ABRecordRule","ABSubmitRule","ABViewFormDefaults","ABViewFormPropertyComponentDefaults","showLabel","labelPosition","labelWidth","clearOnLoad","clearOnSave","displayRules","editForm","recordRules","submitRules","objectLoad","componentList","viewsToAllow","fieldComponents","flattenComponents","components","comp","addFieldToForm","yPosition","fieldComponent","formComponentMobile","newInstance","RecordRule","_recordRule","formLoad","fromSettings","rulesReady","doRecordRulesPre","processPre","doRecordRules","doSubmitRules","SubmitRules","ABViewFormCustomPropertyComponentDefaults","ABViewFormCustomDefaults","ABMobileViewFormDatepickerPropertyComponentDefaults","timepicker","ABMobileViewFormDatepickerDefaults","ABMobileViewFormDatetimePropertyComponentDefaults","ABMobileViewFormDatetimeDefaults","ABMobileViewFormEmailPropertyComponentDefaults","ABMobileViewFormEmailDefaults","ABViewFormFilePropertyComponentDefaults","ABViewFormFileDefaults","ABViewFormFormulaPropertyComponentDefaults","ABViewFormFormulaDefaults","ABMobileViewFormFile","ABViewFormImagePropertyComponentDefaults","ABViewImageFileDefaults","ABViewFormFieldPropertyComponentDefaults","disable","ABMobileViewFormNumberPropertyComponentDefaults","isStepper","ABMobileViewFormNumberDefaults","ABMobileViewFormCustom","ABMobileViewFormReadonlyPropertyComponentDefaults","ABMobileViewFormReadonlyDefaults","ABMobileViewFormSelectSingle","ABMobileViewFormSelectMultiplePropertyComponentDefaults","ABMobileViewFormSelectMultipleDefaults","ABMobileViewFormSelectSinglePropertyComponentDefaults","ABMobileViewFormSelectSingleDefaults","ABViewFormTextboxPropertyComponentDefaults","placeholder","ABViewFormTextboxDefaults","ABViewLabelPropertyComponentDefaults","ABViewDefaults","formatNormal","formatTitle","formatDescription","ABViewListPropertyComponentDefaults","linkPageAdd","ABProcessLaneDefaults","ABProcessParticipantDefaults","validChecker","attribute","laneIDs","stashed","useAccount","account","useField","userField","Tasks","DEFINITIONTYPES","AllProcessElements","ELEMENT","DiagramReplace","target","eventDefinitionType","allTasks","tasks","DiagramReplaceDefinitionsForType","StartEvents","Gateways","EndEvents","eventDefinitions","$type","state","laneDiagramID","errorConfig","instance","initState","instanceValues","taskState","isEndTask","allArgs","myLane","myState","nextTasks","myDiagramObj","hashDiagramObjects","onError","exitFlows","tasksFromFlow","flow","flowObj","targetIDs","tid","targetTask","hashProcessDataValues","listDataFields","currentProcessValues","_prevState","stateCompleted","stateUpdate","wantToDoSomething","startElements","elem","previousElements","objectOfStartElement","startElem","objectOfPrevElement","prevElem","qlObj","ABProcessElement","ABProcessTaskEndDefaults","actionName","className","triggered","ABProcessGatewayExclusiveDefaults","ABProcessTaskEmailDefaults","myDefaults","subject","AccountingBatchProcessingDefaults","AccountingFPCloseDefaults","AccountingFPYearCloseDefaults","AccountingJEArchiveDefaults","CalculateDefaults","_fakeNum","_fakeObj","ABProcessTaskServiceDefaults","ABProcessTaskGetResetPasswordUrlDefaults","InsertRecordDefaults","isRepeat","startElement","currProcess","previousElement","fieldRepeat","repeatColumn","ABQLManager","ABProcessTaskServiceQueryDefaults","_datasources","fromAttributes","registerDatasource","processDataField","SubProcessDefaults","NOSPAM","isExpanded","isEnable","_unknownElementIDs","processTask","connectionAttrs","parameterId","dataFieldsAll","dataFieldOpt","dataFieldsAllInserted","previousFields","startsWith","stateData","returnField","ABFieldList","ABProcessTaskApprovalDefaults","fixBoolean","formBuilder","preProcessFormIOComponents","abFieldID","vals","path","pluck","action","myID","listField","ABProcessTaskUserDefaults","ui","ABProcessTaskUserExternalDefaults","who","toUsers","ABProcessTriggerDefaults","ABProcessTrigger","ABProcessTaskTriggerLifecycleDefaults","lifecycleKey","repeatEvery","repeatTime","repeatDaily","repeatWeekly","repeatMonthly","isEnabled","timeVals","setUTCHours","setUTCMinutes","getUTCHours","getCronExpression","day","month","dayWeek","minute","hour","parameterDefinitions","prevOP","objectOut","initObject","objectLookup","nextOP","NextQLOps","OP","qlOP","quotedLabel","availableProcessDataFieldsHash","availableProcessDataFields","hashFieldIDs","paramChanged","pDef","ABQL","ParameterDefinitions","ABQLFindCore","ABQLManagerCore","matchingOPs","QLOps","Op","ABQLObjectCore","objNameDef","warningMessage","QLUpdate","QLSave","QLPluck","ABQLSetPluck","ABQLRowUpdate","ABQLRowSave","ABQLRowPluckCore","nextQLOps","NextQLOp","ABQLSetSave","ABQLRowSaveCore","ABQLRowUpdateCore","ABQLRow","ABQLSetFirstCore","ABQLSetPluckCore","objectOutID","ABQLSetSaveCore","taskParam","registered","task_param","ABViewWidget","ABViewCSVExporterDefaults","ABViewCSVExporterPropertyComponentDefaults","buttonLabel","hasHeader","ABViewCSVImporterDefaults","ABViewCSVImporterPropertyComponentDefaults","availableFieldIds","rowDatas","ABViewCarouselPropertyComponentDefaults","hideItem","hideButton","navigationType","filterByCursor","detailsPage","detailsTab","editPage","editTab","parseIntOrDefault","_this","parseOrDefault","imageField","ABViewChartContainer","ABViewChartAreaPropertyComponentDefaults","areaType","isLegend","chartHeight","labelFontSize","stepValue","maxValue","ABViewChartBarPropertyComponentDefaults","barType","barPreset","ABViewContainer","ABViewChartPropertyComponentDefaults","columnValue","columnLabel","columnValue2","isPercentage","multipleSeries","ABViewChartDefaults","labelField","valueField","valueField2","ABViewChartLinePropertyComponentDefaults","lineType","linePreset","ABViewChartPiePropertyComponentDefaults","pieType","innerFontSize","ABViewCommentPropertyComponentDefaults","columnUser","columnComment","columnDate","getCurrentUserId","userObject","getUsers","currentUser","image","getUserField","getCommentField","getDateField","getUserData","UserImageField","imageURL","urlImage","ABViewPropertyDefaults","ifPanel","removable","elsePanel","ABViewConnectDataFilterPropertyComponentDefaults","ABView","columns","gravity","movable","viewsSortByPosition","accessLevels","accessibleRoles","getUserAccess","accessLevel","isAccessManager","currentRole","urlView","updateAccessLevels","roleId","viewDestroy","ABViewDataFilterPropertyComponentDefaults","viewType","showFilter","showSort","ABViewDetail","ABViewDataviewPropertyComponentDefaults","xCount","ABViewDataviewDefaults","dataview","ABViewDetailCheckboxPropertyComponentDefaults","ABViewDetailCheckboxDefaults","ABViewDetailPropertyComponentDefaults","ABViewDetailDefaults","addFieldToDetail","detailComponent","ABViewDetailCustomPropertyComponentDefaults","ABViewDetailCustomDefaults","ABViewDetailImagePropertyComponentDefaults","ABViewDetailImageDefaults","detailView","getCurrentData","detailCom","ABViewDetailTextPropertyComponentDefaults","ABViewDetailTextDefaults","ABViewDetailTreeDefaults","ABViewDocxBuilderPropertyComponentDefaults","buttonlabel","filelabel","toolbarBackground","buttonPosition","uploadUrl","downloadUrl","dvList","includeDelete","deleteLabel","ABViewFormCheckboxPropertyComponentDefaults","ABViewFormCheckboxDefaults","ABViewFormConnectPropertyComponentDefaults","ABViewFormConnectDefaults","formComponent","ABViewFormDatepickerPropertyComponentDefaults","ABViewFormDatepickerDefaults","ABViewFormJsonPropertyComponentDefaults","ABViewFormJsonDefaults","ABViewFormNumberPropertyComponentDefaults","ABViewFormNumberDefaults","ABViewFormCustom","ABViewFormReadonlyPropertyComponentDefaults","ABViewFormReadonlyDefaults","ABViewFormSelectMultiplePropertyComponentDefaults","ABSelectMultipleDefaults","ABViewFormSelectSinglePropertyComponentDefaults","ABSelectSingleDefaults","ABViewFormTreePropertyComponentDefaults","ABTreeDefaults","ABViewGanttPropertyComponentDefaults","titleFieldID","startDateFieldID","endDateFieldID","durationFieldID","progressFieldID","notesFieldID","ABViewGridPropertyComponentDefaults","padding","showToolbar","isEditable","massUpdate","allowDelete","isExportable","trackView","summaryColumns","countColumns","gridFilter","filterOption","userFilterPosition","isGlobalToolbar","hideHeader","labelAsField","hideButtons","groupBy","columnConfig","saveLocal","settingsDefault","base","settingsDefaultJSON","owFields","removeField","shouldSave","ABViewImagePropertyComponentDefaults","ABViewKanbanPropertyComponentDefaults","editFields","verticalGroupingField","horizontalGroupingField","ownerField","template","textTemplate","TextTemplate","PropertyComponentDefaults","numColumns","addColumn","isEdited","ABViewMenuPropertyComponentDefaults","orientation","buttonStyle","menuAlignment","menuInToolbar","menuPadding","menuTheme","menuPosition","menuTextLeft","menuTextRight","menuTextCenter","order","ABMenuDefaults","isChecked","pageId","ClearPagesInView","AddPagesToView","displayPage","existsPage","tabId","existsTab","getAliasname","menuItem","getSubMenu","getMenuItem","submenu","pageInfo","lang","translation","aliasname","getParentPageId","tabView","currentView","ABViewPDFImporterPropertyComponentDefaults","pageWidth","fixedPageWidth","pageBackground","ABViewPivotPropertyComponentDefaults","removeMissed","totalColumn","separateLabel","structure","ABViewReportManagerPropertyComponentDefaults","dataviewFields","editMode","hideCommonTab","hideDataTab","hideViewTab","parsedSettings","key1","key2","ABViewSchedulerPropertyComponentDefaults","allDay","repeat","calendar","color","sectionID","unitID","notes","originID","calendarDataviewID","calendarDataviewFields","timeline","week","year","agenda","timelineSectionList","unitList","export","excel","csv","pdf","_object","scheduler","ABViewTabPropertyComponentDefaults","minWidth","stackTabs","darkTheme","sidebarWidth","sidebarPos","iconOnTop","ABViewTabDefaults","addTab","tabName","ABViewTextPropertyComponentDefaults","displayText","componentID","clearTemplateValue","fData","columnSpan","rowSpan","ABApplicationCore","ABViewPage","_handler_page_updated","definition","pg","errDepreciated","areaKey","newObj","entity","begLen","datacollectionInsert","_listInsert","_listRemove","objectInsert","objectRemove","processInsert","processRemove","queryInsert","queryRemove","exportIDs","ids","parseView","pid","pdef","vid","vdef","warningsEval","checks","warningsMessage","allRoles","warningsAll","warnings","_warnings","ABApplicationMobileCore","ABViewPageMobile","newPage","oldPage","CustomComponentManager","uid","actions","custom","create","edit","formName","import","rename","yes","no","none","close","defaultPlaceholder","invalidMessage","createErrorMessage","createSuccessMessage","updateErrorMessage","updateSucessMessage","deleteErrorMessage","deleteSuccessMessage","renameErrorMessage","renameSuccessMessage","dataFieldHeaderLabel","dataFieldHeaderLabelPlaceholder","dataFieldLabel","dataFieldLabelPlaceholder","dataFieldColumnName","dataFieldColumnNamePlaceholder","dataFieldShowIcon","componentDropZone","initComponents","_actions","ABDataCollectionCore","datacollectionId","bindParentDc","define","cursorUpdated","__prevLinkDcCursor","hideProgressOfComponents","attachFlexlayout","showProgress","sync","onDataRequestEvent","loadNext","unsync","detachEvent","onDcLoadData","off","hideProgress","DataCollection","_extendCollection","treeStore","TreeCollection","dataStore","extend","SelectionModel","onAfterLoadEvent","addCss","removeCss","render","onAfterLoad","addRowToTree","parentAlias","dataId","parentItemIds","parentId","_alias","_dataId","treeNode","parentItemId","boundComp","datacollectionById","ABDefinitionCore","ABHintCore","allSteps","allDestroy","hintIndex","createHintUI","cookie","hide","dontShow","newStep","nextEl","hintId","eventEl","theNextEl","querySelector","checkVisibility","onNext","boxes","querySelectorAll","display","onPrevious","delay","ABIndexCore","migrateCreate","migrateDrop","ABMLClassCore","ABModelCore","errorPopup","no_socket_trigger","handler_create","handler_common","handler_delete","handler_findAll","handler_logs","handler_update","batchCreate","once","newVal","loadInto","DT","logs","update","batchUpdate","rowIds","_handler_object_migrate","fromObj","hasOwnProperty","disableRelatedQueries","fieldDrops","allFields","skipMigrate","isAdd","columnResize","newWidth","columnHeaders","isObjectWorkspace","hiddenFieldNames","columnHeader","validationRules","adjust","footer","content","customDisplays","DataTable","eachColumn","node","getItemNode","column","customDisplay","allWarnings","w","isUuid","formCleanValues","formCleanData","atomicjs","ABObjectApiCore","insertDataMax","verb","withCredentials","parsedResponse","pendingModelCreate","ABObjectQueryCore","conditionScan","fieldEntry","oldWidth","originTemplate","_conditionCheck","isConditionComplete","ABProcessCore","_unknownShapes","allElements","appsWithProcess","_new","_old","needSave","elementNewForModelDefinition","unknownShape","shape","unknownShapeRemove","_DOMParser","DOMParser","xmlStr","parseFromString","ActiveXObject","xmlDoc","loadXML","getElementsByTagName","ABStepCore","ABViewManagerCore","ABViewManagerMobileCore","getSeparateItems","validateFile","fileInfo","file","extensionType","getDataRows","separatedBy","reader","FileReader","onload","dataCols","dCol","readAsText","getGuessDataType","dataRows","colIndex","line","str","FilterComplexCore","_toInternal","_toExternal","now","startOfDay","endOfDay","startOfDayUTC","getTimezoneOffset","endOfDayUTC","formatDate","isoString","_options","_initComplete","observing","and","or","thisObject","inQueryFieldQueryPlaceholder","inQueryFieldFieldPlaceholder","contextDefaultOption","popup","querybuilder","recordRuleFieldOptions","rows","borderless","hidden","isSaveHidden","myPopup","__blockOnChange","getState","$observe","_cond","helper","$query","getFilterFunction","qbSettings","toShortHand","uiQueryCustomValue","enable","$el","$app","require","CreateFilter","inputs","uiValue","localId","mode","parser","i18n","dateFormatStr","margin","fieldColumnName","uiQueryValue","uiDataCollectionValue","uiCustomValue","uiContextValue","uiNoneValue","uiUserValue","uiListValue","LinkType","uiTextValue","uiQueryFieldValue","uiRecordRuleValue","uiBooleanValue","onAfterRender","queryView","$view","style","zIndex","isQueryField","u","linkObjectId","processFieldKey","pField","popUp","show","addCustomOption","RowFilterCore","filterForm","addNewFilter","inputValue","queryCombo","queryFieldCombo","queryFieldComboQuery","queryFieldComboField","fieldMatch","dataCollection","listOptions","datePicker","batchName","queryFieldOptions","recordRuleOptions","getFieldList","getFilterUI","isolate","cols","oldVal","selectCombineCondition","suggest","onBeforeShow","resize","$viewCond","selectField","cells","oldValue","onChangeRule","onChangeQueryFieldCombo","validate","isNumber","onTimedKeyPress","autowidth","indexView","getFormView","removeNewFilter","getAddButtonUI","$viewForm","toggleAddNewButton","getChildViews","ignoreNotify","showBatch","Queries","ruleViewId","getActiveId","$viewComparer","getList","defaultOpt","dcOptions","_Application","Query","blockOnChange","unblockOnChange","$fieldElem","selectedOpt","getPopup","valueViewId","$viewConditionValue","dateField","fieldOptions","logic","col","blockEvent","unblockEvent","_completeConditions","ABViewForm","RowUpdater","addNew","_mockFormWidget","uiItem","self","$viewItem","maxWidth","_extendedOptions","toggleCustomProcessOption","removeItem","addItem","$form","ProgressBar","toggleForm","excludeSelected","$viewContainer","$customValueElem","_pullInputElement","$processValueElem","isVisible","isProcessValue","formFieldComponent","childViews","inputView","busy","getOptions","labelRight","layout","ready","$field","setExtendedOptions","showProcessOption","$customOption","$processOption","$elem","childView","ABFieldCore","addValidation","Filter","filterComplex","fnMigrate","migrateUpdate","customEdit","formKey","FC","getSettings","ABFieldAutoIndexCore","editor","$group","detailComponentSetting","ABFieldBooleanCore","checkbox","ABFieldCombineCore","ABFieldConnectCore","multiselect","editFormat","editParse","openOptions","button","$suggest","$list","getAndPopulateOptions","whereClause","term","theEditor","_getOptionsThrottle","_timeToPullData","_getOptionsResolve","haveResolved","respond","linkedObj","linkedCol","linkedModel","showAllOptions","getStorageID","storedOptions","selected","linkViaOneValues","whereRels","sortRels","storageID","itemObj","getItemFromVal","returnVals","combineFilters","filterByConnectValues","parseFilterByConnectValues","depth","valuesByDepth","ef","$parentField","filterValue","parentValue","filterColumn","filterField","dataFieldId","valItem","formVals","handlerOptionData","$destructed","populateOptions","addCy","populateOptionsDataCy","currVal","selectedVals","cVal","some","selectedItem","each","option","setAttribute","pullRecordRelationValues","formComponentSetting","webixLocale","longDateFormatStr","ABFieldDateTimeCore","timeToStr","ABFieldEmailCore","ABFieldFileCore","fileTemplate","typesList","maximumSize","parentContainer","webixContainer","container","domNode","urlUpload","uploader","apiOnly","upload","inputName","multiple","onBeforeFileAdd","classList","acceptableTypes","acceptableSizes","size","onFileUpload","onFileUploadError","addDropZone","dataset","deleteFile","uploaderId","fileDialog","rowid","iconDisplay","fileDisplay","fileURL","fileLink","getAttribute","fileicon","fileDeleteIcon","removeAttribute","href","isWebix","urlFile","ABFieldFormulaCore","ABFieldImageCore","idCustomContainer","formId","containerHeight","imageSrcHeight","heightVal","imageTemplate","imgHeight","imgWidth","percent","uploadInProgress","showImage","readAsDataURL","dataTable","deleteImage","removeDefaultImage","imageDisplay","isRemoveDefaultImage","html","backgroundImage","imageIcon","imageDeleteIcon","toBase64","img","Image","crossOrigin","onerror","canvas","getContext","drawImage","imageData","toDataURL","src","rotateLeft","imgFile","rotateRight","ABFieldJsonCore","ABFieldListCore","numDone","numToDo","remainingFields","_getSelectedOptions","hasCustomColor","optionHex","selectedObj","clearButton","stopPropagation","getSelectedOptions","ABFieldLongTextCore","ind","ABFieldNumberCore","INIT_EDITOR","editors","defaultSettings","allowClear","removeOnly","readOnly","showDropdown","ABFieldSelectivityDefaults","selectivityRender","cypress","dataCy","prepareData","selectivity","setOptions","selectivityInput","isUsers","templates","multipleSelectedItem","highlighted","additionalText","isLabelHidden","Selectivity","Inputs","Multiple","selectivitySetBadge","singleSelectedItem","Single","trigerEditPageEvent","editMenus","eMenu","__hasClickEvent","preventDefault","parentElm","parentElement","thisField","caretElems","getElementsByClassName","caretElm","parentNode","removeChild","selectivitySettings","selectivityGet","selectivitySet","setData","selectivityDestroy","clientHeight","badge","anchor","textnode","createTextNode","appendChild","ABFieldStringCore","ABFieldTextFormulaCore","ABFieldTreeCore","formClass","placeHolder","isForm","branches","selectOptions","rootid","getParentId","par","nodeHTML","myHex","setBadge","idPopup","idTree","parentComponent","firstRender","populateTree","getValues","$Tree","uncheckAll","openAll","checkItem","onShow","onItemCheck","dom","tree","uncheckItem","eachSubItem","getChecked","scrollHeight","setValues","ABFieldUserCore","SiteUser","Defaults","linkCol","newLinkDef","setDisplayOptions","ABMobilePageCore","__Handler_ABDEF_UPDATED","__Handler_DEF_UPDATED","removeAllListeners","ABMobileViewCore","viewsToIgnore","ABMobileViewFormCore","ABMobileViewFormButton","refreshDefaultButton","defaultButton","yList","posY","ABMobileViewFormButtonCore","ABMobileViewFormCheckboxCore","ABMobileViewFormConnectCore","__filterComponent","ABMobileViewFormCustomCore","ABMobileViewFormDateCore","ABMobileViewFormDatetimeCore","ABMobileViewFormEmailCore","ABMobileViewFormFileCore","ABMobileViewFormFormulaCore","ABMobileViewFormImageCore","ABMobileViewFormItemCore","ABMobileViewFormNumberCore","ABMobileViewFormReadonlyCore","ABMobileViewFormSelectMultipleCore","ABMobileViewFormSelectSingleCore","ABMobileViewFormTextboxCore","ABMobileViewLabelCore","ABMobileViewListCore","ABProcessLaneCore","transferParticipantWhereToMe","myParticipant","swap","children","child","lanes","objChild","setLane","defElement","ABProcessParticipantCore","diagramProperties","ABProcessElementCore","findLane","Lane","currObj","propertiesShow","propertiesStash","property","switchTo","propertiesID","ABProcessEndCore","ABProcessGatewayExclusiveCore","properties","myOutgoingConnections","numCondWithOne","ABProcessTaskEmailCore","verifySetting","verifyNextLane","verifyRoleAccount","nextLanesResolved","valKey","ABProcessTaskServiceCore","AccountingBatchProcessingCore","propertyIDs","processBatchValue","objectBatch","fieldBatchEntries","fieldBatchFinancialPeriod","objectJE","fieldJEAccount","fieldJERC","fieldJEStatus","fieldJEStatusComplete","objectBR","fieldBRFinancialPeriod","fieldBRAccount","fieldBRRC","fieldBREntries","processValues","objectList","blankField","defaultFields","updateFields","fieldPickers","fieldValues","fp","picker","batchFields","fieldPickersBatch","jeFields","fieldPickersJE","compileStatusValues","statusField","onStatusComplete","wbxComplete","jeEntryID","jeEntry","jeFieldStatusValues","brFields","fieldPickersBR","AccountingFPCloseCore","processFPValue","objectFP","objectGL","objectAcc","fieldFPStart","fieldFPOpen","fieldFPStatus","fieldFPActive","fieldGLStarting","fieldGLRunning","fieldGLAccount","fieldGLRc","fieldGLDebit","fieldGLCredit","fieldAccType","fieldAccAsset","fieldAccExpense","fieldAccLiabilities","fieldAccEquity","fieldAccIncome","getFieldOptions","getStatusFieldOptions","statusFieldId","fpObject","fpStatusField","getListOptions","fpFields","glFields","accFields","fpStatusFields","accTypeOptions","elementsConfig","fieldGLElem","updateFPFields","updateGLFields","updateAccFields","fpStatusOptions","updateAccTypeOptions","AccountingFPYearCloseCore","processFPYearValue","objectFPYear","objectFPMonth","objectAccount","valueFundBalances","valueNetIncome","fieldFPYearStart","fieldFPYearEnd","fieldFPYearStatus","fieldFPYearActive","fieldFPMonthStart","fieldFPMonthEnd","fieldGLStartBalance","fieldGLRunningBalance","fieldGLrc","fieldAccNumber","fieldAccTypeIncome","fieldAccTypeExpense","fieldAccTypeEquity","fpYearDateFields","fpYearStatusFields","fpYearStatusOptions","fpMonthDateFields","glNumberFields","glRcFields","accNumberFields","accTypeFields","fpYearDateOptions","updateFPYearStatusOptions","fpMonthDateOpts","glRcOptions","glNumberOptions","updateAccNumberFields","updateFPYearActiveOptions","AccountingJEArchiveCore","objectBalance","objectJEArchive","fieldBatchFiscalMonth","fieldJeAccount","fieldJeRC","fieldJeArchiveBalance","fieldBrFiscalMonth","fieldBrAccount","fieldBrRC","fieldsMatch","getConnectFieldOptions","refreshFieldsMatch","$fieldsMatch","JEObj","JEArchiveObj","fJe","fieldBatchList","fieldBalanceList","fieldJeList","fieldJeArchiveList","refreshBatchFields","refreshBRFields","refreshJeFields","refreshJeArchiveFields","CalculateTaskCore","formulaText","exp","ABProcessTaskServiceGetResetPasswordUrlCore","InsertRecordTaskCore","fv","isSet","ABProcessTaskServiceQueryCore","qlWarnings","hasSave","SubProcessCore","bpmnModeler","props","loopCharacteristics","isSequential","loopType","ABProcessTaskUserCore","ABProcessTaskUserApprovalCore","ABProcessTaskUserExternalCore","ABProcessTriggerCore","ABProcessTriggerLifecycleCore","ABProcessTriggerTimerCore","ABQLCore","parseRow","uiID","toIDs","$uiCondition","objectfields","objectname","taskparam","select","shorthand","spacer","uiAddParamForDef","paramUI","uiParamUI","uiAddNext","uiRow","uiNextRow","uiAddParams","resetValue","newOP","thisRow","thisQuery","addOP","viewAddParams","viewAddNext","allRows","ir","allCols","ic","uiNextRowSelectorRefresh","$select","uiNextCol","uiConfig","uiSettings","initialCond","displayLabel","initialValue","Updater","foundFields","shortHand","elCondition","onItemClick","modal","fillspace","sh","_myPopup","topView","rowView","toInsert","myWarnings","ABQLRootObject","root","rootOP","parseCurrent","selector","currOP","nextRow","ABQLRootObjectCore","ABViewCore","ABViewComponent","changePage","ABViewCSVExporterCore","ABViewCSVExporterComponent","ABViewCSVImporterCore","ABViewCSVImporterComponent","ABViewCarouselComponent","baseView","carousel","_handler_doOnShow","_handler_doReload","_handler_doFilter","fnFilter","filterRules","_handler_busy","_handler_ready","filterUI","linkPage","linkPageHelper","_ui","navigation","buttons","activeIndex","getActiveIndex","switchImage","viewLoad","$carouselView","firstElementChild","detatch","myTemplate","$carousel","currentPosition","_imageCount","_rowCount","getFilter","cursor","images","imgData","ab","align","abWebix","onclick","getNode","fullscreen","exit","head","rotateImage","zoom","showFilterPopup","showPopup","direction","imgElm","getElementById","fetch","cache","inOrOut","imgContainer","imgElem","newHeight","overflow","ABViewCarouselCore","ABViewCarousel","__filterHelper","ABViewPropertyFilterData","__linkPageHelper","ABViewPropertyLinkPage","ABViewChartCore","ABViewChartComponent","refreshData","getDCChart","_dcChart","dcChart","labelCol","valueCol","valueCol2","numberColName","numberColName2","colorList","dInfo","sumData","sumNumber","sumNumber2","countNumber","numberVal2","relateValues","value2","val2","ABViewChartAreaCore","ABViewChartAreaComponent","ABViewChartBarCore","ABViewChartBarComponent","ABViewChartContainerComponent","ABViewChartLineCore","ABViewChartLineComponent","ABViewChartPieCore","ABViewChartPieComponent","ABViewCommentCore","ABViewCommentComponent","ABViewConditionalContainerCore","ABViewConditionalContainerComponent","viewIf","viewElse","pendingSave","ABViewConnectDataFilterComponent","idbase","applyConnectFilter","tooltip","resetConnectFilter","$filter","connectId","filterRule","ABViewConnectDataFilter","ABViewContainerCore","ABViewContainerComponent","ABViewDataFilterComponent","sortButton","filterButton","globalSearchToolbar","_handler_filterData","callbackFilterData","PopupSortComponent","sortOptions","callbackSortData","advancedUI","compId","maxHeight","toolbarFilter","getInputNode","openSort","externalSearchText","connectedFieldUI","relative","right","top","setSettings","updateUI","sortRules","filterButtons","onlyFilterRules","filterBadge","sortButtons","onlySortRules","sortBadge","searchFields","activeElement","ABViewDataFilter","ABViewDataviewCore","ABViewDataviewComponent","ABViewDetailCore","ABViewDetailComponent","ABViewDetailCheckboxCore","ABViewDetailCheckboxComponent","ABViewDetailConnectCore","ABViewPropertyAddPage","ABViewDetailConnectComponent","addPageTool","__addPageTool","ABViewDetailCustomCore","ABViewDetailCustomComponent","ABViewDetailImageCore","ABViewDetailImageComponent","ABViewDetailItemCore","ABViewDetailItemComponent","ABViewDetailTextCore","ABViewDetailTextComponent","ABViewDetailTreeCore","ABViewDetailTreeComponent","ABViewDocxBuilderCore","ABViewDocxBuilderComponent","letUserDownload","blob","URL","createObjectURL","download","revokeObjectURL","ABViewFormCore","ABViewFormComponent","ABViewFormButton","ABViewFormConnect","ABViewFormDatepicker","ABViewFormSelectMultiple","ABViewFormJson","_callbacks","onBeforeSaveData","superComponent","_superComponent","getFormValues","visibleFields","allVals","vComponent","viewComponents","linkValues","formFieldCom","fComp","linkColName","cursorFormVals","validateData","$formView","requiredFields","fixInvalidMessageUI","$forminput","$height","domInvalidMessage","marginLeft","saveButton","clearValidation","formError","$saveButton","invalidAttrs","sqlMessage","loadDcDataOfRecordRules","recordRulesReady","newFormVals","errs","formReady","focusOnFirst","topPositionId","childComponent","actionSettings","valueRules","fieldOperations","valueType","pullDataDC","ABViewFormButtonCore","ABViewFormButtonComponent","ABViewFormCheckboxCore","ABViewFormCheckboxComponent","ABViewFormConnectCore","ABViewFormConnectComponent","ABViewPropertyEditPage","editPageTool","addPageProperty","propertyComponent","editPageProperty","__editPageTool","ABViewFormCustomCore","ABViewFormCustomComponent","ABViewFormDatepickerCore","ABViewFormDatepickerComponent","ABViewFormItemCore","ABViewFormItemComponent","componentUI","parentFormUniqueID","uniqueInstanceID","ABViewFormJsonCore","ABViewFormJsonComponent","ABViewFormNumberCore","ABViewFormNumberComponent","ABViewFormReadonlyCore","ABViewFormReadonlyComponent","ABViewFormSelectMultipleCore","ABViewFormSelectMultipleComponent","ABViewFormSelectSingleCore","ABViewFormSelectSingleComponent","ABViewFormTextboxCore","ABViewFormTextboxComponent","ABViewFormTreeCore","ABViewFormTreeComponent","ABViewGanttComponent","menu","gantt","_tempDC","TitleField","StartDateField","EndDateField","DurationField","ProgressField","NotesField","originalStartDate","originalEndDate","pendingAdds","idGantt","ganttElement","isExistsTask","taskId","localService","getService","tasksData","removeTask","opsService","YEAR_SCALE","MONTH_SCALE","DAY_SCALE","getConstantScales","setScale","override","Map","services","Backend","CurrentDatacollection","indx","convertFormat","taskAdd","taskUpdate","taskRemove","$menu","showItem","CurrentObject","convertValues","patch","datacollectionLoad","_events","eo","initData","ganttElem","dataService","dcTasks","gantt_data","currScale","getScales","WEEK_SCALE","wstart","weekStart","wend","scale","ganttData","newScales","setScales","precise","cellWidth","cellHeight","$batch","left","taskData","updatedTask","ABViewGanttCore","ABViewGantt","ABWorkObjectPopupExport","popupExport","_dataCollection","_grid","_filename","_hiddenFields","autoheight","dataCollectionLoad","setHiddenFields","setFilename","setGridComponent","$grid","fnExport","noCheckedRow","appbuilder_select_item","filterRow","toCSV","toExcel","filterHTML","toPDF","toPNG","exportType","fileName","ABViewGridPopupMassUpdate","ABViewGridComponent","submit","GridComponent","rowUpdater","update_button","update_items","$datatable","getDataTable","updatedRowIds","table","toolbar","buttonDeleteSelected","buttonFilter","buttonMassUpdate","buttonSort","buttonExport","datatable","handler_select","selectRow","columnSplitLeft","columnSplitRight","validationError","idTable","PopupExport","PopupMassUpdateComponent","PopupSortDataTableComponent","skippableColumns","ignoreLocalSettings","_gridSettings","_isDatacollectionLoaded","keyStorageSettings","getColumnIndex","uiDatatable","isTreeDatable","selectType","resizeColumn","resizeRow","prerender","fixedRowHeight","editaction","dragColumn","onBeforeSelect","preserve","cellNode","onAfterSelect","onCheck","toggleUpdateDelete","onAfterEditStop","onBeforeEditStop","old","ignoreUpdate","onValidationError","onValidationSuccess","onColumnResize","user_action","setColumnWidth","getLastColumn","onRowResize","onBeforeColumnDrag","onBeforeColumnDrop","onAfterColumnDrop","onHeaderClick","uiFilter","uiToolbar","toolbarMassUpdate","toolbarDeleteSelected","toolbarSort","toolbarExport","_uiGrid","inputWidth","codebase","cdn","$DataTable","throttleCustomDisplay","scrollStarted","displayRecords","verticalScrollState","getScrollState","rowHeight","startRecIndex","endRecIndex","getVisibleCount","CYPRESS_REF","toggleTab","clearValue","updateRow","_deleteConfirmPopup","numRows","deleteRow","globalFilterPosition","refreshHeader","$ButtonFilter","$buttonSort","gridElem","rowItem","oldDC","__handler_dc_busy","__handler_dc_ready","populateGroupData","__handler_dc_loadData","_isDatacollectionLoad","disableUpdateDelete","enableUpdateDelete","freezeDeleteColumn","lastColumn","getColumnConfig","$treetable","baseGroupMap","listData","valRelation","groupBys","g","gIndex","groupMap","by","byValue","gColName","group","localSettingsSave","removeCellCss","editCell","requireRefresh","EditField","isCustomGroup","ignoreLocal","objColumnHeaders","objColumnHeaderIDs","origCol","fieldValidations","rulePops","validationUI","popUpId","groupField","treetable","complexValidations","getFilterHelper","getSelectedItem","destructor","addedColumns","contentId","lastCol","refreshColumns","savedLocalSettings","settingsID","__timeout_selectRow","unselect","parentTab","wb","tab","getTopParentView","tabbar","nextTab","checkedItems","deleteTasks","toolTip","imageFieldColNames","tip","relationData","toolTipOnBeforeRender","visibility","toolTipOnAfterRender","firstChild","nodeName","imgBottom","imgRight","innerHeight","imgOffsetY","newTop","imgOffsetX","newLeft","ABViewGridCore","ABViewGrid","propertyGroupByList","colNames","groupByList","origWS","AB_Work_Object_Workspace_PopupSortFields","_blockOnChange","uiForm","clickAddNewSort","triggerOnChange","dir","sort_form","viewIndex","listFields","onChangeCombo","_valueElement","refreshFieldList","dirElem","cView","selectedValue","getRange","chosenField","sortDir","_valueListElement","valElem","$popup","ignoreRemoveViews","selectedFields","removeChildViews","fieldObj","selectedFieldsExcludeCurField","enableFields","aValue","bValue","drag","onAfterDrop","ABViewImageCore","ABViewImageComponent","ABViewKanbanCore","ABViewKanbanComponent","ABViewKanban","comKanBan","CurrentObjectID","refreshForm","formAttrs","formCom","updateVals","newVals","ABViewLabelCore","ABViewLabelComponent","ABViewLayoutCore","ABViewLayoutComponent","ABViewListCore","ABViewListComponent","ABViewMenuCore","ABViewMenuComponent","ABViewPDFImporterCore","ABViewPDFImporterComponent","ABViewPageCore","v1App","newComponent","ABViewPivotCore","ABViewPivotComponent","ABViewReportsManagerCore","ABViewReportsManagerComponent","ABViewSchedulerCore","ABViewSchedulerComponent","ABViewTabCore","ABViewTabComponent","ABViewTextCore","ABViewTextComponent","ABViewWidgetCore","clientFilter","downloadCsvFile","onFilterChange","whereWidget","whereClient","qsWhere","open","$buttonFilter","CSVImporter","uploadFileList","headerOnFirstLine","columnList","statusMessage","progressBar","linkedDataButton","importButton","csvImporter","args","_dataRows","_csvFileInfo","accept","autosend","loadCsvFile","onClick","webix_remove_upload","removeCsvFile","populateColumnList","minHeight","uiRecordsView","keyPressTimeout","_errorMsg","details","$dt","_status","_included","$importButton","labelImport","overLimitAlert","showLinkedData","uiPopup","$progressBar","formClear","$statusMessage","matchFields","getMatchFields","columnIndex","statusTemplate","$headerOnFirstLine","fileId","$columnList","firstLine","csvColumnList","currentObject","formComp","formConfig","uiColumns","selectedCsvCols","matchCol","selectVal","columnOptUI","abName","toggleLinkFields","loadDataToGrid","dateSeparatorOptions","dayFormatOptions","monthFormatOptions","yearFormatOptions","dateOrderOptions","linkFieldOptions","fld","$columnOption","$linkFieldOption","rowValue","refreshRemainingTimeText","startUpdateTime","total","remainTime","days","seconds","$selector","fieldData","$dateFormatSelectors","separator","$linkDataSelector","searchField","objModel","selectedRows","_currProgress","increaseProgressing","itemFailed","addRowCss","itemInvalid","errorMsg","uiCleanUp","validRows","allValid","getParentValues","removeRowCss","hashLookups","allLookups","connectField","connectObject","connectModel","linkIdKey","gethashLookup","createRecord","newRowsData","resultErrors","rowIndex","resultData","penddingRecordRules","processRowData","waitPenddingRecordRules","processResult","throttledSaves","performThrottledSaves","currentRecords","remainingRecords","importer","nextRecords","uiLinkedData","linkedData","hideLinkedData","_info_popup","linkConnectFields","yAxis","xAxis","legend","series","alpha","preset","$component","eventNames","evtName","chartContainer","uiChartComponent","_isShow","$chartContainer","$chartComponent","pieInnerText","shadow","comment","getCommentData","onBeforeAdd","addComment","onAfterDelete","deleteComment","__dvEvents","$comment","$commentList","onStoreUpdated","operate","updateComment","refreshComment","userCol","commentCol","dateCol","userColName","commentColName","dateColName","dataObject","dataList","user_id","default_date","__refreshTimeout","commentData","scrollTo","MAX_SAFE_INTEGER","commentText","dateTime","saveData","commentField","CurrentDatacollectionID","uiComponents","eventsClear","milliSeconds","__isShowing","interval","setInterval","clearInterval","_ifComponent","_elseComponent","populateFilterComponent","_uiConditionalContainer","ifComponent","elseComponent","displayView","viewComponentIDs","_handlerChangePage","rowViews","getElements","componentMap","curRowIndex","curColIndex","rowNew","colNumber","rowIndx","curRow","newPos","mapKey","getGrav","initDetailComponent","scroll","sizeToContent","itemTemplate","applyClickEvent","addCyAttribute","$dataView","_resizeEvent","base_element","$dataview","item_width","getItemWidth","customize","detailUI","getDetailUI","_detail_ui","$detail_item","itemWidth","$width","itemHeight","tmp_dom","addCyItemAttributes","currElem","parentWidth","$sidebar","getTabSidebar","clicked","divs","_detailComponent","detailItem","createdRow","updatedRow","myVal","needRecalculate","$detailItem","parsedImageUrl","imageUrl","SAFE_HTML_TAGS","detailItemLabel","uiDetailItemComponent","isLabelTop","templateLabel","labelUi","valueUi","itemUi","detailId","strVal","getDomTree","domTree","Docxtemplater","ImageModule","JSZipUtils","JSZip","sizeOf","ABFieldImage","downloadButton","noFileLabel","leftSpacer","rightSpacer","buttonLabelText","renderFile","$downloadButton","$noFileLabel","reportValues","getReportData","downloadImages","contentTemplateFile","downloadTemplateFile","blobFile","generateDocxFile","isDcLabelAdded","dcCursor","dcValues","disableMinifyRelation","fieldLabels","objTran","fieldTran","objectLabel","fieldLabel","setReportValues","datacollectionData","multilinguageFields","transFields","childItem","addDownloadTask","fieldImage","imageVal","imgUrl","getBinaryContent","contentFile","summaries","zip","doc","imageModule","centered","getImage","tagValue","tagName","getSize","imgBuffer","tagNames","dcs","Uint8Array","ratio","attachModule","loadZip","tag","scope","varName","propSource","propFilter","indexColName","connectedField","sourceVals","getVal","comparer","docxFile","getZip","generate","mimeType","onDelete","onCancel","onClear","onSave","cancelButton","noPopupFilter","pageCurr","resetButton","buttonID","formID","deleteButton","deleteData","ABViewFormTextbox","timerId","_showed","fieldValidationsHolder","uiValidationHolder","abid","existsFields","com","initCallbacks","initEvents","initValidationRules","relationVals","valArray","displayParentData","applicationLoad","formField","nval","oval","fieldValidating","ms","customFields","normalFields","formItem","defaultRowData","parentData","relationField","relationFieldCom","relationFieldView","$relationFieldView","formData","topPosition","editpopup","addPageComponent","editPageComponent","formSettings","goToEditPage","_onChange","initAddEditTool","selectAll","customField","trg","$formItem","apcUI","inputId","selectedValues","prepedVals","addFormID","onSaveData","callbackSaveData","onCancelClick","callbackCancel","callbackClearOnLoad","editFormID","clearStorage","selectedItems","sData","formBusy","__editFormDcEvent","$node","filterConnectedValue","uiConfigName","connectFieldId","getFilterByConnectValues","filterByConnectValue","$ui","vc","parentFields","$filterValueConfig","parentField","FocusableTemplate","new_width","requiredClass","DEFAULT_HEIGHT","paddingY","paddingX","AB_App","onAfterDateSelect","setMasterValue","onTodaySet","onDateClear","getMasterValue","errNoAB","strToDate","setFullYear","uiFormItemComponent","_uiFormItem","rowFilter","getFilterField","entries","getSystemObjects","objectsArray","refreshFilter","fieldDefs","parsed","stringResult","NumberTextInput","_numberTextInputKey","numberTextInputKey","newv","oldv","setHTML","tagMode","tagTemplate","selectedOptions","menubar","initTinyMCE","getEditor","contentAreaContainer","$image","ABFormSidePanel","kanbanView","kanban","resizer","formSidePanel","FormSide","CurrentVerticalField","CurrentHorizontalField","CurrentOwnerField","_updatingOwnerRowId","_ABFieldConnect","_ABFieldUser","_ABFieldList","fieldByKey","ABFieldUser","onSelectChange","userId","getSelectedId","updateOwner","tags","onListAfterSelect","onAfterStatusChange","updateStatus","onAvatarClick","$kb","_kb","kanbanListTemplate","removeCard","templateAvatar","templateBody","horizontalOptions","verticalOptions","horizontalVals","statusOps","reconstruct","$menuUser","getUserList","needRefresh","eachList","addCard","setFields","verticalGrouping","horizontalGrouping","uiFormatting","vId","_uiList","autoHeight","uiMenu","datatype","onMenuItemClick","defineCypress","subsign","_uiMenu","elems","menuIncluded","$item","redirectPage","toggleParent","showIt","parentElem","viewInfo","fileUploader","uploadList","fullImagePopup","fullImageCarousel","fullImageSelectToggle","fullImageLabel","unselectAll","loadFile","removeFile","displayBig","displaySmall","pageTemplate","pageIds","renderPageImages","_fullImagePopup","setActiveIndex","refreshFullImage","headHeight","offIcon","onIcon","offLabel","onLabel","isSelected","pageNumber","initPdfjs","pdfjs","pdfjsWorker","ArrayBuffer","fileReader","fileBuffer","readAsArrayBuffer","toBlob","File","canvasId","showPage","fileBlob","_toBlob","$uploader","onUploadComplete","addFile","_increaseProgressValue","maxProgressStep","_progressSteps","clearDataview","_readFileBuffer","_pdfDoc","getDocument","promise","total_page","numPages","carousel_list","fullImageTemplate","pageTemplateId","pageItemWidth","canvas_dom","getPage","pdf_original_width","getViewport","scale_required","viewport","canvasContext","_isDisplayBig","selectedIds","fullImageTemplateId","$fileUploader","$uploadList","$submit","$selectAll","$unselectAll","$selectToggle","selectedPageIds","newValues","uploadId","_uploadImage","ABFieldCalculate","ABFieldFormula","ABFieldNumber","pivot","uiPivot","_getFields","dataMapped","CellFormat","fieldType","reportManager","fieldText","fieldQueries","MyBackend","reports","waitInitializingDCEvery","updated","reportModels","dcID","reportFields","getReportFields","refs","moduleID","moduleId","moduleData","queryID","queryIndex","pullDataTasks","dcIds","dcData","sid","dcId","dataCol","sourceDc","sourceObj","targetDc","targetObj","sourceLinkField","sf","targetLinkField","tf","sourceData","targetData","tData","sVal","tVal","updateRows","queryVal","filterElem","tempDc","as","mod","_","parsedColumn","originalColumn","reportField","dateStringData","parsedDateStringData","groupedData","groupedResult","agg","rawCol","MyLocal","Local","_currentModuleID","getQueries","currentModuleID","_queries","MyEditor","$tabbar","callEvent","disableOption","Reset","forceReset","AppState","getModule","TrackChanges","MyToolBar","MyEditorCommon","ShowDeleteButton","MyEditorData","MyTable","GetColumnConfig","meta","abField","mid","fullDateFormatStr","GetTableData","buckets","columnIDs","parsedBuckets","bucket","parseRecord","columnFormat","linkedDcs","linkDc","ref","reportData","reportRow","$pk","rField","fieldStart","fieldEnd","fieldAllDay","fieldCalendar","fieldEventColor","fieldNotes","fieldOriginID","fieldSectionID","fieldUnitID","dcCalendar","fieldTitle","fieldCalendarColor","fieldActive","timelineOptions","start_date","end_date","all_day","recurring","section","origin_id","sections","uiNav","uiNavPopup","calendars","LimitData","sidebar","expandMenu","collapseMenu","popupTabManager","popupTabManagerForm","popupTabManagerSaveButton","baseType","menuItems","abStorage","toggle","addDataCy","multiview","keepViews","onViewChange","prevId","nextId","collapseNode","expandNode","tabUi","tabTemplate","$tab","changeTab","setState","checkCollapseMenu","checkExpandMenu","collapsed","tabViewId","$tabViewId","$viewID","defaultViewIsSet","_uiText","$text","ABViewProperty","toSettings","editForms","pagesHasForm","getIds","onClearOnLoad","_application","openFormPopup","pageClone","popUpComp","savedData","popupTemplate","setDefaultValue","fView","objLink","rawData","formEdit","FilterRuleSettings","buttonAddfilter","filterPanel","globalFilterFormContainer","globalFilterForm","filterMenutoolbar","resetFilterButton","__externalSearchText","rowFilterForm","_handler_rowFilterChanged","triggerCallback","_handler_rowFilterFormChanged","resetFilter","$filterMenutoolbar","queryRules","qr","Rule","filterRuleButton","rowFilterRules","__currentFilter","searchRules","badgeCount","$button","externalText","terms","allTerms","fieldTerms","ABViewPropertyLinkPageComponent","cleanRules","processCondition","myUnique","queryBuilder","queryBuilderContainer","queryBuilderLayout","showQBButton","conditionFields","QB","fieldTypes","onDone","listRules","showQueryBuilderContainer","ObjectQueryBuilder","listActions","actionDropList","selectedAction","objectQB","currentForm","selectAction","valueDisplay","_generateUI","Action","currentAction","replaceValueDisplay","$ValueDisplay","cloneChildren","prevAction","getAction","stashCondition","currAction","hidddatasourceen","for","processUpdateObject","qbFixAfterShow","isReady","convertToNumber","hiddenFilter","isPreProcess","queryObject","conditionRules","queryObjectLoad","webixID","valueDisplayComponent","childSettings","headerDefault","rulesScrollview","when","addRule","buttonCancel","buttonSave","getRule","RulesUI","deletedRule","ruleSettings","ABViewRuleList","ABViewRule","RoleUpdateExisting","RoleInsertConnected","RoleUpdateConnected","RoleRemoveConnected","allReady","RoleConfirmMessage","RuleExistPage","RuleParentPage","RuleClosePopup","RuleWebsite","RuleEmail","UpdateConnected","valueDisplayChooser","Component","showQBIfNeeded","queryBuilderDisplay","connObj","connectedObject","connectionField","selectedField","newObjectValues","newRecords","connectedObjectField","qbCondition","ABViewRuleActionFormRecordRuleUpdateConnected","isUpdateValueDisabled","_formData","ABViewRuleActionObjectUpdater","selectedFieldID","fieldDropList","connectedFieldList","cf","connectKey","_uiChooser","selectConnectedField","updateFieldsForm","addDisplay","removePreviousDisplays","cloneAllViews","updateObjectLoad","updateComponent","$updateForm","qbComponent","formRows","fr","rowSettings","modifyCondition","updateIt","done","qbCond","ABViewRuleAction","confirmMessage","ABFieldEmail","toEmailsContainer","toEmails","isEmail","toEmailAdd","fieldTemplate","enterField","refreshUI","emailType","recipients","fromName","fromEmail","toEmailTemplate","emailTypeChange","visibleBatch","toEmailValidate","emailFieldOptions","queryOptions","$toView","toEmailRemove","$emailValue","isAllValid","emailText","existsFieldIds","fnAddOptions","fLink","emailFields","optId","optLabel","focusElem","UIManager","getFocus","setFocus","rec","emailFieldUrl","emailField","emailData","linkFieldId","dvIdAndFieldId","dcQuery","emailAddr","pagesAndTabs","_pageOptions","addPage","pageOrTab","indent","selectedId","curPage","website","ABViewRuleActionObjectUpdaterDefaults","updateObject","stashRules","_uiUpdater","valueDisplayList","removeAddRow","UpdateForm","formGet","addRow","valueDisplayRow","onAdd","delRow","mySettings","FilterComponent","selectDc","selectBy","queryField","buttonAdd","buttonDelete","buttonsToggle","shouldFilter","usedHash","FormView","getUpdateObjectField","fieldField","columnID","$inputView","$componentView","datasources","optionsDataSources","optionsSelectBy","$optionUpdateExsits","selectedDC","$row","populateFilters","dcQueries","$multiview","compNodeView","setValueFn","collectionId","dataView","$valueField","objectToUpdate","isUpdated","clonedDataCollection","fieldWithValue","currRow","updates","objectToUpdateClone","lookup","updateObjectURL","DocUtils","convertPixelsToEmus","pixel","docxtemplater","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","extensionRegex","rels","getPrefix","getFileTypeName","getRelsFileName","getRelsFilePath","ImgManager","xmlDocuments","TypeError","_classCallCheck","fileTypeName","mediaPrefix","relsFilePath","relsDoc","createEmptyRelsDoc","relsFileName","mainRels","files","str2xml","xml2str","relationships","relationshipChilds","iterable","reduce","relationship","contentType","extension","contentTypeDoc","defaultTags","types","newTag","namespaceURI","imageName","realImageName","imagePath","addImageRels","binary","addExtensionRels","maxRid","loadImageRels","getImageXml","rId","getImageXmlCentered","getPptxImageXml","offset","memoize","XMLSerializer","Errors","nullGetter","part","delimiters","mergeObjects","resObj","xmlNode","serializeToString","decodeUtf8","decodeURIComponent","escape","convertSpaces","explanation","encodeUtf8","unescape","errorHandler","charMap","regexStripRegexp","escapeRegExp","charMapRegexes","endChar","startChar","rstart","rend","wordToUtf8","utf8ToWord","concatArrays","arrays","array","spaceRegexp","fromCharCode","throwXmlTagNotFound","XTTemplateError","pregMatchAll","regex","matchArray","exec","sizeOfObject","traits","moduleWrapper","xmldom","wrapper","compiled","modules","fileTypeConfig","FileTypeConfig","xmlFileNames","loadAsync","currentFile","createTemplateClass","templatedFiles","getTemplatedFiles","_this2","baseModules","moduleFunction","optionsTransformer","asText","compile","compileFile","mapper","getRenderedMap","mapped","setTags","usedData","createTemplateClassFromContent","filePath","_this3","xmltOptions","XmlTemplater","textPath","getFullText","XmlMatcher","XTError","stack","XTScopeParserError","XTInternalError","loopModule","spacePreserveModule","rawXmlModule","expandPairTrait","PptXFileTypeConfig","tagsXmlTextArray","tagsXmlLexedArray","tagRawXml","tagTextXml","DocXFileTypeConfig","docx","pptx","inRange","range","updateInTextTag","inTextTag","offsetSort","getTag","throwUnclosedTagException","xtag","assertDelimiterOrdered","delimiterMatches","fullText","inDelimiter","lastDelimiterMatch","delimiterMatch","throwUnopenedTagException","getAllIndexes","arr","Reader","innerContentParts","full","parseDelimiters","ranges","delimiterLength","cutNext","delimiterIndex","partContent","delimitersInOffset","delimiterInOffset","xmlparsed","newArray","xmlparse","xmltags","matches","textMatchArray","othersMatchArray","contentLength","allMatches","totalMatches","tagText","_getTag","tagMatcher","other","func","stringifyJson","getMinFromArrays","minIndex","totalLength","resultArray","arrayIndex","emptyFun","identity","getTraits","postparse","every","mergeSort","getExpandToDefault","throwClosingTagNotMatchOpeningTag","openingtag","closingtag","getOpenCountChange","location","getPairs","countOpen","firstTrait","currentTrait","outer","T","throwUnmatchedLoopException","_ref","_postparse","trait","pairs","expandedPairs","pair","expandTo","currentPairIndex","innerParts","newParsed","inPair","expandedPair","basePart","subparsed","dashInnerRegex","moduleName","placeHolderContent","inverted","traitName","totalValue","scopeManager","loopOver","createSubScopeManager","getInner","postparsed","paragraphParts","throwRawTagShouldBeOnlyTextInParagraph","RawXmlModule","expandToOne","Render","spacePreserve","inChunk","lexed","inPlaceHolder","tailParts","token","moduleParsed","moduleParse","ScopeManager","createBaseScopeManager","moduleRendered","moduleRender","scopePath","loopOverValue","functor","currentValue","num","isValueFalsy","functorIfInverted","rootError","lastTagIsOpenTag","innerLastTag","innerCurrentTag","addTag","expandOne","throwRawTagNotInParagraph","leftParts","rightParts","inner","xmlElements","getListXmlElements","memoized","tagsXmlArray","tagsXmlArrayJoined","charactersAddedCumulative","charactersAdded","replacerUnshift","pn","last","handleRecursiveCase","xmlMatcher","Lexer","Parser","_render","fromJson","setModules","inspect","xmllexed","locator","DOMHandler","cdata","lineNumber","columnNumber","_locator","systemId","_toString","chars","java","appendElement","hander","currentElement","source","sax","XMLReader","domBuilder","defaultNSMap","xmlns","entityMap","lt","gt","amp","quot","apos","setDocumentLocator","errorImpl","isCallback","Function","build","buildErrorHandler","nbsp","startDocument","DOMImplementation","createDocument","documentURI","localName","qName","createElementNS","len","getURI","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","startPrefixMapping","uri","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","charNode","createCDATASection","skippedEntity","endDocument","normalize","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","fatalError","dest","_extends","Super","pt","ppt","__proto__","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","features","_features","feature","Node","_xmlEncoder","charCodeAt","_visitNode","nextSibling","Document","_onUpdateChild","newChild","cs","childNodes","_removeChild","previous","previousSibling","lastChild","_insertBefore","nextChild","cp","nodeType","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","documentElement","lookupPrefix","visibleNamespaces","namespace","needNamespaceDefine","isHTML","ns","pubid","sysid","internalSubset","importNode","node2","cloneNode","attrs2","_ownerElement","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","versions","qualifiedName","doctype","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","rtv","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","splitText","newText","newNode","getTextContent","$$length","nameStartChar","nameChar","tagNamePattern","defaultNSMapCopy","entityReplacer","surrogate1","surrogate2","fixedFromCharCode","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","currentNSMap","closeMap","tagStart","localNSMap","endMatch","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","locator2","copyLocator","parseHtmlSpecialContent","attrName","setTagName","nsp","nsPrefix","_copy","elStartEnd","elEndStart","lastIndexOf","matchs","reg","lastMatch","endDTD","_set_proto_","thiz","getLocalName","getInnerDocx","getInnerPptx","_ref2","xmlString","ext","cx","cy","imgManagers","imageNumber","relsFiles","imgManager","getNextImageName","sizePixel","getRenderedPart","getRenderedPartPptx","getRenderedPartDocx","cellCX","cellCY","imgW","imgH","expanded","xmlElement","updateFileTypeConfig","zero","byteAt","lastIndexOfSignature","readData","checkOffset","encode","decode","compressedSize","uncompressedSize","crc32","compressionMethod","compressedContent","getContent","getCompressedContent","STORE","magic","compress","uncompress","compressInputType","uncompressInputType","DEFLATE","getTypeOf","checkIndex","setIndex","readInt","readString","transformTo","readDate","base64","createFolders","compression","compressionOptions","unixPermissions","dosPermissions","string2binary","string2Uint8Array","uint8Array2String","string2Blob","arrayBuffer2Blob","checkSupport","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","findCompression","isRegExp","Uint16Array","Uint32Array","deflateRaw","inflateRaw","pako","support","utils","compressions","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","fileNameStr","decompressed","fileCommentStr","zipComment","isBuffer","Buffer","_data","nodebuffer","asBinary","D","utf8encode","_initialMetadata","asNodeBuffer","asUint8Array","asArrayBuffer","buffer","z","C","E","A","B","F","fileRecord","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","compressedObject","folder","platform","encodeFileName","CENTRAL_DIRECTORY_END","append","finalize","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","DATA_DESCRIPTOR","arraybuffer","uint8array","Blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","getBlob","subarray","applyFromCharCode","byteLength","loadOptions","checkSignature","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","versionMadeBy","versionNeeded","zip64ExtensibleData","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","prepareCompressedContent","prepareContent","fileNameLength","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","chunkSize","windowBits","memLevel","strategy","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","input","next_in","avail_in","output","Buf8","next_out","deflate","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","I","pending_buf","pending_out","total_out","_tr_flush_block","block_start","strstart","wrap","adler","G","H","total_in","max_chain_length","prev_length","nice_match","w_size","la","w_mask","prev","ka","good_match","lookahead","match_start","window_size","hash_size","insert","ja","ins_h","hash_shift","hash_mask","J","ua","match_length","_tr_tally","max_lazy_match","M","wa","xa","last_lit","va","prev_match","U","match_available","good_length","max_lazy","nice_length","max_chain","pending_buf_size","gzhead","gzindex","$","last_flush","w_bits","hash_bits","dyn_ltree","ha","dyn_dtree","fa","bl_tree","ga","l_desc","d_desc","bl_desc","bl_count","ia","heap","ea","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","bi_buf","bi_valid","data_type","Z","na","sa","_tr_init","O","Q","X","K","N","P","R","S","W","Y","aa","ba","da","ma","oa","pa","qa","ra","ta","ya","deflateInit","deflateReset","deflateResetKeep","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","sane","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","back","was","ca","inflateReset","inflateReset2","inflateResetKeep","inflateInit","za","Aa","Ba","Ca","inflateInfo","static_tree","extra_bits","extra_base","max_length","has_stree","dyn_tree","max_code","stat_desc","protoUI","ActiveContent","datafilter","countColumn","summColumn","datetime","popupType","EditAbility","unitlist","ABCustomFormBuilderBuilder","FormBuilder","autofit","$init","parseDataFields","dataFields","formComponents","approveButton","schema","noDefaultSubmitButton","noNewEdit","basic","advanced","customBasic","premium","weight","getFormData","_key","inputType","calculateValue","refreshOnChange","block","leftIcon","theme","ABLazyCustomComponent","Form","$ready","initForm","submission","onButton","setDefaultUI","$getValue","calendarHeader","monthFull","$protoWait","_zoom_logic","_getTitle","_getYearTitle","_getYearRangeTitle","_getContent","_getYearContent","_setContent","_setYear","Qd","Jv","Zv","Xv","thaidate","thaidatetime","_zoom_start_date","ABCustomTinyMCE","eachRow","$count","master"],"sourceRoot":""}